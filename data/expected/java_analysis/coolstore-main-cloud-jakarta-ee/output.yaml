- description: Recommend OpenFeign instead of Feign.
  name: azure/springboot
- description: Rules for changes between Camel 3.0 and Camel 4.0
  name: camel3
- description: Rules for changes in XML file (e.g. pom.xml) to run on Apache Camel
    3
  name: camel3/camel2
- description: This ruleset detects logging configurations that may be problematic
    when migrating an application to a cloud environment.
  name: cloud-readiness
  tags:
  - Java Remote Method Invocation (RMI) API
  - Java Remote Method Invocation (RMI) service
  - rmi
  violations:
    java-corba-00000:
      category: optional
      description: CORBA
      effort: 5
      incidents:
      - codeSnip: "32  \n33  package javax.rmi.CORBA;\n34  \n35  import java.io.IOException;\n\
          36  import java.net.MalformedURLException;\n37  import java.rmi.RemoteException;\n\
          38  import java.rmi.server.RMIClassLoader;\n39  import java.security.AccessController;\n\
          40  import java.util.Properties;\n41  \n42  import org.omg.CORBA.INITIALIZE;\n\
          43  import org.omg.CORBA.ORB;\n44  import org.omg.CORBA_2_3.portable.ObjectImpl;\n\
          45  \n46  /**\n47   * Base class from which all RMI-IIOP stubs must inherit.\n\
          48   */\n49  public abstract class Stub extends ObjectImpl implements java.io.Serializable\n\
          50  {\n51  \n52      private static final long serialVersionUID = 1087775603798577179L;"
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Stub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Stub.java
          kind: Class
          name: Stub
          package: javax.rmi.CORBA
      - codeSnip: "33  package javax.rmi.CORBA;\n34  \n35  import java.io.IOException;\n\
          36  import java.net.MalformedURLException;\n37  import java.rmi.RemoteException;\n\
          38  import java.rmi.server.RMIClassLoader;\n39  import java.security.AccessController;\n\
          40  import java.util.Properties;\n41  \n42  import org.omg.CORBA.INITIALIZE;\n\
          43  import org.omg.CORBA.ORB;\n44  import org.omg.CORBA_2_3.portable.ObjectImpl;\n\
          45  \n46  /**\n47   * Base class from which all RMI-IIOP stubs must inherit.\n\
          48   */\n49  public abstract class Stub extends ObjectImpl implements java.io.Serializable\n\
          50  {\n51  \n52      private static final long serialVersionUID = 1087775603798577179L;\n\
          53  "
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Stub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Stub.java
          kind: Class
          name: Stub
          package: javax.rmi.CORBA
      - codeSnip: "34  \n35  import java.io.IOException;\n36  import java.net.MalformedURLException;\n\
          37  import java.rmi.RemoteException;\n38  import java.rmi.server.RMIClassLoader;\n\
          39  import java.security.AccessController;\n40  import java.util.Properties;\n\
          41  \n42  import org.omg.CORBA.INITIALIZE;\n43  import org.omg.CORBA.ORB;\n\
          44  import org.omg.CORBA_2_3.portable.ObjectImpl;\n45  \n46  /**\n47   *\
          \ Base class from which all RMI-IIOP stubs must inherit.\n48   */\n49  public\
          \ abstract class Stub extends ObjectImpl implements java.io.Serializable\n\
          50  {\n51  \n52      private static final long serialVersionUID = 1087775603798577179L;\n\
          53  \n54      // This can only be set at object construction time (no sync\
          \ necessary)."
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Stub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Stub.java
          kind: Class
          name: Stub
          package: javax.rmi.CORBA
      - codeSnip: "26   * Licensed Materials - Property of IBM\n27   * RMI-IIOP v1.0\n\
          28   * Copyright IBM Corp. 1998 1999  All Rights Reserved\n29   *\n30  \
          \ */\n31  \n32  package javax.rmi.CORBA;\n33  \n34  import java.rmi.Remote;\n\
          35  \n36  import org.omg.CORBA.ORB;\n37  import org.omg.CORBA.portable.InvokeHandler;\n\
          38  \n39  /**\n40   * Defines methods which all RMI-IIOP server side ties\
          \ must implement.\n41   */\n42  public interface Tie extends InvokeHandler\n\
          43  {\n44      /**\n45       * Returns an object reference for the target\
          \ object represented by this tie.\n46       * "
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Tie.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Tie.java
          kind: Interface
          name: Tie
          package: javax.rmi.CORBA
      - codeSnip: "27   * RMI-IIOP v1.0\n28   * Copyright IBM Corp. 1998 1999  All\
          \ Rights Reserved\n29   *\n30   */\n31  \n32  package javax.rmi.CORBA;\n\
          33  \n34  import java.rmi.Remote;\n35  \n36  import org.omg.CORBA.ORB;\n\
          37  import org.omg.CORBA.portable.InvokeHandler;\n38  \n39  /**\n40   *\
          \ Defines methods which all RMI-IIOP server side ties must implement.\n\
          41   */\n42  public interface Tie extends InvokeHandler\n43  {\n44     \
          \ /**\n45       * Returns an object reference for the target object represented\
          \ by this tie.\n46       * \n47       * @return an object reference for\
          \ the target object."
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Tie.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Tie.java
          kind: Interface
          name: Tie
          package: javax.rmi.CORBA
      - codeSnip: "39  /**\n40   * Defines methods which all RMI-IIOP server side\
          \ ties must implement.\n41   */\n42  public interface Tie extends InvokeHandler\n\
          43  {\n44      /**\n45       * Returns an object reference for the target\
          \ object represented by this tie.\n46       * \n47       * @return an object\
          \ reference for the target object.\n48       */\n49      org.omg.CORBA.Object\
          \ thisObject();\n50  \n51      /**\n52       * Deactivates the target object\
          \ represented by this tie.\n53       */\n54      void deactivate() throws\
          \ java.rmi.NoSuchObjectException;\n55  \n56      /**\n57       * Returns\
          \ the ORB for this tie.\n58       * \n59       * @return the ORB."
        lineNumber: 49
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Tie.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Tie.java
          kind: Method
          name: thisObject
          package: javax.rmi.CORBA
      - codeSnip: "31  \n32  package javax.rmi.CORBA;\n33  \n34  import java.net.MalformedURLException;\n\
          35  import java.rmi.Remote;\n36  import java.rmi.RemoteException;\n37  import\
          \ java.rmi.server.RMIClassLoader;\n38  import java.security.AccessController;\n\
          39  import java.util.Properties;\n40  \n41  import org.omg.CORBA.INITIALIZE;\n\
          42  import org.omg.CORBA.ORB;\n43  import org.omg.CORBA.SystemException;\n\
          44  import org.omg.CORBA.portable.InputStream;\n45  import org.omg.CORBA.portable.OutputStream;\n\
          46  \n47  /**\n48   * Provides utility methods that can be used by stubs\
          \ and ties to perform common operations.\n49   */\n50  public class Util\n\
          51  {"
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: javax.rmi.CORBA
      - codeSnip: "32  package javax.rmi.CORBA;\n33  \n34  import java.net.MalformedURLException;\n\
          35  import java.rmi.Remote;\n36  import java.rmi.RemoteException;\n37  import\
          \ java.rmi.server.RMIClassLoader;\n38  import java.security.AccessController;\n\
          39  import java.util.Properties;\n40  \n41  import org.omg.CORBA.INITIALIZE;\n\
          42  import org.omg.CORBA.ORB;\n43  import org.omg.CORBA.SystemException;\n\
          44  import org.omg.CORBA.portable.InputStream;\n45  import org.omg.CORBA.portable.OutputStream;\n\
          46  \n47  /**\n48   * Provides utility methods that can be used by stubs\
          \ and ties to perform common operations.\n49   */\n50  public class Util\n\
          51  {\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: javax.rmi.CORBA
      - codeSnip: "33  \n34  import java.net.MalformedURLException;\n35  import java.rmi.Remote;\n\
          36  import java.rmi.RemoteException;\n37  import java.rmi.server.RMIClassLoader;\n\
          38  import java.security.AccessController;\n39  import java.util.Properties;\n\
          40  \n41  import org.omg.CORBA.INITIALIZE;\n42  import org.omg.CORBA.ORB;\n\
          43  import org.omg.CORBA.SystemException;\n44  import org.omg.CORBA.portable.InputStream;\n\
          45  import org.omg.CORBA.portable.OutputStream;\n46  \n47  /**\n48   * Provides\
          \ utility methods that can be used by stubs and ties to perform common operations.\n\
          49   */\n50  public class Util\n51  {\n52  \n53      // This can only be\
          \ set at static initialization time (no sync necessary)."
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: javax.rmi.CORBA
      - codeSnip: "34  import java.net.MalformedURLException;\n35  import java.rmi.Remote;\n\
          36  import java.rmi.RemoteException;\n37  import java.rmi.server.RMIClassLoader;\n\
          38  import java.security.AccessController;\n39  import java.util.Properties;\n\
          40  \n41  import org.omg.CORBA.INITIALIZE;\n42  import org.omg.CORBA.ORB;\n\
          43  import org.omg.CORBA.SystemException;\n44  import org.omg.CORBA.portable.InputStream;\n\
          45  import org.omg.CORBA.portable.OutputStream;\n46  \n47  /**\n48   * Provides\
          \ utility methods that can be used by stubs and ties to perform common operations.\n\
          49   */\n50  public class Util\n51  {\n52  \n53      // This can only be\
          \ set at static initialization time (no sync necessary).\n54      private\
          \ static javax.rmi.CORBA.UtilDelegate utilDelegate = null;"
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: javax.rmi.CORBA
      - codeSnip: "35  import java.rmi.Remote;\n36  import java.rmi.RemoteException;\n\
          37  import java.rmi.server.RMIClassLoader;\n38  import java.security.AccessController;\n\
          39  import java.util.Properties;\n40  \n41  import org.omg.CORBA.INITIALIZE;\n\
          42  import org.omg.CORBA.ORB;\n43  import org.omg.CORBA.SystemException;\n\
          44  import org.omg.CORBA.portable.InputStream;\n45  import org.omg.CORBA.portable.OutputStream;\n\
          46  \n47  /**\n48   * Provides utility methods that can be used by stubs\
          \ and ties to perform common operations.\n49   */\n50  public class Util\n\
          51  {\n52  \n53      // This can only be set at static initialization time\
          \ (no sync necessary).\n54      private static javax.rmi.CORBA.UtilDelegate\
          \ utilDelegate = null;\n55  "
        lineNumber: 45
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: javax.rmi.CORBA
      - codeSnip: "37  import java.rmi.NoSuchObjectException;\n38  import java.rmi.Remote;\n\
          39  import java.rmi.RemoteException;\n40  import java.rmi.server.RMIClassLoader;\n\
          41  import java.security.AccessController;\n42  import java.security.PrivilegedAction;\n\
          43  import java.util.Properties;\n44  \n45  import javax.rmi.CORBA.GetPropertyAction;\n\
          46  \n47  import org.omg.CORBA.INITIALIZE;\n48  \n49  /**\n50   * Server\
          \ implementation objects may either inherit from javax.rmi.PortableRemoteObject\
          \ or they may implement a remote\n51   * interface and then use the exportObject\
          \ method to register themselves as a server object. The toStub method takes\
          \ a\n52   * server implementation and returns a stub that can be used to\
          \ access that server object. The connect method makes a\n53   * Remote object\
          \ ready for remote communication. The unexportObject method is used to deregister\
          \ a server object,\n54   * allowing it to become available for garbage collection.\
          \ The narrow method takes an object reference or abstract\n55   * interface\
          \ type and attempts to narrow it to conform to the given interface. If the\
          \ operation is successful the result\n56   * will be an object of the specified\
          \ type, otherwise an exception will be thrown.\n57   */"
        lineNumber: 47
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/PortableRemoteObject.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/PortableRemoteObject.java
          kind: Class
          name: PortableRemoteObject
          package: javax.rmi
      - lineNumber: 83
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Method
          name: create_input_stream
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 1100
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Method
          name: insert_Object
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 1125
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Method
          name: extract_Object
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 1132
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Method
          name: extract_Object
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 1135
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Method
          name: extract_Object
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 1234
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Method
          name: insert_Value
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 1250
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Method
          name: insert_fixed
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 1259
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Method
          name: insert_fixed
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "1063      public Any extract_any()\n1064      {\n1065         \
          \ // debug.log (\"extract_any\");\n1066          checkExtractBadOperation(TCKind._tk_any);\n\
          1067          return (Any) object;\n1068      }\n1069  \n1070      /**\n\
          1071       * See the description of the <a href=\"#anyOps\">general Any\
          \ operations.</a>\n1072       */\n1073      public void insert_Object(org.omg.CORBA.Object\
          \ o)\n1074      {\n1075          // debug.log (\"insert_Object\");\n1076\
          \          if (o == null)\n1077          {\n1078              typeCode =\
          \ orb.get_primitive_tc(TCKind._tk_objref);\n1079          }\n1080      \
          \    else\n1081          {\n1082              if (StubAdapter.isStub(o))\n\
          1083              {"
        lineNumber: 1073
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Method
          name: insert_Object
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: '41  import org.jboss.com.sun.corba.se.impl.encoding.EncapsOutputStream;

          42  import org.jboss.com.sun.corba.se.impl.io.ValueUtility;

          43  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;

          44  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;

          45  import org.jboss.com.sun.corba.se.impl.orbutil.RepositoryIdFactory;

          46  import org.jboss.com.sun.corba.se.impl.orbutil.RepositoryIdStrings;

          47  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          48  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          49  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          50  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;

          51  import org.omg.CORBA.Any;

          52  import org.omg.CORBA.CompletionStatus;

          53  import org.omg.CORBA.Principal;

          54  import org.omg.CORBA.TCKind;

          55  import org.omg.CORBA.TypeCode;

          56  import org.omg.CORBA.TypeCodePackage.BadKind;

          57  import org.omg.CORBA.TypeCodePackage.Bounds;

          58  import org.omg.CORBA.portable.InputStream;

          59  import org.omg.CORBA.portable.OutputStream;

          60  import org.omg.CORBA.portable.Streamable;

          61  '
        lineNumber: 51
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Class
          name: AnyImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "42  import org.jboss.com.sun.corba.se.impl.io.ValueUtility;\n43\
          \  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          44  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n45  import\
          \ org.jboss.com.sun.corba.se.impl.orbutil.RepositoryIdFactory;\n46  import\
          \ org.jboss.com.sun.corba.se.impl.orbutil.RepositoryIdStrings;\n47  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n48  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          49  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n50  import\
          \ org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n51  import\
          \ org.omg.CORBA.Any;\n52  import org.omg.CORBA.CompletionStatus;\n53  import\
          \ org.omg.CORBA.Principal;\n54  import org.omg.CORBA.TCKind;\n55  import\
          \ org.omg.CORBA.TypeCode;\n56  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          57  import org.omg.CORBA.TypeCodePackage.Bounds;\n58  import org.omg.CORBA.portable.InputStream;\n\
          59  import org.omg.CORBA.portable.OutputStream;\n60  import org.omg.CORBA.portable.Streamable;\n\
          61  \n62  // subclasses must provide a matching helper class"
        lineNumber: 52
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Class
          name: AnyImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "43  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          44  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n45  import\
          \ org.jboss.com.sun.corba.se.impl.orbutil.RepositoryIdFactory;\n46  import\
          \ org.jboss.com.sun.corba.se.impl.orbutil.RepositoryIdStrings;\n47  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n48  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          49  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n50  import\
          \ org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n51  import\
          \ org.omg.CORBA.Any;\n52  import org.omg.CORBA.CompletionStatus;\n53  import\
          \ org.omg.CORBA.Principal;\n54  import org.omg.CORBA.TCKind;\n55  import\
          \ org.omg.CORBA.TypeCode;\n56  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          57  import org.omg.CORBA.TypeCodePackage.Bounds;\n58  import org.omg.CORBA.portable.InputStream;\n\
          59  import org.omg.CORBA.portable.OutputStream;\n60  import org.omg.CORBA.portable.Streamable;\n\
          61  \n62  // subclasses must provide a matching helper class\n63  @SuppressWarnings(\"\
          deprecation\")"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Class
          name: AnyImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "44  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n\
          45  import org.jboss.com.sun.corba.se.impl.orbutil.RepositoryIdFactory;\n\
          46  import org.jboss.com.sun.corba.se.impl.orbutil.RepositoryIdStrings;\n\
          47  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n48 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n49  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          50  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          51  import org.omg.CORBA.Any;\n52  import org.omg.CORBA.CompletionStatus;\n\
          53  import org.omg.CORBA.Principal;\n54  import org.omg.CORBA.TCKind;\n\
          55  import org.omg.CORBA.TypeCode;\n56  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          57  import org.omg.CORBA.TypeCodePackage.Bounds;\n58  import org.omg.CORBA.portable.InputStream;\n\
          59  import org.omg.CORBA.portable.OutputStream;\n60  import org.omg.CORBA.portable.Streamable;\n\
          61  \n62  // subclasses must provide a matching helper class\n63  @SuppressWarnings(\"\
          deprecation\")\n64  public class AnyImpl extends Any"
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Class
          name: AnyImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "45  import org.jboss.com.sun.corba.se.impl.orbutil.RepositoryIdFactory;\n\
          46  import org.jboss.com.sun.corba.se.impl.orbutil.RepositoryIdStrings;\n\
          47  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n48 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n49  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          50  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          51  import org.omg.CORBA.Any;\n52  import org.omg.CORBA.CompletionStatus;\n\
          53  import org.omg.CORBA.Principal;\n54  import org.omg.CORBA.TCKind;\n\
          55  import org.omg.CORBA.TypeCode;\n56  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          57  import org.omg.CORBA.TypeCodePackage.Bounds;\n58  import org.omg.CORBA.portable.InputStream;\n\
          59  import org.omg.CORBA.portable.OutputStream;\n60  import org.omg.CORBA.portable.Streamable;\n\
          61  \n62  // subclasses must provide a matching helper class\n63  @SuppressWarnings(\"\
          deprecation\")\n64  public class AnyImpl extends Any\n65  {"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Class
          name: AnyImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "46  import org.jboss.com.sun.corba.se.impl.orbutil.RepositoryIdStrings;\n\
          47  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n48 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n49  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          50  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          51  import org.omg.CORBA.Any;\n52  import org.omg.CORBA.CompletionStatus;\n\
          53  import org.omg.CORBA.Principal;\n54  import org.omg.CORBA.TCKind;\n\
          55  import org.omg.CORBA.TypeCode;\n56  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          57  import org.omg.CORBA.TypeCodePackage.Bounds;\n58  import org.omg.CORBA.portable.InputStream;\n\
          59  import org.omg.CORBA.portable.OutputStream;\n60  import org.omg.CORBA.portable.Streamable;\n\
          61  \n62  // subclasses must provide a matching helper class\n63  @SuppressWarnings(\"\
          deprecation\")\n64  public class AnyImpl extends Any\n65  {\n66      private\
          \ static final long serialVersionUID = 5085834738845046320L;"
        lineNumber: 56
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Class
          name: AnyImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "47  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          48  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n49  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          50  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          51  import org.omg.CORBA.Any;\n52  import org.omg.CORBA.CompletionStatus;\n\
          53  import org.omg.CORBA.Principal;\n54  import org.omg.CORBA.TCKind;\n\
          55  import org.omg.CORBA.TypeCode;\n56  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          57  import org.omg.CORBA.TypeCodePackage.Bounds;\n58  import org.omg.CORBA.portable.InputStream;\n\
          59  import org.omg.CORBA.portable.OutputStream;\n60  import org.omg.CORBA.portable.Streamable;\n\
          61  \n62  // subclasses must provide a matching helper class\n63  @SuppressWarnings(\"\
          deprecation\")\n64  public class AnyImpl extends Any\n65  {\n66      private\
          \ static final long serialVersionUID = 5085834738845046320L;\n67  "
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Class
          name: AnyImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "48  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n49  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n50  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          51  import org.omg.CORBA.Any;\n52  import org.omg.CORBA.CompletionStatus;\n\
          53  import org.omg.CORBA.Principal;\n54  import org.omg.CORBA.TCKind;\n\
          55  import org.omg.CORBA.TypeCode;\n56  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          57  import org.omg.CORBA.TypeCodePackage.Bounds;\n58  import org.omg.CORBA.portable.InputStream;\n\
          59  import org.omg.CORBA.portable.OutputStream;\n60  import org.omg.CORBA.portable.Streamable;\n\
          61  \n62  // subclasses must provide a matching helper class\n63  @SuppressWarnings(\"\
          deprecation\")\n64  public class AnyImpl extends Any\n65  {\n66      private\
          \ static final long serialVersionUID = 5085834738845046320L;\n67  \n68 \
          \     private static final class AnyInputStream extends EncapsInputStream"
        lineNumber: 58
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Class
          name: AnyImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "489                          }\n490                      }\n491\
          \                      return true;\n492                  }\n493  \n494\
          \                      // Too complicated to handle value types the way\
          \ we handle\n495                      // other complex types above. Don't\
          \ try to decompose it here\n496                      // for faster comparison,\
          \ just use Object.equals().\n497                  case TCKind._tk_value\
          \ :\n498                  case TCKind._tk_value_box :\n499             \
          \         org.omg.CORBA_2_3.portable.InputStream mine = (org.omg.CORBA_2_3.portable.InputStream)\
          \ myStream;\n500                      org.omg.CORBA_2_3.portable.InputStream\
          \ other = (org.omg.CORBA_2_3.portable.InputStream) otherStream;\n501   \
          \                   return mine.read_value().equals(other.read_value());\n\
          502  \n503                  case TCKind._tk_alias :\n504               \
          \       // error resolving alias above\n505                      throw wrapper.errorResolvingAlias();\n\
          506  \n507                  case TCKind._tk_longdouble :\n508          \
          \            throw wrapper.tkLongDoubleNotSupported();\n509  "
        lineNumber: 499
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Method
          name: equalMember
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "49  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          50  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          51  import org.omg.CORBA.Any;\n52  import org.omg.CORBA.CompletionStatus;\n\
          53  import org.omg.CORBA.Principal;\n54  import org.omg.CORBA.TCKind;\n\
          55  import org.omg.CORBA.TypeCode;\n56  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          57  import org.omg.CORBA.TypeCodePackage.Bounds;\n58  import org.omg.CORBA.portable.InputStream;\n\
          59  import org.omg.CORBA.portable.OutputStream;\n60  import org.omg.CORBA.portable.Streamable;\n\
          61  \n62  // subclasses must provide a matching helper class\n63  @SuppressWarnings(\"\
          deprecation\")\n64  public class AnyImpl extends Any\n65  {\n66      private\
          \ static final long serialVersionUID = 5085834738845046320L;\n67  \n68 \
          \     private static final class AnyInputStream extends EncapsInputStream\n\
          69      {"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Class
          name: AnyImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "490                      }\n491                      return true;\n\
          492                  }\n493  \n494                      // Too complicated\
          \ to handle value types the way we handle\n495                      // other\
          \ complex types above. Don't try to decompose it here\n496             \
          \         // for faster comparison, just use Object.equals().\n497     \
          \             case TCKind._tk_value :\n498                  case TCKind._tk_value_box\
          \ :\n499                      org.omg.CORBA_2_3.portable.InputStream mine\
          \ = (org.omg.CORBA_2_3.portable.InputStream) myStream;\n500            \
          \          org.omg.CORBA_2_3.portable.InputStream other = (org.omg.CORBA_2_3.portable.InputStream)\
          \ otherStream;\n501                      return mine.read_value().equals(other.read_value());\n\
          502  \n503                  case TCKind._tk_alias :\n504               \
          \       // error resolving alias above\n505                      throw wrapper.errorResolvingAlias();\n\
          506  \n507                  case TCKind._tk_longdouble :\n508          \
          \            throw wrapper.tkLongDoubleNotSupported();\n509  \n510     \
          \             default :"
        lineNumber: 500
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Method
          name: equalMember
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "50  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          51  import org.omg.CORBA.Any;\n52  import org.omg.CORBA.CompletionStatus;\n\
          53  import org.omg.CORBA.Principal;\n54  import org.omg.CORBA.TCKind;\n\
          55  import org.omg.CORBA.TypeCode;\n56  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          57  import org.omg.CORBA.TypeCodePackage.Bounds;\n58  import org.omg.CORBA.portable.InputStream;\n\
          59  import org.omg.CORBA.portable.OutputStream;\n60  import org.omg.CORBA.portable.Streamable;\n\
          61  \n62  // subclasses must provide a matching helper class\n63  @SuppressWarnings(\"\
          deprecation\")\n64  public class AnyImpl extends Any\n65  {\n66      private\
          \ static final long serialVersionUID = 5085834738845046320L;\n67  \n68 \
          \     private static final class AnyInputStream extends EncapsInputStream\n\
          69      {\n70          public AnyInputStream(EncapsInputStream theStream)"
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Class
          name: AnyImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "522      }\n523  \n524      // /////////////////////////////////////////////////////////////////////////\n\
          525      // accessors for marshaling/unmarshaling\n526  \n527      /**\n\
          528       * returns an output stream that an Any value can be marshaled\
          \ into.\n529       * \n530       * @result the OutputStream to marshal value\
          \ of Any into\n531       */\n532      public org.omg.CORBA.portable.OutputStream\
          \ create_output_stream()\n533      {\n534          // debug.log (\"create_output_stream\"\
          );\n535          return new AnyOutputStream(orb);\n536      }\n537  \n538\
          \      /**\n539       * returns an input stream that an Any value can be\
          \ marshaled out of.\n540       * \n541       * @result the InputStream to\
          \ marshal value of Any out of.\n542       */"
        lineNumber: 532
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Method
          name: create_output_stream
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "533      {\n534          // debug.log (\"create_output_stream\"\
          );\n535          return new AnyOutputStream(orb);\n536      }\n537  \n538\
          \      /**\n539       * returns an input stream that an Any value can be\
          \ marshaled out of.\n540       * \n541       * @result the InputStream to\
          \ marshal value of Any out of.\n542       */\n543      public org.omg.CORBA.portable.InputStream\
          \ create_input_stream()\n544      {\n545          //\n546          // We\
          \ create a new InputStream so that multiple threads can call here\n547 \
          \         // and read the streams in parallel without thread safety problems.\n\
          548          //\n549          // debug.log (\"create_input_stream\");\n\
          550          if (AnyImpl.isStreamed[realType().kind().value()])\n551   \
          \       {\n552              return stream.dup();\n553          }"
        lineNumber: 543
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Method
          name: create_input_stream
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "560          }\n561      }\n562  \n563      // /////////////////////////////////////////////////////////////////////////\n\
          564      // marshaling/unmarshaling routines\n565  \n566      //\n567  \
          \    // If the InputStream is a CDRInputStream then we can copy the bytes\n\
          568      // since it is in our format and does not have alignment issues.\n\
          569      //\n570      public void read_value(org.omg.CORBA.portable.InputStream\
          \ in, TypeCode tc)\n571      {\n572          // debug.log (\"read_value\"\
          );\n573          //\n574          // Assume that someone isn't going to\
          \ think they can keep reading\n575          // from this stream after calling\
          \ us. That would be likely for\n576          // an IIOPInputStream but if\
          \ it is an AnyInputStream then they\n577          // presumably obtained\
          \ it via our create_output_stream() so they could\n578          // write\
          \ the contents of an IDL data type to it and then call\n579          //\
          \ create_input_stream() for us to read it. This is how Helper classes\n\
          580          // typically implement the insert() method."
        lineNumber: 570
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Method
          name: read_value
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "591  \n592          if (AnyImpl.isStreamed[kind])\n593        \
          \  {\n594              if (in instanceof AnyInputStream)\n595          \
          \    {\n596                  // could only have been created here\n597 \
          \                 stream = (CDRInputStream) in;\n598              }\n599\
          \              else\n600              {\n601                  org.omg.CORBA_2_3.portable.OutputStream\
          \ out = (org.omg.CORBA_2_3.portable.OutputStream) orb\n602             \
          \             .create_output_stream();\n603                  typeCode.copy(in,\
          \ out);\n604                  stream = (CDRInputStream) out.create_input_stream();\n\
          605              }\n606          }\n607          else\n608          {\n\
          609              java.lang.Object[] objholder = new java.lang.Object[1];\n\
          610              objholder[0] = object;\n611              long[] longholder\
          \ = new long[1];"
        lineNumber: 601
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/AnyImpl.java
          kind: Method
          name: read_value
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "27   * RMI-IIOP v1.0\n28   * Copyright IBM Corp. 1998 1999  All\
          \ Rights Reserved\n29   *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  //\n35  // Bare implementation of CORBA Object.\n36  //\n37  public\
          \ class CORBAObjectImpl extends org.omg.CORBA_2_3.portable.ObjectImpl\n\
          38  {\n39      public String[] _ids()\n40      {\n41          String[] typeids\
          \ = new String[1];\n42          typeids[0] = \"IDL:omg.org/CORBA/Object:1.0\"\
          ;\n43          return typeids;\n44      }\n45  }\n"
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/CORBAObjectImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/CORBAObjectImpl.java
          kind: Class
          name: CORBAObjectImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "26   * Licensed Materials - Property of IBM\n27   * RMI-IIOP v1.0\n\
          28   * Copyright IBM Corp. 1998 1999  All Rights Reserved\n29   *\n30  \
          \ */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n33  \n34\
          \  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n36 \
          \ import org.omg.CORBA.Any;\n37  import org.omg.CORBA.Context;\n38  import\
          \ org.omg.CORBA.NVList;\n39  \n40  public final class ContextImpl extends\
          \ Context\n41  {\n42  \n43      private ORBUtilSystemException wrapper;\n\
          44  \n45      public ContextImpl(org.omg.CORBA.ORB orb)\n46      {"
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ContextImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ContextImpl.java
          kind: Class
          name: ContextImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "27   * RMI-IIOP v1.0\n28   * Copyright IBM Corp. 1998 1999  All\
          \ Rights Reserved\n29   *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n36 \
          \ import org.omg.CORBA.Any;\n37  import org.omg.CORBA.Context;\n38  import\
          \ org.omg.CORBA.NVList;\n39  \n40  public final class ContextImpl extends\
          \ Context\n41  {\n42  \n43      private ORBUtilSystemException wrapper;\n\
          44  \n45      public ContextImpl(org.omg.CORBA.ORB orb)\n46      {\n47 \
          \         wrapper = ORBUtilSystemException.get((org.jboss.com.sun.corba.se.spi.orb.ORB)\
          \ orb,"
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ContextImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ContextImpl.java
          kind: Class
          name: ContextImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "28   * Copyright IBM Corp. 1998 1999  All Rights Reserved\n29 \
          \  *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n36 \
          \ import org.omg.CORBA.Any;\n37  import org.omg.CORBA.Context;\n38  import\
          \ org.omg.CORBA.NVList;\n39  \n40  public final class ContextImpl extends\
          \ Context\n41  {\n42  \n43      private ORBUtilSystemException wrapper;\n\
          44  \n45      public ContextImpl(org.omg.CORBA.ORB orb)\n46      {\n47 \
          \         wrapper = ORBUtilSystemException.get((org.jboss.com.sun.corba.se.spi.orb.ORB)\
          \ orb,\n48                  CORBALogDomains.RPC_PRESENTATION);"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ContextImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ContextImpl.java
          kind: Class
          name: ContextImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "35  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          36  import org.omg.CORBA.Any;\n37  import org.omg.CORBA.Context;\n38  import\
          \ org.omg.CORBA.NVList;\n39  \n40  public final class ContextImpl extends\
          \ Context\n41  {\n42  \n43      private ORBUtilSystemException wrapper;\n\
          44  \n45      public ContextImpl(org.omg.CORBA.ORB orb)\n46      {\n47 \
          \         wrapper = ORBUtilSystemException.get((org.jboss.com.sun.corba.se.spi.orb.ORB)\
          \ orb,\n48                  CORBALogDomains.RPC_PRESENTATION);\n49     \
          \ }\n50  \n51      public ContextImpl(Context parent)\n52      {\n53   \
          \       throw wrapper.contextNotImplemented();\n54      }\n55  "
        lineNumber: 45
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ContextImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ContextImpl.java
          kind: Constructor
          name: ContextImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "26   * Licensed Materials - Property of IBM\n27   * RMI-IIOP v1.0\n\
          28   * Copyright IBM Corp. 1998 1999  All Rights Reserved\n29   *\n30  \
          \ */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n33  \n34\
          \  import java.util.Vector;\n35  \n36  import org.omg.CORBA.Bounds;\n37\
          \  import org.omg.CORBA.ContextList;\n38  \n39  public class ContextListImpl\
          \ extends ContextList\n40  {\n41      private final int INITIAL_CAPACITY\
          \ = 2;\n42  \n43      private final int CAPACITY_INCREMENT = 2;\n44  \n\
          45      private Vector<String> _contexts;\n46  "
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ContextListImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ContextListImpl.java
          kind: Class
          name: ContextListImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "27   * RMI-IIOP v1.0\n28   * Copyright IBM Corp. 1998 1999  All\
          \ Rights Reserved\n29   *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  import java.util.Vector;\n35  \n36  import org.omg.CORBA.Bounds;\n\
          37  import org.omg.CORBA.ContextList;\n38  \n39  public class ContextListImpl\
          \ extends ContextList\n40  {\n41      private final int INITIAL_CAPACITY\
          \ = 2;\n42  \n43      private final int CAPACITY_INCREMENT = 2;\n44  \n\
          45      private Vector<String> _contexts;\n46  \n47      public ContextListImpl(org.omg.CORBA.ORB\
          \ orb)"
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ContextListImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ContextListImpl.java
          kind: Class
          name: ContextListImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "37  import org.omg.CORBA.ContextList;\n38  \n39  public class ContextListImpl\
          \ extends ContextList\n40  {\n41      private final int INITIAL_CAPACITY\
          \ = 2;\n42  \n43      private final int CAPACITY_INCREMENT = 2;\n44  \n\
          45      private Vector<String> _contexts;\n46  \n47      public ContextListImpl(org.omg.CORBA.ORB\
          \ orb)\n48      {\n49          _contexts = new Vector<String>(INITIAL_CAPACITY,\
          \ CAPACITY_INCREMENT);\n50      }\n51  \n52      public int count()\n53\
          \      {\n54          return _contexts.size();\n55      }\n56  \n57    \
          \  public void add(String ctxt)"
        lineNumber: 47
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ContextListImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ContextListImpl.java
          kind: Constructor
          name: ContextListImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "24   */\n25  /*\n26   * Licensed Materials - Property of IBM\n\
          27   * RMI-IIOP v1.0\n28   * Copyright IBM Corp. 1998 1999  All Rights Reserved\n\
          29   *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  import org.omg.CORBA.Environment;\n35  \n36  public class EnvironmentImpl\
          \ extends Environment {\n37  \n38      private Exception _exc;\n39  \n40\
          \      public EnvironmentImpl()\n41      {\n42      }\n43  \n44      public\
          \ Exception exception()"
        lineNumber: 34
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/EnvironmentImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/EnvironmentImpl.java
          kind: Class
          name: EnvironmentImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "26   * Licensed Materials - Property of IBM\n27   * RMI-IIOP v1.0\n\
          28   * Copyright IBM Corp. 1998 1999  All Rights Reserved\n29   *\n30  \
          \ */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n33  \n34\
          \  import java.util.Vector;\n35  \n36  import org.omg.CORBA.Bounds;\n37\
          \  import org.omg.CORBA.ExceptionList;\n38  import org.omg.CORBA.TypeCode;\n\
          39  \n40  public class ExceptionListImpl extends ExceptionList\n41  {\n\
          42  \n43      private final int INITIAL_CAPACITY = 2;\n44  \n45      private\
          \ final int CAPACITY_INCREMENT = 2;\n46  "
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ExceptionListImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ExceptionListImpl.java
          kind: Class
          name: ExceptionListImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "27   * RMI-IIOP v1.0\n28   * Copyright IBM Corp. 1998 1999  All\
          \ Rights Reserved\n29   *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  import java.util.Vector;\n35  \n36  import org.omg.CORBA.Bounds;\n\
          37  import org.omg.CORBA.ExceptionList;\n38  import org.omg.CORBA.TypeCode;\n\
          39  \n40  public class ExceptionListImpl extends ExceptionList\n41  {\n\
          42  \n43      private final int INITIAL_CAPACITY = 2;\n44  \n45      private\
          \ final int CAPACITY_INCREMENT = 2;\n46  \n47      private Vector<TypeCode>\
          \ _exceptions;"
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ExceptionListImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ExceptionListImpl.java
          kind: Class
          name: ExceptionListImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "28   * Copyright IBM Corp. 1998 1999  All Rights Reserved\n29 \
          \  *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  import java.util.Vector;\n35  \n36  import org.omg.CORBA.Bounds;\n\
          37  import org.omg.CORBA.ExceptionList;\n38  import org.omg.CORBA.TypeCode;\n\
          39  \n40  public class ExceptionListImpl extends ExceptionList\n41  {\n\
          42  \n43      private final int INITIAL_CAPACITY = 2;\n44  \n45      private\
          \ final int CAPACITY_INCREMENT = 2;\n46  \n47      private Vector<TypeCode>\
          \ _exceptions;\n48  "
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ExceptionListImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/ExceptionListImpl.java
          kind: Class
          name: ExceptionListImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "27   * RMI-IIOP v1.0\n28   * Copyright IBM Corp. 1998 1999  All\
          \ Rights Reserved\n29   *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  import java.util.Vector;\n35  \n36  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          37  import org.omg.CORBA.Any;\n38  import org.omg.CORBA.Bounds;\n39  import\
          \ org.omg.CORBA.NVList;\n40  import org.omg.CORBA.NamedValue;\n41  \n42\
          \  public class NVListImpl extends NVList\n43  {\n44      private final\
          \ int INITIAL_CAPACITY = 4;\n45  \n46      private final int CAPACITY_INCREMENT\
          \ = 2;\n47  "
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/NVListImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/NVListImpl.java
          kind: Class
          name: NVListImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "28   * Copyright IBM Corp. 1998 1999  All Rights Reserved\n29 \
          \  *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  import java.util.Vector;\n35  \n36  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          37  import org.omg.CORBA.Any;\n38  import org.omg.CORBA.Bounds;\n39  import\
          \ org.omg.CORBA.NVList;\n40  import org.omg.CORBA.NamedValue;\n41  \n42\
          \  public class NVListImpl extends NVList\n43  {\n44      private final\
          \ int INITIAL_CAPACITY = 4;\n45  \n46      private final int CAPACITY_INCREMENT\
          \ = 2;\n47  \n48      private Vector<NamedValue> _namedValues;"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/NVListImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/NVListImpl.java
          kind: Class
          name: NVListImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "29   *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  import java.util.Vector;\n35  \n36  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          37  import org.omg.CORBA.Any;\n38  import org.omg.CORBA.Bounds;\n39  import\
          \ org.omg.CORBA.NVList;\n40  import org.omg.CORBA.NamedValue;\n41  \n42\
          \  public class NVListImpl extends NVList\n43  {\n44      private final\
          \ int INITIAL_CAPACITY = 4;\n45  \n46      private final int CAPACITY_INCREMENT\
          \ = 2;\n47  \n48      private Vector<NamedValue> _namedValues;\n49  "
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/NVListImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/NVListImpl.java
          kind: Class
          name: NVListImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  import java.util.Vector;\n35  \n36  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          37  import org.omg.CORBA.Any;\n38  import org.omg.CORBA.Bounds;\n39  import\
          \ org.omg.CORBA.NVList;\n40  import org.omg.CORBA.NamedValue;\n41  \n42\
          \  public class NVListImpl extends NVList\n43  {\n44      private final\
          \ int INITIAL_CAPACITY = 4;\n45  \n46      private final int CAPACITY_INCREMENT\
          \ = 2;\n47  \n48      private Vector<NamedValue> _namedValues;\n49  \n50\
          \      private ORB orb;"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/NVListImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/NVListImpl.java
          kind: Class
          name: NVListImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "25  /*\n26   * Licensed Materials - Property of IBM\n27   * RMI-IIOP\
          \ v1.0\n28   * Copyright IBM Corp. 1998 1999  All Rights Reserved\n29  \
          \ *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n35  import org.omg.CORBA.Any;\n\
          36  import org.omg.CORBA.NamedValue;\n37  \n38  public class NamedValueImpl\
          \ extends NamedValue\n39  {\n40      private String _name;\n41  \n42   \
          \   private Any _value;\n43  \n44      private int _flags;\n45  "
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/NamedValueImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/NamedValueImpl.java
          kind: Class
          name: NamedValueImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "26   * Licensed Materials - Property of IBM\n27   * RMI-IIOP v1.0\n\
          28   * Copyright IBM Corp. 1998 1999  All Rights Reserved\n29   *\n30  \
          \ */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n33  \n34\
          \  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n35  import org.omg.CORBA.Any;\n\
          36  import org.omg.CORBA.NamedValue;\n37  \n38  public class NamedValueImpl\
          \ extends NamedValue\n39  {\n40      private String _name;\n41  \n42   \
          \   private Any _value;\n43  \n44      private int _flags;\n45  \n46   \
          \   private ORB _orb;"
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/NamedValueImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/NamedValueImpl.java
          kind: Class
          name: NamedValueImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "25  /*\n26   * Licensed Materials - Property of IBM\n27   * RMI-IIOP\
          \ v1.0\n28   * Copyright IBM Corp. 1998 1999  All Rights Reserved\n29  \
          \ *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  @SuppressWarnings(\"deprecation\")\n35  public class PrincipalImpl\
          \ extends org.omg.CORBA.Principal\n36  {\n37      private byte[] value;\n\
          38  \n39      public void name(byte[] value)\n40      {\n41          this.value\
          \ = value;\n42      }\n43  \n44      public byte[] name()\n45      {"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/PrincipalImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/PrincipalImpl.java
          kind: Class
          name: PrincipalImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 126
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Method
          name: target
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 175
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Method
          name: add_in_arg
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 180
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Method
          name: add_named_in_arg
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 185
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Method
          name: add_inout_arg
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 190
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Method
          name: add_named_inout_arg
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 195
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Method
          name: add_out_arg
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 200
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Method
          name: add_named_out_arg
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 247
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Method
          name: get_response
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 267
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Method
          name: doInvocation
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 299
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Method
          name: doInvocation
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 358
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Method
          name: unmarshalReply
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "28   * Copyright IBM Corp. 1998 1999  All Rights Reserved\n29 \
          \  *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n36 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          38  import org.omg.CORBA.ARG_IN;\n39  import org.omg.CORBA.ARG_INOUT;\n\
          40  import org.omg.CORBA.ARG_OUT;\n41  import org.omg.CORBA.Any;\n42  import\
          \ org.omg.CORBA.Context;\n43  import org.omg.CORBA.ContextList;\n44  import\
          \ org.omg.CORBA.Environment;\n45  import org.omg.CORBA.ExceptionList;\n\
          46  import org.omg.CORBA.NVList;\n47  import org.omg.CORBA.NamedValue;\n\
          48  import org.omg.CORBA.Request;"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "29   *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n36 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          38  import org.omg.CORBA.ARG_IN;\n39  import org.omg.CORBA.ARG_INOUT;\n\
          40  import org.omg.CORBA.ARG_OUT;\n41  import org.omg.CORBA.Any;\n42  import\
          \ org.omg.CORBA.Context;\n43  import org.omg.CORBA.ContextList;\n44  import\
          \ org.omg.CORBA.Environment;\n45  import org.omg.CORBA.ExceptionList;\n\
          46  import org.omg.CORBA.NVList;\n47  import org.omg.CORBA.NamedValue;\n\
          48  import org.omg.CORBA.Request;\n49  import org.omg.CORBA.SystemException;"
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n36 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          38  import org.omg.CORBA.ARG_IN;\n39  import org.omg.CORBA.ARG_INOUT;\n\
          40  import org.omg.CORBA.ARG_OUT;\n41  import org.omg.CORBA.Any;\n42  import\
          \ org.omg.CORBA.Context;\n43  import org.omg.CORBA.ContextList;\n44  import\
          \ org.omg.CORBA.Environment;\n45  import org.omg.CORBA.ExceptionList;\n\
          46  import org.omg.CORBA.NVList;\n47  import org.omg.CORBA.NamedValue;\n\
          48  import org.omg.CORBA.Request;\n49  import org.omg.CORBA.SystemException;\n\
          50  import org.omg.CORBA.TCKind;"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n33  \n\
          34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n36 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          38  import org.omg.CORBA.ARG_IN;\n39  import org.omg.CORBA.ARG_INOUT;\n\
          40  import org.omg.CORBA.ARG_OUT;\n41  import org.omg.CORBA.Any;\n42  import\
          \ org.omg.CORBA.Context;\n43  import org.omg.CORBA.ContextList;\n44  import\
          \ org.omg.CORBA.Environment;\n45  import org.omg.CORBA.ExceptionList;\n\
          46  import org.omg.CORBA.NVList;\n47  import org.omg.CORBA.NamedValue;\n\
          48  import org.omg.CORBA.Request;\n49  import org.omg.CORBA.SystemException;\n\
          50  import org.omg.CORBA.TCKind;\n51  import org.omg.CORBA.TypeCode;"
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "32  package org.jboss.com.sun.corba.se.impl.corba;\n33  \n34  import\
          \ org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n35  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n36  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          38  import org.omg.CORBA.ARG_IN;\n39  import org.omg.CORBA.ARG_INOUT;\n\
          40  import org.omg.CORBA.ARG_OUT;\n41  import org.omg.CORBA.Any;\n42  import\
          \ org.omg.CORBA.Context;\n43  import org.omg.CORBA.ContextList;\n44  import\
          \ org.omg.CORBA.Environment;\n45  import org.omg.CORBA.ExceptionList;\n\
          46  import org.omg.CORBA.NVList;\n47  import org.omg.CORBA.NamedValue;\n\
          48  import org.omg.CORBA.Request;\n49  import org.omg.CORBA.SystemException;\n\
          50  import org.omg.CORBA.TCKind;\n51  import org.omg.CORBA.TypeCode;\n52\
          \  import org.omg.CORBA.portable.ApplicationException;"
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "33  \n34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n36 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          38  import org.omg.CORBA.ARG_IN;\n39  import org.omg.CORBA.ARG_INOUT;\n\
          40  import org.omg.CORBA.ARG_OUT;\n41  import org.omg.CORBA.Any;\n42  import\
          \ org.omg.CORBA.Context;\n43  import org.omg.CORBA.ContextList;\n44  import\
          \ org.omg.CORBA.Environment;\n45  import org.omg.CORBA.ExceptionList;\n\
          46  import org.omg.CORBA.NVList;\n47  import org.omg.CORBA.NamedValue;\n\
          48  import org.omg.CORBA.Request;\n49  import org.omg.CORBA.SystemException;\n\
          50  import org.omg.CORBA.TCKind;\n51  import org.omg.CORBA.TypeCode;\n52\
          \  import org.omg.CORBA.portable.ApplicationException;\n53  import org.omg.CORBA.portable.InputStream;"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: '34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;

          35  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          36  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;

          38  import org.omg.CORBA.ARG_IN;

          39  import org.omg.CORBA.ARG_INOUT;

          40  import org.omg.CORBA.ARG_OUT;

          41  import org.omg.CORBA.Any;

          42  import org.omg.CORBA.Context;

          43  import org.omg.CORBA.ContextList;

          44  import org.omg.CORBA.Environment;

          45  import org.omg.CORBA.ExceptionList;

          46  import org.omg.CORBA.NVList;

          47  import org.omg.CORBA.NamedValue;

          48  import org.omg.CORBA.Request;

          49  import org.omg.CORBA.SystemException;

          50  import org.omg.CORBA.TCKind;

          51  import org.omg.CORBA.TypeCode;

          52  import org.omg.CORBA.portable.ApplicationException;

          53  import org.omg.CORBA.portable.InputStream;

          54  import org.omg.CORBA.portable.OutputStream;'
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: '35  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          36  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;

          38  import org.omg.CORBA.ARG_IN;

          39  import org.omg.CORBA.ARG_INOUT;

          40  import org.omg.CORBA.ARG_OUT;

          41  import org.omg.CORBA.Any;

          42  import org.omg.CORBA.Context;

          43  import org.omg.CORBA.ContextList;

          44  import org.omg.CORBA.Environment;

          45  import org.omg.CORBA.ExceptionList;

          46  import org.omg.CORBA.NVList;

          47  import org.omg.CORBA.NamedValue;

          48  import org.omg.CORBA.Request;

          49  import org.omg.CORBA.SystemException;

          50  import org.omg.CORBA.TCKind;

          51  import org.omg.CORBA.TypeCode;

          52  import org.omg.CORBA.portable.ApplicationException;

          53  import org.omg.CORBA.portable.InputStream;

          54  import org.omg.CORBA.portable.OutputStream;

          55  import org.omg.CORBA.portable.RemarshalException;'
        lineNumber: 45
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: '36  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;

          38  import org.omg.CORBA.ARG_IN;

          39  import org.omg.CORBA.ARG_INOUT;

          40  import org.omg.CORBA.ARG_OUT;

          41  import org.omg.CORBA.Any;

          42  import org.omg.CORBA.Context;

          43  import org.omg.CORBA.ContextList;

          44  import org.omg.CORBA.Environment;

          45  import org.omg.CORBA.ExceptionList;

          46  import org.omg.CORBA.NVList;

          47  import org.omg.CORBA.NamedValue;

          48  import org.omg.CORBA.Request;

          49  import org.omg.CORBA.SystemException;

          50  import org.omg.CORBA.TCKind;

          51  import org.omg.CORBA.TypeCode;

          52  import org.omg.CORBA.portable.ApplicationException;

          53  import org.omg.CORBA.portable.InputStream;

          54  import org.omg.CORBA.portable.OutputStream;

          55  import org.omg.CORBA.portable.RemarshalException;

          56  '
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          38  import org.omg.CORBA.ARG_IN;\n39  import org.omg.CORBA.ARG_INOUT;\n\
          40  import org.omg.CORBA.ARG_OUT;\n41  import org.omg.CORBA.Any;\n42  import\
          \ org.omg.CORBA.Context;\n43  import org.omg.CORBA.ContextList;\n44  import\
          \ org.omg.CORBA.Environment;\n45  import org.omg.CORBA.ExceptionList;\n\
          46  import org.omg.CORBA.NVList;\n47  import org.omg.CORBA.NamedValue;\n\
          48  import org.omg.CORBA.Request;\n49  import org.omg.CORBA.SystemException;\n\
          50  import org.omg.CORBA.TCKind;\n51  import org.omg.CORBA.TypeCode;\n52\
          \  import org.omg.CORBA.portable.ApplicationException;\n53  import org.omg.CORBA.portable.InputStream;\n\
          54  import org.omg.CORBA.portable.OutputStream;\n55  import org.omg.CORBA.portable.RemarshalException;\n\
          56  \n57  public class RequestImpl extends Request"
        lineNumber: 47
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "38  import org.omg.CORBA.ARG_IN;\n39  import org.omg.CORBA.ARG_INOUT;\n\
          40  import org.omg.CORBA.ARG_OUT;\n41  import org.omg.CORBA.Any;\n42  import\
          \ org.omg.CORBA.Context;\n43  import org.omg.CORBA.ContextList;\n44  import\
          \ org.omg.CORBA.Environment;\n45  import org.omg.CORBA.ExceptionList;\n\
          46  import org.omg.CORBA.NVList;\n47  import org.omg.CORBA.NamedValue;\n\
          48  import org.omg.CORBA.Request;\n49  import org.omg.CORBA.SystemException;\n\
          50  import org.omg.CORBA.TCKind;\n51  import org.omg.CORBA.TypeCode;\n52\
          \  import org.omg.CORBA.portable.ApplicationException;\n53  import org.omg.CORBA.portable.InputStream;\n\
          54  import org.omg.CORBA.portable.OutputStream;\n55  import org.omg.CORBA.portable.RemarshalException;\n\
          56  \n57  public class RequestImpl extends Request\n58  {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "39  import org.omg.CORBA.ARG_INOUT;\n40  import org.omg.CORBA.ARG_OUT;\n\
          41  import org.omg.CORBA.Any;\n42  import org.omg.CORBA.Context;\n43  import\
          \ org.omg.CORBA.ContextList;\n44  import org.omg.CORBA.Environment;\n45\
          \  import org.omg.CORBA.ExceptionList;\n46  import org.omg.CORBA.NVList;\n\
          47  import org.omg.CORBA.NamedValue;\n48  import org.omg.CORBA.Request;\n\
          49  import org.omg.CORBA.SystemException;\n50  import org.omg.CORBA.TCKind;\n\
          51  import org.omg.CORBA.TypeCode;\n52  import org.omg.CORBA.portable.ApplicationException;\n\
          53  import org.omg.CORBA.portable.InputStream;\n54  import org.omg.CORBA.portable.OutputStream;\n\
          55  import org.omg.CORBA.portable.RemarshalException;\n56  \n57  public\
          \ class RequestImpl extends Request\n58  {\n59      protected org.omg.CORBA.Object\
          \ _target;"
        lineNumber: 49
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "40  import org.omg.CORBA.ARG_OUT;\n41  import org.omg.CORBA.Any;\n\
          42  import org.omg.CORBA.Context;\n43  import org.omg.CORBA.ContextList;\n\
          44  import org.omg.CORBA.Environment;\n45  import org.omg.CORBA.ExceptionList;\n\
          46  import org.omg.CORBA.NVList;\n47  import org.omg.CORBA.NamedValue;\n\
          48  import org.omg.CORBA.Request;\n49  import org.omg.CORBA.SystemException;\n\
          50  import org.omg.CORBA.TCKind;\n51  import org.omg.CORBA.TypeCode;\n52\
          \  import org.omg.CORBA.portable.ApplicationException;\n53  import org.omg.CORBA.portable.InputStream;\n\
          54  import org.omg.CORBA.portable.OutputStream;\n55  import org.omg.CORBA.portable.RemarshalException;\n\
          56  \n57  public class RequestImpl extends Request\n58  {\n59      protected\
          \ org.omg.CORBA.Object _target;\n60  "
        lineNumber: 50
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "41  import org.omg.CORBA.Any;\n42  import org.omg.CORBA.Context;\n\
          43  import org.omg.CORBA.ContextList;\n44  import org.omg.CORBA.Environment;\n\
          45  import org.omg.CORBA.ExceptionList;\n46  import org.omg.CORBA.NVList;\n\
          47  import org.omg.CORBA.NamedValue;\n48  import org.omg.CORBA.Request;\n\
          49  import org.omg.CORBA.SystemException;\n50  import org.omg.CORBA.TCKind;\n\
          51  import org.omg.CORBA.TypeCode;\n52  import org.omg.CORBA.portable.ApplicationException;\n\
          53  import org.omg.CORBA.portable.InputStream;\n54  import org.omg.CORBA.portable.OutputStream;\n\
          55  import org.omg.CORBA.portable.RemarshalException;\n56  \n57  public\
          \ class RequestImpl extends Request\n58  {\n59      protected org.omg.CORBA.Object\
          \ _target;\n60  \n61      protected String _opName;"
        lineNumber: 51
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "42  import org.omg.CORBA.Context;\n43  import org.omg.CORBA.ContextList;\n\
          44  import org.omg.CORBA.Environment;\n45  import org.omg.CORBA.ExceptionList;\n\
          46  import org.omg.CORBA.NVList;\n47  import org.omg.CORBA.NamedValue;\n\
          48  import org.omg.CORBA.Request;\n49  import org.omg.CORBA.SystemException;\n\
          50  import org.omg.CORBA.TCKind;\n51  import org.omg.CORBA.TypeCode;\n52\
          \  import org.omg.CORBA.portable.ApplicationException;\n53  import org.omg.CORBA.portable.InputStream;\n\
          54  import org.omg.CORBA.portable.OutputStream;\n55  import org.omg.CORBA.portable.RemarshalException;\n\
          56  \n57  public class RequestImpl extends Request\n58  {\n59      protected\
          \ org.omg.CORBA.Object _target;\n60  \n61      protected String _opName;\n\
          62  "
        lineNumber: 52
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "43  import org.omg.CORBA.ContextList;\n44  import org.omg.CORBA.Environment;\n\
          45  import org.omg.CORBA.ExceptionList;\n46  import org.omg.CORBA.NVList;\n\
          47  import org.omg.CORBA.NamedValue;\n48  import org.omg.CORBA.Request;\n\
          49  import org.omg.CORBA.SystemException;\n50  import org.omg.CORBA.TCKind;\n\
          51  import org.omg.CORBA.TypeCode;\n52  import org.omg.CORBA.portable.ApplicationException;\n\
          53  import org.omg.CORBA.portable.InputStream;\n54  import org.omg.CORBA.portable.OutputStream;\n\
          55  import org.omg.CORBA.portable.RemarshalException;\n56  \n57  public\
          \ class RequestImpl extends Request\n58  {\n59      protected org.omg.CORBA.Object\
          \ _target;\n60  \n61      protected String _opName;\n62  \n63      protected\
          \ NVList _arguments;"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "44  import org.omg.CORBA.Environment;\n45  import org.omg.CORBA.ExceptionList;\n\
          46  import org.omg.CORBA.NVList;\n47  import org.omg.CORBA.NamedValue;\n\
          48  import org.omg.CORBA.Request;\n49  import org.omg.CORBA.SystemException;\n\
          50  import org.omg.CORBA.TCKind;\n51  import org.omg.CORBA.TypeCode;\n52\
          \  import org.omg.CORBA.portable.ApplicationException;\n53  import org.omg.CORBA.portable.InputStream;\n\
          54  import org.omg.CORBA.portable.OutputStream;\n55  import org.omg.CORBA.portable.RemarshalException;\n\
          56  \n57  public class RequestImpl extends Request\n58  {\n59      protected\
          \ org.omg.CORBA.Object _target;\n60  \n61      protected String _opName;\n\
          62  \n63      protected NVList _arguments;\n64  "
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "45  import org.omg.CORBA.ExceptionList;\n46  import org.omg.CORBA.NVList;\n\
          47  import org.omg.CORBA.NamedValue;\n48  import org.omg.CORBA.Request;\n\
          49  import org.omg.CORBA.SystemException;\n50  import org.omg.CORBA.TCKind;\n\
          51  import org.omg.CORBA.TypeCode;\n52  import org.omg.CORBA.portable.ApplicationException;\n\
          53  import org.omg.CORBA.portable.InputStream;\n54  import org.omg.CORBA.portable.OutputStream;\n\
          55  import org.omg.CORBA.portable.RemarshalException;\n56  \n57  public\
          \ class RequestImpl extends Request\n58  {\n59      protected org.omg.CORBA.Object\
          \ _target;\n60  \n61      protected String _opName;\n62  \n63      protected\
          \ NVList _arguments;\n64  \n65      protected ExceptionList _exceptions;"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Class
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "49  import org.omg.CORBA.SystemException;\n50  import org.omg.CORBA.TCKind;\n\
          51  import org.omg.CORBA.TypeCode;\n52  import org.omg.CORBA.portable.ApplicationException;\n\
          53  import org.omg.CORBA.portable.InputStream;\n54  import org.omg.CORBA.portable.OutputStream;\n\
          55  import org.omg.CORBA.portable.RemarshalException;\n56  \n57  public\
          \ class RequestImpl extends Request\n58  {\n59      protected org.omg.CORBA.Object\
          \ _target;\n60  \n61      protected String _opName;\n62  \n63      protected\
          \ NVList _arguments;\n64  \n65      protected ExceptionList _exceptions;\n\
          66  \n67      private NamedValue _result;\n68  \n69      protected Environment\
          \ _env;"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Field
          name: _target
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "77      private ORBUtilSystemException _wrapper;\n78  \n79    \
          \  // invocation-specific stuff\n80      protected boolean _isOneWay = false;\n\
          81  \n82      // support for deferred invocations.\n83      // protected\
          \ instead of private since it needs to be set by the thread object doing\
          \ the asynchronous invocation.\n84      protected boolean gotResponse =\
          \ false;\n85  \n86      // REVISIT - used to be protected. Now public so\
          \ it can be accessed from xgiop.\n87      public RequestImpl(ORB orb, org.omg.CORBA.Object\
          \ targetObject, Context ctx, String operationName,\n88              NVList\
          \ argumentList, NamedValue resultContainer, ExceptionList exceptionList,\
          \ ContextList ctxList)\n89      {\n90  \n91          // initialize the orb\n\
          92          _orb = orb;\n93          _wrapper = ORBUtilSystemException.get(orb,\
          \ CORBALogDomains.OA_INVOCATION);\n94  \n95          // initialize target,\
          \ context and operation name\n96          _target = targetObject;\n97  \
          \        _ctx = ctx;"
        lineNumber: 87
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/RequestImpl.java
          kind: Constructor
          name: RequestImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "108  \n109              case TCKind._tk_TypeCode :\n110       \
          \           s.write_TypeCode((TypeCode) o);\n111                  break;\n\
          112  \n113              case TCKind._tk_Principal :\n114               \
          \   s.write_Principal((Principal) o);\n115                  break;\n116\
          \  \n117              case TCKind._tk_objref :\n118                  s.write_Object((org.omg.CORBA.Object)\
          \ o);\n119                  break;\n120  \n121              case TCKind._tk_longlong\
          \ :\n122                  s.write_longlong(l);\n123                  break;\n\
          124  \n125              case TCKind._tk_ulonglong :\n126               \
          \   s.write_ulonglong(l);\n127                  break;\n128  "
        lineNumber: 118
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
          kind: Method
          name: marshalIn
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "133              case TCKind._tk_string :\n134                \
          \  s.write_string((String) o);\n135                  break;\n136  \n137\
          \              case TCKind._tk_wstring :\n138                  s.write_wstring((String)\
          \ o);\n139                  break;\n140  \n141              case TCKind._tk_value\
          \ :\n142              case TCKind._tk_value_box :\n143                 \
          \ ((org.omg.CORBA_2_3.portable.OutputStream) s).write_value((Serializable)\
          \ o);\n144                  break;\n145  \n146              case TCKind._tk_fixed\
          \ :\n147                  // _REVISIT_ As soon as the java-rtf adds digits\
          \ and scale parameters to\n148                  // OutputStream, this check\
          \ will be unnecessary\n149                  if (s instanceof CDROutputStream)\n\
          150                  {\n151                      try\n152              \
          \        {\n153                          ((CDROutputStream) s).write_fixed((BigDecimal)\
          \ o, typeCode.fixed_digits(),"
        lineNumber: 143
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
          kind: Method
          name: marshalIn
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "166              case TCKind._tk_struct :\n167              case\
          \ TCKind._tk_union :\n168              case TCKind._tk_sequence :\n169 \
          \             case TCKind._tk_array :\n170              case TCKind._tk_alias\
          \ :\n171              case TCKind._tk_except :\n172                  ((Streamable)\
          \ o)._write(s);\n173                  break;\n174  \n175              case\
          \ TCKind._tk_abstract_interface :\n176                  ((org.omg.CORBA_2_3.portable.OutputStream)\
          \ s).write_abstract_interface(o);\n177                  break;\n178  \n\
          179              case TCKind._tk_longdouble :\n180                  // Unspecified\
          \ for Java\n181              default :\n182                  ORBUtilSystemException\
          \ wrapper = ORBUtilSystemException.get(\n183                          (org.jboss.com.sun.corba.se.spi.orb.ORB)\
          \ s.orb(), CORBALogDomains.RPC_PRESENTATION);\n184                  throw\
          \ wrapper.typecodeNotSupported();\n185          }\n186      }"
        lineNumber: 176
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
          kind: Method
          name: marshalIn
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "178  \n179              case TCKind._tk_longdouble :\n180     \
          \             // Unspecified for Java\n181              default :\n182 \
          \                 ORBUtilSystemException wrapper = ORBUtilSystemException.get(\n\
          183                          (org.jboss.com.sun.corba.se.spi.orb.ORB) s.orb(),\
          \ CORBALogDomains.RPC_PRESENTATION);\n184                  throw wrapper.typecodeNotSupported();\n\
          185          }\n186      }\n187  \n188      static void unmarshalIn(org.omg.CORBA.portable.InputStream\
          \ s, TypeCode typeCode, long[] la, Object[] oa)\n189      {\n190       \
          \   int type = typeCode.kind().value();\n191          long l = 0;\n192 \
          \         Object o = oa[0];\n193  \n194          switch (type)\n195    \
          \      {\n196              case TCKind._tk_null :\n197              case\
          \ TCKind._tk_void :\n198              case TCKind._tk_native :"
        lineNumber: 188
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
          kind: Method
          name: unmarshalIn
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "273              case TCKind._tk_string :\n274                \
          \  o = s.read_string();\n275                  break;\n276  \n277       \
          \       case TCKind._tk_wstring :\n278                  o = s.read_wstring();\n\
          279                  break;\n280  \n281              case TCKind._tk_value\
          \ :\n282              case TCKind._tk_value_box :\n283                 \
          \ o = ((org.omg.CORBA_2_3.portable.InputStream) s).read_value();\n284  \
          \                break;\n285  \n286              case TCKind._tk_fixed :\n\
          287                  try\n288                  {\n289                  \
          \    // _REVISIT_ As soon as the java-rtf adds digits and scale parameters\
          \ to\n290                      // InputStream, this check will be unnecessary\n\
          291                      if (s instanceof CDRInputStream)\n292         \
          \             {\n293                          o = ((CDRInputStream) s).read_fixed(typeCode.fixed_digits(),\
          \ typeCode.fixed_scale());"
        lineNumber: 283
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
          kind: Method
          name: unmarshalIn
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "306              case TCKind._tk_struct :\n307              case\
          \ TCKind._tk_union :\n308              case TCKind._tk_sequence :\n309 \
          \             case TCKind._tk_array :\n310              case TCKind._tk_alias\
          \ :\n311              case TCKind._tk_except :\n312                  ((Streamable)\
          \ o)._read(s);\n313                  break;\n314  \n315              case\
          \ TCKind._tk_abstract_interface :\n316                  o = ((org.omg.CORBA_2_3.portable.InputStream)\
          \ s).read_abstract_interface();\n317                  break;\n318  \n319\
          \              case TCKind._tk_longdouble :\n320                  // Unspecified\
          \ for Java\n321              default :\n322                  ORBUtilSystemException\
          \ wrapper = ORBUtilSystemException.get(\n323                          (org.jboss.com.sun.corba.se.spi.orb.ORB)\
          \ s.orb(), CORBALogDomains.RPC_PRESENTATION);\n324                  throw\
          \ wrapper.typecodeNotSupported();\n325          }\n326  "
        lineNumber: 316
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
          kind: Method
          name: unmarshalIn
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n33  \n\
          34  import java.io.Serializable;\n35  import java.math.BigDecimal;\n36 \
          \ \n37  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          38  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;\n39\
          \  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          40  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n41 \
          \ import org.omg.CORBA.Any;\n42  import org.omg.CORBA.Principal;\n43  import\
          \ org.omg.CORBA.TCKind;\n44  import org.omg.CORBA.TypeCode;\n45  import\
          \ org.omg.CORBA.TypeCodePackage.BadKind;\n46  import org.omg.CORBA.portable.Streamable;\n\
          47  \n48  /**\n49   * Static functions for TypeCode interpretation.\n50\
          \   */\n51  @SuppressWarnings(\"deprecation\")"
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
          kind: Class
          name: TCUtility
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "32  package org.jboss.com.sun.corba.se.impl.corba;\n33  \n34  import\
          \ java.io.Serializable;\n35  import java.math.BigDecimal;\n36  \n37  import\
          \ org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n38  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;\n\
          39  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          40  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n41 \
          \ import org.omg.CORBA.Any;\n42  import org.omg.CORBA.Principal;\n43  import\
          \ org.omg.CORBA.TCKind;\n44  import org.omg.CORBA.TypeCode;\n45  import\
          \ org.omg.CORBA.TypeCodePackage.BadKind;\n46  import org.omg.CORBA.portable.Streamable;\n\
          47  \n48  /**\n49   * Static functions for TypeCode interpretation.\n50\
          \   */\n51  @SuppressWarnings(\"deprecation\")\n52  public final class TCUtility"
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
          kind: Class
          name: TCUtility
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "33  \n34  import java.io.Serializable;\n35  import java.math.BigDecimal;\n\
          36  \n37  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          38  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;\n39\
          \  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          40  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n41 \
          \ import org.omg.CORBA.Any;\n42  import org.omg.CORBA.Principal;\n43  import\
          \ org.omg.CORBA.TCKind;\n44  import org.omg.CORBA.TypeCode;\n45  import\
          \ org.omg.CORBA.TypeCodePackage.BadKind;\n46  import org.omg.CORBA.portable.Streamable;\n\
          47  \n48  /**\n49   * Static functions for TypeCode interpretation.\n50\
          \   */\n51  @SuppressWarnings(\"deprecation\")\n52  public final class TCUtility\n\
          53  {"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
          kind: Class
          name: TCUtility
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "34  import java.io.Serializable;\n35  import java.math.BigDecimal;\n\
          36  \n37  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          38  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;\n39\
          \  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          40  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n41 \
          \ import org.omg.CORBA.Any;\n42  import org.omg.CORBA.Principal;\n43  import\
          \ org.omg.CORBA.TCKind;\n44  import org.omg.CORBA.TypeCode;\n45  import\
          \ org.omg.CORBA.TypeCodePackage.BadKind;\n46  import org.omg.CORBA.portable.Streamable;\n\
          47  \n48  /**\n49   * Static functions for TypeCode interpretation.\n50\
          \   */\n51  @SuppressWarnings(\"deprecation\")\n52  public final class TCUtility\n\
          53  {\n54  "
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
          kind: Class
          name: TCUtility
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "35  import java.math.BigDecimal;\n36  \n37  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          38  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;\n39\
          \  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          40  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n41 \
          \ import org.omg.CORBA.Any;\n42  import org.omg.CORBA.Principal;\n43  import\
          \ org.omg.CORBA.TCKind;\n44  import org.omg.CORBA.TypeCode;\n45  import\
          \ org.omg.CORBA.TypeCodePackage.BadKind;\n46  import org.omg.CORBA.portable.Streamable;\n\
          47  \n48  /**\n49   * Static functions for TypeCode interpretation.\n50\
          \   */\n51  @SuppressWarnings(\"deprecation\")\n52  public final class TCUtility\n\
          53  {\n54  \n55      static void marshalIn(org.omg.CORBA.portable.OutputStream\
          \ s, TypeCode typeCode, long l, Object o)"
        lineNumber: 45
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
          kind: Class
          name: TCUtility
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "36  \n37  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          38  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;\n39\
          \  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          40  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n41 \
          \ import org.omg.CORBA.Any;\n42  import org.omg.CORBA.Principal;\n43  import\
          \ org.omg.CORBA.TCKind;\n44  import org.omg.CORBA.TypeCode;\n45  import\
          \ org.omg.CORBA.TypeCodePackage.BadKind;\n46  import org.omg.CORBA.portable.Streamable;\n\
          47  \n48  /**\n49   * Static functions for TypeCode interpretation.\n50\
          \   */\n51  @SuppressWarnings(\"deprecation\")\n52  public final class TCUtility\n\
          53  {\n54  \n55      static void marshalIn(org.omg.CORBA.portable.OutputStream\
          \ s, TypeCode typeCode, long l, Object o)\n56      {"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
          kind: Class
          name: TCUtility
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "45  import org.omg.CORBA.TypeCodePackage.BadKind;\n46  import org.omg.CORBA.portable.Streamable;\n\
          47  \n48  /**\n49   * Static functions for TypeCode interpretation.\n50\
          \   */\n51  @SuppressWarnings(\"deprecation\")\n52  public final class TCUtility\n\
          53  {\n54  \n55      static void marshalIn(org.omg.CORBA.portable.OutputStream\
          \ s, TypeCode typeCode, long l, Object o)\n56      {\n57          switch\
          \ (typeCode.kind().value())\n58          {\n59              case TCKind._tk_null\
          \ :\n60              case TCKind._tk_void :\n61              case TCKind._tk_native\
          \ :\n62                  // nothing to write\n63                  break;\n\
          64  \n65              case TCKind._tk_short :"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TCUtility.java
          kind: Method
          name: marshalIn
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 1942
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Method
          name: copy
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 2025
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Method
          name: copy
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 2026
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Method
          name: copy
          package: org.jboss.com.sun.corba.se.impl.corba
      - lineNumber: 2278
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Method
          name: currentUnionMemberIndex
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "1073              case TCKind._tk_struct :\n1074              case\
          \ TCKind._tk_union :\n1075              case TCKind._tk_enum :\n1076   \
          \           case TCKind._tk_value :\n1077                  try\n1078   \
          \               {\n1079                      return _memberNames[index];\n\
          1080                  }\n1081                  catch (ArrayIndexOutOfBoundsException\
          \ e)\n1082                  {\n1083                      throw new org.omg.CORBA.TypeCodePackage.Bounds();\n\
          1084                  }\n1085              default :\n1086             \
          \     throw new BadKind();\n1087          }\n1088      }\n1089  \n1090 \
          \     public TypeCode member_type(int index) throws BadKind, org.omg.CORBA.TypeCodePackage.Bounds\n\
          1091      {\n1092          switch (_kind)\n1093          {"
        lineNumber: 1083
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Method
          name: member_name
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "1080                  }\n1081                  catch (ArrayIndexOutOfBoundsException\
          \ e)\n1082                  {\n1083                      throw new org.omg.CORBA.TypeCodePackage.Bounds();\n\
          1084                  }\n1085              default :\n1086             \
          \     throw new BadKind();\n1087          }\n1088      }\n1089  \n1090 \
          \     public TypeCode member_type(int index) throws BadKind, org.omg.CORBA.TypeCodePackage.Bounds\n\
          1091      {\n1092          switch (_kind)\n1093          {\n1094       \
          \       case tk_indirect :\n1095                  return indirectType().member_type(index);\n\
          1096              case TCKind._tk_except :\n1097              case TCKind._tk_struct\
          \ :\n1098              case TCKind._tk_union :\n1099              case TCKind._tk_value\
          \ :\n1100                  try"
        lineNumber: 1090
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Method
          name: member_type
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "1096              case TCKind._tk_except :\n1097              case\
          \ TCKind._tk_struct :\n1098              case TCKind._tk_union :\n1099 \
          \             case TCKind._tk_value :\n1100                  try\n1101 \
          \                 {\n1102                      return _memberTypes[index];\n\
          1103                  }\n1104                  catch (ArrayIndexOutOfBoundsException\
          \ e)\n1105                  {\n1106                      throw new org.omg.CORBA.TypeCodePackage.Bounds();\n\
          1107                  }\n1108              default :\n1109             \
          \     throw new BadKind();\n1110          }\n1111      }\n1112  \n1113 \
          \     public Any member_label(int index) throws BadKind, org.omg.CORBA.TypeCodePackage.Bounds\n\
          1114      {\n1115          switch (_kind)\n1116          {"
        lineNumber: 1106
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Method
          name: member_type
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: 11   * This code is distributed in the hope that it will be useful,
          but WITHOUT
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Class
          name: TypeCodeImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: 11   * This code is distributed in the hope that it will be useful,
          but WITHOUT
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Class
          name: TypeCodeImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: 11   * This code is distributed in the hope that it will be useful,
          but WITHOUT
        lineNumber: 853
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Method
          name: equal
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: 11   * This code is distributed in the hope that it will be useful,
          but WITHOUT
        lineNumber: 1066
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Method
          name: member_name
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: 11   * This code is distributed in the hope that it will be useful,
          but WITHOUT
        lineNumber: 1127
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Method
          name: member_label
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: 11   * This code is distributed in the hope that it will be useful,
          but WITHOUT
        lineNumber: 1228
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Method
          name: member_visibility
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "1103                  }\n1104                  catch (ArrayIndexOutOfBoundsException\
          \ e)\n1105                  {\n1106                      throw new org.omg.CORBA.TypeCodePackage.Bounds();\n\
          1107                  }\n1108              default :\n1109             \
          \     throw new BadKind();\n1110          }\n1111      }\n1112  \n1113 \
          \     public Any member_label(int index) throws BadKind, org.omg.CORBA.TypeCodePackage.Bounds\n\
          1114      {\n1115          switch (_kind)\n1116          {\n1117       \
          \       case tk_indirect :\n1118                  return indirectType().member_label(index);\n\
          1119              case TCKind._tk_union :\n1120                  try\n1121\
          \                  {\n1122                      // _REVISIT_ Why create\
          \ a new Any for this?\n1123                      return new AnyImpl(_orb,\
          \ _unionLabels[index]);"
        lineNumber: 1113
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Method
          name: member_label
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "1205      {\n1206          switch (_kind)\n1207          {\n1208\
          \              case TCKind._tk_fixed :\n1209                  return _scale;\n\
          1210              default :\n1211                  throw new BadKind();\n\
          1212          }\n1213      }\n1214  \n1215      public short member_visibility(int\
          \ index) throws BadKind, org.omg.CORBA.TypeCodePackage.Bounds\n1216    \
          \  {\n1217          switch (_kind)\n1218          {\n1219              case\
          \ tk_indirect :\n1220                  return indirectType().member_visibility(index);\n\
          1221              case TCKind._tk_value :\n1222                  try\n1223\
          \                  {\n1224                      return _memberAccess[index];\n\
          1225                  }"
        lineNumber: 1215
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Method
          name: member_visibility
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "21   * Please contact Oracle, 500 Oracle Parkway, Redwood Shores,\
          \ CA 94065 USA\n22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.corba;\n\
          27  \n28  import java.io.ByteArrayOutputStream;\n29  import java.io.PrintStream;\n\
          30  \n31  import org.omg.CORBA.Any;\n32  import org.omg.CORBA.StructMember;\n\
          33  import org.omg.CORBA.TCKind;\n34  import org.omg.CORBA.TypeCode;\n35\
          \  import org.omg.CORBA.UnionMember;\n36  import org.omg.CORBA.ValueMember;\n\
          37  import org.omg.CORBA.TypeCodePackage.BadKind;\n38  import org.omg.CORBA_2_3.portable.InputStream;\n\
          39  import org.omg.CORBA_2_3.portable.OutputStream;\n40  \n41  import org.jboss.com.sun.corba.se.impl.corba.AnyImpl;"
        lineNumber: 31
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Class
          name: TypeCodeImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.corba;\n\
          27  \n28  import java.io.ByteArrayOutputStream;\n29  import java.io.PrintStream;\n\
          30  \n31  import org.omg.CORBA.Any;\n32  import org.omg.CORBA.StructMember;\n\
          33  import org.omg.CORBA.TCKind;\n34  import org.omg.CORBA.TypeCode;\n35\
          \  import org.omg.CORBA.UnionMember;\n36  import org.omg.CORBA.ValueMember;\n\
          37  import org.omg.CORBA.TypeCodePackage.BadKind;\n38  import org.omg.CORBA_2_3.portable.InputStream;\n\
          39  import org.omg.CORBA_2_3.portable.OutputStream;\n40  \n41  import org.jboss.com.sun.corba.se.impl.corba.AnyImpl;\n\
          42  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n43\
          \  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Class
          name: TypeCodeImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.corba;\n\
          27  \n28  import java.io.ByteArrayOutputStream;\n29  import java.io.PrintStream;\n\
          30  \n31  import org.omg.CORBA.Any;\n32  import org.omg.CORBA.StructMember;\n\
          33  import org.omg.CORBA.TCKind;\n34  import org.omg.CORBA.TypeCode;\n35\
          \  import org.omg.CORBA.UnionMember;\n36  import org.omg.CORBA.ValueMember;\n\
          37  import org.omg.CORBA.TypeCodePackage.BadKind;\n38  import org.omg.CORBA_2_3.portable.InputStream;\n\
          39  import org.omg.CORBA_2_3.portable.OutputStream;\n40  \n41  import org.jboss.com.sun.corba.se.impl.corba.AnyImpl;\n\
          42  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n43\
          \  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;\n44\
          \  import org.jboss.com.sun.corba.se.impl.encoding.TypeCodeInputStream;"
        lineNumber: 34
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Class
          name: TypeCodeImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "25  \n26  package org.jboss.com.sun.corba.se.impl.corba;\n27  \n\
          28  import java.io.ByteArrayOutputStream;\n29  import java.io.PrintStream;\n\
          30  \n31  import org.omg.CORBA.Any;\n32  import org.omg.CORBA.StructMember;\n\
          33  import org.omg.CORBA.TCKind;\n34  import org.omg.CORBA.TypeCode;\n35\
          \  import org.omg.CORBA.UnionMember;\n36  import org.omg.CORBA.ValueMember;\n\
          37  import org.omg.CORBA.TypeCodePackage.BadKind;\n38  import org.omg.CORBA_2_3.portable.InputStream;\n\
          39  import org.omg.CORBA_2_3.portable.OutputStream;\n40  \n41  import org.jboss.com.sun.corba.se.impl.corba.AnyImpl;\n\
          42  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n43\
          \  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;\n44\
          \  import org.jboss.com.sun.corba.se.impl.encoding.TypeCodeInputStream;\n\
          45  import org.jboss.com.sun.corba.se.impl.encoding.TypeCodeOutputStream;"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Class
          name: TypeCodeImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "26  package org.jboss.com.sun.corba.se.impl.corba;\n27  \n28  import\
          \ java.io.ByteArrayOutputStream;\n29  import java.io.PrintStream;\n30  \n\
          31  import org.omg.CORBA.Any;\n32  import org.omg.CORBA.StructMember;\n\
          33  import org.omg.CORBA.TCKind;\n34  import org.omg.CORBA.TypeCode;\n35\
          \  import org.omg.CORBA.UnionMember;\n36  import org.omg.CORBA.ValueMember;\n\
          37  import org.omg.CORBA.TypeCodePackage.BadKind;\n38  import org.omg.CORBA_2_3.portable.InputStream;\n\
          39  import org.omg.CORBA_2_3.portable.OutputStream;\n40  \n41  import org.jboss.com.sun.corba.se.impl.corba.AnyImpl;\n\
          42  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n43\
          \  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;\n44\
          \  import org.jboss.com.sun.corba.se.impl.encoding.TypeCodeInputStream;\n\
          45  import org.jboss.com.sun.corba.se.impl.encoding.TypeCodeOutputStream;\n\
          46  import org.jboss.com.sun.corba.se.impl.encoding.TypeCodeReader;"
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Class
          name: TypeCodeImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "270              // set up content type\n271              switch\
          \ (_kind)\n272              {\n273                  case TCKind._tk_sequence\
          \ :\n274                  case TCKind._tk_array :\n275                 \
          \ case TCKind._tk_alias :\n276                  case TCKind._tk_value_box\
          \ :\n277                      _contentType = convertToNative(_orb, tc.content_type());\n\
          278              }\n279          }\n280          catch (org.omg.CORBA.TypeCodePackage.Bounds\
          \ e)\n281          {\n282          }\n283          catch (BadKind e)\n284\
          \          {\n285          }\n286          // dont have to worry about these\
          \ since code ensures we dont step\n287          // out of bounds.\n288 \
          \     }\n289  \n290      public TypeCodeImpl(ORB orb, int creationKind)"
        lineNumber: 280
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Constructor
          name: TypeCodeImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "28  import java.io.ByteArrayOutputStream;\n29  import java.io.PrintStream;\n\
          30  \n31  import org.omg.CORBA.Any;\n32  import org.omg.CORBA.StructMember;\n\
          33  import org.omg.CORBA.TCKind;\n34  import org.omg.CORBA.TypeCode;\n35\
          \  import org.omg.CORBA.UnionMember;\n36  import org.omg.CORBA.ValueMember;\n\
          37  import org.omg.CORBA.TypeCodePackage.BadKind;\n38  import org.omg.CORBA_2_3.portable.InputStream;\n\
          39  import org.omg.CORBA_2_3.portable.OutputStream;\n40  \n41  import org.jboss.com.sun.corba.se.impl.corba.AnyImpl;\n\
          42  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n43\
          \  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;\n44\
          \  import org.jboss.com.sun.corba.se.impl.encoding.TypeCodeInputStream;\n\
          45  import org.jboss.com.sun.corba.se.impl.encoding.TypeCodeOutputStream;\n\
          46  import org.jboss.com.sun.corba.se.impl.encoding.TypeCodeReader;\n47\
          \  import org.jboss.com.sun.corba.se.impl.encoding.WrapperInputStream;\n\
          48  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Class
          name: TypeCodeImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "29  import java.io.PrintStream;\n30  \n31  import org.omg.CORBA.Any;\n\
          32  import org.omg.CORBA.StructMember;\n33  import org.omg.CORBA.TCKind;\n\
          34  import org.omg.CORBA.TypeCode;\n35  import org.omg.CORBA.UnionMember;\n\
          36  import org.omg.CORBA.ValueMember;\n37  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          38  import org.omg.CORBA_2_3.portable.InputStream;\n39  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          40  \n41  import org.jboss.com.sun.corba.se.impl.corba.AnyImpl;\n42  import\
          \ org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n43  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;\n\
          44  import org.jboss.com.sun.corba.se.impl.encoding.TypeCodeInputStream;\n\
          45  import org.jboss.com.sun.corba.se.impl.encoding.TypeCodeOutputStream;\n\
          46  import org.jboss.com.sun.corba.se.impl.encoding.TypeCodeReader;\n47\
          \  import org.jboss.com.sun.corba.se.impl.encoding.WrapperInputStream;\n\
          48  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          49  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;"
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Class
          name: TypeCodeImpl
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "960                      if (!myRealType.member_type(i).equivalent(otherRealType.member_type(i)))\n\
          961                          return false;\n962                  }\n963\
          \              }\n964          }\n965          catch (BadKind e)\n966  \
          \        {\n967              // impossible if we checked correctly above\n\
          968              throw wrapper.badkindCannotOccur();\n969          }\n970\
          \          catch (org.omg.CORBA.TypeCodePackage.Bounds e)\n971         \
          \ {\n972              // impossible if we checked correctly above\n973 \
          \             throw wrapper.boundsCannotOccur();\n974          }\n975  \n\
          976          // Structural comparison succeeded!\n977          return true;\n\
          978      }\n979  \n980      public TypeCode get_compact_typecode()"
        lineNumber: 970
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Method
          name: equivalent
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "28   * Copyright IBM Corp. 1998 1999  All Rights Reserved\n29 \
          \  *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  abstract public class TypeCodeImplHelper\n35  {\n36      private\
          \ static String _id = \"IDL:omg.org/CORBA/TypeCode:1.0\";\n37  \n38    \
          \  public static void insert(org.omg.CORBA.Any a, org.omg.CORBA.TypeCode\
          \ that)\n39      {\n40          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n41          a.type(type());\n42         \
          \ write(out, that);\n43          a.read_value(out.create_input_stream(),\
          \ type());\n44      }\n45  \n46      public static org.omg.CORBA.TypeCode\
          \ extract(org.omg.CORBA.Any a)\n47      {\n48          return read(a.create_input_stream());"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.corba;\n\
          33  \n34  abstract public class TypeCodeImplHelper\n35  {\n36      private\
          \ static String _id = \"IDL:omg.org/CORBA/TypeCode:1.0\";\n37  \n38    \
          \  public static void insert(org.omg.CORBA.Any a, org.omg.CORBA.TypeCode\
          \ that)\n39      {\n40          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n41          a.type(type());\n42         \
          \ write(out, that);\n43          a.read_value(out.create_input_stream(),\
          \ type());\n44      }\n45  \n46      public static org.omg.CORBA.TypeCode\
          \ extract(org.omg.CORBA.Any a)\n47      {\n48          return read(a.create_input_stream());\n\
          49      }\n50  "
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "36      private static String _id = \"IDL:omg.org/CORBA/TypeCode:1.0\"\
          ;\n37  \n38      public static void insert(org.omg.CORBA.Any a, org.omg.CORBA.TypeCode\
          \ that)\n39      {\n40          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n41          a.type(type());\n42         \
          \ write(out, that);\n43          a.read_value(out.create_input_stream(),\
          \ type());\n44      }\n45  \n46      public static org.omg.CORBA.TypeCode\
          \ extract(org.omg.CORBA.Any a)\n47      {\n48          return read(a.create_input_stream());\n\
          49      }\n50  \n51      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n52  \n53      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n54      {\n55          if (__typeCode == null)\n56          {"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "41          a.type(type());\n42          write(out, that);\n43\
          \          a.read_value(out.create_input_stream(), type());\n44      }\n\
          45  \n46      public static org.omg.CORBA.TypeCode extract(org.omg.CORBA.Any\
          \ a)\n47      {\n48          return read(a.create_input_stream());\n49 \
          \     }\n50  \n51      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n52  \n53      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n54      {\n55          if (__typeCode == null)\n56          {\n\
          57              __typeCode = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);\n\
          58          }\n59          return __typeCode;\n60      }\n61  "
        lineNumber: 51
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "43          a.read_value(out.create_input_stream(), type());\n\
          44      }\n45  \n46      public static org.omg.CORBA.TypeCode extract(org.omg.CORBA.Any\
          \ a)\n47      {\n48          return read(a.create_input_stream());\n49 \
          \     }\n50  \n51      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n52  \n53      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n54      {\n55          if (__typeCode == null)\n56          {\n\
          57              __typeCode = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);\n\
          58          }\n59          return __typeCode;\n60      }\n61  \n62     \
          \ public static String id()\n63      {"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "47      {\n48          return read(a.create_input_stream());\n\
          49      }\n50  \n51      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n52  \n53      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n54      {\n55          if (__typeCode == null)\n56          {\n\
          57              __typeCode = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);\n\
          58          }\n59          return __typeCode;\n60      }\n61  \n62     \
          \ public static String id()\n63      {\n64          return _id;\n65    \
          \  }\n66  \n67      public static org.omg.CORBA.TypeCode read(org.omg.CORBA.portable.InputStream\
          \ istream)"
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "57              __typeCode = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);\n\
          58          }\n59          return __typeCode;\n60      }\n61  \n62     \
          \ public static String id()\n63      {\n64          return _id;\n65    \
          \  }\n66  \n67      public static org.omg.CORBA.TypeCode read(org.omg.CORBA.portable.InputStream\
          \ istream)\n68      {\n69          return istream.read_TypeCode();\n70 \
          \     }\n71  \n72      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, org.omg.CORBA.TypeCode value)\n73      {\n74          ostream.write_TypeCode(value);\n\
          75      }\n76  \n77      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, TypeCodeImpl value)"
        lineNumber: 67
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "62      public static String id()\n63      {\n64          return\
          \ _id;\n65      }\n66  \n67      public static org.omg.CORBA.TypeCode read(org.omg.CORBA.portable.InputStream\
          \ istream)\n68      {\n69          return istream.read_TypeCode();\n70 \
          \     }\n71  \n72      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, org.omg.CORBA.TypeCode value)\n73      {\n74          ostream.write_TypeCode(value);\n\
          75      }\n76  \n77      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, TypeCodeImpl value)\n78      {\n79          ostream.write_TypeCode(value);\n\
          80      }\n81  \n82  }"
        lineNumber: 72
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "67      public static org.omg.CORBA.TypeCode read(org.omg.CORBA.portable.InputStream\
          \ istream)\n68      {\n69          return istream.read_TypeCode();\n70 \
          \     }\n71  \n72      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, org.omg.CORBA.TypeCode value)\n73      {\n74          ostream.write_TypeCode(value);\n\
          75      }\n76  \n77      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, TypeCodeImpl value)\n78      {\n79          ostream.write_TypeCode(value);\n\
          80      }\n81  \n82  }\n"
        lineNumber: 77
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImplHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.corba
      - codeSnip: "18   * 2 along with this work; if not, write to the Free Software\
          \ Foundation,\n19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.impl.encoding;\n27  \n28  import org.omg.CORBA.INTERNAL;\n\
          29  \n30  import org.jboss.com.sun.corba.se.impl.encoding.BufferManagerRead;\n\
          31  import org.jboss.com.sun.corba.se.impl.encoding.BufferManagerReadGrow;\n\
          32  import org.jboss.com.sun.corba.se.impl.encoding.BufferManagerReadStream;\n\
          33  import org.jboss.com.sun.corba.se.impl.encoding.BufferManagerWrite;\n\
          34  import org.jboss.com.sun.corba.se.impl.encoding.BufferManagerWriteCollect;\n\
          35  import org.jboss.com.sun.corba.se.impl.encoding.BufferManagerWriteGrow;\n\
          36  import org.jboss.com.sun.corba.se.impl.encoding.BufferManagerWriteStream;\n\
          37  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          38  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;"
        lineNumber: 28
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/BufferManagerFactory.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/BufferManagerFactory.java
          kind: Class
          name: BufferManagerFactory
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 394
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_ulong_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 399
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_ulonglong_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 404
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_longlong_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 409
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_float_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 414
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_double_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 514
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: " 93      public CDRInputStream()\n 94      {\n 95      }\n 96 \
          \ \n 97      public CDRInputStream(CDRInputStream is)\n 98      {\n 99 \
          \         impl = is.impl.dup();\n100          impl.setParent(this);\n101\
          \      }\n102  \n103      public CDRInputStream(org.omg.CORBA.ORB orb, ByteBuffer\
          \ byteBuffer, int size, boolean littleEndian,\n104              GIOPVersion\
          \ version, byte encodingVersion, BufferManagerRead bufMgr)\n105      {\n\
          106          impl = InputStreamFactory.newInputStream((ORB) orb, version,\
          \ encodingVersion);\n107  \n108          impl.init(orb, byteBuffer, size,\
          \ littleEndian, bufMgr);\n109  \n110          impl.setParent(this);\n111\
          \      }\n112  \n113      // org.omg.CORBA.portable.InputStream"
        lineNumber: 103
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Constructor
          name: CDRInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "239      public final void read_float_array(float[] value, int\
          \ offset, int length)\n240      {\n241          impl.read_float_array(value,\
          \ offset, length);\n242      }\n243  \n244      public final void read_double_array(double[]\
          \ value, int offset, int length)\n245      {\n246          impl.read_double_array(value,\
          \ offset, length);\n247      }\n248  \n249      public final org.omg.CORBA.Object\
          \ read_Object()\n250      {\n251          return impl.read_Object();\n252\
          \      }\n253  \n254      public final TypeCode read_TypeCode()\n255   \
          \   {\n256          return impl.read_TypeCode();\n257      }\n258  \n259\
          \      public final Any read_any()"
        lineNumber: 249
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_Object
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "269      public final int read() throws java.io.IOException\n270\
          \      {\n271          return impl.read();\n272      }\n273  \n274     \
          \ public final java.math.BigDecimal read_fixed()\n275      {\n276      \
          \    return impl.read_fixed();\n277      }\n278  \n279      public final\
          \ org.omg.CORBA.Context read_Context()\n280      {\n281          return\
          \ impl.read_Context();\n282      }\n283  \n284      public final org.omg.CORBA.Object\
          \ read_Object(Class clz)\n285      {\n286          return impl.read_Object(clz);\n\
          287      }\n288  \n289      public final org.omg.CORBA.ORB orb()"
        lineNumber: 279
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_Context
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "274      public final java.math.BigDecimal read_fixed()\n275  \
          \    {\n276          return impl.read_fixed();\n277      }\n278  \n279 \
          \     public final org.omg.CORBA.Context read_Context()\n280      {\n281\
          \          return impl.read_Context();\n282      }\n283  \n284      public\
          \ final org.omg.CORBA.Object read_Object(Class clz)\n285      {\n286   \
          \       return impl.read_Object(clz);\n287      }\n288  \n289      public\
          \ final org.omg.CORBA.ORB orb()\n290      {\n291          return impl.orb();\n\
          292      }\n293  \n294      // org.omg.CORBA_2_3.portable.InputStream"
        lineNumber: 284
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_Object
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "279      public final org.omg.CORBA.Context read_Context()\n280\
          \      {\n281          return impl.read_Context();\n282      }\n283  \n\
          284      public final org.omg.CORBA.Object read_Object(Class clz)\n285 \
          \     {\n286          return impl.read_Object(clz);\n287      }\n288  \n\
          289      public final org.omg.CORBA.ORB orb()\n290      {\n291         \
          \ return impl.orb();\n292      }\n293  \n294      // org.omg.CORBA_2_3.portable.InputStream\n\
          295      public final java.io.Serializable read_value()\n296      {\n297\
          \          return impl.read_value();\n298      }\n299  "
        lineNumber: 289
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "28  import java.nio.ByteBuffer;\n29  \n30  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          31  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\n\
          32  import org.jboss.com.sun.corba.se.pept.protocol.MessageMediator;\n33\
          \  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n34  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          36  import org.jboss.com.sun.corba.se.spi.protocol.CorbaMessageMediator;\n\
          37  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n38  import\
          \ org.omg.CORBA.Any;\n39  import org.omg.CORBA.Principal;\n40  import org.omg.CORBA.TypeCode;\n\
          41  \n42  /**\n43   * This is delegates to the real implementation.\n44\
          \   * \n45   * NOTE:\n46   * \n47   * Before using the stream for valuetype\
          \ unmarshaling, one must call performORBVersionSpecificInit().\n48   */"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Class
          name: CDRInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "29  \n30  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          31  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\n\
          32  import org.jboss.com.sun.corba.se.pept.protocol.MessageMediator;\n33\
          \  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n34  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          36  import org.jboss.com.sun.corba.se.spi.protocol.CorbaMessageMediator;\n\
          37  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n38  import\
          \ org.omg.CORBA.Any;\n39  import org.omg.CORBA.Principal;\n40  import org.omg.CORBA.TypeCode;\n\
          41  \n42  /**\n43   * This is delegates to the real implementation.\n44\
          \   * \n45   * NOTE:\n46   * \n47   * Before using the stream for valuetype\
          \ unmarshaling, one must call performORBVersionSpecificInit().\n48   */\n\
          49  @SuppressWarnings({\"deprecation\", \"rawtypes\"})"
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Class
          name: CDRInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "295      public final java.io.Serializable read_value()\n296  \
          \    {\n297          return impl.read_value();\n298      }\n299  \n300 \
          \     public final java.io.Serializable read_value(Class clz)\n301     \
          \ {\n302          return impl.read_value(clz);\n303      }\n304  \n305 \
          \     public final java.io.Serializable read_value(org.omg.CORBA.portable.BoxedValueHelper\
          \ factory)\n306      {\n307          return impl.read_value(factory);\n\
          308      }\n309  \n310      public final java.io.Serializable read_value(String\
          \ rep_id)\n311      {\n312          return impl.read_value(rep_id);\n313\
          \      }\n314  \n315      public final java.io.Serializable read_value(java.io.Serializable\
          \ value)"
        lineNumber: 305
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_value
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "30  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          31  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\n\
          32  import org.jboss.com.sun.corba.se.pept.protocol.MessageMediator;\n33\
          \  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n34  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          36  import org.jboss.com.sun.corba.se.spi.protocol.CorbaMessageMediator;\n\
          37  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n38  import\
          \ org.omg.CORBA.Any;\n39  import org.omg.CORBA.Principal;\n40  import org.omg.CORBA.TypeCode;\n\
          41  \n42  /**\n43   * This is delegates to the real implementation.\n44\
          \   * \n45   * NOTE:\n46   * \n47   * Before using the stream for valuetype\
          \ unmarshaling, one must call performORBVersionSpecificInit().\n48   */\n\
          49  @SuppressWarnings({\"deprecation\", \"rawtypes\"})\n50  public abstract\
          \ class CDRInputStream extends org.omg.CORBA_2_3.portable.InputStream"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Class
          name: CDRInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "344      public final Object read_Abstract()\n345      {\n346 \
          \         return impl.read_Abstract();\n347      }\n348  \n349      public\
          \ final java.io.Serializable read_Value()\n350      {\n351          return\
          \ impl.read_Value();\n352      }\n353  \n354      public final void read_any_array(org.omg.CORBA.AnySeqHolder\
          \ seq, int offset, int length)\n355      {\n356          impl.read_any_array(seq,\
          \ offset, length);\n357      }\n358  \n359      public final void read_boolean_array(org.omg.CORBA.BooleanSeqHolder\
          \ seq, int offset, int length)\n360      {\n361          impl.read_boolean_array(seq,\
          \ offset, length);\n362      }\n363  \n364      public final void read_char_array(org.omg.CORBA.CharSeqHolder\
          \ seq, int offset, int length)"
        lineNumber: 354
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_any_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "349      public final java.io.Serializable read_Value()\n350  \
          \    {\n351          return impl.read_Value();\n352      }\n353  \n354 \
          \     public final void read_any_array(org.omg.CORBA.AnySeqHolder seq, int\
          \ offset, int length)\n355      {\n356          impl.read_any_array(seq,\
          \ offset, length);\n357      }\n358  \n359      public final void read_boolean_array(org.omg.CORBA.BooleanSeqHolder\
          \ seq, int offset, int length)\n360      {\n361          impl.read_boolean_array(seq,\
          \ offset, length);\n362      }\n363  \n364      public final void read_char_array(org.omg.CORBA.CharSeqHolder\
          \ seq, int offset, int length)\n365      {\n366          impl.read_char_array(seq,\
          \ offset, length);\n367      }\n368  \n369      public final void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length)"
        lineNumber: 359
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_boolean_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "354      public final void read_any_array(org.omg.CORBA.AnySeqHolder\
          \ seq, int offset, int length)\n355      {\n356          impl.read_any_array(seq,\
          \ offset, length);\n357      }\n358  \n359      public final void read_boolean_array(org.omg.CORBA.BooleanSeqHolder\
          \ seq, int offset, int length)\n360      {\n361          impl.read_boolean_array(seq,\
          \ offset, length);\n362      }\n363  \n364      public final void read_char_array(org.omg.CORBA.CharSeqHolder\
          \ seq, int offset, int length)\n365      {\n366          impl.read_char_array(seq,\
          \ offset, length);\n367      }\n368  \n369      public final void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length)\n370      {\n371          impl.read_wchar_array(seq,\
          \ offset, length);\n372      }\n373  \n374      public final void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length)"
        lineNumber: 364
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_char_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "359      public final void read_boolean_array(org.omg.CORBA.BooleanSeqHolder\
          \ seq, int offset, int length)\n360      {\n361          impl.read_boolean_array(seq,\
          \ offset, length);\n362      }\n363  \n364      public final void read_char_array(org.omg.CORBA.CharSeqHolder\
          \ seq, int offset, int length)\n365      {\n366          impl.read_char_array(seq,\
          \ offset, length);\n367      }\n368  \n369      public final void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length)\n370      {\n371          impl.read_wchar_array(seq,\
          \ offset, length);\n372      }\n373  \n374      public final void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length)\n375      {\n376          impl.read_octet_array(seq,\
          \ offset, length);\n377      }\n378  \n379      public final void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length)"
        lineNumber: 369
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_wchar_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "364      public final void read_char_array(org.omg.CORBA.CharSeqHolder\
          \ seq, int offset, int length)\n365      {\n366          impl.read_char_array(seq,\
          \ offset, length);\n367      }\n368  \n369      public final void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length)\n370      {\n371          impl.read_wchar_array(seq,\
          \ offset, length);\n372      }\n373  \n374      public final void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length)\n375      {\n376          impl.read_octet_array(seq,\
          \ offset, length);\n377      }\n378  \n379      public final void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length)\n380      {\n381          impl.read_short_array(seq,\
          \ offset, length);\n382      }\n383  \n384      public final void read_ushort_array(org.omg.CORBA.UShortSeqHolder\
          \ seq, int offset, int length)"
        lineNumber: 374
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_octet_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "369      public final void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length)\n370      {\n371          impl.read_wchar_array(seq,\
          \ offset, length);\n372      }\n373  \n374      public final void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length)\n375      {\n376          impl.read_octet_array(seq,\
          \ offset, length);\n377      }\n378  \n379      public final void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length)\n380      {\n381          impl.read_short_array(seq,\
          \ offset, length);\n382      }\n383  \n384      public final void read_ushort_array(org.omg.CORBA.UShortSeqHolder\
          \ seq, int offset, int length)\n385      {\n386          impl.read_ushort_array(seq,\
          \ offset, length);\n387      }\n388  \n389      public final void read_long_array(org.omg.CORBA.LongSeqHolder\
          \ seq, int offset, int length)"
        lineNumber: 379
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_short_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "374      public final void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length)\n375      {\n376          impl.read_octet_array(seq,\
          \ offset, length);\n377      }\n378  \n379      public final void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length)\n380      {\n381          impl.read_short_array(seq,\
          \ offset, length);\n382      }\n383  \n384      public final void read_ushort_array(org.omg.CORBA.UShortSeqHolder\
          \ seq, int offset, int length)\n385      {\n386          impl.read_ushort_array(seq,\
          \ offset, length);\n387      }\n388  \n389      public final void read_long_array(org.omg.CORBA.LongSeqHolder\
          \ seq, int offset, int length)\n390      {\n391          impl.read_long_array(seq,\
          \ offset, length);\n392      }\n393  \n394      public final void read_ulong_array(org.omg.CORBA.ULongSeqHolder\
          \ seq, int offset, int length)"
        lineNumber: 384
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_ushort_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "379      public final void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length)\n380      {\n381          impl.read_short_array(seq,\
          \ offset, length);\n382      }\n383  \n384      public final void read_ushort_array(org.omg.CORBA.UShortSeqHolder\
          \ seq, int offset, int length)\n385      {\n386          impl.read_ushort_array(seq,\
          \ offset, length);\n387      }\n388  \n389      public final void read_long_array(org.omg.CORBA.LongSeqHolder\
          \ seq, int offset, int length)\n390      {\n391          impl.read_long_array(seq,\
          \ offset, length);\n392      }\n393  \n394      public final void read_ulong_array(org.omg.CORBA.ULongSeqHolder\
          \ seq, int offset, int length)\n395      {\n396          impl.read_ulong_array(seq,\
          \ offset, length);\n397      }\n398  \n399      public final void read_ulonglong_array(org.omg.CORBA.ULongLongSeqHolder\
          \ seq, int offset, int length)"
        lineNumber: 389
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Method
          name: read_long_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "40  import org.omg.CORBA.TypeCode;\n41  \n42  /**\n43   * This\
          \ is delegates to the real implementation.\n44   * \n45   * NOTE:\n46  \
          \ * \n47   * Before using the stream for valuetype unmarshaling, one must\
          \ call performORBVersionSpecificInit().\n48   */\n49  @SuppressWarnings({\"\
          deprecation\", \"rawtypes\"})\n50  public abstract class CDRInputStream\
          \ extends org.omg.CORBA_2_3.portable.InputStream\n51          implements\n\
          52              MarshalInputStream,\n53              org.omg.CORBA.DataInputStream,\n\
          54              org.omg.CORBA.portable.ValueInputStream\n55  {\n56     \
          \ protected CorbaMessageMediator messageMediator;\n57  \n58      private\
          \ CDRInputStreamBase impl;\n59  \n60      // We can move this out somewhere\
          \ later. For now, it serves its purpose to create a concrete CDR delegate\
          \ based on"
        lineNumber: 50
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Class
          name: CDRInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "43   * This is delegates to the real implementation.\n44   * \n\
          45   * NOTE:\n46   * \n47   * Before using the stream for valuetype unmarshaling,\
          \ one must call performORBVersionSpecificInit().\n48   */\n49  @SuppressWarnings({\"\
          deprecation\", \"rawtypes\"})\n50  public abstract class CDRInputStream\
          \ extends org.omg.CORBA_2_3.portable.InputStream\n51          implements\n\
          52              MarshalInputStream,\n53              org.omg.CORBA.DataInputStream,\n\
          54              org.omg.CORBA.portable.ValueInputStream\n55  {\n56     \
          \ protected CorbaMessageMediator messageMediator;\n57  \n58      private\
          \ CDRInputStreamBase impl;\n59  \n60      // We can move this out somewhere\
          \ later. For now, it serves its purpose to create a concrete CDR delegate\
          \ based on\n61      // the GIOP version.\n62      private static class InputStreamFactory\n\
          63      {"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Class
          name: CDRInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "44   * \n45   * NOTE:\n46   * \n47   * Before using the stream\
          \ for valuetype unmarshaling, one must call performORBVersionSpecificInit().\n\
          48   */\n49  @SuppressWarnings({\"deprecation\", \"rawtypes\"})\n50  public\
          \ abstract class CDRInputStream extends org.omg.CORBA_2_3.portable.InputStream\n\
          51          implements\n52              MarshalInputStream,\n53        \
          \      org.omg.CORBA.DataInputStream,\n54              org.omg.CORBA.portable.ValueInputStream\n\
          55  {\n56      protected CorbaMessageMediator messageMediator;\n57  \n58\
          \      private CDRInputStreamBase impl;\n59  \n60      // We can move this\
          \ out somewhere later. For now, it serves its purpose to create a concrete\
          \ CDR delegate based on\n61      // the GIOP version.\n62      private static\
          \ class InputStreamFactory\n63      {\n64  "
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream.java
          kind: Class
          name: CDRInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 174
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_ulonglong_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 176
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_longlong_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 178
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_float_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 180
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_double_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 241
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: " 97      public abstract void read_ulong_array(int[] value, int\
          \ offset, int length);\n 98  \n 99      public abstract void read_longlong_array(long[]\
          \ value, int offset, int length);\n100  \n101      public abstract void\
          \ read_ulonglong_array(long[] value, int offset, int length);\n102  \n103\
          \      public abstract void read_float_array(float[] value, int offset,\
          \ int length);\n104  \n105      public abstract void read_double_array(double[]\
          \ value, int offset, int length);\n106  \n107      public abstract org.omg.CORBA.Object\
          \ read_Object();\n108  \n109      public abstract TypeCode read_TypeCode();\n\
          110  \n111      public abstract Any read_any();\n112  \n113      public\
          \ abstract Principal read_Principal();\n114  \n115      public int read()\
          \ throws java.io.IOException\n116      {\n117          throw new org.omg.CORBA.NO_IMPLEMENT();"
        lineNumber: 107
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_Object
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "107      public abstract org.omg.CORBA.Object read_Object();\n\
          108  \n109      public abstract TypeCode read_TypeCode();\n110  \n111  \
          \    public abstract Any read_any();\n112  \n113      public abstract Principal\
          \ read_Principal();\n114  \n115      public int read() throws java.io.IOException\n\
          116      {\n117          throw new org.omg.CORBA.NO_IMPLEMENT();\n118  \
          \    }\n119  \n120      public abstract java.math.BigDecimal read_fixed();\n\
          121  \n122      public org.omg.CORBA.Context read_Context()\n123      {\n\
          124          throw new org.omg.CORBA.NO_IMPLEMENT();\n125      }\n126  \n\
          127      public abstract org.omg.CORBA.Object read_Object(Class<?> clz);"
        lineNumber: 117
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: 11   * This code is distributed in the hope that it will be useful,
          but WITHOUT
        lineNumber: 156
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_any_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "112  \n113      public abstract Principal read_Principal();\n114\
          \  \n115      public int read() throws java.io.IOException\n116      {\n\
          117          throw new org.omg.CORBA.NO_IMPLEMENT();\n118      }\n119  \n\
          120      public abstract java.math.BigDecimal read_fixed();\n121  \n122\
          \      public org.omg.CORBA.Context read_Context()\n123      {\n124    \
          \      throw new org.omg.CORBA.NO_IMPLEMENT();\n125      }\n126  \n127 \
          \     public abstract org.omg.CORBA.Object read_Object(Class<?> clz);\n\
          128  \n129      public abstract org.omg.CORBA.ORB orb();\n130  \n131   \
          \   // org.omg.CORBA_2_3.portable.InputStream\n132      public abstract\
          \ java.io.Serializable read_value();"
        lineNumber: 122
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_Context
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "114  \n115      public int read() throws java.io.IOException\n\
          116      {\n117          throw new org.omg.CORBA.NO_IMPLEMENT();\n118  \
          \    }\n119  \n120      public abstract java.math.BigDecimal read_fixed();\n\
          121  \n122      public org.omg.CORBA.Context read_Context()\n123      {\n\
          124          throw new org.omg.CORBA.NO_IMPLEMENT();\n125      }\n126  \n\
          127      public abstract org.omg.CORBA.Object read_Object(Class<?> clz);\n\
          128  \n129      public abstract org.omg.CORBA.ORB orb();\n130  \n131   \
          \   // org.omg.CORBA_2_3.portable.InputStream\n132      public abstract\
          \ java.io.Serializable read_value();\n133  \n134      public abstract java.io.Serializable\
          \ read_value(Class<?> clz);"
        lineNumber: 124
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_Context
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "117          throw new org.omg.CORBA.NO_IMPLEMENT();\n118     \
          \ }\n119  \n120      public abstract java.math.BigDecimal read_fixed();\n\
          121  \n122      public org.omg.CORBA.Context read_Context()\n123      {\n\
          124          throw new org.omg.CORBA.NO_IMPLEMENT();\n125      }\n126  \n\
          127      public abstract org.omg.CORBA.Object read_Object(Class<?> clz);\n\
          128  \n129      public abstract org.omg.CORBA.ORB orb();\n130  \n131   \
          \   // org.omg.CORBA_2_3.portable.InputStream\n132      public abstract\
          \ java.io.Serializable read_value();\n133  \n134      public abstract java.io.Serializable\
          \ read_value(Class<?> clz);\n135  \n136      public abstract java.io.Serializable\
          \ read_value(org.omg.CORBA.portable.BoxedValueHelper factory);\n137  "
        lineNumber: 127
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_Object
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "119  \n120      public abstract java.math.BigDecimal read_fixed();\n\
          121  \n122      public org.omg.CORBA.Context read_Context()\n123      {\n\
          124          throw new org.omg.CORBA.NO_IMPLEMENT();\n125      }\n126  \n\
          127      public abstract org.omg.CORBA.Object read_Object(Class<?> clz);\n\
          128  \n129      public abstract org.omg.CORBA.ORB orb();\n130  \n131   \
          \   // org.omg.CORBA_2_3.portable.InputStream\n132      public abstract\
          \ java.io.Serializable read_value();\n133  \n134      public abstract java.io.Serializable\
          \ read_value(Class<?> clz);\n135  \n136      public abstract java.io.Serializable\
          \ read_value(org.omg.CORBA.portable.BoxedValueHelper factory);\n137  \n\
          138      public abstract java.io.Serializable read_value(String rep_id);\n\
          139  "
        lineNumber: 129
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "126  \n127      public abstract org.omg.CORBA.Object read_Object(Class<?>\
          \ clz);\n128  \n129      public abstract org.omg.CORBA.ORB orb();\n130 \
          \ \n131      // org.omg.CORBA_2_3.portable.InputStream\n132      public\
          \ abstract java.io.Serializable read_value();\n133  \n134      public abstract\
          \ java.io.Serializable read_value(Class<?> clz);\n135  \n136      public\
          \ abstract java.io.Serializable read_value(org.omg.CORBA.portable.BoxedValueHelper\
          \ factory);\n137  \n138      public abstract java.io.Serializable read_value(String\
          \ rep_id);\n139  \n140      public abstract java.io.Serializable read_value(java.io.Serializable\
          \ value);\n141  \n142      public abstract Object read_abstract_interface();\n\
          143  \n144      public abstract Object read_abstract_interface(Class<?>\
          \ clz);\n145  \n146      // org.jboss.com.sun.corba.se.impl.encoding.MarshalInputStream"
        lineNumber: 136
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_value
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "148  \n149      public abstract int getPosition();\n150  \n151\
          \      // org.omg.CORBA.DataInputStream\n152      public abstract Object\
          \ read_Abstract();\n153  \n154      public abstract java.io.Serializable\
          \ read_Value();\n155  \n156      public abstract void read_any_array(org.omg.CORBA.AnySeqHolder\
          \ seq, int offset, int length);\n157  \n158      public abstract void read_boolean_array(org.omg.CORBA.BooleanSeqHolder\
          \ seq, int offset, int length);\n159  \n160      public abstract void read_char_array(org.omg.CORBA.CharSeqHolder\
          \ seq, int offset, int length);\n161  \n162      public abstract void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length);\n163  \n164      public abstract void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length);\n165  \n166      public abstract void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length);\n167  \n168      public abstract void read_ushort_array(org.omg.CORBA.UShortSeqHolder\
          \ seq, int offset, int length);"
        lineNumber: 158
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_boolean_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "150  \n151      // org.omg.CORBA.DataInputStream\n152      public\
          \ abstract Object read_Abstract();\n153  \n154      public abstract java.io.Serializable\
          \ read_Value();\n155  \n156      public abstract void read_any_array(org.omg.CORBA.AnySeqHolder\
          \ seq, int offset, int length);\n157  \n158      public abstract void read_boolean_array(org.omg.CORBA.BooleanSeqHolder\
          \ seq, int offset, int length);\n159  \n160      public abstract void read_char_array(org.omg.CORBA.CharSeqHolder\
          \ seq, int offset, int length);\n161  \n162      public abstract void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length);\n163  \n164      public abstract void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length);\n165  \n166      public abstract void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length);\n167  \n168      public abstract void read_ushort_array(org.omg.CORBA.UShortSeqHolder\
          \ seq, int offset, int length);\n169  \n170      public abstract void read_long_array(org.omg.CORBA.LongSeqHolder\
          \ seq, int offset, int length);"
        lineNumber: 160
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_char_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "152      public abstract Object read_Abstract();\n153  \n154  \
          \    public abstract java.io.Serializable read_Value();\n155  \n156    \
          \  public abstract void read_any_array(org.omg.CORBA.AnySeqHolder seq, int\
          \ offset, int length);\n157  \n158      public abstract void read_boolean_array(org.omg.CORBA.BooleanSeqHolder\
          \ seq, int offset, int length);\n159  \n160      public abstract void read_char_array(org.omg.CORBA.CharSeqHolder\
          \ seq, int offset, int length);\n161  \n162      public abstract void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length);\n163  \n164      public abstract void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length);\n165  \n166      public abstract void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length);\n167  \n168      public abstract void read_ushort_array(org.omg.CORBA.UShortSeqHolder\
          \ seq, int offset, int length);\n169  \n170      public abstract void read_long_array(org.omg.CORBA.LongSeqHolder\
          \ seq, int offset, int length);\n171  \n172      public abstract void read_ulong_array(org.omg.CORBA.ULongSeqHolder\
          \ seq, int offset, int length);"
        lineNumber: 162
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_wchar_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "154      public abstract java.io.Serializable read_Value();\n155\
          \  \n156      public abstract void read_any_array(org.omg.CORBA.AnySeqHolder\
          \ seq, int offset, int length);\n157  \n158      public abstract void read_boolean_array(org.omg.CORBA.BooleanSeqHolder\
          \ seq, int offset, int length);\n159  \n160      public abstract void read_char_array(org.omg.CORBA.CharSeqHolder\
          \ seq, int offset, int length);\n161  \n162      public abstract void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length);\n163  \n164      public abstract void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length);\n165  \n166      public abstract void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length);\n167  \n168      public abstract void read_ushort_array(org.omg.CORBA.UShortSeqHolder\
          \ seq, int offset, int length);\n169  \n170      public abstract void read_long_array(org.omg.CORBA.LongSeqHolder\
          \ seq, int offset, int length);\n171  \n172      public abstract void read_ulong_array(org.omg.CORBA.ULongSeqHolder\
          \ seq, int offset, int length);\n173  \n174      public abstract void read_ulonglong_array(org.omg.CORBA.ULongLongSeqHolder\
          \ seq, int offset, int length);"
        lineNumber: 164
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_octet_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "156      public abstract void read_any_array(org.omg.CORBA.AnySeqHolder\
          \ seq, int offset, int length);\n157  \n158      public abstract void read_boolean_array(org.omg.CORBA.BooleanSeqHolder\
          \ seq, int offset, int length);\n159  \n160      public abstract void read_char_array(org.omg.CORBA.CharSeqHolder\
          \ seq, int offset, int length);\n161  \n162      public abstract void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length);\n163  \n164      public abstract void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length);\n165  \n166      public abstract void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length);\n167  \n168      public abstract void read_ushort_array(org.omg.CORBA.UShortSeqHolder\
          \ seq, int offset, int length);\n169  \n170      public abstract void read_long_array(org.omg.CORBA.LongSeqHolder\
          \ seq, int offset, int length);\n171  \n172      public abstract void read_ulong_array(org.omg.CORBA.ULongSeqHolder\
          \ seq, int offset, int length);\n173  \n174      public abstract void read_ulonglong_array(org.omg.CORBA.ULongLongSeqHolder\
          \ seq, int offset, int length);\n175  \n176      public abstract void read_longlong_array(org.omg.CORBA.LongLongSeqHolder\
          \ seq, int offset, int length);"
        lineNumber: 166
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_short_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "158      public abstract void read_boolean_array(org.omg.CORBA.BooleanSeqHolder\
          \ seq, int offset, int length);\n159  \n160      public abstract void read_char_array(org.omg.CORBA.CharSeqHolder\
          \ seq, int offset, int length);\n161  \n162      public abstract void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length);\n163  \n164      public abstract void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length);\n165  \n166      public abstract void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length);\n167  \n168      public abstract void read_ushort_array(org.omg.CORBA.UShortSeqHolder\
          \ seq, int offset, int length);\n169  \n170      public abstract void read_long_array(org.omg.CORBA.LongSeqHolder\
          \ seq, int offset, int length);\n171  \n172      public abstract void read_ulong_array(org.omg.CORBA.ULongSeqHolder\
          \ seq, int offset, int length);\n173  \n174      public abstract void read_ulonglong_array(org.omg.CORBA.ULongLongSeqHolder\
          \ seq, int offset, int length);\n175  \n176      public abstract void read_longlong_array(org.omg.CORBA.LongLongSeqHolder\
          \ seq, int offset, int length);\n177  \n178      public abstract void read_float_array(org.omg.CORBA.FloatSeqHolder\
          \ seq, int offset, int length);"
        lineNumber: 168
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_ushort_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "160      public abstract void read_char_array(org.omg.CORBA.CharSeqHolder\
          \ seq, int offset, int length);\n161  \n162      public abstract void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length);\n163  \n164      public abstract void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length);\n165  \n166      public abstract void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length);\n167  \n168      public abstract void read_ushort_array(org.omg.CORBA.UShortSeqHolder\
          \ seq, int offset, int length);\n169  \n170      public abstract void read_long_array(org.omg.CORBA.LongSeqHolder\
          \ seq, int offset, int length);\n171  \n172      public abstract void read_ulong_array(org.omg.CORBA.ULongSeqHolder\
          \ seq, int offset, int length);\n173  \n174      public abstract void read_ulonglong_array(org.omg.CORBA.ULongLongSeqHolder\
          \ seq, int offset, int length);\n175  \n176      public abstract void read_longlong_array(org.omg.CORBA.LongLongSeqHolder\
          \ seq, int offset, int length);\n177  \n178      public abstract void read_float_array(org.omg.CORBA.FloatSeqHolder\
          \ seq, int offset, int length);\n179  \n180      public abstract void read_double_array(org.omg.CORBA.DoubleSeqHolder\
          \ seq, int offset, int length);"
        lineNumber: 170
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_long_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "162      public abstract void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length);\n163  \n164      public abstract void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length);\n165  \n166      public abstract void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length);\n167  \n168      public abstract void read_ushort_array(org.omg.CORBA.UShortSeqHolder\
          \ seq, int offset, int length);\n169  \n170      public abstract void read_long_array(org.omg.CORBA.LongSeqHolder\
          \ seq, int offset, int length);\n171  \n172      public abstract void read_ulong_array(org.omg.CORBA.ULongSeqHolder\
          \ seq, int offset, int length);\n173  \n174      public abstract void read_ulonglong_array(org.omg.CORBA.ULongLongSeqHolder\
          \ seq, int offset, int length);\n175  \n176      public abstract void read_longlong_array(org.omg.CORBA.LongLongSeqHolder\
          \ seq, int offset, int length);\n177  \n178      public abstract void read_float_array(org.omg.CORBA.FloatSeqHolder\
          \ seq, int offset, int length);\n179  \n180      public abstract void read_double_array(org.omg.CORBA.DoubleSeqHolder\
          \ seq, int offset, int length);\n181  \n182      // org.omg.CORBA.portable.ValueBase"
        lineNumber: 172
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: read_ulong_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "21   * Please contact Oracle, 500 Oracle Parkway, Redwood Shores,\
          \ CA 94065 USA\n22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  package org.jboss.com.sun.corba.se.impl.encoding;\n\
          26  \n27  import java.nio.ByteBuffer;\n28  \n29  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          30  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n31  import\
          \ org.omg.CORBA.Any;\n32  import org.omg.CORBA.Principal;\n33  import org.omg.CORBA.TypeCode;\n\
          34  \n35  /**\n36   * Describes CDRInputStream delegates and provides some\
          \ implementation. Non-default constructors are avoided in the\n37   * delegation\
          \ to separate instantiation from initialization, so we use init methods.\n\
          38   */\n39  @SuppressWarnings(\"deprecation\")\n40  abstract class CDRInputStreamBase\
          \ extends java.io.InputStream\n41  {"
        lineNumber: 31
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Class
          name: CDRInputStreamBase
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  package org.jboss.com.sun.corba.se.impl.encoding;\n\
          26  \n27  import java.nio.ByteBuffer;\n28  \n29  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          30  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n31  import\
          \ org.omg.CORBA.Any;\n32  import org.omg.CORBA.Principal;\n33  import org.omg.CORBA.TypeCode;\n\
          34  \n35  /**\n36   * Describes CDRInputStream delegates and provides some\
          \ implementation. Non-default constructors are avoided in the\n37   * delegation\
          \ to separate instantiation from initialization, so we use init methods.\n\
          38   */\n39  @SuppressWarnings(\"deprecation\")\n40  abstract class CDRInputStreamBase\
          \ extends java.io.InputStream\n41  {\n42      protected CDRInputStream parent;"
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Class
          name: CDRInputStreamBase
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "23   * questions.\n24   */\n25  package org.jboss.com.sun.corba.se.impl.encoding;\n\
          26  \n27  import java.nio.ByteBuffer;\n28  \n29  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          30  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n31  import\
          \ org.omg.CORBA.Any;\n32  import org.omg.CORBA.Principal;\n33  import org.omg.CORBA.TypeCode;\n\
          34  \n35  /**\n36   * Describes CDRInputStream delegates and provides some\
          \ implementation. Non-default constructors are avoided in the\n37   * delegation\
          \ to separate instantiation from initialization, so we use init methods.\n\
          38   */\n39  @SuppressWarnings(\"deprecation\")\n40  abstract class CDRInputStreamBase\
          \ extends java.io.InputStream\n41  {\n42      protected CDRInputStream parent;\n\
          43  "
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Class
          name: CDRInputStreamBase
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "39  @SuppressWarnings(\"deprecation\")\n40  abstract class CDRInputStreamBase\
          \ extends java.io.InputStream\n41  {\n42      protected CDRInputStream parent;\n\
          43  \n44      public void setParent(CDRInputStream parent)\n45      {\n\
          46          this.parent = parent;\n47      }\n48  \n49      public abstract\
          \ void init(org.omg.CORBA.ORB orb, ByteBuffer byteBuffer, int size, boolean\
          \ littleEndian,\n50              BufferManagerRead bufferManager);\n51 \
          \ \n52      // org.omg.CORBA.portable.InputStream\n53      public abstract\
          \ boolean read_boolean();\n54  \n55      public abstract char read_char();\n\
          56  \n57      public abstract char read_wchar();\n58  \n59      public abstract\
          \ byte read_octet();"
        lineNumber: 49
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStreamBase.java
          kind: Method
          name: init
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 797
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: internalIORToObject
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 810
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: internalIORToObject
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 812
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: internalIORToObject
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 814
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: internalIORToObject
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 822
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: internalIORToObject
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 997
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_value
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1137
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: isCustomType
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1286
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: readIDLValueWithHelper
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1354
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: readBoxedIDLEntity
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1632
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1718
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_any_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1833
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_any_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1838
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_boolean_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1843
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_char_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1848
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_wchar_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1853
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_octet_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1858
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_short_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1863
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_ushort_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1868
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_long_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1873
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_ulong_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1878
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_ulonglong_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1883
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_longlong_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1888
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_float_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1893
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_double_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 2092
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: 11   * This code is distributed in the hope that it will be useful,
          but WITHOUT
        lineNumber: 87
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Class
          name: CDRInputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: 11   * This code is distributed in the hope that it will be useful,
          but WITHOUT
        lineNumber: 91
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Class
          name: CDRInputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "192          ((CDRInputStream_1_0) result).bbwi.position(this.bbwi.position());\n\
          193          // To ensure we keep bbwi.byteBuffer.limit in sync with bbwi.buflen.\n\
          194          ((CDRInputStream_1_0) result).bbwi.byteBuffer.limit(this.bbwi.buflen);\n\
          195  \n196          return result;\n197      }\n198  \n199      /**\n200\
          \       * NOTE: size passed to init means buffer size\n201       */\n202\
          \      public void init(org.omg.CORBA.ORB orb, ByteBuffer byteBuffer, int\
          \ size, boolean littleEndian,\n203              BufferManagerRead bufferManager)\n\
          204      {\n205          this.orb = (ORB) orb;\n206          this.wrapper\
          \ = ORBUtilSystemException.get((ORB) orb, CORBALogDomains.RPC_ENCODING);\n\
          207          this.omgWrapper = OMGSystemException.get((ORB) orb, CORBALogDomains.RPC_ENCODING);\n\
          208          this.littleEndian = littleEndian;\n209          this.bufferManagerRead\
          \ = bufferManager;\n210          this.bbwi = new ByteBufferWithInfo(orb,\
          \ byteBuffer, 0);\n211          this.bbwi.buflen = size;\n212          this.bbwi.byteBuffer.limit(bbwi.buflen);"
        lineNumber: 202
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: init
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: '66  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;

          67  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          68  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          69  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          70  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationDefaults;

          71  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;

          72  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;

          73  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          74  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;

          75  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;

          76  import org.omg.CORBA.Any;

          77  import org.omg.CORBA.CompletionStatus;

          78  import org.omg.CORBA.CustomMarshal;

          79  import org.omg.CORBA.MARSHAL;

          80  import org.omg.CORBA.Principal;

          81  import org.omg.CORBA.SystemException;

          82  import org.omg.CORBA.TCKind;

          83  import org.omg.CORBA.TypeCode;

          84  import org.omg.CORBA.TypeCodePackage.BadKind;

          85  import org.omg.CORBA.portable.BoxedValueHelper;

          86  import org.omg.CORBA.portable.CustomValue;'
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Class
          name: CDRInputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: '67  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          68  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          69  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          70  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationDefaults;

          71  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;

          72  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;

          73  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          74  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;

          75  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;

          76  import org.omg.CORBA.Any;

          77  import org.omg.CORBA.CompletionStatus;

          78  import org.omg.CORBA.CustomMarshal;

          79  import org.omg.CORBA.MARSHAL;

          80  import org.omg.CORBA.Principal;

          81  import org.omg.CORBA.SystemException;

          82  import org.omg.CORBA.TCKind;

          83  import org.omg.CORBA.TypeCode;

          84  import org.omg.CORBA.TypeCodePackage.BadKind;

          85  import org.omg.CORBA.portable.BoxedValueHelper;

          86  import org.omg.CORBA.portable.CustomValue;

          87  import org.omg.CORBA.portable.IDLEntity;'
        lineNumber: 77
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Class
          name: CDRInputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: '68  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          69  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          70  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationDefaults;

          71  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;

          72  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;

          73  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          74  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;

          75  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;

          76  import org.omg.CORBA.Any;

          77  import org.omg.CORBA.CompletionStatus;

          78  import org.omg.CORBA.CustomMarshal;

          79  import org.omg.CORBA.MARSHAL;

          80  import org.omg.CORBA.Principal;

          81  import org.omg.CORBA.SystemException;

          82  import org.omg.CORBA.TCKind;

          83  import org.omg.CORBA.TypeCode;

          84  import org.omg.CORBA.TypeCodePackage.BadKind;

          85  import org.omg.CORBA.portable.BoxedValueHelper;

          86  import org.omg.CORBA.portable.CustomValue;

          87  import org.omg.CORBA.portable.IDLEntity;

          88  import org.omg.CORBA.portable.IndirectionException;'
        lineNumber: 78
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Class
          name: CDRInputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: '69  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          70  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationDefaults;

          71  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;

          72  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;

          73  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          74  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;

          75  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;

          76  import org.omg.CORBA.Any;

          77  import org.omg.CORBA.CompletionStatus;

          78  import org.omg.CORBA.CustomMarshal;

          79  import org.omg.CORBA.MARSHAL;

          80  import org.omg.CORBA.Principal;

          81  import org.omg.CORBA.SystemException;

          82  import org.omg.CORBA.TCKind;

          83  import org.omg.CORBA.TypeCode;

          84  import org.omg.CORBA.TypeCodePackage.BadKind;

          85  import org.omg.CORBA.portable.BoxedValueHelper;

          86  import org.omg.CORBA.portable.CustomValue;

          87  import org.omg.CORBA.portable.IDLEntity;

          88  import org.omg.CORBA.portable.IndirectionException;

          89  import org.omg.CORBA.portable.StreamableValue;'
        lineNumber: 79
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Class
          name: CDRInputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: '70  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationDefaults;

          71  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;

          72  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;

          73  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          74  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;

          75  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;

          76  import org.omg.CORBA.Any;

          77  import org.omg.CORBA.CompletionStatus;

          78  import org.omg.CORBA.CustomMarshal;

          79  import org.omg.CORBA.MARSHAL;

          80  import org.omg.CORBA.Principal;

          81  import org.omg.CORBA.SystemException;

          82  import org.omg.CORBA.TCKind;

          83  import org.omg.CORBA.TypeCode;

          84  import org.omg.CORBA.TypeCodePackage.BadKind;

          85  import org.omg.CORBA.portable.BoxedValueHelper;

          86  import org.omg.CORBA.portable.CustomValue;

          87  import org.omg.CORBA.portable.IDLEntity;

          88  import org.omg.CORBA.portable.IndirectionException;

          89  import org.omg.CORBA.portable.StreamableValue;

          90  import org.omg.CORBA.portable.ValueBase;'
        lineNumber: 80
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Class
          name: CDRInputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: '71  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;

          72  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;

          73  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          74  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;

          75  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;

          76  import org.omg.CORBA.Any;

          77  import org.omg.CORBA.CompletionStatus;

          78  import org.omg.CORBA.CustomMarshal;

          79  import org.omg.CORBA.MARSHAL;

          80  import org.omg.CORBA.Principal;

          81  import org.omg.CORBA.SystemException;

          82  import org.omg.CORBA.TCKind;

          83  import org.omg.CORBA.TypeCode;

          84  import org.omg.CORBA.TypeCodePackage.BadKind;

          85  import org.omg.CORBA.portable.BoxedValueHelper;

          86  import org.omg.CORBA.portable.CustomValue;

          87  import org.omg.CORBA.portable.IDLEntity;

          88  import org.omg.CORBA.portable.IndirectionException;

          89  import org.omg.CORBA.portable.StreamableValue;

          90  import org.omg.CORBA.portable.ValueBase;

          91  import org.omg.CORBA.portable.ValueFactory;'
        lineNumber: 81
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Class
          name: CDRInputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "711                  throw ex;\n712              // We can be sure\
          \ that the whole typecode encapsulation has been read off.\n713        \
          \      dprintThrowable(ex);\n714          }\n715          // read off the\
          \ value of the any\n716          any.read_value(parent, tc);\n717  \n718\
          \          return any;\n719      }\n720  \n721      public org.omg.CORBA.Object\
          \ read_Object()\n722      {\n723          return read_Object(null);\n724\
          \      }\n725  \n726      // ------------ RMI related methods --------------------------\n\
          727  \n728      // IDL to Java ptc-00-01-08 1.21.4.1\n729      //\n730 \
          \     // The clz argument to read_Object can be either a stub Class or the\n\
          731      // \"Class object for the RMI/IDL interface type that is statically\
          \ expected.\" This functions as follows:"
        lineNumber: 721
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_Object
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: '72  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;

          73  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          74  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;

          75  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;

          76  import org.omg.CORBA.Any;

          77  import org.omg.CORBA.CompletionStatus;

          78  import org.omg.CORBA.CustomMarshal;

          79  import org.omg.CORBA.MARSHAL;

          80  import org.omg.CORBA.Principal;

          81  import org.omg.CORBA.SystemException;

          82  import org.omg.CORBA.TCKind;

          83  import org.omg.CORBA.TypeCode;

          84  import org.omg.CORBA.TypeCodePackage.BadKind;

          85  import org.omg.CORBA.portable.BoxedValueHelper;

          86  import org.omg.CORBA.portable.CustomValue;

          87  import org.omg.CORBA.portable.IDLEntity;

          88  import org.omg.CORBA.portable.IndirectionException;

          89  import org.omg.CORBA.portable.StreamableValue;

          90  import org.omg.CORBA.portable.ValueBase;

          91  import org.omg.CORBA.portable.ValueFactory;

          92  '
        lineNumber: 82
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Class
          name: CDRInputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "726      // ------------ RMI related methods --------------------------\n\
          727  \n728      // IDL to Java ptc-00-01-08 1.21.4.1\n729      //\n730 \
          \     // The clz argument to read_Object can be either a stub Class or the\n\
          731      // \"Class object for the RMI/IDL interface type that is statically\
          \ expected.\" This functions as follows:\n732      // 1. If clz==null, just\
          \ use the repository ID from the stub\n733      // 2. If clz is a stub class,\
          \ just use it as a static factory. clz is a stub class if StubAdapter.isStubClass(clz).\n\
          734      // In addition, clz is a IDL stub class if IDLEntity.class.isAssignableFrom(\
          \ clz ).\n735      // 3. If clz is an interface, use it to create the appropriate\
          \ stub factory.\n736      public org.omg.CORBA.Object read_Object(Class<?>\
          \ clz)\n737      {\n738          // In any case, we must first read the\
          \ IOR.\n739          IOR ior = IORFactories.makeIOR(parent);\n740      \
          \    if (ior.isNil())\n741              return null;\n742  \n743       \
          \   PresentationManager.StubFactoryFactory sff = ORB.getStubFactoryFactory();\n\
          744          String codeBase = ior.getProfile().getCodebase();\n745    \
          \      PresentationManager.StubFactory stubFactory = null;\n746  "
        lineNumber: 736
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: read_Object
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "73  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;\n\
          74  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;\n75  import\
          \ org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n76  import org.omg.CORBA.Any;\n\
          77  import org.omg.CORBA.CompletionStatus;\n78  import org.omg.CORBA.CustomMarshal;\n\
          79  import org.omg.CORBA.MARSHAL;\n80  import org.omg.CORBA.Principal;\n\
          81  import org.omg.CORBA.SystemException;\n82  import org.omg.CORBA.TCKind;\n\
          83  import org.omg.CORBA.TypeCode;\n84  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          85  import org.omg.CORBA.portable.BoxedValueHelper;\n86  import org.omg.CORBA.portable.CustomValue;\n\
          87  import org.omg.CORBA.portable.IDLEntity;\n88  import org.omg.CORBA.portable.IndirectionException;\n\
          89  import org.omg.CORBA.portable.StreamableValue;\n90  import org.omg.CORBA.portable.ValueBase;\n\
          91  import org.omg.CORBA.portable.ValueFactory;\n92  \n93  @SuppressWarnings(\"\
          deprecation\")"
        lineNumber: 83
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Class
          name: CDRInputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "74  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;\n\
          75  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n76  import\
          \ org.omg.CORBA.Any;\n77  import org.omg.CORBA.CompletionStatus;\n78  import\
          \ org.omg.CORBA.CustomMarshal;\n79  import org.omg.CORBA.MARSHAL;\n80  import\
          \ org.omg.CORBA.Principal;\n81  import org.omg.CORBA.SystemException;\n\
          82  import org.omg.CORBA.TCKind;\n83  import org.omg.CORBA.TypeCode;\n84\
          \  import org.omg.CORBA.TypeCodePackage.BadKind;\n85  import org.omg.CORBA.portable.BoxedValueHelper;\n\
          86  import org.omg.CORBA.portable.CustomValue;\n87  import org.omg.CORBA.portable.IDLEntity;\n\
          88  import org.omg.CORBA.portable.IndirectionException;\n89  import org.omg.CORBA.portable.StreamableValue;\n\
          90  import org.omg.CORBA.portable.ValueBase;\n91  import org.omg.CORBA.portable.ValueFactory;\n\
          92  \n93  @SuppressWarnings(\"deprecation\")\n94  public class CDRInputStream_1_0\
          \ extends CDRInputStreamBase implements RestorableInputStream"
        lineNumber: 84
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Class
          name: CDRInputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "75  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n\
          76  import org.omg.CORBA.Any;\n77  import org.omg.CORBA.CompletionStatus;\n\
          78  import org.omg.CORBA.CustomMarshal;\n79  import org.omg.CORBA.MARSHAL;\n\
          80  import org.omg.CORBA.Principal;\n81  import org.omg.CORBA.SystemException;\n\
          82  import org.omg.CORBA.TCKind;\n83  import org.omg.CORBA.TypeCode;\n84\
          \  import org.omg.CORBA.TypeCodePackage.BadKind;\n85  import org.omg.CORBA.portable.BoxedValueHelper;\n\
          86  import org.omg.CORBA.portable.CustomValue;\n87  import org.omg.CORBA.portable.IDLEntity;\n\
          88  import org.omg.CORBA.portable.IndirectionException;\n89  import org.omg.CORBA.portable.StreamableValue;\n\
          90  import org.omg.CORBA.portable.ValueBase;\n91  import org.omg.CORBA.portable.ValueFactory;\n\
          92  \n93  @SuppressWarnings(\"deprecation\")\n94  public class CDRInputStream_1_0\
          \ extends CDRInputStreamBase implements RestorableInputStream\n95  {"
        lineNumber: 85
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Class
          name: CDRInputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "76  import org.omg.CORBA.Any;\n77  import org.omg.CORBA.CompletionStatus;\n\
          78  import org.omg.CORBA.CustomMarshal;\n79  import org.omg.CORBA.MARSHAL;\n\
          80  import org.omg.CORBA.Principal;\n81  import org.omg.CORBA.SystemException;\n\
          82  import org.omg.CORBA.TCKind;\n83  import org.omg.CORBA.TypeCode;\n84\
          \  import org.omg.CORBA.TypeCodePackage.BadKind;\n85  import org.omg.CORBA.portable.BoxedValueHelper;\n\
          86  import org.omg.CORBA.portable.CustomValue;\n87  import org.omg.CORBA.portable.IDLEntity;\n\
          88  import org.omg.CORBA.portable.IndirectionException;\n89  import org.omg.CORBA.portable.StreamableValue;\n\
          90  import org.omg.CORBA.portable.ValueBase;\n91  import org.omg.CORBA.portable.ValueFactory;\n\
          92  \n93  @SuppressWarnings(\"deprecation\")\n94  public class CDRInputStream_1_0\
          \ extends CDRInputStreamBase implements RestorableInputStream\n95  {\n96\
          \      private static final String kReadMethod = \"read\";"
        lineNumber: 86
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Class
          name: CDRInputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "777              stubFactory = sff.createStubFactory(clz.getName(),\
          \ isIDL, codeBase, clz, clz.getClassLoader());\n778          }\n779  \n\
          780          return internalIORToObject(ior, stubFactory, orb);\n781   \
          \   }\n782  \n783      /*\n784       * This is used as a general utility\
          \ (e.g., the PortableInterceptor implementation uses it. If stubFactory\
          \ is null,\n785       * the ior's IIOPProfile must support getServant.\n\
          786       */\n787      public static org.omg.CORBA.Object internalIORToObject(IOR\
          \ ior, PresentationManager.StubFactory stubFactory, ORB orb)\n788      {\n\
          789          ORBUtilSystemException wrapper = ORBUtilSystemException.get(orb,\
          \ CORBALogDomains.RPC_ENCODING);\n790  \n791          Object servant = ior.getProfile().getServant();\n\
          792          if (servant != null)\n793          {\n794              if (servant\
          \ instanceof Tie)\n795              {\n796                  String codebase\
          \ = ior.getProfile().getCodebase();\n797                  org.omg.CORBA.Object\
          \ objref = (org.omg.CORBA.Object) Utility.loadStub((Tie) servant, stubFactory,"
        lineNumber: 787
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Method
          name: internalIORToObject
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "78  import org.omg.CORBA.CustomMarshal;\n79  import org.omg.CORBA.MARSHAL;\n\
          80  import org.omg.CORBA.Principal;\n81  import org.omg.CORBA.SystemException;\n\
          82  import org.omg.CORBA.TCKind;\n83  import org.omg.CORBA.TypeCode;\n84\
          \  import org.omg.CORBA.TypeCodePackage.BadKind;\n85  import org.omg.CORBA.portable.BoxedValueHelper;\n\
          86  import org.omg.CORBA.portable.CustomValue;\n87  import org.omg.CORBA.portable.IDLEntity;\n\
          88  import org.omg.CORBA.portable.IndirectionException;\n89  import org.omg.CORBA.portable.StreamableValue;\n\
          90  import org.omg.CORBA.portable.ValueBase;\n91  import org.omg.CORBA.portable.ValueFactory;\n\
          92  \n93  @SuppressWarnings(\"deprecation\")\n94  public class CDRInputStream_1_0\
          \ extends CDRInputStreamBase implements RestorableInputStream\n95  {\n96\
          \      private static final String kReadMethod = \"read\";\n97  \n98   \
          \   private static final int maxBlockLength = 0x7fffff00;"
        lineNumber: 88
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Class
          name: CDRInputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "79  import org.omg.CORBA.MARSHAL;\n80  import org.omg.CORBA.Principal;\n\
          81  import org.omg.CORBA.SystemException;\n82  import org.omg.CORBA.TCKind;\n\
          83  import org.omg.CORBA.TypeCode;\n84  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          85  import org.omg.CORBA.portable.BoxedValueHelper;\n86  import org.omg.CORBA.portable.CustomValue;\n\
          87  import org.omg.CORBA.portable.IDLEntity;\n88  import org.omg.CORBA.portable.IndirectionException;\n\
          89  import org.omg.CORBA.portable.StreamableValue;\n90  import org.omg.CORBA.portable.ValueBase;\n\
          91  import org.omg.CORBA.portable.ValueFactory;\n92  \n93  @SuppressWarnings(\"\
          deprecation\")\n94  public class CDRInputStream_1_0 extends CDRInputStreamBase\
          \ implements RestorableInputStream\n95  {\n96      private static final\
          \ String kReadMethod = \"read\";\n97  \n98      private static final int\
          \ maxBlockLength = 0x7fffff00;\n99  "
        lineNumber: 89
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Class
          name: CDRInputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "80  import org.omg.CORBA.Principal;\n81  import org.omg.CORBA.SystemException;\n\
          82  import org.omg.CORBA.TCKind;\n83  import org.omg.CORBA.TypeCode;\n84\
          \  import org.omg.CORBA.TypeCodePackage.BadKind;\n85  import org.omg.CORBA.portable.BoxedValueHelper;\n\
          86  import org.omg.CORBA.portable.CustomValue;\n87  import org.omg.CORBA.portable.IDLEntity;\n\
          88  import org.omg.CORBA.portable.IndirectionException;\n89  import org.omg.CORBA.portable.StreamableValue;\n\
          90  import org.omg.CORBA.portable.ValueBase;\n91  import org.omg.CORBA.portable.ValueFactory;\n\
          92  \n93  @SuppressWarnings(\"deprecation\")\n94  public class CDRInputStream_1_0\
          \ extends CDRInputStreamBase implements RestorableInputStream\n95  {\n96\
          \      private static final String kReadMethod = \"read\";\n97  \n98   \
          \   private static final int maxBlockLength = 0x7fffff00;\n99  \n100   \
          \   protected BufferManagerRead bufferManagerRead;"
        lineNumber: 90
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDRInputStream_1_0.java
          kind: Class
          name: CDRInputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "103  \n104      public CDROutputStream(ORB orb, GIOPVersion version,\
          \ byte encodingVersion, boolean littleEndian,\n105              BufferManagerWrite\
          \ bufferManager, byte streamFormatVersion)\n106      {\n107          this(orb,\
          \ version, encodingVersion, littleEndian, bufferManager, streamFormatVersion,\
          \ true);\n108      }\n109  \n110      // org.omg.CORBA.portable.OutputStream\n\
          111  \n112      // Provided by IIOPOutputStream and EncapsOutputStream\n\
          113      public abstract org.omg.CORBA.portable.InputStream create_input_stream();\n\
          114  \n115      public final void write_boolean(boolean value)\n116    \
          \  {\n117          impl.write_boolean(value);\n118      }\n119  \n120  \
          \    public final void write_char(char value)\n121      {\n122         \
          \ impl.write_char(value);\n123      }"
        lineNumber: 113
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
          kind: Method
          name: create_input_stream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "240      public final void write_float_array(float[] value, int\
          \ offset, int length)\n241      {\n242          impl.write_float_array(value,\
          \ offset, length);\n243      }\n244  \n245      public final void write_double_array(double[]\
          \ value, int offset, int length)\n246      {\n247          impl.write_double_array(value,\
          \ offset, length);\n248      }\n249  \n250      public final void write_Object(org.omg.CORBA.Object\
          \ value)\n251      {\n252          impl.write_Object(value);\n253      }\n\
          254  \n255      public final void write_TypeCode(TypeCode value)\n256  \
          \    {\n257          impl.write_TypeCode(value);\n258      }\n259  \n260\
          \      public final void write_any(Any value)"
        lineNumber: 250
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
          kind: Method
          name: write_Object
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "26  import java.io.IOException;\n27  import java.nio.ByteBuffer;\n\
          28  \n29  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          30  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\n\
          31  import org.jboss.com.sun.corba.se.pept.protocol.MessageMediator;\n32\
          \  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n33  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n34  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          35  import org.jboss.com.sun.corba.se.spi.protocol.CorbaMessageMediator;\n\
          36  import org.omg.CORBA.Any;\n37  import org.omg.CORBA.Principal;\n38 \
          \ import org.omg.CORBA.TypeCode;\n39  \n40  /**\n41   * This is delegates\
          \ to the real implementation.\n42   */\n43  @SuppressWarnings(\"deprecation\"\
          )\n44  public abstract class CDROutputStream extends org.omg.CORBA_2_3.portable.OutputStream\n\
          45          implements\n46              MarshalOutputStream,"
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
          kind: Class
          name: CDROutputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "27  import java.nio.ByteBuffer;\n28  \n29  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          30  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\n\
          31  import org.jboss.com.sun.corba.se.pept.protocol.MessageMediator;\n32\
          \  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n33  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n34  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          35  import org.jboss.com.sun.corba.se.spi.protocol.CorbaMessageMediator;\n\
          36  import org.omg.CORBA.Any;\n37  import org.omg.CORBA.Principal;\n38 \
          \ import org.omg.CORBA.TypeCode;\n39  \n40  /**\n41   * This is delegates\
          \ to the real implementation.\n42   */\n43  @SuppressWarnings(\"deprecation\"\
          )\n44  public abstract class CDROutputStream extends org.omg.CORBA_2_3.portable.OutputStream\n\
          45          implements\n46              MarshalOutputStream,\n47       \
          \       org.omg.CORBA.DataOutputStream,"
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
          kind: Class
          name: CDROutputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "270      public final void write(int b) throws java.io.IOException\n\
          271      {\n272          impl.write(b);\n273      }\n274  \n275      public\
          \ final void write_fixed(java.math.BigDecimal value)\n276      {\n277  \
          \        impl.write_fixed(value);\n278      }\n279  \n280      public final\
          \ void write_Context(org.omg.CORBA.Context ctx, org.omg.CORBA.ContextList\
          \ contexts)\n281      {\n282          impl.write_Context(ctx, contexts);\n\
          283      }\n284  \n285      public final org.omg.CORBA.ORB orb()\n286  \
          \    {\n287          return impl.orb();\n288      }\n289  \n290      //\
          \ org.omg.CORBA_2_3.portable.OutputStream"
        lineNumber: 280
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
          kind: Method
          name: write_Context
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "275      public final void write_fixed(java.math.BigDecimal value)\n\
          276      {\n277          impl.write_fixed(value);\n278      }\n279  \n280\
          \      public final void write_Context(org.omg.CORBA.Context ctx, org.omg.CORBA.ContextList\
          \ contexts)\n281      {\n282          impl.write_Context(ctx, contexts);\n\
          283      }\n284  \n285      public final org.omg.CORBA.ORB orb()\n286  \
          \    {\n287          return impl.orb();\n288      }\n289  \n290      //\
          \ org.omg.CORBA_2_3.portable.OutputStream\n291      public final void write_value(java.io.Serializable\
          \ value)\n292      {\n293          impl.write_value(value);\n294      }\n\
          295  "
        lineNumber: 285
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "28  \n29  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          30  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\n\
          31  import org.jboss.com.sun.corba.se.pept.protocol.MessageMediator;\n32\
          \  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n33  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n34  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          35  import org.jboss.com.sun.corba.se.spi.protocol.CorbaMessageMediator;\n\
          36  import org.omg.CORBA.Any;\n37  import org.omg.CORBA.Principal;\n38 \
          \ import org.omg.CORBA.TypeCode;\n39  \n40  /**\n41   * This is delegates\
          \ to the real implementation.\n42   */\n43  @SuppressWarnings(\"deprecation\"\
          )\n44  public abstract class CDROutputStream extends org.omg.CORBA_2_3.portable.OutputStream\n\
          45          implements\n46              MarshalOutputStream,\n47       \
          \       org.omg.CORBA.DataOutputStream,\n48              org.omg.CORBA.portable.ValueOutputStream"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
          kind: Class
          name: CDROutputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "297      public final void write_value(java.io.Serializable value,\
          \ Class clz)\n298      {\n299          impl.write_value(value, clz);\n300\
          \      }\n301  \n302      public final void write_value(java.io.Serializable\
          \ value, String repository_id)\n303      {\n304          impl.write_value(value,\
          \ repository_id);\n305      }\n306  \n307      public final void write_value(java.io.Serializable\
          \ value, org.omg.CORBA.portable.BoxedValueHelper factory)\n308      {\n\
          309          impl.write_value(value, factory);\n310      }\n311  \n312 \
          \     public final void write_abstract_interface(Object obj)\n313      {\n\
          314          impl.write_abstract_interface(obj);\n315      }\n316  \n317\
          \      // java.io.OutputStream"
        lineNumber: 307
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
          kind: Method
          name: write_value
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "34  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n35  import\
          \ org.jboss.com.sun.corba.se.spi.protocol.CorbaMessageMediator;\n36  import\
          \ org.omg.CORBA.Any;\n37  import org.omg.CORBA.Principal;\n38  import org.omg.CORBA.TypeCode;\n\
          39  \n40  /**\n41   * This is delegates to the real implementation.\n42\
          \   */\n43  @SuppressWarnings(\"deprecation\")\n44  public abstract class\
          \ CDROutputStream extends org.omg.CORBA_2_3.portable.OutputStream\n45  \
          \        implements\n46              MarshalOutputStream,\n47          \
          \    org.omg.CORBA.DataOutputStream,\n48              org.omg.CORBA.portable.ValueOutputStream\n\
          49  {\n50      private CDROutputStreamBase impl;\n51  \n52      protected\
          \ ORB orb;\n53  \n54      protected ORBUtilSystemException wrapper;"
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
          kind: Class
          name: CDROutputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "365      public final void write_Abstract(Object value)\n366  \
          \    {\n367          impl.write_Abstract(value);\n368      }\n369  \n370\
          \      public final void write_Value(java.io.Serializable value)\n371  \
          \    {\n372          impl.write_Value(value);\n373      }\n374  \n375  \
          \    public final void write_any_array(org.omg.CORBA.Any[] seq, int offset,\
          \ int length)\n376      {\n377          impl.write_any_array(seq, offset,\
          \ length);\n378      }\n379  \n380      public void setMessageMediator(MessageMediator\
          \ messageMediator)\n381      {\n382          this.corbaMessageMediator =\
          \ (CorbaMessageMediator) messageMediator;\n383      }\n384  \n385      public\
          \ MessageMediator getMessageMediator()"
        lineNumber: 375
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
          kind: Method
          name: write_any_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "37  import org.omg.CORBA.Principal;\n38  import org.omg.CORBA.TypeCode;\n\
          39  \n40  /**\n41   * This is delegates to the real implementation.\n42\
          \   */\n43  @SuppressWarnings(\"deprecation\")\n44  public abstract class\
          \ CDROutputStream extends org.omg.CORBA_2_3.portable.OutputStream\n45  \
          \        implements\n46              MarshalOutputStream,\n47          \
          \    org.omg.CORBA.DataOutputStream,\n48              org.omg.CORBA.portable.ValueOutputStream\n\
          49  {\n50      private CDROutputStreamBase impl;\n51  \n52      protected\
          \ ORB orb;\n53  \n54      protected ORBUtilSystemException wrapper;\n55\
          \  \n56      protected CorbaMessageMediator corbaMessageMediator;\n57  "
        lineNumber: 47
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
          kind: Class
          name: CDROutputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "38  import org.omg.CORBA.TypeCode;\n39  \n40  /**\n41   * This\
          \ is delegates to the real implementation.\n42   */\n43  @SuppressWarnings(\"\
          deprecation\")\n44  public abstract class CDROutputStream extends org.omg.CORBA_2_3.portable.OutputStream\n\
          45          implements\n46              MarshalOutputStream,\n47       \
          \       org.omg.CORBA.DataOutputStream,\n48              org.omg.CORBA.portable.ValueOutputStream\n\
          49  {\n50      private CDROutputStreamBase impl;\n51  \n52      protected\
          \ ORB orb;\n53  \n54      protected ORBUtilSystemException wrapper;\n55\
          \  \n56      protected CorbaMessageMediator corbaMessageMediator;\n57  \n\
          58      // We can move this out somewhere later. For now, it serves its\
          \ purpose"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
          kind: Class
          name: CDROutputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "446      public final BufferManagerWrite getBufferManager()\n447\
          \      {\n448          return impl.getBufferManager();\n449      }\n450\
          \  \n451      public final void write_fixed(java.math.BigDecimal bigDecimal,\
          \ short digits, short scale)\n452      {\n453          impl.write_fixed(bigDecimal,\
          \ digits, scale);\n454      }\n455  \n456      public final void writeOctetSequenceTo(org.omg.CORBA.portable.OutputStream\
          \ s)\n457      {\n458          impl.writeOctetSequenceTo(s);\n459      }\n\
          460  \n461      public final GIOPVersion getGIOPVersion()\n462      {\n\
          463          return impl.getGIOPVersion();\n464      }\n465  \n466     \
          \ public final void writeIndirection(int tag, int posIndirectedTo)"
        lineNumber: 456
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream.java
          kind: Method
          name: writeOctetSequenceTo
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "103      public abstract void write_ulong_array(int[] value, int\
          \ offset, int length);\n104  \n105      public abstract void write_longlong_array(long[]\
          \ value, int offset, int length);\n106  \n107      public abstract void\
          \ write_ulonglong_array(long[] value, int offset, int length);\n108  \n\
          109      public abstract void write_float_array(float[] value, int offset,\
          \ int length);\n110  \n111      public abstract void write_double_array(double[]\
          \ value, int offset, int length);\n112  \n113      public abstract void\
          \ write_Object(org.omg.CORBA.Object value);\n114  \n115      public abstract\
          \ void write_TypeCode(TypeCode value);\n116  \n117      public abstract\
          \ void write_any(Any value);\n118  \n119      public abstract void write_Principal(Principal\
          \ value);\n120  \n121      public void write(int b) throws java.io.IOException\n\
          122      {\n123          throw new org.omg.CORBA.NO_IMPLEMENT();"
        lineNumber: 113
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
          kind: Method
          name: write_Object
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "113      public abstract void write_Object(org.omg.CORBA.Object\
          \ value);\n114  \n115      public abstract void write_TypeCode(TypeCode\
          \ value);\n116  \n117      public abstract void write_any(Any value);\n\
          118  \n119      public abstract void write_Principal(Principal value);\n\
          120  \n121      public void write(int b) throws java.io.IOException\n122\
          \      {\n123          throw new org.omg.CORBA.NO_IMPLEMENT();\n124    \
          \  }\n125  \n126      public abstract void write_fixed(java.math.BigDecimal\
          \ value);\n127  \n128      public void write_Context(org.omg.CORBA.Context\
          \ ctx, org.omg.CORBA.ContextList contexts)\n129      {\n130          throw\
          \ new org.omg.CORBA.NO_IMPLEMENT();\n131      }\n132  \n133      public\
          \ abstract org.omg.CORBA.ORB orb();"
        lineNumber: 123
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "118  \n119      public abstract void write_Principal(Principal\
          \ value);\n120  \n121      public void write(int b) throws java.io.IOException\n\
          122      {\n123          throw new org.omg.CORBA.NO_IMPLEMENT();\n124  \
          \    }\n125  \n126      public abstract void write_fixed(java.math.BigDecimal\
          \ value);\n127  \n128      public void write_Context(org.omg.CORBA.Context\
          \ ctx, org.omg.CORBA.ContextList contexts)\n129      {\n130          throw\
          \ new org.omg.CORBA.NO_IMPLEMENT();\n131      }\n132  \n133      public\
          \ abstract org.omg.CORBA.ORB orb();\n134  \n135      // org.omg.CORBA_2_3.portable.OutputStream\n\
          136      public abstract void write_value(java.io.Serializable value);\n\
          137  \n138      public abstract void write_value(java.io.Serializable value,\
          \ java.lang.Class<?> clz);"
        lineNumber: 128
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
          kind: Method
          name: write_Context
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "120  \n121      public void write(int b) throws java.io.IOException\n\
          122      {\n123          throw new org.omg.CORBA.NO_IMPLEMENT();\n124  \
          \    }\n125  \n126      public abstract void write_fixed(java.math.BigDecimal\
          \ value);\n127  \n128      public void write_Context(org.omg.CORBA.Context\
          \ ctx, org.omg.CORBA.ContextList contexts)\n129      {\n130          throw\
          \ new org.omg.CORBA.NO_IMPLEMENT();\n131      }\n132  \n133      public\
          \ abstract org.omg.CORBA.ORB orb();\n134  \n135      // org.omg.CORBA_2_3.portable.OutputStream\n\
          136      public abstract void write_value(java.io.Serializable value);\n\
          137  \n138      public abstract void write_value(java.io.Serializable value,\
          \ java.lang.Class<?> clz);\n139  \n140      public abstract void write_value(java.io.Serializable\
          \ value, String repository_id);"
        lineNumber: 130
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
          kind: Method
          name: write_Context
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "123          throw new org.omg.CORBA.NO_IMPLEMENT();\n124     \
          \ }\n125  \n126      public abstract void write_fixed(java.math.BigDecimal\
          \ value);\n127  \n128      public void write_Context(org.omg.CORBA.Context\
          \ ctx, org.omg.CORBA.ContextList contexts)\n129      {\n130          throw\
          \ new org.omg.CORBA.NO_IMPLEMENT();\n131      }\n132  \n133      public\
          \ abstract org.omg.CORBA.ORB orb();\n134  \n135      // org.omg.CORBA_2_3.portable.OutputStream\n\
          136      public abstract void write_value(java.io.Serializable value);\n\
          137  \n138      public abstract void write_value(java.io.Serializable value,\
          \ java.lang.Class<?> clz);\n139  \n140      public abstract void write_value(java.io.Serializable\
          \ value, String repository_id);\n141  \n142      public abstract void write_value(java.io.Serializable\
          \ value, org.omg.CORBA.portable.BoxedValueHelper factory);\n143  "
        lineNumber: 133
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "132  \n133      public abstract org.omg.CORBA.ORB orb();\n134 \
          \ \n135      // org.omg.CORBA_2_3.portable.OutputStream\n136      public\
          \ abstract void write_value(java.io.Serializable value);\n137  \n138   \
          \   public abstract void write_value(java.io.Serializable value, java.lang.Class<?>\
          \ clz);\n139  \n140      public abstract void write_value(java.io.Serializable\
          \ value, String repository_id);\n141  \n142      public abstract void write_value(java.io.Serializable\
          \ value, org.omg.CORBA.portable.BoxedValueHelper factory);\n143  \n144 \
          \     public abstract void write_abstract_interface(java.lang.Object obj);\n\
          145  \n146      // java.io.OutputStream\n147      // public abstract void\
          \ write(byte b[]) throws IOException;\n148      // public abstract void\
          \ write(byte b[], int off, int len) throws IOException;\n149      // public\
          \ abstract void flush() throws IOException;\n150      // public abstract\
          \ void close() throws IOException;\n151  \n152      // org.jboss.com.sun.corba.se.impl.encoding.MarshalOutputStream"
        lineNumber: 142
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
          kind: Method
          name: write_value
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "158  \n159      public abstract void writeTo(java.io.OutputStream\
          \ s) throws IOException;\n160  \n161      public abstract byte[] toByteArray();\n\
          162  \n163      // org.omg.CORBA.DataOutputStream\n164      public abstract\
          \ void write_Abstract(java.lang.Object value);\n165  \n166      public abstract\
          \ void write_Value(java.io.Serializable value);\n167  \n168      public\
          \ abstract void write_any_array(org.omg.CORBA.Any[] seq, int offset, int\
          \ length);\n169  \n170      // org.omg.CORBA.portable.ValueBase\n171   \
          \   public abstract String[] _truncatable_ids();\n172  \n173      // Needed\
          \ by request and reply messages for GIOP versions >= 1.2 only.\n174    \
          \  abstract void setHeaderPadding(boolean headerPadding);\n175  \n176  \
          \    // Required by IIOPOutputStream and other subclasses\n177      public\
          \ abstract int getSize();\n178  "
        lineNumber: 168
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
          kind: Method
          name: write_any_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "187      public abstract boolean isLittleEndian();\n188  \n189\
          \      public abstract ByteBufferWithInfo getByteBufferWithInfo();\n190\
          \  \n191      public abstract void setByteBufferWithInfo(ByteBufferWithInfo\
          \ bbwi);\n192  \n193      public abstract BufferManagerWrite getBufferManager();\n\
          194  \n195      public abstract void write_fixed(java.math.BigDecimal bigDecimal,\
          \ short digits, short scale);\n196  \n197      public abstract void writeOctetSequenceTo(org.omg.CORBA.portable.OutputStream\
          \ s);\n198  \n199      public abstract GIOPVersion getGIOPVersion();\n200\
          \  \n201      public abstract void writeIndirection(int tag, int posIndirectedTo);\n\
          202  \n203      abstract void freeInternalCaches();\n204  \n205      abstract\
          \ void printBuffer();\n206  \n207      abstract void alignOnBoundary(int\
          \ octetBoundary);"
        lineNumber: 197
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
          kind: Method
          name: writeOctetSequenceTo
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "21   * Please contact Oracle, 500 Oracle Parkway, Redwood Shores,\
          \ CA 94065 USA\n22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  package org.jboss.com.sun.corba.se.impl.encoding;\n\
          26  \n27  import java.io.IOException;\n28  import java.nio.ByteBuffer;\n\
          29  \n30  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          31  import org.omg.CORBA.Any;\n32  import org.omg.CORBA.Principal;\n33 \
          \ import org.omg.CORBA.TypeCode;\n34  \n35  /**\n36   * Describes CDROutputStream\
          \ delegates and provides some implementation. Non-default constructors are\
          \ avoided in the\n37   * delegation to separate instantiation from initialization,\
          \ so we use init methods.\n38   */\n39  @SuppressWarnings(\"deprecation\"\
          )\n40  abstract class CDROutputStreamBase extends java.io.OutputStream\n\
          41  {"
        lineNumber: 31
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
          kind: Class
          name: CDROutputStreamBase
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  package org.jboss.com.sun.corba.se.impl.encoding;\n\
          26  \n27  import java.io.IOException;\n28  import java.nio.ByteBuffer;\n\
          29  \n30  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          31  import org.omg.CORBA.Any;\n32  import org.omg.CORBA.Principal;\n33 \
          \ import org.omg.CORBA.TypeCode;\n34  \n35  /**\n36   * Describes CDROutputStream\
          \ delegates and provides some implementation. Non-default constructors are\
          \ avoided in the\n37   * delegation to separate instantiation from initialization,\
          \ so we use init methods.\n38   */\n39  @SuppressWarnings(\"deprecation\"\
          )\n40  abstract class CDROutputStreamBase extends java.io.OutputStream\n\
          41  {\n42      protected CDROutputStream parent;"
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
          kind: Class
          name: CDROutputStreamBase
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "23   * questions.\n24   */\n25  package org.jboss.com.sun.corba.se.impl.encoding;\n\
          26  \n27  import java.io.IOException;\n28  import java.nio.ByteBuffer;\n\
          29  \n30  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          31  import org.omg.CORBA.Any;\n32  import org.omg.CORBA.Principal;\n33 \
          \ import org.omg.CORBA.TypeCode;\n34  \n35  /**\n36   * Describes CDROutputStream\
          \ delegates and provides some implementation. Non-default constructors are\
          \ avoided in the\n37   * delegation to separate instantiation from initialization,\
          \ so we use init methods.\n38   */\n39  @SuppressWarnings(\"deprecation\"\
          )\n40  abstract class CDROutputStreamBase extends java.io.OutputStream\n\
          41  {\n42      protected CDROutputStream parent;\n43  "
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
          kind: Class
          name: CDROutputStreamBase
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "40  abstract class CDROutputStreamBase extends java.io.OutputStream\n\
          41  {\n42      protected CDROutputStream parent;\n43  \n44      // Required\
          \ by parent CDROutputStream\n45      public void setParent(CDROutputStream\
          \ parent)\n46      {\n47          this.parent = parent;\n48      }\n49 \
          \ \n50      public void init(org.omg.CORBA.ORB orb, BufferManagerWrite bufferManager,\
          \ byte streamFormatVersion)\n51      {\n52          init(orb, false, bufferManager,\
          \ streamFormatVersion, true);\n53      }\n54  \n55      // See EncapsOutputStream,\
          \ the only one that uses the non-pooled ByteBuffers, for additional info.\n\
          56      protected abstract void init(org.omg.CORBA.ORB orb, boolean littleEndian,\
          \ BufferManagerWrite bufferManager,\n57              byte streamFormatVersion,\
          \ boolean usePooledByteBuffers);\n58  \n59      public abstract void write_boolean(boolean\
          \ value);\n60  "
        lineNumber: 50
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
          kind: Method
          name: init
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "46      {\n47          this.parent = parent;\n48      }\n49  \n\
          50      public void init(org.omg.CORBA.ORB orb, BufferManagerWrite bufferManager,\
          \ byte streamFormatVersion)\n51      {\n52          init(orb, false, bufferManager,\
          \ streamFormatVersion, true);\n53      }\n54  \n55      // See EncapsOutputStream,\
          \ the only one that uses the non-pooled ByteBuffers, for additional info.\n\
          56      protected abstract void init(org.omg.CORBA.ORB orb, boolean littleEndian,\
          \ BufferManagerWrite bufferManager,\n57              byte streamFormatVersion,\
          \ boolean usePooledByteBuffers);\n58  \n59      public abstract void write_boolean(boolean\
          \ value);\n60  \n61      public abstract void write_char(char value);\n\
          62  \n63      public abstract void write_wchar(char value);\n64  \n65  \
          \    public abstract void write_octet(byte value);\n66  "
        lineNumber: 56
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStreamBase.java
          kind: Method
          name: init
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 647
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Method
          name: write_abstract_interface
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 652
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Method
          name: write_abstract_interface
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 758
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Method
          name: writeValueBase
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 885
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Method
          name: write_value
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 888
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Method
          name: write_value
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 921
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Method
          name: write_value
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1112
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1272
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Method
          name: write_any_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1303
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Method
          name: writeOctetSequenceTo
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1631
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Method
          name: shouldWriteAsIDLEntity
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1663
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Method
          name: writeIDLEntity
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: 11   * This code is distributed in the hope that it will be useful,
          but WITHOUT
        lineNumber: 78
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Class
          name: CDROutputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "137  \n138      private RepositoryIdStrings repIdStrs;\n139  \n\
          140      // Code set converters (created when first needed)\n141      private\
          \ CodeSetConversion.CTBConverter charConverter;\n142  \n143      private\
          \ CodeSetConversion.CTBConverter wcharConverter;\n144  \n145      // REVISIT\
          \ - This should be re-factored so that including whether to use pool byte\
          \ buffers or not doesn't need to be\n146      // known.\n147      public\
          \ void init(org.omg.CORBA.ORB orb, boolean littleEndian, BufferManagerWrite\
          \ bufferManager,\n148              byte streamFormatVersion, boolean usePooledByteBuffers)\n\
          149      {\n150          // ORB must not be null. See CDROutputStream constructor.\n\
          151          this.orb = (ORB) orb;\n152          this.wrapper = ORBUtilSystemException.get(this.orb,\
          \ CORBALogDomains.RPC_ENCODING);\n153          debug = this.orb.transportDebugFlag;\n\
          154  \n155          this.littleEndian = littleEndian;\n156          this.bufferManagerWrite\
          \ = bufferManager;\n157          this.bbwi = new ByteBufferWithInfo(orb,\
          \ bufferManager, usePooledByteBuffers);"
        lineNumber: 147
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Method
          name: init
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "153          debug = this.orb.transportDebugFlag;\n154  \n155 \
          \         this.littleEndian = littleEndian;\n156          this.bufferManagerWrite\
          \ = bufferManager;\n157          this.bbwi = new ByteBufferWithInfo(orb,\
          \ bufferManager, usePooledByteBuffers);\n158          this.streamFormatVersion\
          \ = streamFormatVersion;\n159  \n160          createRepositoryIdHandlers();\n\
          161      }\n162  \n163      public void init(org.omg.CORBA.ORB orb, boolean\
          \ littleEndian, BufferManagerWrite bufferManager,\n164              byte\
          \ streamFormatVersion)\n165      {\n166          init(orb, littleEndian,\
          \ bufferManager, streamFormatVersion, true);\n167      }\n168  \n169   \
          \   private final void createRepositoryIdHandlers()\n170      {\n171   \
          \       if (orb != null)\n172          {\n173              // Get the appropriate\
          \ versions based on the ORB version. The ORB versioning info is only in\
          \ the core ORB."
        lineNumber: 163
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Method
          name: init
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: '54  import org.jboss.com.sun.corba.se.impl.util.Utility;

          55  import org.jboss.com.sun.corba.se.pept.protocol.MessageMediator;

          56  import org.jboss.com.sun.corba.se.pept.transport.ByteBufferPool;

          57  import org.jboss.com.sun.corba.se.spi.ior.IOR;

          58  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;

          59  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;

          60  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          61  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          62  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          63  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;

          64  import org.omg.CORBA.Any;

          65  import org.omg.CORBA.CompletionStatus;

          66  import org.omg.CORBA.CustomMarshal;

          67  import org.omg.CORBA.Principal;

          68  import org.omg.CORBA.SystemException;

          69  import org.omg.CORBA.TypeCode;

          70  import org.omg.CORBA.VM_CUSTOM;

          71  import org.omg.CORBA.VM_NONE;

          72  import org.omg.CORBA.VM_TRUNCATABLE;

          73  import org.omg.CORBA.TypeCodePackage.BadKind;

          74  import org.omg.CORBA.portable.BoxedValueHelper;'
        lineNumber: 64
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Class
          name: CDROutputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: '55  import org.jboss.com.sun.corba.se.pept.protocol.MessageMediator;

          56  import org.jboss.com.sun.corba.se.pept.transport.ByteBufferPool;

          57  import org.jboss.com.sun.corba.se.spi.ior.IOR;

          58  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;

          59  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;

          60  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          61  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          62  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          63  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;

          64  import org.omg.CORBA.Any;

          65  import org.omg.CORBA.CompletionStatus;

          66  import org.omg.CORBA.CustomMarshal;

          67  import org.omg.CORBA.Principal;

          68  import org.omg.CORBA.SystemException;

          69  import org.omg.CORBA.TypeCode;

          70  import org.omg.CORBA.VM_CUSTOM;

          71  import org.omg.CORBA.VM_NONE;

          72  import org.omg.CORBA.VM_TRUNCATABLE;

          73  import org.omg.CORBA.TypeCodePackage.BadKind;

          74  import org.omg.CORBA.portable.BoxedValueHelper;

          75  import org.omg.CORBA.portable.CustomValue;'
        lineNumber: 65
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Class
          name: CDROutputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: '56  import org.jboss.com.sun.corba.se.pept.transport.ByteBufferPool;

          57  import org.jboss.com.sun.corba.se.spi.ior.IOR;

          58  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;

          59  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;

          60  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          61  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          62  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          63  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;

          64  import org.omg.CORBA.Any;

          65  import org.omg.CORBA.CompletionStatus;

          66  import org.omg.CORBA.CustomMarshal;

          67  import org.omg.CORBA.Principal;

          68  import org.omg.CORBA.SystemException;

          69  import org.omg.CORBA.TypeCode;

          70  import org.omg.CORBA.VM_CUSTOM;

          71  import org.omg.CORBA.VM_NONE;

          72  import org.omg.CORBA.VM_TRUNCATABLE;

          73  import org.omg.CORBA.TypeCodePackage.BadKind;

          74  import org.omg.CORBA.portable.BoxedValueHelper;

          75  import org.omg.CORBA.portable.CustomValue;

          76  import org.omg.CORBA.portable.IDLEntity;'
        lineNumber: 66
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Class
          name: CDROutputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: '57  import org.jboss.com.sun.corba.se.spi.ior.IOR;

          58  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;

          59  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;

          60  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          61  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          62  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          63  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;

          64  import org.omg.CORBA.Any;

          65  import org.omg.CORBA.CompletionStatus;

          66  import org.omg.CORBA.CustomMarshal;

          67  import org.omg.CORBA.Principal;

          68  import org.omg.CORBA.SystemException;

          69  import org.omg.CORBA.TypeCode;

          70  import org.omg.CORBA.VM_CUSTOM;

          71  import org.omg.CORBA.VM_NONE;

          72  import org.omg.CORBA.VM_TRUNCATABLE;

          73  import org.omg.CORBA.TypeCodePackage.BadKind;

          74  import org.omg.CORBA.portable.BoxedValueHelper;

          75  import org.omg.CORBA.portable.CustomValue;

          76  import org.omg.CORBA.portable.IDLEntity;

          77  import org.omg.CORBA.portable.StreamableValue;'
        lineNumber: 67
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Class
          name: CDROutputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: '58  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;

          59  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;

          60  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          61  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          62  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          63  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;

          64  import org.omg.CORBA.Any;

          65  import org.omg.CORBA.CompletionStatus;

          66  import org.omg.CORBA.CustomMarshal;

          67  import org.omg.CORBA.Principal;

          68  import org.omg.CORBA.SystemException;

          69  import org.omg.CORBA.TypeCode;

          70  import org.omg.CORBA.VM_CUSTOM;

          71  import org.omg.CORBA.VM_NONE;

          72  import org.omg.CORBA.VM_TRUNCATABLE;

          73  import org.omg.CORBA.TypeCodePackage.BadKind;

          74  import org.omg.CORBA.portable.BoxedValueHelper;

          75  import org.omg.CORBA.portable.CustomValue;

          76  import org.omg.CORBA.portable.IDLEntity;

          77  import org.omg.CORBA.portable.StreamableValue;

          78  import org.omg.CORBA.portable.ValueBase;'
        lineNumber: 68
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Class
          name: CDROutputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: '59  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;

          60  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          61  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          62  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          63  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;

          64  import org.omg.CORBA.Any;

          65  import org.omg.CORBA.CompletionStatus;

          66  import org.omg.CORBA.CustomMarshal;

          67  import org.omg.CORBA.Principal;

          68  import org.omg.CORBA.SystemException;

          69  import org.omg.CORBA.TypeCode;

          70  import org.omg.CORBA.VM_CUSTOM;

          71  import org.omg.CORBA.VM_NONE;

          72  import org.omg.CORBA.VM_TRUNCATABLE;

          73  import org.omg.CORBA.TypeCodePackage.BadKind;

          74  import org.omg.CORBA.portable.BoxedValueHelper;

          75  import org.omg.CORBA.portable.CustomValue;

          76  import org.omg.CORBA.portable.IDLEntity;

          77  import org.omg.CORBA.portable.StreamableValue;

          78  import org.omg.CORBA.portable.ValueBase;

          79  '
        lineNumber: 69
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Class
          name: CDROutputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "60  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          61  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n62  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          63  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;\n64  import\
          \ org.omg.CORBA.Any;\n65  import org.omg.CORBA.CompletionStatus;\n66  import\
          \ org.omg.CORBA.CustomMarshal;\n67  import org.omg.CORBA.Principal;\n68\
          \  import org.omg.CORBA.SystemException;\n69  import org.omg.CORBA.TypeCode;\n\
          70  import org.omg.CORBA.VM_CUSTOM;\n71  import org.omg.CORBA.VM_NONE;\n\
          72  import org.omg.CORBA.VM_TRUNCATABLE;\n73  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          74  import org.omg.CORBA.portable.BoxedValueHelper;\n75  import org.omg.CORBA.portable.CustomValue;\n\
          76  import org.omg.CORBA.portable.IDLEntity;\n77  import org.omg.CORBA.portable.StreamableValue;\n\
          78  import org.omg.CORBA.portable.ValueBase;\n79  \n80  @SuppressWarnings(\"\
          deprecation\")"
        lineNumber: 70
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Class
          name: CDROutputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "61  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n62  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n63  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;\n\
          64  import org.omg.CORBA.Any;\n65  import org.omg.CORBA.CompletionStatus;\n\
          66  import org.omg.CORBA.CustomMarshal;\n67  import org.omg.CORBA.Principal;\n\
          68  import org.omg.CORBA.SystemException;\n69  import org.omg.CORBA.TypeCode;\n\
          70  import org.omg.CORBA.VM_CUSTOM;\n71  import org.omg.CORBA.VM_NONE;\n\
          72  import org.omg.CORBA.VM_TRUNCATABLE;\n73  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          74  import org.omg.CORBA.portable.BoxedValueHelper;\n75  import org.omg.CORBA.portable.CustomValue;\n\
          76  import org.omg.CORBA.portable.IDLEntity;\n77  import org.omg.CORBA.portable.StreamableValue;\n\
          78  import org.omg.CORBA.portable.ValueBase;\n79  \n80  @SuppressWarnings(\"\
          deprecation\")\n81  public class CDROutputStream_1_0 extends CDROutputStreamBase"
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Class
          name: CDROutputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "610              tci = (TypeCodeImpl) tc;\n611          }\n612\
          \          else\n613          {\n614              tci = new TypeCodeImpl(orb,\
          \ tc);\n615          }\n616  \n617          tci.write_value(parent);\n618\
          \      }\n619  \n620      public void write_Object(org.omg.CORBA.Object\
          \ ref)\n621      {\n622          if (ref == null)\n623          {\n624 \
          \             IOR nullIOR = IORFactories.makeIOR(orb);\n625            \
          \  nullIOR.write(parent);\n626              return;\n627          }\n628\
          \  \n629          // IDL to Java formal 01-06-06 1.21.4.2\n630         \
          \ if (ref instanceof org.omg.CORBA.LocalObject)"
        lineNumber: 620
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Method
          name: write_Object
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "62  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          63  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;\n64  import\
          \ org.omg.CORBA.Any;\n65  import org.omg.CORBA.CompletionStatus;\n66  import\
          \ org.omg.CORBA.CustomMarshal;\n67  import org.omg.CORBA.Principal;\n68\
          \  import org.omg.CORBA.SystemException;\n69  import org.omg.CORBA.TypeCode;\n\
          70  import org.omg.CORBA.VM_CUSTOM;\n71  import org.omg.CORBA.VM_NONE;\n\
          72  import org.omg.CORBA.VM_TRUNCATABLE;\n73  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          74  import org.omg.CORBA.portable.BoxedValueHelper;\n75  import org.omg.CORBA.portable.CustomValue;\n\
          76  import org.omg.CORBA.portable.IDLEntity;\n77  import org.omg.CORBA.portable.StreamableValue;\n\
          78  import org.omg.CORBA.portable.ValueBase;\n79  \n80  @SuppressWarnings(\"\
          deprecation\")\n81  public class CDROutputStream_1_0 extends CDROutputStreamBase\n\
          82  {"
        lineNumber: 72
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Class
          name: CDROutputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "620      public void write_Object(org.omg.CORBA.Object ref)\n621\
          \      {\n622          if (ref == null)\n623          {\n624           \
          \   IOR nullIOR = IORFactories.makeIOR(orb);\n625              nullIOR.write(parent);\n\
          626              return;\n627          }\n628  \n629          // IDL to\
          \ Java formal 01-06-06 1.21.4.2\n630          if (ref instanceof org.omg.CORBA.LocalObject)\n\
          631              throw wrapper.writeLocalObject(CompletionStatus.COMPLETED_MAYBE);\n\
          632  \n633          IOR ior = ORBUtility.connectAndGetIOR(orb, ref);\n634\
          \          ior.write(parent);\n635          return;\n636      }\n637  \n\
          638      // ------------ RMI related methods --------------------------\n\
          639  \n640      public void write_abstract_interface(Object obj)"
        lineNumber: 630
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Method
          name: write_Object
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "63  import org.jboss.com.sun.org.omg.CORBA.portable.ValueHelper;\n\
          64  import org.omg.CORBA.Any;\n65  import org.omg.CORBA.CompletionStatus;\n\
          66  import org.omg.CORBA.CustomMarshal;\n67  import org.omg.CORBA.Principal;\n\
          68  import org.omg.CORBA.SystemException;\n69  import org.omg.CORBA.TypeCode;\n\
          70  import org.omg.CORBA.VM_CUSTOM;\n71  import org.omg.CORBA.VM_NONE;\n\
          72  import org.omg.CORBA.VM_TRUNCATABLE;\n73  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          74  import org.omg.CORBA.portable.BoxedValueHelper;\n75  import org.omg.CORBA.portable.CustomValue;\n\
          76  import org.omg.CORBA.portable.IDLEntity;\n77  import org.omg.CORBA.portable.StreamableValue;\n\
          78  import org.omg.CORBA.portable.ValueBase;\n79  \n80  @SuppressWarnings(\"\
          deprecation\")\n81  public class CDROutputStream_1_0 extends CDROutputStreamBase\n\
          82  {\n83      private static final int INDIRECTION_TAG = 0xffffffff;"
        lineNumber: 73
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Class
          name: CDROutputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "633          IOR ior = ORBUtility.connectAndGetIOR(orb, ref);\n\
          634          ior.write(parent);\n635          return;\n636      }\n637 \
          \ \n638      // ------------ RMI related methods --------------------------\n\
          639  \n640      public void write_abstract_interface(Object obj)\n641  \
          \    {\n642          boolean corbaObject = false; // Assume value type.\n\
          643          org.omg.CORBA.Object theObject = null;\n644  \n645        \
          \  // Is it a CORBA.Object?\n646  \n647          if (obj != null && obj\
          \ instanceof org.omg.CORBA.Object)\n648          {\n649  \n650         \
          \     // Yes.\n651  \n652              theObject = (org.omg.CORBA.Object)\
          \ obj;\n653              corbaObject = true;"
        lineNumber: 643
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Method
          name: write_abstract_interface
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "64  import org.omg.CORBA.Any;\n65  import org.omg.CORBA.CompletionStatus;\n\
          66  import org.omg.CORBA.CustomMarshal;\n67  import org.omg.CORBA.Principal;\n\
          68  import org.omg.CORBA.SystemException;\n69  import org.omg.CORBA.TypeCode;\n\
          70  import org.omg.CORBA.VM_CUSTOM;\n71  import org.omg.CORBA.VM_NONE;\n\
          72  import org.omg.CORBA.VM_TRUNCATABLE;\n73  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          74  import org.omg.CORBA.portable.BoxedValueHelper;\n75  import org.omg.CORBA.portable.CustomValue;\n\
          76  import org.omg.CORBA.portable.IDLEntity;\n77  import org.omg.CORBA.portable.StreamableValue;\n\
          78  import org.omg.CORBA.portable.ValueBase;\n79  \n80  @SuppressWarnings(\"\
          deprecation\")\n81  public class CDROutputStream_1_0 extends CDROutputStreamBase\n\
          82  {\n83      private static final int INDIRECTION_TAG = 0xffffffff;\n\
          84  "
        lineNumber: 74
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Class
          name: CDROutputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "65  import org.omg.CORBA.CompletionStatus;\n66  import org.omg.CORBA.CustomMarshal;\n\
          67  import org.omg.CORBA.Principal;\n68  import org.omg.CORBA.SystemException;\n\
          69  import org.omg.CORBA.TypeCode;\n70  import org.omg.CORBA.VM_CUSTOM;\n\
          71  import org.omg.CORBA.VM_NONE;\n72  import org.omg.CORBA.VM_TRUNCATABLE;\n\
          73  import org.omg.CORBA.TypeCodePackage.BadKind;\n74  import org.omg.CORBA.portable.BoxedValueHelper;\n\
          75  import org.omg.CORBA.portable.CustomValue;\n76  import org.omg.CORBA.portable.IDLEntity;\n\
          77  import org.omg.CORBA.portable.StreamableValue;\n78  import org.omg.CORBA.portable.ValueBase;\n\
          79  \n80  @SuppressWarnings(\"deprecation\")\n81  public class CDROutputStream_1_0\
          \ extends CDROutputStreamBase\n82  {\n83      private static final int INDIRECTION_TAG\
          \ = 0xffffffff;\n84  \n85      protected boolean littleEndian;"
        lineNumber: 75
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Class
          name: CDROutputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "66  import org.omg.CORBA.CustomMarshal;\n67  import org.omg.CORBA.Principal;\n\
          68  import org.omg.CORBA.SystemException;\n69  import org.omg.CORBA.TypeCode;\n\
          70  import org.omg.CORBA.VM_CUSTOM;\n71  import org.omg.CORBA.VM_NONE;\n\
          72  import org.omg.CORBA.VM_TRUNCATABLE;\n73  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          74  import org.omg.CORBA.portable.BoxedValueHelper;\n75  import org.omg.CORBA.portable.CustomValue;\n\
          76  import org.omg.CORBA.portable.IDLEntity;\n77  import org.omg.CORBA.portable.StreamableValue;\n\
          78  import org.omg.CORBA.portable.ValueBase;\n79  \n80  @SuppressWarnings(\"\
          deprecation\")\n81  public class CDROutputStream_1_0 extends CDROutputStreamBase\n\
          82  {\n83      private static final int INDIRECTION_TAG = 0xffffffff;\n\
          84  \n85      protected boolean littleEndian;\n86  "
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Class
          name: CDROutputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "67  import org.omg.CORBA.Principal;\n68  import org.omg.CORBA.SystemException;\n\
          69  import org.omg.CORBA.TypeCode;\n70  import org.omg.CORBA.VM_CUSTOM;\n\
          71  import org.omg.CORBA.VM_NONE;\n72  import org.omg.CORBA.VM_TRUNCATABLE;\n\
          73  import org.omg.CORBA.TypeCodePackage.BadKind;\n74  import org.omg.CORBA.portable.BoxedValueHelper;\n\
          75  import org.omg.CORBA.portable.CustomValue;\n76  import org.omg.CORBA.portable.IDLEntity;\n\
          77  import org.omg.CORBA.portable.StreamableValue;\n78  import org.omg.CORBA.portable.ValueBase;\n\
          79  \n80  @SuppressWarnings(\"deprecation\")\n81  public class CDROutputStream_1_0\
          \ extends CDROutputStreamBase\n82  {\n83      private static final int INDIRECTION_TAG\
          \ = 0xffffffff;\n84  \n85      protected boolean littleEndian;\n86  \n87\
          \      protected BufferManagerWrite bufferManagerWrite;"
        lineNumber: 77
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_0.java
          kind: Class
          name: CDROutputStream_1_0
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "17   * You should have received a copy of the GNU General Public\
          \ License version\n18   * 2 along with this work; if not, write to the Free\
          \ Software Foundation,\n19   * Inc., 51 Franklin St, Fifth Floor, Boston,\
          \ MA 02110-1301 USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway,\
          \ Redwood Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need\
          \ additional information or have any\n23   * questions.\n24   */\n25  package\
          \ org.jboss.com.sun.corba.se.impl.encoding;\n26  \n27  import org.omg.CORBA.CompletionStatus;\n\
          28  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n29  import\
          \ org.jboss.com.sun.corba.se.impl.encoding.CodeSetConversion;\n30  \n31\
          \  public class CDROutputStream_1_1 extends CDROutputStream_1_0\n32  {\n\
          33      // This is used to keep indirections working across fragments. When\
          \ added to the current bbwi.position(), the result\n34      // is the current\
          \ position in the byte stream without any fragment headers.\n35      //\n\
          36      // It is equal to the following:\n37      //"
        lineNumber: 27
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_1.java
          kind: Class
          name: CDROutputStream_1_1
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  package org.jboss.com.sun.corba.se.impl.encoding;\n\
          26  \n27  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n\
          28  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n29  import\
          \ org.omg.CORBA.CompletionStatus;\n30  \n31  public class CDROutputStream_1_2\
          \ extends CDROutputStream_1_1\n32  {\n33      // There's a situation with\
          \ chunking with fragmentation\n34      // in which the alignment for a primitive\
          \ value is needed\n35      // to fill fragment N, but the primitive won't\
          \ fit so\n36      // must go into fragment N + 1. The behavior is the same\n\
          37      // as that for specialChunks.\n38      //\n39      // Unfortunately,\
          \ given the current code, we can't reuse"
        lineNumber: 29
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/CDROutputStream_1_2.java
          kind: Class
          name: CDROutputStream_1_2
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: " 90  \n 91          performORBVersionSpecificInit();\n 92     \
          \ }\n 93  \n 94      // CDREncapsCodec\n 95      // ServiceContext\n 96\
          \      //\n 97      // Assumes big endian (can use consumeEndian to read\
          \ and set\n 98      // the endianness if it is an encapsulation with a byte\
          \ order\n 99      // mark at the beginning)\n100      public EncapsInputStream(org.omg.CORBA.ORB\
          \ orb, byte[] data, int size, GIOPVersion version)\n101      {\n102    \
          \      this(orb, data, size, false, version);\n103      }\n104  \n105  \
          \    /**\n106       * Full constructor with a CodeBase parameter useful\
          \ for unmarshaling RMI-IIOP valuetypes (technically against the\n107   \
          \    * intention of an encapsulation, but necessary due to OMG issue 4795.\
          \ Used by ServiceContexts.\n108       */\n109      public EncapsInputStream(org.omg.CORBA.ORB\
          \ orb, byte[] data, int size, GIOPVersion version, CodeBase codeBase)\n\
          110      {"
        lineNumber: 100
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/EncapsInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/EncapsInputStream.java
          kind: Constructor
          name: EncapsInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: " 99      // mark at the beginning)\n100      public EncapsInputStream(org.omg.CORBA.ORB\
          \ orb, byte[] data, int size, GIOPVersion version)\n101      {\n102    \
          \      this(orb, data, size, false, version);\n103      }\n104  \n105  \
          \    /**\n106       * Full constructor with a CodeBase parameter useful\
          \ for unmarshaling RMI-IIOP valuetypes (technically against the\n107   \
          \    * intention of an encapsulation, but necessary due to OMG issue 4795.\
          \ Used by ServiceContexts.\n108       */\n109      public EncapsInputStream(org.omg.CORBA.ORB\
          \ orb, byte[] data, int size, GIOPVersion version, CodeBase codeBase)\n\
          110      {\n111          super(orb, ByteBuffer.wrap(data), size, false,\
          \ version, Message.CDR_ENC_VERSION, BufferManagerFactory\n112          \
          \        .newBufferManagerRead(BufferManagerFactory.GROW, Message.CDR_ENC_VERSION,\
          \ (ORB) orb));\n113  \n114          this.codeBase = codeBase;\n115  \n116\
          \          performORBVersionSpecificInit();\n117      }\n118  \n119    \
          \  public CDRInputStream dup()"
        lineNumber: 109
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/EncapsInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/EncapsInputStream.java
          kind: Constructor
          name: EncapsInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "26  package org.jboss.com.sun.corba.se.impl.encoding;\n27  \n28\
          \  import java.nio.ByteBuffer;\n29  \n30  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          31  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\n\
          32  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n33  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n34  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          35  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n36  import\
          \ org.omg.CORBA.CompletionStatus;\n37  \n38  /**\n39   * Encapsulations\
          \ are supposed to explicitly define their code sets and GIOP version. The\
          \ original resolution to issue\n40   * 2784 said that the defaults were\
          \ UTF-8 and UTF-16, but that was not agreed upon.\n41   * \n42   * These\
          \ streams currently use CDR 1.2 with ISO8859-1 for char/string and UTF16\
          \ for wchar/wstring. If no byte order\n43   * marker is available, the endianness\
          \ of the encapsulation is used.\n44   * \n45   * When more encapsulations\
          \ arise that have their own special code sets defined, we can make all constructors\
          \ take such\n46   * parameters."
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/EncapsInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/EncapsInputStream.java
          kind: Class
          name: EncapsInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "45   * When more encapsulations arise that have their own special\
          \ code sets defined, we can make all constructors take such\n46   * parameters.\n\
          47   */\n48  public class EncapsInputStream extends CDRInputStream\n49 \
          \ {\n50      private ORBUtilSystemException wrapper;\n51  \n52      // corba/EncapsOutputStream\n\
          53      // corba/ORBSingleton\n54      // iiop/ORB\n55      public EncapsInputStream(org.omg.CORBA.ORB\
          \ orb, byte[] buf, int size, boolean littleEndian, GIOPVersion version)\n\
          56      {\n57          super(orb, ByteBuffer.wrap(buf), size, littleEndian,\
          \ version, Message.CDR_ENC_VERSION, BufferManagerFactory\n58           \
          \       .newBufferManagerRead(BufferManagerFactory.GROW, Message.CDR_ENC_VERSION,\
          \ (ORB) orb));\n59  \n60          wrapper = ORBUtilSystemException.get((ORB)\
          \ orb, CORBALogDomains.RPC_ENCODING);\n61  \n62          performORBVersionSpecificInit();\n\
          63      }\n64  \n65      public EncapsInputStream(org.omg.CORBA.ORB orb,\
          \ ByteBuffer byteBuffer, int size, boolean littleEndian,"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/EncapsInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/EncapsInputStream.java
          kind: Constructor
          name: EncapsInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "55      public EncapsInputStream(org.omg.CORBA.ORB orb, byte[]\
          \ buf, int size, boolean littleEndian, GIOPVersion version)\n56      {\n\
          57          super(orb, ByteBuffer.wrap(buf), size, littleEndian, version,\
          \ Message.CDR_ENC_VERSION, BufferManagerFactory\n58                  .newBufferManagerRead(BufferManagerFactory.GROW,\
          \ Message.CDR_ENC_VERSION, (ORB) orb));\n59  \n60          wrapper = ORBUtilSystemException.get((ORB)\
          \ orb, CORBALogDomains.RPC_ENCODING);\n61  \n62          performORBVersionSpecificInit();\n\
          63      }\n64  \n65      public EncapsInputStream(org.omg.CORBA.ORB orb,\
          \ ByteBuffer byteBuffer, int size, boolean littleEndian,\n66           \
          \   GIOPVersion version)\n67      {\n68          super(orb, byteBuffer,\
          \ size, littleEndian, version, Message.CDR_ENC_VERSION, BufferManagerFactory\n\
          69                  .newBufferManagerRead(BufferManagerFactory.GROW, Message.CDR_ENC_VERSION,\n\
          70                          (org.jboss.com.sun.corba.se.spi.orb.ORB) orb));\n\
          71  \n72          performORBVersionSpecificInit();\n73      }\n74  \n75\
          \      // ior/IdentifiableBase"
        lineNumber: 65
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/EncapsInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/EncapsInputStream.java
          kind: Constructor
          name: EncapsInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "69                  .newBufferManagerRead(BufferManagerFactory.GROW,\
          \ Message.CDR_ENC_VERSION,\n70                          (org.jboss.com.sun.corba.se.spi.orb.ORB)\
          \ orb));\n71  \n72          performORBVersionSpecificInit();\n73      }\n\
          74  \n75      // ior/IdentifiableBase\n76      // ior/IIOPProfile\n77  \
          \    // corba/ORBSingleton\n78      // iiop/ORB\n79      public EncapsInputStream(org.omg.CORBA.ORB\
          \ orb, byte[] data, int size)\n80      {\n81          this(orb, data, size,\
          \ GIOPVersion.V1_2);\n82      }\n83  \n84      // corba/AnyImpl\n85    \
          \  public EncapsInputStream(EncapsInputStream eis)\n86      {\n87      \
          \    super(eis);\n88  \n89          wrapper = ORBUtilSystemException.get((ORB)\
          \ (eis.orb()), CORBALogDomains.RPC_ENCODING);"
        lineNumber: 79
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/EncapsInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/EncapsInputStream.java
          kind: Constructor
          name: EncapsInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: " 83          this(orb, GIOPVersion.V1_2, isLittleEndian);\n 84\
          \      }\n 85  \n 86      public EncapsOutputStream(ORB orb, GIOPVersion\
          \ version, boolean isLittleEndian)\n 87      {\n 88          super(orb,\
          \ version, Message.CDR_ENC_VERSION, isLittleEndian, BufferManagerFactory.newBufferManagerWrite(\n\
          \ 89                  BufferManagerFactory.GROW, Message.CDR_ENC_VERSION,\
          \ orb), ORBConstants.STREAM_FORMAT_VERSION_1,\n 90                  usePooledByteBuffers);\n\
          \ 91      }\n 92  \n 93      public org.omg.CORBA.portable.InputStream create_input_stream()\n\
          \ 94      {\n 95          freeInternalCaches();\n 96  \n 97          return\
          \ new EncapsInputStream(orb(), getByteBuffer(), getSize(), isLittleEndian(),\
          \ getGIOPVersion());\n 98      }\n 99  \n100      protected CodeSetConversion.CTBConverter\
          \ createCharCTBConverter()\n101      {\n102          return CodeSetConversion.impl().getCTBConverter(OSFCodeSetRegistry.ISO_8859_1);\n\
          103      }"
        lineNumber: 93
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/EncapsOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/EncapsOutputStream.java
          kind: Method
          name: create_input_stream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.encoding;\n\
          27  \n28  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n\
          29  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\n\
          30  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n31  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n32  import org.omg.CORBA.CompletionStatus;\n\
          33  \n34  /**\n35   * Encapsulations are supposed to explicitly define their\
          \ code sets and GIOP version. The original resolution to issue\n36   * 2784\
          \ said that the defaults were UTF-8 and UTF-16, but that was not agreed\
          \ upon.\n37   * \n38   * These streams currently use CDR 1.2 with ISO8859-1\
          \ for char/string and UTF16 for wchar/wstring. If no byte order\n39   *\
          \ marker is available, the endianness of the encapsulation is used.\n40\
          \   * \n41   * When more encapsulations arise that have their own special\
          \ code sets defined, we can make all constructors take such\n42   * parameters."
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/EncapsOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/EncapsOutputStream.java
          kind: Class
          name: EncapsOutputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 948
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_long_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 953
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_ulong_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 958
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_ulonglong_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 963
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_longlong_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 968
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_float_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 973
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_double_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - lineNumber: 1161
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "158              }\n159              return obj;\n160         \
          \ }\n161      }\n162  \n163      public IDLJavaSerializationInputStream(byte\
          \ encodingVersion)\n164      {\n165          super();\n166      }\n167 \
          \ \n168      public void init(org.omg.CORBA.ORB orb, ByteBuffer byteBuffer,\
          \ int bufSize, boolean littleEndian,\n169              BufferManagerRead\
          \ bufferManager)\n170      {\n171          this.orb = (ORB) orb;\n172  \
          \        this.bufSize = bufSize;\n173          this.bufferManager = bufferManager;\n\
          174          buffer = byteBuffer;\n175          wrapper = ORBUtilSystemException.get((ORB)\
          \ orb, CORBALogDomains.RPC_ENCODING);\n176  \n177          byte[] buf;\n\
          178          if (buffer.hasArray())"
        lineNumber: 168
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: init
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "38  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\n\
          39  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n40  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IOR;\n41  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          42  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n43  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n44  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          45  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationDefaults;\n\
          46  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          47  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          48  import org.omg.CORBA.Any;\n49  import org.omg.CORBA.CompletionStatus;\n\
          50  import org.omg.CORBA.Principal;\n51  import org.omg.CORBA.TypeCode;\n\
          52  import org.omg.CORBA.portable.IDLEntity;\n53  \n54  /**\n55   * Implementation\
          \ class that uses Java serialization for input streams. This assumes a GIOP\
          \ version 1.2 message format.\n56   * \n57   * This class uses a ByteArrayInputStream\
          \ as the underlying buffer. The first 16 bytes are directly read out of\
          \ the\n58   * underlying buffer. This allows [GIOPHeader (12 bytes) + requestID\
          \ (4 bytes)] to be read as bytes. Subsequent write"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Class
          name: IDLJavaSerializationInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "39  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n\
          40  import org.jboss.com.sun.corba.se.spi.ior.IOR;\n41  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          42  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n43  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n44  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          45  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationDefaults;\n\
          46  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          47  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          48  import org.omg.CORBA.Any;\n49  import org.omg.CORBA.CompletionStatus;\n\
          50  import org.omg.CORBA.Principal;\n51  import org.omg.CORBA.TypeCode;\n\
          52  import org.omg.CORBA.portable.IDLEntity;\n53  \n54  /**\n55   * Implementation\
          \ class that uses Java serialization for input streams. This assumes a GIOP\
          \ version 1.2 message format.\n56   * \n57   * This class uses a ByteArrayInputStream\
          \ as the underlying buffer. The first 16 bytes are directly read out of\
          \ the\n58   * underlying buffer. This allows [GIOPHeader (12 bytes) + requestID\
          \ (4 bytes)] to be read as bytes. Subsequent write\n59   * operations on\
          \ this output stream object uses ObjectInputStream class to read into the\
          \ buffer. This allows"
        lineNumber: 49
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Class
          name: IDLJavaSerializationInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "40  import org.jboss.com.sun.corba.se.spi.ior.IOR;\n41  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n42  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          43  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n44 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n45  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationDefaults;\n\
          46  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          47  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          48  import org.omg.CORBA.Any;\n49  import org.omg.CORBA.CompletionStatus;\n\
          50  import org.omg.CORBA.Principal;\n51  import org.omg.CORBA.TypeCode;\n\
          52  import org.omg.CORBA.portable.IDLEntity;\n53  \n54  /**\n55   * Implementation\
          \ class that uses Java serialization for input streams. This assumes a GIOP\
          \ version 1.2 message format.\n56   * \n57   * This class uses a ByteArrayInputStream\
          \ as the underlying buffer. The first 16 bytes are directly read out of\
          \ the\n58   * underlying buffer. This allows [GIOPHeader (12 bytes) + requestID\
          \ (4 bytes)] to be read as bytes. Subsequent write\n59   * operations on\
          \ this output stream object uses ObjectInputStream class to read into the\
          \ buffer. This allows\n60   * unmarshaling complex types and graphs using\
          \ the ObjectInputStream implementation."
        lineNumber: 50
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Class
          name: IDLJavaSerializationInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "41  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n42\
          \  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n43  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n44  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          45  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationDefaults;\n\
          46  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          47  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          48  import org.omg.CORBA.Any;\n49  import org.omg.CORBA.CompletionStatus;\n\
          50  import org.omg.CORBA.Principal;\n51  import org.omg.CORBA.TypeCode;\n\
          52  import org.omg.CORBA.portable.IDLEntity;\n53  \n54  /**\n55   * Implementation\
          \ class that uses Java serialization for input streams. This assumes a GIOP\
          \ version 1.2 message format.\n56   * \n57   * This class uses a ByteArrayInputStream\
          \ as the underlying buffer. The first 16 bytes are directly read out of\
          \ the\n58   * underlying buffer. This allows [GIOPHeader (12 bytes) + requestID\
          \ (4 bytes)] to be read as bytes. Subsequent write\n59   * operations on\
          \ this output stream object uses ObjectInputStream class to read into the\
          \ buffer. This allows\n60   * unmarshaling complex types and graphs using\
          \ the ObjectInputStream implementation.\n61   * "
        lineNumber: 51
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Class
          name: IDLJavaSerializationInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "42  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          43  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n44 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n45  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationDefaults;\n\
          46  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          47  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          48  import org.omg.CORBA.Any;\n49  import org.omg.CORBA.CompletionStatus;\n\
          50  import org.omg.CORBA.Principal;\n51  import org.omg.CORBA.TypeCode;\n\
          52  import org.omg.CORBA.portable.IDLEntity;\n53  \n54  /**\n55   * Implementation\
          \ class that uses Java serialization for input streams. This assumes a GIOP\
          \ version 1.2 message format.\n56   * \n57   * This class uses a ByteArrayInputStream\
          \ as the underlying buffer. The first 16 bytes are directly read out of\
          \ the\n58   * underlying buffer. This allows [GIOPHeader (12 bytes) + requestID\
          \ (4 bytes)] to be read as bytes. Subsequent write\n59   * operations on\
          \ this output stream object uses ObjectInputStream class to read into the\
          \ buffer. This allows\n60   * unmarshaling complex types and graphs using\
          \ the ObjectInputStream implementation.\n61   * \n62   * Note, this class\
          \ assumes a GIOP 1.2 style header. Further, the first 12 bytes, that is,\
          \ the GIOPHeader is read"
        lineNumber: 52
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Class
          name: IDLJavaSerializationInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "621      public void read_double_array(double[] value, int offset,\
          \ int length)\n622      {\n623          for (int i = 0; i < length; i++)\n\
          624          {\n625              value[i + offset] = read_double();\n626\
          \          }\n627      }\n628  \n629      // Complex types.\n630  \n631\
          \      public org.omg.CORBA.Object read_Object()\n632      {\n633      \
          \    return read_Object(null);\n634      }\n635  \n636      public TypeCode\
          \ read_TypeCode()\n637      {\n638          TypeCodeImpl tc = new TypeCodeImpl(orb);\n\
          639          tc.read_value(parent);\n640          return tc;\n641      }"
        lineNumber: 631
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_Object
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: '651          // REVISIT We could avoid this try-catch if we could
          peek the typecode

          652          // kind off this stream and see if it is a tk_value.

          653          // Looking at the code we know that for tk_value the Any.read_value()

          654          // below ignores the tc argument anyway (except for the kind
          field).

          655          // But still we would need to make sure that the whole typecode,

          656          // including encapsulations, is read off.

          657          try

          658          {

          659              tc.read_value(parent);

          660          }

          661          catch (org.omg.CORBA.MARSHAL ex)

          662          {

          663              if (tc.kind().value() != org.omg.CORBA.TCKind._tk_value)

          664              {

          665                  throw ex;

          666              }

          667              // We can be sure that the whole typecode encapsulation
          has been

          668              // read off.

          669              ex.printStackTrace();

          670          }

          671  '
        lineNumber: 661
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_any
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "653          // Looking at the code we know that for tk_value the\
          \ Any.read_value()\n654          // below ignores the tc argument anyway\
          \ (except for the kind field).\n655          // But still we would need\
          \ to make sure that the whole typecode,\n656          // including encapsulations,\
          \ is read off.\n657          try\n658          {\n659              tc.read_value(parent);\n\
          660          }\n661          catch (org.omg.CORBA.MARSHAL ex)\n662     \
          \     {\n663              if (tc.kind().value() != org.omg.CORBA.TCKind._tk_value)\n\
          664              {\n665                  throw ex;\n666              }\n\
          667              // We can be sure that the whole typecode encapsulation\
          \ has been\n668              // read off.\n669              ex.printStackTrace();\n\
          670          }\n671  \n672          // read off the value of the any.\n\
          673          any.read_value(parent, tc);"
        lineNumber: 663
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_any
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "740              }\n741              else\n742              {\n\
          743                  buffer.append(Character.forDigit(secondDigit, 10));\n\
          744                  wroteFirstDigit = true;\n745              }\n746  \
          \        }\n747          return buffer;\n748      }\n749  \n750      public\
          \ org.omg.CORBA.Object read_Object(Class<?> clz)\n751      {\n752  \n753\
          \          // In any case, we must first read the IOR.\n754          IOR\
          \ ior = IORFactories.makeIOR(parent);\n755          if (ior.isNil())\n756\
          \          {\n757              return null;\n758          }\n759  \n760\
          \          PresentationManager.StubFactoryFactory sff = ORB.getStubFactoryFactory();"
        lineNumber: 750
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_Object
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "796          {\n797              // clz is an interface class\n\
          798              boolean isIDL = IDLEntity.class.isAssignableFrom(clz);\n\
          799  \n800              stubFactory = sff.createStubFactory(clz.getName(),\
          \ isIDL, codeBase, clz, clz.getClassLoader());\n801          }\n802  \n\
          803          return CDRInputStream_1_0.internalIORToObject(ior, stubFactory,\
          \ orb);\n804      }\n805  \n806      public org.omg.CORBA.ORB orb()\n807\
          \      {\n808          return this.orb;\n809      }\n810  \n811      //\
          \ org.omg.CORBA_2_3.portable.InputStream\n812  \n813      public java.io.Serializable\
          \ read_value()\n814      {\n815          if (!markOn && !(markedItemQ.isEmpty()))\n\
          816          { // dequeue"
        lineNumber: 806
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "833          {\n834              throw wrapper.javaSerializationException(e,\
          \ \"read_value\");\n835          }\n836      }\n837  \n838      public java.io.Serializable\
          \ read_value(Class<?> clz)\n839      {\n840          return read_value();\n\
          841      }\n842  \n843      public java.io.Serializable read_value(org.omg.CORBA.portable.BoxedValueHelper\
          \ factory)\n844      {\n845          return read_value();\n846      }\n\
          847  \n848      public java.io.Serializable read_value(String rep_id)\n\
          849      {\n850          return read_value();\n851      }\n852  \n853  \
          \    public java.io.Serializable read_value(java.io.Serializable value)"
        lineNumber: 843
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_value
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "895      public Object read_Abstract()\n896      {\n897       \
          \   return read_abstract_interface();\n898      }\n899  \n900      public\
          \ java.io.Serializable read_Value()\n901      {\n902          return read_value();\n\
          903      }\n904  \n905      public void read_any_array(org.omg.CORBA.AnySeqHolder\
          \ seq, int offset, int length)\n906      {\n907          read_any_array(seq.value,\
          \ offset, length);\n908      }\n909  \n910      private final void read_any_array(org.omg.CORBA.Any[]\
          \ value, int offset, int length)\n911      {\n912          for (int i =\
          \ 0; i < length; i++)\n913          {\n914              value[i + offset]\
          \ = read_any();\n915          }"
        lineNumber: 905
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_any_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "900      public java.io.Serializable read_Value()\n901      {\n\
          902          return read_value();\n903      }\n904  \n905      public void\
          \ read_any_array(org.omg.CORBA.AnySeqHolder seq, int offset, int length)\n\
          906      {\n907          read_any_array(seq.value, offset, length);\n908\
          \      }\n909  \n910      private final void read_any_array(org.omg.CORBA.Any[]\
          \ value, int offset, int length)\n911      {\n912          for (int i =\
          \ 0; i < length; i++)\n913          {\n914              value[i + offset]\
          \ = read_any();\n915          }\n916      }\n917  \n918      public void\
          \ read_boolean_array(org.omg.CORBA.BooleanSeqHolder seq, int offset, int\
          \ length)\n919      {\n920          read_boolean_array(seq.value, offset,\
          \ length);"
        lineNumber: 910
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_any_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "908      }\n909  \n910      private final void read_any_array(org.omg.CORBA.Any[]\
          \ value, int offset, int length)\n911      {\n912          for (int i =\
          \ 0; i < length; i++)\n913          {\n914              value[i + offset]\
          \ = read_any();\n915          }\n916      }\n917  \n918      public void\
          \ read_boolean_array(org.omg.CORBA.BooleanSeqHolder seq, int offset, int\
          \ length)\n919      {\n920          read_boolean_array(seq.value, offset,\
          \ length);\n921      }\n922  \n923      public void read_char_array(org.omg.CORBA.CharSeqHolder\
          \ seq, int offset, int length)\n924      {\n925          read_char_array(seq.value,\
          \ offset, length);\n926      }\n927  \n928      public void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length)"
        lineNumber: 918
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_boolean_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "913          {\n914              value[i + offset] = read_any();\n\
          915          }\n916      }\n917  \n918      public void read_boolean_array(org.omg.CORBA.BooleanSeqHolder\
          \ seq, int offset, int length)\n919      {\n920          read_boolean_array(seq.value,\
          \ offset, length);\n921      }\n922  \n923      public void read_char_array(org.omg.CORBA.CharSeqHolder\
          \ seq, int offset, int length)\n924      {\n925          read_char_array(seq.value,\
          \ offset, length);\n926      }\n927  \n928      public void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length)\n929      {\n930          read_wchar_array(seq.value,\
          \ offset, length);\n931      }\n932  \n933      public void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length)"
        lineNumber: 923
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_char_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "918      public void read_boolean_array(org.omg.CORBA.BooleanSeqHolder\
          \ seq, int offset, int length)\n919      {\n920          read_boolean_array(seq.value,\
          \ offset, length);\n921      }\n922  \n923      public void read_char_array(org.omg.CORBA.CharSeqHolder\
          \ seq, int offset, int length)\n924      {\n925          read_char_array(seq.value,\
          \ offset, length);\n926      }\n927  \n928      public void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length)\n929      {\n930          read_wchar_array(seq.value,\
          \ offset, length);\n931      }\n932  \n933      public void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length)\n934      {\n935          read_octet_array(seq.value,\
          \ offset, length);\n936      }\n937  \n938      public void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length)"
        lineNumber: 928
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_wchar_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "923      public void read_char_array(org.omg.CORBA.CharSeqHolder\
          \ seq, int offset, int length)\n924      {\n925          read_char_array(seq.value,\
          \ offset, length);\n926      }\n927  \n928      public void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length)\n929      {\n930          read_wchar_array(seq.value,\
          \ offset, length);\n931      }\n932  \n933      public void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length)\n934      {\n935          read_octet_array(seq.value,\
          \ offset, length);\n936      }\n937  \n938      public void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length)\n939      {\n940          read_short_array(seq.value,\
          \ offset, length);\n941      }\n942  \n943      public void read_ushort_array(org.omg.CORBA.UShortSeqHolder\
          \ seq, int offset, int length)"
        lineNumber: 933
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_octet_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "928      public void read_wchar_array(org.omg.CORBA.WCharSeqHolder\
          \ seq, int offset, int length)\n929      {\n930          read_wchar_array(seq.value,\
          \ offset, length);\n931      }\n932  \n933      public void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length)\n934      {\n935          read_octet_array(seq.value,\
          \ offset, length);\n936      }\n937  \n938      public void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length)\n939      {\n940          read_short_array(seq.value,\
          \ offset, length);\n941      }\n942  \n943      public void read_ushort_array(org.omg.CORBA.UShortSeqHolder\
          \ seq, int offset, int length)\n944      {\n945          read_ushort_array(seq.value,\
          \ offset, length);\n946      }\n947  \n948      public void read_long_array(org.omg.CORBA.LongSeqHolder\
          \ seq, int offset, int length)"
        lineNumber: 938
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_short_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "933      public void read_octet_array(org.omg.CORBA.OctetSeqHolder\
          \ seq, int offset, int length)\n934      {\n935          read_octet_array(seq.value,\
          \ offset, length);\n936      }\n937  \n938      public void read_short_array(org.omg.CORBA.ShortSeqHolder\
          \ seq, int offset, int length)\n939      {\n940          read_short_array(seq.value,\
          \ offset, length);\n941      }\n942  \n943      public void read_ushort_array(org.omg.CORBA.UShortSeqHolder\
          \ seq, int offset, int length)\n944      {\n945          read_ushort_array(seq.value,\
          \ offset, length);\n946      }\n947  \n948      public void read_long_array(org.omg.CORBA.LongSeqHolder\
          \ seq, int offset, int length)\n949      {\n950          read_long_array(seq.value,\
          \ offset, length);\n951      }\n952  \n953      public void read_ulong_array(org.omg.CORBA.ULongSeqHolder\
          \ seq, int offset, int length)"
        lineNumber: 943
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationInputStream.java
          kind: Method
          name: read_ushort_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "131              }\n132              return obj;\n133         \
          \ }\n134      }\n135  \n136      public IDLJavaSerializationOutputStream(byte\
          \ encodingVersion)\n137      {\n138          super();\n139      }\n140 \
          \ \n141      public void init(org.omg.CORBA.ORB orb, boolean littleEndian,\
          \ BufferManagerWrite bufferManager,\n142              byte streamFormatVersion,\
          \ boolean usePooledByteBuffers)\n143      {\n144          this.orb = (ORB)\
          \ orb;\n145          this.bufferManager = bufferManager;\n146          wrapper\
          \ = ORBUtilSystemException.get((ORB) orb, CORBALogDomains.RPC_ENCODING);\n\
          147          bos = new _ByteArrayOutputStream(ORBConstants.GIOP_DEFAULT_BUFFER_SIZE);\n\
          148      }\n149  \n150      // Called from read_octet or read_long or read_ulong\
          \ method.\n151      private void initObjectOutputStream()"
        lineNumber: 141
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
          kind: Method
          name: init
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "34  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n\
          35  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n36  import\
          \ org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\n37 \
          \ import org.jboss.com.sun.corba.se.impl.util.Utility;\n38  import org.jboss.com.sun.corba.se.spi.ior.IOR;\n\
          39  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n40  import\
          \ org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n41  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          42  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n43  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          44  import org.omg.CORBA.Any;\n45  import org.omg.CORBA.CompletionStatus;\n\
          46  import org.omg.CORBA.Principal;\n47  import org.omg.CORBA.TypeCode;\n\
          48  \n49  /**\n50   * Implementation class that uses Java serialization\
          \ for output streams. This assumes a GIOP version 1.2 message format.\n\
          51   * \n52   * This class uses a ByteArrayOutputStream as the underlying\
          \ buffer. The first 16 bytes are direct writes into the\n53   * underlying\
          \ buffer. This allows [GIOPHeader (12 bytes) + requestID (4 bytes)] to be\
          \ written as bytes. Subsequent write\n54   * operations on this output stream\
          \ object uses ObjectOutputStream class to write into the buffer. This allows"
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
          kind: Class
          name: IDLJavaSerializationOutputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "35  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n\
          36  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\n\
          37  import org.jboss.com.sun.corba.se.impl.util.Utility;\n38  import org.jboss.com.sun.corba.se.spi.ior.IOR;\n\
          39  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n40  import\
          \ org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n41  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          42  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n43  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          44  import org.omg.CORBA.Any;\n45  import org.omg.CORBA.CompletionStatus;\n\
          46  import org.omg.CORBA.Principal;\n47  import org.omg.CORBA.TypeCode;\n\
          48  \n49  /**\n50   * Implementation class that uses Java serialization\
          \ for output streams. This assumes a GIOP version 1.2 message format.\n\
          51   * \n52   * This class uses a ByteArrayOutputStream as the underlying\
          \ buffer. The first 16 bytes are direct writes into the\n53   * underlying\
          \ buffer. This allows [GIOPHeader (12 bytes) + requestID (4 bytes)] to be\
          \ written as bytes. Subsequent write\n54   * operations on this output stream\
          \ object uses ObjectOutputStream class to write into the buffer. This allows\n\
          55   * marshaling complex types and graphs using the ObjectOutputStream\
          \ implementation."
        lineNumber: 45
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
          kind: Class
          name: IDLJavaSerializationOutputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "36  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\n\
          37  import org.jboss.com.sun.corba.se.impl.util.Utility;\n38  import org.jboss.com.sun.corba.se.spi.ior.IOR;\n\
          39  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n40  import\
          \ org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n41  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          42  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n43  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          44  import org.omg.CORBA.Any;\n45  import org.omg.CORBA.CompletionStatus;\n\
          46  import org.omg.CORBA.Principal;\n47  import org.omg.CORBA.TypeCode;\n\
          48  \n49  /**\n50   * Implementation class that uses Java serialization\
          \ for output streams. This assumes a GIOP version 1.2 message format.\n\
          51   * \n52   * This class uses a ByteArrayOutputStream as the underlying\
          \ buffer. The first 16 bytes are direct writes into the\n53   * underlying\
          \ buffer. This allows [GIOPHeader (12 bytes) + requestID (4 bytes)] to be\
          \ written as bytes. Subsequent write\n54   * operations on this output stream\
          \ object uses ObjectOutputStream class to write into the buffer. This allows\n\
          55   * marshaling complex types and graphs using the ObjectOutputStream\
          \ implementation.\n56   * "
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
          kind: Class
          name: IDLJavaSerializationOutputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "37  import org.jboss.com.sun.corba.se.impl.util.Utility;\n38  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IOR;\n39  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          40  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n41  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n42  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          43  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          44  import org.omg.CORBA.Any;\n45  import org.omg.CORBA.CompletionStatus;\n\
          46  import org.omg.CORBA.Principal;\n47  import org.omg.CORBA.TypeCode;\n\
          48  \n49  /**\n50   * Implementation class that uses Java serialization\
          \ for output streams. This assumes a GIOP version 1.2 message format.\n\
          51   * \n52   * This class uses a ByteArrayOutputStream as the underlying\
          \ buffer. The first 16 bytes are direct writes into the\n53   * underlying\
          \ buffer. This allows [GIOPHeader (12 bytes) + requestID (4 bytes)] to be\
          \ written as bytes. Subsequent write\n54   * operations on this output stream\
          \ object uses ObjectOutputStream class to write into the buffer. This allows\n\
          55   * marshaling complex types and graphs using the ObjectOutputStream\
          \ implementation.\n56   * \n57   * Note, this class assumes a GIOP 1.2 style\
          \ header. Note, we expect that the first 16 bytes are written only using\
          \ the"
        lineNumber: 47
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
          kind: Class
          name: IDLJavaSerializationOutputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "438      public final void write_double_array(double[] value, int\
          \ offset, int length)\n439      {\n440          for (int i = 0; i < length;\
          \ i++)\n441          {\n442              write_double(value[offset + i]);\n\
          443          }\n444      }\n445  \n446      // Complex types (objects and\
          \ graphs).\n447  \n448      public final void write_Object(org.omg.CORBA.Object\
          \ value)\n449      {\n450          if (value == null)\n451          {\n\
          452              IOR nullIOR = IORFactories.makeIOR(orb);\n453         \
          \     nullIOR.write(parent);\n454              return;\n455          }\n\
          456          // IDL to Java formal 01-06-06 1.21.4.2\n457          if (value\
          \ instanceof org.omg.CORBA.LocalObject)\n458          {"
        lineNumber: 448
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
          kind: Method
          name: write_Object
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "447  \n448      public final void write_Object(org.omg.CORBA.Object\
          \ value)\n449      {\n450          if (value == null)\n451          {\n\
          452              IOR nullIOR = IORFactories.makeIOR(orb);\n453         \
          \     nullIOR.write(parent);\n454              return;\n455          }\n\
          456          // IDL to Java formal 01-06-06 1.21.4.2\n457          if (value\
          \ instanceof org.omg.CORBA.LocalObject)\n458          {\n459           \
          \   throw wrapper.writeLocalObject(CompletionStatus.COMPLETED_MAYBE);\n\
          460          }\n461          IOR ior = ORBUtility.connectAndGetIOR(orb,\
          \ value);\n462          ior.write(parent);\n463          return;\n464  \
          \    }\n465  \n466      public final void write_TypeCode(TypeCode tc)\n\
          467      {"
        lineNumber: 457
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
          kind: Method
          name: write_Object
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "559          {\n560              doubleDigit |= 0xd;\n561     \
          \     }\n562          else\n563          {\n564              doubleDigit\
          \ |= 0xc;\n565          }\n566          this.write_octet(doubleDigit);\n\
          567      }\n568  \n569      public final org.omg.CORBA.ORB orb()\n570  \
          \    {\n571          return this.orb;\n572      }\n573  \n574      // org.omg.CORBA_2_3.portable.OutputStream\n\
          575  \n576      public final void write_value(java.io.Serializable value)\n\
          577      {\n578          write_value(value, (String) null);\n579      }"
        lineNumber: 569
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "588          try\n589          {\n590              os.writeObject(value);\n\
          591          }\n592          catch (Exception e)\n593          {\n594  \
          \            throw wrapper.javaSerializationException(e, \"write_value\"\
          );\n595          }\n596      }\n597  \n598      public final void write_value(java.io.Serializable\
          \ value, org.omg.CORBA.portable.BoxedValueHelper factory)\n599      {\n\
          600          this.write_value(value, (String) null);\n601      }\n602  \n\
          603      public final void write_abstract_interface(Object obj)\n604   \
          \   {\n605  \n606          boolean isCorbaObject = false; // Assume value\
          \ type.\n607          org.omg.CORBA.Object theCorbaObject = null;\n608  "
        lineNumber: 598
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
          kind: Method
          name: write_value
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "597  \n598      public final void write_value(java.io.Serializable\
          \ value, org.omg.CORBA.portable.BoxedValueHelper factory)\n599      {\n\
          600          this.write_value(value, (String) null);\n601      }\n602  \n\
          603      public final void write_abstract_interface(Object obj)\n604   \
          \   {\n605  \n606          boolean isCorbaObject = false; // Assume value\
          \ type.\n607          org.omg.CORBA.Object theCorbaObject = null;\n608 \
          \ \n609          // Is it a CORBA.Object?\n610          if (obj != null\
          \ && obj instanceof org.omg.CORBA.Object)\n611          {\n612         \
          \     theCorbaObject = (org.omg.CORBA.Object) obj;\n613              isCorbaObject\
          \ = true;\n614          }\n615  \n616          // Write the boolean flag.\n\
          617          this.write_boolean(isCorbaObject);"
        lineNumber: 607
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
          kind: Method
          name: write_abstract_interface
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "600          this.write_value(value, (String) null);\n601     \
          \ }\n602  \n603      public final void write_abstract_interface(Object obj)\n\
          604      {\n605  \n606          boolean isCorbaObject = false; // Assume\
          \ value type.\n607          org.omg.CORBA.Object theCorbaObject = null;\n\
          608  \n609          // Is it a CORBA.Object?\n610          if (obj != null\
          \ && obj instanceof org.omg.CORBA.Object)\n611          {\n612         \
          \     theCorbaObject = (org.omg.CORBA.Object) obj;\n613              isCorbaObject\
          \ = true;\n614          }\n615  \n616          // Write the boolean flag.\n\
          617          this.write_boolean(isCorbaObject);\n618  \n619          //\
          \ Now write out the object.\n620          if (isCorbaObject)"
        lineNumber: 610
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
          kind: Method
          name: write_abstract_interface
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "602  \n603      public final void write_abstract_interface(Object\
          \ obj)\n604      {\n605  \n606          boolean isCorbaObject = false; //\
          \ Assume value type.\n607          org.omg.CORBA.Object theCorbaObject =\
          \ null;\n608  \n609          // Is it a CORBA.Object?\n610          if (obj\
          \ != null && obj instanceof org.omg.CORBA.Object)\n611          {\n612 \
          \             theCorbaObject = (org.omg.CORBA.Object) obj;\n613        \
          \      isCorbaObject = true;\n614          }\n615  \n616          // Write\
          \ the boolean flag.\n617          this.write_boolean(isCorbaObject);\n618\
          \  \n619          // Now write out the object.\n620          if (isCorbaObject)\n\
          621          {\n622              write_Object(theCorbaObject);"
        lineNumber: 612
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
          kind: Method
          name: write_abstract_interface
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "689      public final void write_Abstract(Object value)\n690  \
          \    {\n691          write_abstract_interface(value);\n692      }\n693 \
          \ \n694      public final void write_Value(java.io.Serializable value)\n\
          695      {\n696          write_value(value);\n697      }\n698  \n699   \
          \   public final void write_any_array(org.omg.CORBA.Any[] value, int offset,\
          \ int length)\n700      {\n701          for (int i = 0; i < length; i++)\n\
          702          {\n703              write_any(value[offset + i]);\n704    \
          \      }\n705      }\n706  \n707      // org.omg.CORBA.portable.ValueBase\n\
          708  \n709      public final String[] _truncatable_ids()"
        lineNumber: 699
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
          kind: Method
          name: write_any_array
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "834          }\n835          while (stringBuffer.length() < digits)\n\
          836          {\n837              stringBuffer.insert(0, '0');\n838     \
          \     }\n839  \n840          // This string contains no sign or dot\n841\
          \          this.write_fixed(stringBuffer.toString(), bigDecimal.signum());\n\
          842      }\n843  \n844      public final void writeOctetSequenceTo(org.omg.CORBA.portable.OutputStream\
          \ s)\n845      {\n846          byte[] buf = this.toByteArray(); // new copy.\n\
          847          s.write_long(buf.length);\n848          s.write_octet_array(buf,\
          \ 0, buf.length);\n849      }\n850  \n851      public final GIOPVersion\
          \ getGIOPVersion()\n852      {\n853          return GIOPVersion.V1_2;\n\
          854      }"
        lineNumber: 844
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/IDLJavaSerializationOutputStream.java
          kind: Method
          name: writeOctetSequenceTo
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: " 93              // The enclosed stream has to consider if the\
          \ enclosing stream had to read the enclosed stream completely\n 94     \
          \         // when creating it. This is why the size of the enclosed stream\
          \ needs to be substracted.\n 95              int topPos = ((TypeCodeReader)\
          \ enclosure).getTopLevelPosition();\n 96              // Substract getBufferLength\
          \ from the parents pos because it read this stream from its own when creating\
          \ it\n 97              int pos = topPos - getBufferLength() + getPosition();\n\
          \ 98              return pos;\n 99          }\n100          return getPosition();\n\
          101      }\n102  \n103      public static TypeCodeInputStream readEncapsulation(InputStream\
          \ is, org.omg.CORBA.ORB _orb)\n104      {\n105          // _REVISIT_ Would\
          \ be nice if we didn't have to copy the buffer!\n106          TypeCodeInputStream\
          \ encap;\n107  \n108          int encapLength = is.read_long();\n109  \n\
          110          // read off part of the buffer corresponding to the encapsulation\n\
          111          byte[] encapBuffer = new byte[encapLength];\n112          is.read_octet_array(encapBuffer,\
          \ 0, encapBuffer.length);\n113  "
        lineNumber: 103
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeInputStream.java
          kind: Method
          name: readEncapsulation
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "25  \n26  package org.jboss.com.sun.corba.se.impl.encoding;\n27\
          \  \n28  import java.nio.ByteBuffer;\n29  import java.util.HashMap;\n30\
          \  import java.util.Iterator;\n31  import java.util.Map;\n32  \n33  import\
          \ org.jboss.com.sun.corba.se.impl.corba.TypeCodeImpl;\n34  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          35  import org.omg.CORBA_2_3.portable.InputStream;\n36  \n37  public class\
          \ TypeCodeInputStream extends EncapsInputStream implements TypeCodeReader\n\
          38  {\n39      private Map<Integer, TypeCodeImpl> typeMap = null;\n40  \n\
          41      private InputStream enclosure = null;\n42  \n43      public TypeCodeInputStream(org.omg.CORBA.ORB\
          \ orb, byte[] data, int size)\n44      {\n45          super(orb, data, size);"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeInputStream.java
          kind: Class
          name: TypeCodeInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "33  import org.jboss.com.sun.corba.se.impl.corba.TypeCodeImpl;\n\
          34  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n35  import\
          \ org.omg.CORBA_2_3.portable.InputStream;\n36  \n37  public class TypeCodeInputStream\
          \ extends EncapsInputStream implements TypeCodeReader\n38  {\n39      private\
          \ Map<Integer, TypeCodeImpl> typeMap = null;\n40  \n41      private InputStream\
          \ enclosure = null;\n42  \n43      public TypeCodeInputStream(org.omg.CORBA.ORB\
          \ orb, byte[] data, int size)\n44      {\n45          super(orb, data, size);\n\
          46      }\n47  \n48      public TypeCodeInputStream(org.omg.CORBA.ORB orb,\
          \ byte[] data, int size, boolean littleEndian, GIOPVersion version)\n49\
          \      {\n50          super(orb, data, size, littleEndian, version);\n51\
          \      }\n52  \n53      public TypeCodeInputStream(org.omg.CORBA.ORB orb,\
          \ ByteBuffer byteBuffer, int size, boolean littleEndian,"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeInputStream.java
          kind: Constructor
          name: TypeCodeInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "38  {\n39      private Map<Integer, TypeCodeImpl> typeMap = null;\n\
          40  \n41      private InputStream enclosure = null;\n42  \n43      public\
          \ TypeCodeInputStream(org.omg.CORBA.ORB orb, byte[] data, int size)\n44\
          \      {\n45          super(orb, data, size);\n46      }\n47  \n48     \
          \ public TypeCodeInputStream(org.omg.CORBA.ORB orb, byte[] data, int size,\
          \ boolean littleEndian, GIOPVersion version)\n49      {\n50          super(orb,\
          \ data, size, littleEndian, version);\n51      }\n52  \n53      public TypeCodeInputStream(org.omg.CORBA.ORB\
          \ orb, ByteBuffer byteBuffer, int size, boolean littleEndian,\n54      \
          \        GIOPVersion version)\n55      {\n56          super(orb, byteBuffer,\
          \ size, littleEndian, version);\n57      }\n58  "
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeInputStream.java
          kind: Constructor
          name: TypeCodeInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "43      public TypeCodeInputStream(org.omg.CORBA.ORB orb, byte[]\
          \ data, int size)\n44      {\n45          super(orb, data, size);\n46  \
          \    }\n47  \n48      public TypeCodeInputStream(org.omg.CORBA.ORB orb,\
          \ byte[] data, int size, boolean littleEndian, GIOPVersion version)\n49\
          \      {\n50          super(orb, data, size, littleEndian, version);\n51\
          \      }\n52  \n53      public TypeCodeInputStream(org.omg.CORBA.ORB orb,\
          \ ByteBuffer byteBuffer, int size, boolean littleEndian,\n54           \
          \   GIOPVersion version)\n55      {\n56          super(orb, byteBuffer,\
          \ size, littleEndian, version);\n57      }\n58  \n59      public void addTypeCodeAtPosition(TypeCodeImpl\
          \ tc, int position)\n60      {\n61          if (typeMap == null)\n62   \
          \       {\n63              typeMap = new HashMap<Integer, TypeCodeImpl>(16);"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeInputStream.java
          kind: Constructor
          name: TypeCodeInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: " 95          typeMap.put(id, position);\n 96      }\n 97  \n 98\
          \      public int getPositionForID(String id)\n 99      {\n100         \
          \ if (typeMap == null)\n101              throw wrapper.refTypeIndirType(CompletionStatus.COMPLETED_NO);\n\
          102          return typeMap.get(id);\n103      }\n104  \n105      public\
          \ void writeRawBuffer(org.omg.CORBA.portable.OutputStream s, int firstLong)\n\
          106      {\n107          // Writes this streams buffer to the given OutputStream\
          \ without byte order flag and length as is the case for\n108          //\
          \ encapsulations.\n109  \n110          // Make sure to align s to 4 byte\
          \ boundaries. Unfortunately we can't do just this:\n111          // s.alignAndReserve(4,\
          \ 4); So we have to take the first four bytes given in firstLong and write\
          \ them with a\n112          // call to write_long which will trigger the\
          \ alignment. Then write the rest of the byte array.\n113  \n114        \
          \  s.write_long(firstLong);\n115          ByteBuffer byteBuffer = getByteBuffer();"
        lineNumber: 105
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeOutputStream.java
          kind: Method
          name: writeRawBuffer
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "121          {\n122              // get bytes from DirectByteBuffer\
          \ NOTE: Microbenchmarks are showing it is faster to do a loop of\n123  \
          \            // ByteBuffer.get(int) than it is to do a bulk ByteBuffer.get(byte[],\
          \ offset, length)\n124              byte[] buf = new byte[byteBuffer.limit()];\n\
          125              for (int i = 0; i < buf.length; i++)\n126             \
          \     buf[i] = byteBuffer.get(i);\n127              s.write_octet_array(buf,\
          \ 4, getIndex() - 4);\n128          }\n129      }\n130  \n131      public\
          \ TypeCodeOutputStream createEncapsulation(org.omg.CORBA.ORB _orb)\n132\
          \      {\n133          TypeCodeOutputStream encap = new TypeCodeOutputStream((ORB)\
          \ _orb, isLittleEndian());\n134          encap.setEnclosingOutputStream(this);\n\
          135          encap.makeEncapsulation();\n136          // if (TypeCodeImpl.debug)\
          \ System.out.println(\"Created TypeCodeOutputStream \" + encap + \" with\
          \ parent \" + this);\n137          return encap;\n138      }\n139  \n140\
          \      protected void makeEncapsulation()\n141      {"
        lineNumber: 131
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeOutputStream.java
          kind: Method
          name: createEncapsulation
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.encoding;\n\
          27  \n28  import java.nio.ByteBuffer;\n29  import java.util.HashMap;\n30\
          \  import java.util.Iterator;\n31  import java.util.Map;\n32  \n33  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n34  import org.omg.CORBA.CompletionStatus;\n\
          35  import org.omg.CORBA_2_3.portable.OutputStream;\n36  \n37  public final\
          \ class TypeCodeOutputStream extends EncapsOutputStream\n38  {\n39     \
          \ private OutputStream enclosure = null;\n40  \n41      private Map<String,\
          \ Integer> typeMap = null;\n42  \n43      private boolean isEncapsulation\
          \ = false;\n44  "
        lineNumber: 34
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeOutputStream.java
          kind: Class
          name: TypeCodeOutputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "25  \n26  package org.jboss.com.sun.corba.se.impl.encoding;\n27\
          \  \n28  import java.nio.ByteBuffer;\n29  import java.util.HashMap;\n30\
          \  import java.util.Iterator;\n31  import java.util.Map;\n32  \n33  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n34  import org.omg.CORBA.CompletionStatus;\n\
          35  import org.omg.CORBA_2_3.portable.OutputStream;\n36  \n37  public final\
          \ class TypeCodeOutputStream extends EncapsOutputStream\n38  {\n39     \
          \ private OutputStream enclosure = null;\n40  \n41      private Map<String,\
          \ Integer> typeMap = null;\n42  \n43      private boolean isEncapsulation\
          \ = false;\n44  \n45      public TypeCodeOutputStream(ORB orb)"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeOutputStream.java
          kind: Class
          name: TypeCodeOutputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "45      public TypeCodeOutputStream(ORB orb)\n46      {\n47   \
          \       super(orb, false);\n48      }\n49  \n50      public TypeCodeOutputStream(ORB\
          \ orb, boolean littleEndian)\n51      {\n52          super(orb, littleEndian);\n\
          53      }\n54  \n55      public org.omg.CORBA.portable.InputStream create_input_stream()\n\
          56      {\n57          // return new TypeCodeInputStream((ORB)orb(), getByteBuffer(),\
          \ getIndex(), isLittleEndian());\n58          TypeCodeInputStream tcis =\
          \ new TypeCodeInputStream(orb(), getByteBuffer(), getIndex(), isLittleEndian(),\n\
          59                  getGIOPVersion());\n60          return tcis;\n61   \
          \   }\n62  \n63      public void setEnclosingOutputStream(OutputStream enclosure)\n\
          64      {\n65          this.enclosure = enclosure;"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/TypeCodeOutputStream.java
          kind: Method
          name: create_input_stream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "233      public void read_float_array(float[] value, int offset,\
          \ int length)\n234      {\n235          stream.read_float_array(value, offset,\
          \ length);\n236      }\n237  \n238      public void read_double_array(double[]\
          \ value, int offset, int length)\n239      {\n240          stream.read_double_array(value,\
          \ offset, length);\n241      }\n242  \n243      public org.omg.CORBA.Object\
          \ read_Object()\n244      {\n245          return stream.read_Object();\n\
          246      }\n247  \n248      public java.io.Serializable read_value()\n249\
          \      {\n250          return stream.read_value();\n251      }\n252  \n\
          253      public TypeCode read_TypeCode()"
        lineNumber: 243
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/WrapperInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/WrapperInputStream.java
          kind: Method
          name: read_Object
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "263      public Principal read_Principal()\n264      {\n265   \
          \       return stream.read_Principal();\n266      }\n267  \n268      public\
          \ java.math.BigDecimal read_fixed()\n269      {\n270          return stream.read_fixed();\n\
          271      }\n272  \n273      public org.omg.CORBA.Context read_Context()\n\
          274      {\n275          return stream.read_Context();\n276      }\n277\
          \  \n278      public org.omg.CORBA.ORB orb()\n279      {\n280          return\
          \ stream.orb();\n281      }\n282  \n283      public void addTypeCodeAtPosition(TypeCodeImpl\
          \ tc, int position)"
        lineNumber: 273
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/WrapperInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/WrapperInputStream.java
          kind: Method
          name: read_Context
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "268      public java.math.BigDecimal read_fixed()\n269      {\n\
          270          return stream.read_fixed();\n271      }\n272  \n273      public\
          \ org.omg.CORBA.Context read_Context()\n274      {\n275          return\
          \ stream.read_Context();\n276      }\n277  \n278      public org.omg.CORBA.ORB\
          \ orb()\n279      {\n280          return stream.orb();\n281      }\n282\
          \  \n283      public void addTypeCodeAtPosition(TypeCodeImpl tc, int position)\n\
          284      {\n285          if (typeMap == null)\n286          {\n287     \
          \         // if (TypeCodeImpl.debug) System.out.println(\"Creating typeMap\"\
          );\n288              typeMap = new HashMap<Integer, TypeCodeImpl>(16);"
        lineNumber: 278
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/WrapperInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/WrapperInputStream.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "27  \n28  import java.io.IOException;\n29  import java.util.ArrayList;\n\
          30  import java.util.Collections;\n31  import java.util.HashMap;\n32  import\
          \ java.util.Iterator;\n33  import java.util.List;\n34  import java.util.Map;\n\
          35  \n36  import org.jboss.com.sun.corba.se.impl.corba.TypeCodeImpl;\n37\
          \  import org.omg.CORBA.Any;\n38  import org.omg.CORBA.Principal;\n39  import\
          \ org.omg.CORBA.TypeCode;\n40  import org.omg.CORBA_2_3.portable.InputStream;\n\
          41  \n42  @SuppressWarnings(\"deprecation\")\n43  public class WrapperInputStream\
          \ extends org.omg.CORBA_2_3.portable.InputStream implements TypeCodeReader\n\
          44  {\n45      private CDRInputStream stream;\n46  \n47      private Map<Integer,\
          \ TypeCodeImpl> typeMap = null;"
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/WrapperInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/WrapperInputStream.java
          kind: Class
          name: WrapperInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "28  import java.io.IOException;\n29  import java.util.ArrayList;\n\
          30  import java.util.Collections;\n31  import java.util.HashMap;\n32  import\
          \ java.util.Iterator;\n33  import java.util.List;\n34  import java.util.Map;\n\
          35  \n36  import org.jboss.com.sun.corba.se.impl.corba.TypeCodeImpl;\n37\
          \  import org.omg.CORBA.Any;\n38  import org.omg.CORBA.Principal;\n39  import\
          \ org.omg.CORBA.TypeCode;\n40  import org.omg.CORBA_2_3.portable.InputStream;\n\
          41  \n42  @SuppressWarnings(\"deprecation\")\n43  public class WrapperInputStream\
          \ extends org.omg.CORBA_2_3.portable.InputStream implements TypeCodeReader\n\
          44  {\n45      private CDRInputStream stream;\n46  \n47      private Map<Integer,\
          \ TypeCodeImpl> typeMap = null;\n48  "
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/WrapperInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/WrapperInputStream.java
          kind: Class
          name: WrapperInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "29  import java.util.ArrayList;\n30  import java.util.Collections;\n\
          31  import java.util.HashMap;\n32  import java.util.Iterator;\n33  import\
          \ java.util.List;\n34  import java.util.Map;\n35  \n36  import org.jboss.com.sun.corba.se.impl.corba.TypeCodeImpl;\n\
          37  import org.omg.CORBA.Any;\n38  import org.omg.CORBA.Principal;\n39 \
          \ import org.omg.CORBA.TypeCode;\n40  import org.omg.CORBA_2_3.portable.InputStream;\n\
          41  \n42  @SuppressWarnings(\"deprecation\")\n43  public class WrapperInputStream\
          \ extends org.omg.CORBA_2_3.portable.InputStream implements TypeCodeReader\n\
          44  {\n45      private CDRInputStream stream;\n46  \n47      private Map<Integer,\
          \ TypeCodeImpl> typeMap = null;\n48  \n49      private int startPos = 0;"
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/WrapperInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/WrapperInputStream.java
          kind: Class
          name: WrapperInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "30  import java.util.Collections;\n31  import java.util.HashMap;\n\
          32  import java.util.Iterator;\n33  import java.util.List;\n34  import java.util.Map;\n\
          35  \n36  import org.jboss.com.sun.corba.se.impl.corba.TypeCodeImpl;\n37\
          \  import org.omg.CORBA.Any;\n38  import org.omg.CORBA.Principal;\n39  import\
          \ org.omg.CORBA.TypeCode;\n40  import org.omg.CORBA_2_3.portable.InputStream;\n\
          41  \n42  @SuppressWarnings(\"deprecation\")\n43  public class WrapperInputStream\
          \ extends org.omg.CORBA_2_3.portable.InputStream implements TypeCodeReader\n\
          44  {\n45      private CDRInputStream stream;\n46  \n47      private Map<Integer,\
          \ TypeCodeImpl> typeMap = null;\n48  \n49      private int startPos = 0;\n\
          50  "
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/WrapperInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/WrapperInputStream.java
          kind: Class
          name: WrapperInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "33  import java.util.List;\n34  import java.util.Map;\n35  \n36\
          \  import org.jboss.com.sun.corba.se.impl.corba.TypeCodeImpl;\n37  import\
          \ org.omg.CORBA.Any;\n38  import org.omg.CORBA.Principal;\n39  import org.omg.CORBA.TypeCode;\n\
          40  import org.omg.CORBA_2_3.portable.InputStream;\n41  \n42  @SuppressWarnings(\"\
          deprecation\")\n43  public class WrapperInputStream extends org.omg.CORBA_2_3.portable.InputStream\
          \ implements TypeCodeReader\n44  {\n45      private CDRInputStream stream;\n\
          46  \n47      private Map<Integer, TypeCodeImpl> typeMap = null;\n48  \n\
          49      private int startPos = 0;\n50  \n51      public WrapperInputStream(CDRInputStream\
          \ s)\n52      {\n53          super();"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/WrapperInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/encoding/WrapperInputStream.java
          kind: Class
          name: WrapperInputStream
          package: org.jboss.com.sun.corba.se.impl.encoding
      - codeSnip: "34  import java.util.Hashtable;\n35  import java.util.Stack;\n\
          36  \n37  import javax.rmi.CORBA.Util;\n38  import javax.rmi.CORBA.ValueHandler;\n\
          39  \n40  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          41  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n42 \
          \ import org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription;\n\
          43  import org.jboss.com.sun.org.omg.SendingContext._CodeBaseImplBase;\n\
          44  import org.omg.CORBA.CompletionStatus;\n45  import org.omg.CORBA.ORB;\n\
          46  \n47  /**\n48   * This class acts as the remote interface to receivers\
          \ wishing to retrieve the information of a remote Class.\n49   */\n50  public\
          \ class FVDCodeBaseImpl extends _CodeBaseImplBase\n51  {\n52      private\
          \ static final long serialVersionUID = 5813777342105483423L;\n53  \n54 \
          \     // Contains rep. ids as keys to FullValueDescriptions"
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/FVDCodeBaseImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/FVDCodeBaseImpl.java
          kind: Class
          name: FVDCodeBaseImpl
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "35  import java.util.Stack;\n36  \n37  import javax.rmi.CORBA.Util;\n\
          38  import javax.rmi.CORBA.ValueHandler;\n39  \n40  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          41  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n42 \
          \ import org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription;\n\
          43  import org.jboss.com.sun.org.omg.SendingContext._CodeBaseImplBase;\n\
          44  import org.omg.CORBA.CompletionStatus;\n45  import org.omg.CORBA.ORB;\n\
          46  \n47  /**\n48   * This class acts as the remote interface to receivers\
          \ wishing to retrieve the information of a remote Class.\n49   */\n50  public\
          \ class FVDCodeBaseImpl extends _CodeBaseImplBase\n51  {\n52      private\
          \ static final long serialVersionUID = 5813777342105483423L;\n53  \n54 \
          \     // Contains rep. ids as keys to FullValueDescriptions\n55      private\
          \ static Hashtable<String, FullValueDescription> fvds = new Hashtable<String,\
          \ FullValueDescription>();"
        lineNumber: 45
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/FVDCodeBaseImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/FVDCodeBaseImpl.java
          kind: Class
          name: FVDCodeBaseImpl
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: " 92  \n 93      private static UtilSystemException utilWrapper\
          \ = UtilSystemException.get(CORBALogDomains.RPC_ENCODING);\n 94  \n 95 \
          \     // Necessary to pass the appropriate fields into the defaultReadObjectDelegate\
          \ method (which takes no parameters\n 96      // since it's called from\
          \ java.io.ObjectInpuStream defaultReadObject() which we can't change).\n\
          \ 97      //\n 98      // This is only used in the case where the fields\
          \ had to be obtained remotely because of a serializable version\n 99   \
          \   // difference. Set in inputObjectUsingFVD. Part of serialization evolution\
          \ fixes for Ladybird, bug 4365188.\n100      private ValueMember defaultReadObjectFVDMembers[]\
          \ = null;\n101  \n102      private org.omg.CORBA_2_3.portable.InputStream\
          \ orbStream;\n103  \n104      private CodeBase cbSender;\n105  \n106   \
          \   private ValueHandlerImpl vhandler; // d4365188\n107  \n108      private\
          \ Object currentObject = null;\n109  \n110      private ObjectStreamClass\
          \ currentClassDesc = null;\n111  \n112      private Class<?> currentClass\
          \ = null;"
        lineNumber: 102
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
          kind: Field
          name: orbStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "1924               * This case should never happen. If the field\
          \ types are not the same, InvalidClassException is raised when\n1925   \
          \            * matching the local class to the serialized ObjectStreamClass.\n\
          1926               */\n1927              ClassCastException cce = new ClassCastException(\"\
          Assigning instance of class \" + field.getType().getName()\n1928       \
          \               + \" to field \" + currentClassDesc.getName() + '#' + field.getField().getName());\n\
          1929              cce.initCause(e);\n1930              throw cce;\n1931\
          \          }\n1932      }\n1933  \n1934      private Object inputObjectField(org.omg.CORBA.ValueMember\
          \ field,\n1935              org.jboss.com.sun.org.omg.SendingContext.CodeBase\
          \ sender) throws IndirectionException,\n1936              ClassNotFoundException,\
          \ IOException, StreamCorruptedException\n1937      {\n1938  \n1939     \
          \     Object objectValue = null;\n1940          Class<?> type = null;\n\
          1941          String id = field.id;\n1942  \n1943          try\n1944   \
          \       {"
        lineNumber: 1934
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
          kind: Method
          name: inputObjectField
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "2063          {\n2064              boolean loadStubClass = false;\n\
          2065  \n2066              if (java.rmi.Remote.class.isAssignableFrom(fieldType))\n\
          2067              {\n2068  \n2069                  // RMI Object reference...\n\
          2070                  callType = ValueHandlerImpl.kRemoteType;\n2071  \n\
          2072              }\n2073              else if (org.omg.CORBA.Object.class.isAssignableFrom(fieldType))\n\
          2074              {\n2075  \n2076                  // IDL Object reference...\n\
          2077                  callType = ValueHandlerImpl.kRemoteType;\n2078   \
          \               loadStubClass = true;\n2079  \n2080              }\n2081\
          \              else if (vhandler.isAbstractBase(fieldType))\n2082      \
          \        {\n2083                  // IDL Abstract Object reference..."
        lineNumber: 2073
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
          kind: Method
          name: inputObjectField
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "264  \n265      /**\n266       * Dummy constructor; passes upper\
          \ stream a dummy stream;\n267       **/\n268      public IIOPInputStream()\
          \ throws java.io.IOException\n269      {\n270          super();\n271   \
          \       resetStream();\n272      }\n273  \n274      public final void setOrbStream(org.omg.CORBA_2_3.portable.InputStream\
          \ os)\n275      {\n276          orbStream = os;\n277      }\n278  \n279\
          \      public final org.omg.CORBA_2_3.portable.InputStream getOrbStream()\n\
          280      {\n281          return orbStream;\n282      }\n283  \n284     \
          \ // added setSender and getSender"
        lineNumber: 274
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
          kind: Method
          name: setOrbStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "269      {\n270          super();\n271          resetStream();\n\
          272      }\n273  \n274      public final void setOrbStream(org.omg.CORBA_2_3.portable.InputStream\
          \ os)\n275      {\n276          orbStream = os;\n277      }\n278  \n279\
          \      public final org.omg.CORBA_2_3.portable.InputStream getOrbStream()\n\
          280      {\n281          return orbStream;\n282      }\n283  \n284     \
          \ // added setSender and getSender\n285      public final void setSender(CodeBase\
          \ cb)\n286      {\n287          cbSender = cb;\n288      }\n289  "
        lineNumber: 279
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
          kind: Method
          name: getOrbStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "54  import javax.rmi.CORBA.Util;\n55  import javax.rmi.CORBA.ValueHandler;\n\
          56  \n57  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          58  import org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n\
          59  import org.jboss.com.sun.corba.se.impl.util.Utility;\n60  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          61  import org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription;\n\
          62  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n63  import\
          \ org.jboss.sun.corba.Bridge;\n64  import org.omg.CORBA.CompletionStatus;\n\
          65  import org.omg.CORBA.MARSHAL;\n66  import org.omg.CORBA.ORB;\n67  import\
          \ org.omg.CORBA.SystemException;\n68  import org.omg.CORBA.TCKind;\n69 \
          \ import org.omg.CORBA.TypeCode;\n70  import org.omg.CORBA.ValueMember;\n\
          71  import org.omg.CORBA.portable.IndirectionException;\n72  import org.omg.CORBA.portable.ValueInputStream;\n\
          73  \n74  /**"
        lineNumber: 64
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
          kind: Class
          name: IIOPInputStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "55  import javax.rmi.CORBA.ValueHandler;\n56  \n57  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          58  import org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n\
          59  import org.jboss.com.sun.corba.se.impl.util.Utility;\n60  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          61  import org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription;\n\
          62  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n63  import\
          \ org.jboss.sun.corba.Bridge;\n64  import org.omg.CORBA.CompletionStatus;\n\
          65  import org.omg.CORBA.MARSHAL;\n66  import org.omg.CORBA.ORB;\n67  import\
          \ org.omg.CORBA.SystemException;\n68  import org.omg.CORBA.TCKind;\n69 \
          \ import org.omg.CORBA.TypeCode;\n70  import org.omg.CORBA.ValueMember;\n\
          71  import org.omg.CORBA.portable.IndirectionException;\n72  import org.omg.CORBA.portable.ValueInputStream;\n\
          73  \n74  /**\n75   * IIOPInputStream is used by the ValueHandlerImpl to\
          \ handle Java serialization input semantics."
        lineNumber: 65
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
          kind: Class
          name: IIOPInputStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "56  \n57  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          58  import org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n\
          59  import org.jboss.com.sun.corba.se.impl.util.Utility;\n60  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          61  import org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription;\n\
          62  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n63  import\
          \ org.jboss.sun.corba.Bridge;\n64  import org.omg.CORBA.CompletionStatus;\n\
          65  import org.omg.CORBA.MARSHAL;\n66  import org.omg.CORBA.ORB;\n67  import\
          \ org.omg.CORBA.SystemException;\n68  import org.omg.CORBA.TCKind;\n69 \
          \ import org.omg.CORBA.TypeCode;\n70  import org.omg.CORBA.ValueMember;\n\
          71  import org.omg.CORBA.portable.IndirectionException;\n72  import org.omg.CORBA.portable.ValueInputStream;\n\
          73  \n74  /**\n75   * IIOPInputStream is used by the ValueHandlerImpl to\
          \ handle Java serialization input semantics.\n76   * "
        lineNumber: 66
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
          kind: Class
          name: IIOPInputStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "57  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          58  import org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n\
          59  import org.jboss.com.sun.corba.se.impl.util.Utility;\n60  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          61  import org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription;\n\
          62  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n63  import\
          \ org.jboss.sun.corba.Bridge;\n64  import org.omg.CORBA.CompletionStatus;\n\
          65  import org.omg.CORBA.MARSHAL;\n66  import org.omg.CORBA.ORB;\n67  import\
          \ org.omg.CORBA.SystemException;\n68  import org.omg.CORBA.TCKind;\n69 \
          \ import org.omg.CORBA.TypeCode;\n70  import org.omg.CORBA.ValueMember;\n\
          71  import org.omg.CORBA.portable.IndirectionException;\n72  import org.omg.CORBA.portable.ValueInputStream;\n\
          73  \n74  /**\n75   * IIOPInputStream is used by the ValueHandlerImpl to\
          \ handle Java serialization input semantics.\n76   * \n77   * @author Stephen\
          \ Lewallen"
        lineNumber: 67
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
          kind: Class
          name: IIOPInputStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "58  import org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n\
          59  import org.jboss.com.sun.corba.se.impl.util.Utility;\n60  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          61  import org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription;\n\
          62  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n63  import\
          \ org.jboss.sun.corba.Bridge;\n64  import org.omg.CORBA.CompletionStatus;\n\
          65  import org.omg.CORBA.MARSHAL;\n66  import org.omg.CORBA.ORB;\n67  import\
          \ org.omg.CORBA.SystemException;\n68  import org.omg.CORBA.TCKind;\n69 \
          \ import org.omg.CORBA.TypeCode;\n70  import org.omg.CORBA.ValueMember;\n\
          71  import org.omg.CORBA.portable.IndirectionException;\n72  import org.omg.CORBA.portable.ValueInputStream;\n\
          73  \n74  /**\n75   * IIOPInputStream is used by the ValueHandlerImpl to\
          \ handle Java serialization input semantics.\n76   * \n77   * @author Stephen\
          \ Lewallen\n78   * @since JDK1.1.6"
        lineNumber: 68
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
          kind: Class
          name: IIOPInputStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "59  import org.jboss.com.sun.corba.se.impl.util.Utility;\n60  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n61  import org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription;\n\
          62  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n63  import\
          \ org.jboss.sun.corba.Bridge;\n64  import org.omg.CORBA.CompletionStatus;\n\
          65  import org.omg.CORBA.MARSHAL;\n66  import org.omg.CORBA.ORB;\n67  import\
          \ org.omg.CORBA.SystemException;\n68  import org.omg.CORBA.TCKind;\n69 \
          \ import org.omg.CORBA.TypeCode;\n70  import org.omg.CORBA.ValueMember;\n\
          71  import org.omg.CORBA.portable.IndirectionException;\n72  import org.omg.CORBA.portable.ValueInputStream;\n\
          73  \n74  /**\n75   * IIOPInputStream is used by the ValueHandlerImpl to\
          \ handle Java serialization input semantics.\n76   * \n77   * @author Stephen\
          \ Lewallen\n78   * @since JDK1.1.6\n79   */"
        lineNumber: 69
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
          kind: Class
          name: IIOPInputStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "60  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          61  import org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription;\n\
          62  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n63  import\
          \ org.jboss.sun.corba.Bridge;\n64  import org.omg.CORBA.CompletionStatus;\n\
          65  import org.omg.CORBA.MARSHAL;\n66  import org.omg.CORBA.ORB;\n67  import\
          \ org.omg.CORBA.SystemException;\n68  import org.omg.CORBA.TCKind;\n69 \
          \ import org.omg.CORBA.TypeCode;\n70  import org.omg.CORBA.ValueMember;\n\
          71  import org.omg.CORBA.portable.IndirectionException;\n72  import org.omg.CORBA.portable.ValueInputStream;\n\
          73  \n74  /**\n75   * IIOPInputStream is used by the ValueHandlerImpl to\
          \ handle Java serialization input semantics.\n76   * \n77   * @author Stephen\
          \ Lewallen\n78   * @since JDK1.1.6\n79   */\n80  "
        lineNumber: 70
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
          kind: Class
          name: IIOPInputStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "61  import org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription;\n\
          62  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n63  import\
          \ org.jboss.sun.corba.Bridge;\n64  import org.omg.CORBA.CompletionStatus;\n\
          65  import org.omg.CORBA.MARSHAL;\n66  import org.omg.CORBA.ORB;\n67  import\
          \ org.omg.CORBA.SystemException;\n68  import org.omg.CORBA.TCKind;\n69 \
          \ import org.omg.CORBA.TypeCode;\n70  import org.omg.CORBA.ValueMember;\n\
          71  import org.omg.CORBA.portable.IndirectionException;\n72  import org.omg.CORBA.portable.ValueInputStream;\n\
          73  \n74  /**\n75   * IIOPInputStream is used by the ValueHandlerImpl to\
          \ handle Java serialization input semantics.\n76   * \n77   * @author Stephen\
          \ Lewallen\n78   * @since JDK1.1.6\n79   */\n80  \n81  public class IIOPInputStream\
          \ extends org.jboss.com.sun.corba.se.impl.io.InputStreamHook"
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
          kind: Class
          name: IIOPInputStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "62  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n\
          63  import org.jboss.sun.corba.Bridge;\n64  import org.omg.CORBA.CompletionStatus;\n\
          65  import org.omg.CORBA.MARSHAL;\n66  import org.omg.CORBA.ORB;\n67  import\
          \ org.omg.CORBA.SystemException;\n68  import org.omg.CORBA.TCKind;\n69 \
          \ import org.omg.CORBA.TypeCode;\n70  import org.omg.CORBA.ValueMember;\n\
          71  import org.omg.CORBA.portable.IndirectionException;\n72  import org.omg.CORBA.portable.ValueInputStream;\n\
          73  \n74  /**\n75   * IIOPInputStream is used by the ValueHandlerImpl to\
          \ handle Java serialization input semantics.\n76   * \n77   * @author Stephen\
          \ Lewallen\n78   * @since JDK1.1.6\n79   */\n80  \n81  public class IIOPInputStream\
          \ extends org.jboss.com.sun.corba.se.impl.io.InputStreamHook\n82  {"
        lineNumber: 72
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
          kind: Class
          name: IIOPInputStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "948              IOException exc = new IOException(e.getMessage());\n\
          949              exc.initCause(e);\n950              throw exc;\n951   \
          \       }\n952      }\n953  \n954      /**\n955       * Helper method for\
          \ correcting the Kestrel bug 4367783 (dealing with larger than 8-bit chars).\
          \ The old behavior is\n956       * preserved in orbutil.IIOPInputStream_1_3\
          \ in order to interoperate with our legacy ORBs.\n957       */\n958    \
          \  protected String internalReadUTF(org.omg.CORBA.portable.InputStream stream)\n\
          959      {\n960          return stream.read_wstring();\n961      }\n962\
          \  \n963      public final String readUTF() throws IOException\n964    \
          \  {\n965          try\n966          {\n967              readObjectState.readData(this);\n\
          968  "
        lineNumber: 958
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPInputStream.java
          kind: Method
          name: internalReadUTF
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: " 89      }\n 90  \n 91      // If using RMI-IIOP stream format\
          \ version 2, this tells the ORB stream (which must be a ValueOutputStream)\
          \ to begin\n 92      // a new valuetype to contain the optional data of\
          \ the writeObject method.\n 93      protected void beginOptionalCustomData()\n\
          \ 94      {\n 95  \n 96          if (streamFormatVersion == 2)\n 97    \
          \      {\n 98  \n 99              org.omg.CORBA.portable.ValueOutputStream\
          \ vout = (org.omg.CORBA.portable.ValueOutputStream) orbStream;\n100  \n\
          101              vout.start_value(currentClassDesc.getRMIIIOPOptionalDataRepId());\n\
          102          }\n103      }\n104  \n105      public final void setOrbStream(org.omg.CORBA_2_3.portable.OutputStream\
          \ os)\n106      {\n107          orbStream = os;\n108      }\n109  "
        lineNumber: 99
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPOutputStream.java
          kind: Method
          name: beginOptionalCustomData
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: " 95  \n 96          if (streamFormatVersion == 2)\n 97        \
          \  {\n 98  \n 99              org.omg.CORBA.portable.ValueOutputStream vout\
          \ = (org.omg.CORBA.portable.ValueOutputStream) orbStream;\n100  \n101  \
          \            vout.start_value(currentClassDesc.getRMIIIOPOptionalDataRepId());\n\
          102          }\n103      }\n104  \n105      public final void setOrbStream(org.omg.CORBA_2_3.portable.OutputStream\
          \ os)\n106      {\n107          orbStream = os;\n108      }\n109  \n110\
          \      public final org.omg.CORBA_2_3.portable.OutputStream getOrbStream()\n\
          111      {\n112          return orbStream;\n113      }\n114  \n115     \
          \ public final void increaseRecursionDepth()"
        lineNumber: 105
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPOutputStream.java
          kind: Method
          name: setOrbStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "100  \n101              vout.start_value(currentClassDesc.getRMIIIOPOptionalDataRepId());\n\
          102          }\n103      }\n104  \n105      public final void setOrbStream(org.omg.CORBA_2_3.portable.OutputStream\
          \ os)\n106      {\n107          orbStream = os;\n108      }\n109  \n110\
          \      public final org.omg.CORBA_2_3.portable.OutputStream getOrbStream()\n\
          111      {\n112          return orbStream;\n113      }\n114  \n115     \
          \ public final void increaseRecursionDepth()\n116      {\n117          recursionDepth++;\n\
          118      }\n119  \n120      public final int decreaseRecursionDepth()"
        lineNumber: 110
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPOutputStream.java
          kind: Method
          name: getOrbStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "508  \n509      protected final void writeStreamHeader() throws\
          \ IOException\n510      {\n511          // no op\n512      }\n513  \n514\
          \      /**\n515       * Helper method for correcting the Kestrel bug 4367783\
          \ (dealing with larger than 8-bit chars). The old behavior is\n516     \
          \  * preserved in orbutil.IIOPInputStream_1_3 in order to interoperate with\
          \ our legacy ORBs.\n517       */\n518      protected void internalWriteUTF(org.omg.CORBA.portable.OutputStream\
          \ stream, String data)\n519      {\n520          stream.write_wstring(data);\n\
          521      }\n522  \n523      public final void writeUTF(String data) throws\
          \ IOException\n524      {\n525          try\n526          {\n527       \
          \       writeObjectState.writeData(this);\n528  "
        lineNumber: 518
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPOutputStream.java
          kind: Method
          name: internalWriteUTF
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "59      private UtilSystemException wrapper = UtilSystemException.get(CORBALogDomains.RPC_ENCODING);\n\
          60  \n61      private static Bridge bridge = AccessController.doPrivileged(new\
          \ PrivilegedAction<Bridge>()\n62      {\n63          public Bridge run()\n\
          64          {\n65              return Bridge.get();\n66          }\n67 \
          \     });\n68  \n69      private org.omg.CORBA_2_3.portable.OutputStream\
          \ orbStream;\n70  \n71      private Object currentObject = null;\n72  \n\
          73      private ObjectStreamClass currentClassDesc = null;\n74  \n75   \
          \   private int recursionDepth = 0;\n76  \n77      private int simpleWriteDepth\
          \ = 0;\n78  \n79      private IOException abortIOException = null;"
        lineNumber: 69
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPOutputStream.java
          kind: Field
          name: orbStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "742              if (type.isInterface())\n743              {\n\
          744                  if (java.rmi.Remote.class.isAssignableFrom(type))\n\
          745                  {\n746  \n747                      // RMI Object reference...\n\
          748  \n749                      callType = ValueHandlerImpl.kRemoteType;\n\
          750  \n751                  }\n752                  else if (org.omg.CORBA.Object.class.isAssignableFrom(type))\n\
          753                  {\n754  \n755                      // IDL Object reference...\n\
          756                      callType = ValueHandlerImpl.kRemoteType;\n757 \
          \ \n758                  }\n759                  else if (RepositoryId.isAbstractBase(type))\n\
          760                  {\n761                      // IDL Abstract Object\
          \ reference...\n762                      callType = ValueHandlerImpl.kAbstractType;"
        lineNumber: 752
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPOutputStream.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/IIOPOutputStream.java
          kind: Method
          name: writeObjectField
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "249      // we have a readObject method and whether or not the\n\
          250      // sender wrote default data\n251  \n252      protected void setState(ReadObjectState\
          \ newState)\n253      {\n254          readObjectState = newState;\n255 \
          \     }\n256  \n257      protected abstract byte getStreamFormatVersion();\n\
          258  \n259      protected abstract org.omg.CORBA_2_3.portable.InputStream\
          \ getOrbStream();\n260  \n261      // Description of possible actions\n\
          262      protected static class ReadObjectState\n263      {\n264       \
          \   public void beginUnmarshalCustomValue(InputStreamHook stream, boolean\
          \ calledDefaultWriteObject,\n265                  boolean hasReadObject)\
          \ throws IOException\n266          {\n267          }\n268  \n269       \
          \   public void endUnmarshalCustomValue(InputStreamHook stream) throws IOException"
        lineNumber: 259
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/InputStreamHook.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/InputStreamHook.java
          kind: Method
          name: getOrbStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "36  import java.io.ObjectInputStream;\n37  import java.io.StreamCorruptedException;\n\
          38  import java.util.HashMap;\n39  import java.util.Map;\n40  \n41  import\
          \ org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n42  import\
          \ org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n43  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n44  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;\n\
          45  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n46  import\
          \ org.omg.CORBA.portable.ValueInputStream;\n47  \n48  public abstract class\
          \ InputStreamHook extends ObjectInputStream\n49  {\n50      // These should\
          \ be visible in all the nested classes\n51      static final OMGSystemException\
          \ omgWrapper = OMGSystemException.get(CORBALogDomains.RPC_ENCODING);\n52\
          \  \n53      static final UtilSystemException utilWrapper = UtilSystemException.get(CORBALogDomains.RPC_ENCODING);\n\
          54  \n55      private class HookGetFields extends ObjectInputStream.GetField\n\
          56      {"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/InputStreamHook.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/InputStreamHook.java
          kind: Class
          name: DefaultState
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "421  \n422              // Read the fake valuetype header in stream\
          \ format version 2\n423              if (stream.getStreamFormatVersion()\
          \ == 2)\n424                  ((ValueInputStream) stream.getOrbStream()).start_value();\n\
          425  \n426              stream.setState(IN_READ_OBJECT_OPT_DATA);\n427 \
          \         }\n428  \n429          public void readData(InputStreamHook stream)\
          \ throws IOException\n430          {\n431              org.omg.CORBA.ORB\
          \ orb = stream.getOrbStream().orb();\n432              if ((orb == null)\
          \ || !(orb instanceof org.jboss.com.sun.corba.se.spi.orb.ORB))\n433    \
          \          {\n434                  throw new StreamCorruptedException(\"\
          Default data must be read first\");\n435              }\n436           \
          \   ORBVersion clientOrbVersion = ((org.jboss.com.sun.corba.se.spi.orb.ORB)\
          \ orb).getORBVersion();\n437  \n438              // Fix Date interop bug.\
          \ For older versions of the ORB don't do\n439              // anything for\
          \ readData(). Before this used to throw\n440              // StreamCorruptedException\
          \ for older versions of the ORB where\n441              // calledDefaultWriteObject\
          \ always returns true."
        lineNumber: 431
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/InputStreamHook.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/InputStreamHook.java
          kind: Method
          name: readData
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "47  import java.security.DigestOutputStream;\n48  import java.security.MessageDigest;\n\
          49  import java.security.NoSuchAlgorithmException;\n50  import java.security.PrivilegedAction;\n\
          51  import java.util.Arrays;\n52  import java.util.Comparator;\n53  import\
          \ java.util.Hashtable;\n54  \n55  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n\
          56  import org.jboss.sun.corba.Bridge;\n57  import org.omg.CORBA.ValueMember;\n\
          58  \n59  /**\n60   * A ObjectStreamClass describes a class that can be\
          \ serialized to a stream or a class that was serialized to a stream.\n61\
          \   * It contains the name and the serialVersionUID of the class. <br>\n\
          62   * The ObjectStreamClass for a specific class loaded in this Java VM\
          \ can be found using the lookup method.\n63   * \n64   * @author Roger Riggs\n\
          65   * @since JDK1.1\n66   */\n67  public class ObjectStreamClass implements\
          \ java.io.Serializable"
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ObjectStreamClass.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ObjectStreamClass.java
          kind: Class
          name: ObjectStreamClass
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "182      // User uses PutFields to simulate default data.\n183\
          \      // See java.io.ObjectOutputStream.PutFields\n184      public void\
          \ writeFields() throws IOException\n185      {\n186  \n187          writeObjectState.defaultWriteObject(this);\n\
          188  \n189          putFields.write(this);\n190      }\n191  \n192     \
          \ public abstract org.omg.CORBA_2_3.portable.OutputStream getOrbStream();\n\
          193  \n194      protected abstract void beginOptionalCustomData();\n195\
          \  \n196      // The following is a State pattern implementation of what\n\
          197      // should be done when a Serializable has a\n198      // writeObject\
          \ method. This was especially necessary for\n199      // RMI-IIOP stream\
          \ format version 2. Please see the\n200      // state diagrams in the docs\
          \ directory of the workspace.\n201  \n202      protected WriteObjectState\
          \ writeObjectState = NOT_IN_WRITE_OBJECT;"
        lineNumber: 192
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/OutputStreamHook.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/OutputStreamHook.java
          kind: Method
          name: getOrbStream
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "326      }\n327  \n328      protected static class WroteCustomDataState\
          \ extends InWriteObjectState\n329      {\n330  \n331          public void\
          \ exitWriteObject(OutputStreamHook stream) throws IOException\n332     \
          \     {\n333              // In stream format version 2, we must tell the\
          \ ORB\n334              // stream to close the fake custom valuetype.\n\
          335              if (stream.getStreamFormatVersion() == 2)\n336        \
          \          ((org.omg.CORBA.portable.ValueOutputStream) stream.getOrbStream()).end_value();\n\
          337  \n338              stream.setState(NOT_IN_WRITE_OBJECT);\n339     \
          \     }\n340  \n341          public void defaultWriteObject(OutputStreamHook\
          \ stream) throws IOException\n342          {\n343              // XXX I18N,\
          \ logging needed.\n344              throw new IOException(\"Cannot call\
          \ defaultWriteObject/writeFields after writing custom data in RMI-IIOP\"\
          );\n345          }\n346  "
        lineNumber: 336
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/OutputStreamHook.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/OutputStreamHook.java
          kind: Method
          name: exitWriteObject
          package: org.jboss.com.sun.corba.se.impl.io
      - lineNumber: 782
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Method
          name: read_Array
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "133  \n134      private UtilSystemException utilWrapper = UtilSystemException.get(CORBALogDomains.RPC_ENCODING);\n\
          135  \n136      // See javax.rmi.CORBA.ValueHandlerMultiFormat\n137    \
          \  public byte getMaximumStreamFormatVersion()\n138      {\n139        \
          \  return MAX_STREAM_FORMAT_VERSION;\n140      }\n141  \n142      // See\
          \ javax.rmi.CORBA.ValueHandlerMultiFormat\n143      public void writeValue(org.omg.CORBA.portable.OutputStream\
          \ out, java.io.Serializable value, byte streamFormatVersion)\n144      {\n\
          145  \n146          if (streamFormatVersion == 2)\n147          {\n148 \
          \             if (!(out instanceof org.omg.CORBA.portable.ValueOutputStream))\n\
          149              {\n150                  throw omgWrapper.notAValueoutputstream();\n\
          151              }\n152          }\n153          else if (streamFormatVersion\
          \ != 1)"
        lineNumber: 143
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Method
          name: writeValue
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "138      {\n139          return MAX_STREAM_FORMAT_VERSION;\n140\
          \      }\n141  \n142      // See javax.rmi.CORBA.ValueHandlerMultiFormat\n\
          143      public void writeValue(org.omg.CORBA.portable.OutputStream out,\
          \ java.io.Serializable value, byte streamFormatVersion)\n144      {\n145\
          \  \n146          if (streamFormatVersion == 2)\n147          {\n148   \
          \           if (!(out instanceof org.omg.CORBA.portable.ValueOutputStream))\n\
          149              {\n150                  throw omgWrapper.notAValueoutputstream();\n\
          151              }\n152          }\n153          else if (streamFormatVersion\
          \ != 1)\n154          {\n155              throw omgWrapper.invalidStreamFormatVersion(new\
          \ Integer(streamFormatVersion));\n156          }\n157  \n158          writeValueWithVersion(out,\
          \ value, streamFormatVersion);"
        lineNumber: 148
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Method
          name: writeValue
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "169      }\n170  \n171      /**\n172       * Writes the value to\
          \ the stream using java semantics.\n173       * \n174       * @param out\n\
          175       *            The stream to write the value to\n176       * @param\
          \ value\n177       *            The value to be written to the stream\n\
          178       **/\n179      public void writeValue(org.omg.CORBA.portable.OutputStream\
          \ _out, java.io.Serializable value)\n180      {\n181          writeValueWithVersion(_out,\
          \ value, STREAM_FORMAT_VERSION_1);\n182      }\n183  \n184      private\
          \ void writeValueWithVersion(org.omg.CORBA.portable.OutputStream _out, java.io.Serializable\
          \ value,\n185              byte streamFormatVersion)\n186      {\n187  \n\
          188          org.omg.CORBA_2_3.portable.OutputStream out = (org.omg.CORBA_2_3.portable.OutputStream)\
          \ _out;\n189  "
        lineNumber: 179
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Method
          name: writeValue
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "174       * @param out\n175       *            The stream to write\
          \ the value to\n176       * @param value\n177       *            The value\
          \ to be written to the stream\n178       **/\n179      public void writeValue(org.omg.CORBA.portable.OutputStream\
          \ _out, java.io.Serializable value)\n180      {\n181          writeValueWithVersion(_out,\
          \ value, STREAM_FORMAT_VERSION_1);\n182      }\n183  \n184      private\
          \ void writeValueWithVersion(org.omg.CORBA.portable.OutputStream _out, java.io.Serializable\
          \ value,\n185              byte streamFormatVersion)\n186      {\n187  \n\
          188          org.omg.CORBA_2_3.portable.OutputStream out = (org.omg.CORBA_2_3.portable.OutputStream)\
          \ _out;\n189  \n190          if (!useHashtables)\n191          {\n192  \
          \            if (outputStreamBridge == null)\n193              {\n194  \
          \                outputStreamBridge = createOutputStream();"
        lineNumber: 184
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Method
          name: writeValueWithVersion
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "178       **/\n179      public void writeValue(org.omg.CORBA.portable.OutputStream\
          \ _out, java.io.Serializable value)\n180      {\n181          writeValueWithVersion(_out,\
          \ value, STREAM_FORMAT_VERSION_1);\n182      }\n183  \n184      private\
          \ void writeValueWithVersion(org.omg.CORBA.portable.OutputStream _out, java.io.Serializable\
          \ value,\n185              byte streamFormatVersion)\n186      {\n187  \n\
          188          org.omg.CORBA_2_3.portable.OutputStream out = (org.omg.CORBA_2_3.portable.OutputStream)\
          \ _out;\n189  \n190          if (!useHashtables)\n191          {\n192  \
          \            if (outputStreamBridge == null)\n193              {\n194  \
          \                outputStreamBridge = createOutputStream();\n195       \
          \           outputStreamBridge.setOrbStream(out);\n196              }\n\
          197  \n198              try"
        lineNumber: 188
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Method
          name: writeValueWithVersion
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "230          }\n231          finally\n232          {\n233     \
          \         if (jdkToOrbOutputStreamBridge.decreaseRecursionDepth() == 0)\n\
          234              {\n235                  outputStreamPairs.remove(_out);\n\
          236              }\n237          }\n238      }\n239  \n240      private\
          \ void writeValueInternal(IIOPOutputStream bridge, org.omg.CORBA_2_3.portable.OutputStream\
          \ out,\n241              java.io.Serializable value, byte streamFormatVersion)\n\
          242      {\n243          Class<?> clazz = value.getClass();\n244  \n245\
          \          if (clazz.isArray())\n246              write_Array(out, value,\
          \ clazz.getComponentType());\n247          else\n248              bridge.simpleWriteObject(value,\
          \ streamFormatVersion);\n249      }\n250  "
        lineNumber: 240
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Method
          name: writeValueInternal
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "251      /**\n252       * Reads a value from the stream using java\
          \ semantics.\n253       * \n254       * @param in\n255       *         \
          \   The stream to read the value from\n256       * @param clazz\n257   \
          \    *            The type of the value to be read in\n258       * @param\
          \ sender\n259       *            The sending context runtime\n260      \
          \ **/\n261      public java.io.Serializable readValue(org.omg.CORBA.portable.InputStream\
          \ _in, int offset, Class<?> clazz,\n262              String repositoryID,\
          \ org.omg.SendingContext.RunTime _sender)\n263      {\n264          // Must\
          \ use narrow rather than a direct cast to a org.jboss.com.sun class. Fix\
          \ for bug 4379539.\n265          CodeBase sender = CodeBaseHelper.narrow(_sender);\n\
          266  \n267          org.omg.CORBA_2_3.portable.InputStream in = (org.omg.CORBA_2_3.portable.InputStream)\
          \ _in;\n268  \n269          if (!useHashtables)\n270          {\n271   \
          \           if (inputStreamBridge == null)"
        lineNumber: 261
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Method
          name: readValue
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "257       *            The type of the value to be read in\n258\
          \       * @param sender\n259       *            The sending context runtime\n\
          260       **/\n261      public java.io.Serializable readValue(org.omg.CORBA.portable.InputStream\
          \ _in, int offset, Class<?> clazz,\n262              String repositoryID,\
          \ org.omg.SendingContext.RunTime _sender)\n263      {\n264          // Must\
          \ use narrow rather than a direct cast to a org.jboss.com.sun class. Fix\
          \ for bug 4379539.\n265          CodeBase sender = CodeBaseHelper.narrow(_sender);\n\
          266  \n267          org.omg.CORBA_2_3.portable.InputStream in = (org.omg.CORBA_2_3.portable.InputStream)\
          \ _in;\n268  \n269          if (!useHashtables)\n270          {\n271   \
          \           if (inputStreamBridge == null)\n272              {\n273    \
          \              inputStreamBridge = createInputStream();\n274           \
          \       inputStreamBridge.setOrbStream(in);\n275                  inputStreamBridge.setSender(sender);\
          \ // d11638\n276                  // backward compatability 4365188\n277\
          \                  inputStreamBridge.setValueHandler(this);"
        lineNumber: 267
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Method
          name: readValue
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "326  \n327              if (jdkToOrbInputStreamBridge.decreaseRecursionDepth()\
          \ == 0)\n328              {\n329                  inputStreamPairs.remove(_in);\n\
          330              }\n331          }\n332  \n333          return result;\n\
          334      }\n335  \n336      private java.io.Serializable readValueInternal(IIOPInputStream\
          \ bridge, org.omg.CORBA_2_3.portable.InputStream in,\n337              int\
          \ offset, Class<?> clazz, String repositoryID, org.jboss.com.sun.org.omg.SendingContext.CodeBase\
          \ sender)\n338      {\n339          java.io.Serializable result = null;\n\
          340  \n341          if (clazz == null)\n342          {\n343            \
          \  // clazz == null indicates an FVD situation for a nonexistant class\n\
          344              if (isArray(repositoryID))\n345              {\n346   \
          \               read_Array(bridge, in, null, sender, offset);"
        lineNumber: 336
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Method
          name: readValueInternal
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "39  \n40  import javax.rmi.CORBA.Util;\n41  \n42  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          43  import org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n\
          44  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n45  import\
          \ org.jboss.com.sun.corba.se.impl.util.Utility;\n46  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          47  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n48  import\
          \ org.jboss.com.sun.org.omg.SendingContext.CodeBaseHelper;\n49  import org.omg.CORBA.TCKind;\n\
          50  import org.omg.CORBA.portable.IndirectionException;\n51  import org.omg.CORBA.portable.InputStream;\n\
          52  import org.omg.CORBA.portable.OutputStream;\n53  \n54  public class\
          \ ValueHandlerImpl implements javax.rmi.CORBA.ValueHandlerMultiFormat\n\
          55  {\n56  \n57      // Property to override our maximum stream format version\n\
          58      public static final String FORMAT_VERSION_PROPERTY = \"org.jboss.com.sun.CORBA.MaxStreamFormatVersion\"\
          ;\n59  "
        lineNumber: 49
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Class
          name: ValueHandlerImpl
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "40  import javax.rmi.CORBA.Util;\n41  \n42  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          43  import org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n\
          44  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n45  import\
          \ org.jboss.com.sun.corba.se.impl.util.Utility;\n46  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          47  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n48  import\
          \ org.jboss.com.sun.org.omg.SendingContext.CodeBaseHelper;\n49  import org.omg.CORBA.TCKind;\n\
          50  import org.omg.CORBA.portable.IndirectionException;\n51  import org.omg.CORBA.portable.InputStream;\n\
          52  import org.omg.CORBA.portable.OutputStream;\n53  \n54  public class\
          \ ValueHandlerImpl implements javax.rmi.CORBA.ValueHandlerMultiFormat\n\
          55  {\n56  \n57      // Property to override our maximum stream format version\n\
          58      public static final String FORMAT_VERSION_PROPERTY = \"org.jboss.com.sun.CORBA.MaxStreamFormatVersion\"\
          ;\n59  \n60      private static final byte MAX_SUPPORTED_FORMAT_VERSION\
          \ = (byte) 2;"
        lineNumber: 50
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Class
          name: ValueHandlerImpl
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "41  \n42  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          43  import org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n\
          44  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n45  import\
          \ org.jboss.com.sun.corba.se.impl.util.Utility;\n46  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          47  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n48  import\
          \ org.jboss.com.sun.org.omg.SendingContext.CodeBaseHelper;\n49  import org.omg.CORBA.TCKind;\n\
          50  import org.omg.CORBA.portable.IndirectionException;\n51  import org.omg.CORBA.portable.InputStream;\n\
          52  import org.omg.CORBA.portable.OutputStream;\n53  \n54  public class\
          \ ValueHandlerImpl implements javax.rmi.CORBA.ValueHandlerMultiFormat\n\
          55  {\n56  \n57      // Property to override our maximum stream format version\n\
          58      public static final String FORMAT_VERSION_PROPERTY = \"org.jboss.com.sun.CORBA.MaxStreamFormatVersion\"\
          ;\n59  \n60      private static final byte MAX_SUPPORTED_FORMAT_VERSION\
          \ = (byte) 2;\n61  "
        lineNumber: 51
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Class
          name: ValueHandlerImpl
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "42  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          43  import org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n\
          44  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n45  import\
          \ org.jboss.com.sun.corba.se.impl.util.Utility;\n46  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          47  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n48  import\
          \ org.jboss.com.sun.org.omg.SendingContext.CodeBaseHelper;\n49  import org.omg.CORBA.TCKind;\n\
          50  import org.omg.CORBA.portable.IndirectionException;\n51  import org.omg.CORBA.portable.InputStream;\n\
          52  import org.omg.CORBA.portable.OutputStream;\n53  \n54  public class\
          \ ValueHandlerImpl implements javax.rmi.CORBA.ValueHandlerMultiFormat\n\
          55  {\n56  \n57      // Property to override our maximum stream format version\n\
          58      public static final String FORMAT_VERSION_PROPERTY = \"org.jboss.com.sun.CORBA.MaxStreamFormatVersion\"\
          ;\n59  \n60      private static final byte MAX_SUPPORTED_FORMAT_VERSION\
          \ = (byte) 2;\n61  \n62      private static final byte STREAM_FORMAT_VERSION_1\
          \ = (byte) 1;"
        lineNumber: 52
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Class
          name: ValueHandlerImpl
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "482       **/\n483      public java.io.Serializable writeReplace(java.io.Serializable\
          \ value)\n484      {\n485          return ObjectStreamClass.lookup(value.getClass()).writeReplace(value);\n\
          486      }\n487  \n488      /**\n489       * Encapsulates writing of Java\
          \ char arrays so that the 1.3 subclass can override it without exposing\
          \ internals\n490       * across packages. This is a fix for bug 4367783.\n\
          491       */\n492      protected void writeCharArray(org.omg.CORBA_2_3.portable.OutputStream\
          \ out, char[] array, int offset, int length)\n493      {\n494          out.write_wchar_array(array,\
          \ offset, length);\n495      }\n496  \n497      private void write_Array(org.omg.CORBA_2_3.portable.OutputStream\
          \ out, java.io.Serializable obj, Class<?> type)\n498      {\n499  \n500\
          \          int i, length;\n501  \n502          if (type.isPrimitive())"
        lineNumber: 492
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Method
          name: writeCharArray
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "487  \n488      /**\n489       * Encapsulates writing of Java char\
          \ arrays so that the 1.3 subclass can override it without exposing internals\n\
          490       * across packages. This is a fix for bug 4367783.\n491       */\n\
          492      protected void writeCharArray(org.omg.CORBA_2_3.portable.OutputStream\
          \ out, char[] array, int offset, int length)\n493      {\n494          out.write_wchar_array(array,\
          \ offset, length);\n495      }\n496  \n497      private void write_Array(org.omg.CORBA_2_3.portable.OutputStream\
          \ out, java.io.Serializable obj, Class<?> type)\n498      {\n499  \n500\
          \          int i, length;\n501  \n502          if (type.isPrimitive())\n\
          503          {\n504              if (type == Integer.TYPE)\n505        \
          \      {\n506                  int[] array = (int[]) obj;\n507         \
          \         length = array.length;"
        lineNumber: 497
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Method
          name: write_Array
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "580              out.write_ulong(length);\n581              int\
          \ callType = kValueType;\n582  \n583              if (type.isInterface())\n\
          584              {\n585                  if (java.rmi.Remote.class.isAssignableFrom(type))\n\
          586                  {\n587                      // RMI Object reference...\n\
          588                      callType = kRemoteType;\n589                  }\n\
          590                  else if (org.omg.CORBA.Object.class.isAssignableFrom(type))\n\
          591                  {\n592                      // IDL Object reference...\n\
          593                      callType = kRemoteType;\n594                  }\n\
          595                  else if (RepositoryId.isAbstractBase(type))\n596  \
          \                {\n597                      // IDL Abstract Object reference...\n\
          598                      callType = kAbstractType;\n599                \
          \  }\n600                  else if (ObjectStreamClassCorbaExt.isAbstractInterface(type))"
        lineNumber: 590
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Method
          name: write_Array
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "630                          break;\n631                  }\n632\
          \              }\n633          }\n634      }\n635  \n636      /**\n637 \
          \      * Encapsulates reading of Java char arrays so that the 1.3 subclass\
          \ can override it without exposing internals\n638       * across packages.\
          \ This is a fix for bug 4367783.\n639       */\n640      protected void\
          \ readCharArray(org.omg.CORBA_2_3.portable.InputStream in, char[] array,\
          \ int offset, int length)\n641      {\n642          in.read_wchar_array(array,\
          \ offset, length);\n643      }\n644  \n645      private Object read_Array(IIOPInputStream\
          \ bridge, org.omg.CORBA_2_3.portable.InputStream in, Class<?> sequence,\n\
          646              org.jboss.com.sun.org.omg.SendingContext.CodeBase sender,\
          \ int offset)\n647      {\n648          try\n649          {\n650       \
          \       // Read length of coming array"
        lineNumber: 640
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Method
          name: readCharArray
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "635  \n636      /**\n637       * Encapsulates reading of Java char\
          \ arrays so that the 1.3 subclass can override it without exposing internals\n\
          638       * across packages. This is a fix for bug 4367783.\n639       */\n\
          640      protected void readCharArray(org.omg.CORBA_2_3.portable.InputStream\
          \ in, char[] array, int offset, int length)\n641      {\n642          in.read_wchar_array(array,\
          \ offset, length);\n643      }\n644  \n645      private Object read_Array(IIOPInputStream\
          \ bridge, org.omg.CORBA_2_3.portable.InputStream in, Class<?> sequence,\n\
          646              org.jboss.com.sun.org.omg.SendingContext.CodeBase sender,\
          \ int offset)\n647      {\n648          try\n649          {\n650       \
          \       // Read length of coming array\n651              int length = in.read_ulong();\n\
          652              int i;\n653  \n654              if (sequence == null)\n\
          655              {"
        lineNumber: 645
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueHandlerImpl.java
          kind: Method
          name: read_Array
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.io;\n\
          33  \n34  import java.lang.reflect.Modifier;\n35  import java.util.Iterator;\n\
          36  import java.util.Stack;\n37  \n38  import javax.rmi.CORBA.ValueHandler;\n\
          39  \n40  import org.omg.CORBA.ORB;\n41  import org.omg.CORBA.TCKind;\n\
          42  import org.omg.CORBA.TypeCode;\n43  import org.omg.CORBA.ValueMember;\n\
          44  \n45  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n46\
          \  import org.jboss.com.sun.org.omg.CORBA.AttributeDescription;\n47  import\
          \ org.jboss.com.sun.org.omg.CORBA.Initializer;\n48  import org.jboss.com.sun.org.omg.CORBA.OperationDescription;\n\
          49  import org.jboss.com.sun.org.omg.CORBA._IDLTypeStub;\n50  import org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription;"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueUtility.java
          kind: Class
          name: ValueUtility
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "31  \n32  package org.jboss.com.sun.corba.se.impl.io;\n33  \n34\
          \  import java.lang.reflect.Modifier;\n35  import java.util.Iterator;\n\
          36  import java.util.Stack;\n37  \n38  import javax.rmi.CORBA.ValueHandler;\n\
          39  \n40  import org.omg.CORBA.ORB;\n41  import org.omg.CORBA.TCKind;\n\
          42  import org.omg.CORBA.TypeCode;\n43  import org.omg.CORBA.ValueMember;\n\
          44  \n45  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n46\
          \  import org.jboss.com.sun.org.omg.CORBA.AttributeDescription;\n47  import\
          \ org.jboss.com.sun.org.omg.CORBA.Initializer;\n48  import org.jboss.com.sun.org.omg.CORBA.OperationDescription;\n\
          49  import org.jboss.com.sun.org.omg.CORBA._IDLTypeStub;\n50  import org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription;\n\
          51  "
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueUtility.java
          kind: Class
          name: ValueUtility
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "32  package org.jboss.com.sun.corba.se.impl.io;\n33  \n34  import\
          \ java.lang.reflect.Modifier;\n35  import java.util.Iterator;\n36  import\
          \ java.util.Stack;\n37  \n38  import javax.rmi.CORBA.ValueHandler;\n39 \
          \ \n40  import org.omg.CORBA.ORB;\n41  import org.omg.CORBA.TCKind;\n42\
          \  import org.omg.CORBA.TypeCode;\n43  import org.omg.CORBA.ValueMember;\n\
          44  \n45  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n46\
          \  import org.jboss.com.sun.org.omg.CORBA.AttributeDescription;\n47  import\
          \ org.jboss.com.sun.org.omg.CORBA.Initializer;\n48  import org.jboss.com.sun.org.omg.CORBA.OperationDescription;\n\
          49  import org.jboss.com.sun.org.omg.CORBA._IDLTypeStub;\n50  import org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription;\n\
          51  \n52  /**"
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueUtility.java
          kind: Class
          name: ValueUtility
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "33  \n34  import java.lang.reflect.Modifier;\n35  import java.util.Iterator;\n\
          36  import java.util.Stack;\n37  \n38  import javax.rmi.CORBA.ValueHandler;\n\
          39  \n40  import org.omg.CORBA.ORB;\n41  import org.omg.CORBA.TCKind;\n\
          42  import org.omg.CORBA.TypeCode;\n43  import org.omg.CORBA.ValueMember;\n\
          44  \n45  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n46\
          \  import org.jboss.com.sun.org.omg.CORBA.AttributeDescription;\n47  import\
          \ org.jboss.com.sun.org.omg.CORBA.Initializer;\n48  import org.jboss.com.sun.org.omg.CORBA.OperationDescription;\n\
          49  import org.jboss.com.sun.org.omg.CORBA._IDLTypeStub;\n50  import org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription;\n\
          51  \n52  /**\n53   * Holds utility methods for converting from ObjectStreamClass\
          \ to FullValueDescription and generating typecodes from"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueUtility.java
          kind: Class
          name: ValueUtility
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "427          else if (c == java.lang.String.class)\n428       \
          \   {\n429              // Strings\n430              TypeCode t = orb.create_string_tc(0);\n\
          431              return orb.create_value_box_tc(id, \"StringValue\", t);\n\
          432          }\n433          else if (java.rmi.Remote.class.isAssignableFrom(c))\n\
          434          {\n435              return orb.get_primitive_tc(TCKind.tk_objref);\n\
          436          }\n437          else if (org.omg.CORBA.Object.class.isAssignableFrom(c))\n\
          438          {\n439              return orb.get_primitive_tc(TCKind.tk_objref);\n\
          440          }\n441  \n442          // Anything else\n443  \n444       \
          \   ObjectStreamClass osc = ObjectStreamClass.lookup(c);\n445  \n446   \
          \       if (osc == null)\n447          {"
        lineNumber: 437
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueUtility.java
          kind: Method
          name: createTypeCodeInternal
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "443  \n444          ObjectStreamClass osc = ObjectStreamClass.lookup(c);\n\
          445  \n446          if (osc == null)\n447          {\n448              return\
          \ orb.create_value_box_tc(id, \"Value\", orb.get_primitive_tc(TCKind.tk_value));\n\
          449          }\n450  \n451          // type modifier\n452          // REVISIT\
          \ truncatable and abstract?\n453          short modifier = (osc.isCustomMarshaled()\
          \ ? org.omg.CORBA.VM_CUSTOM.value : org.omg.CORBA.VM_NONE.value);\n454 \
          \ \n455          // concrete base\n456          TypeCode base = null;\n\
          457          Class<?> superClass = c.getSuperclass();\n458          if (superClass\
          \ != null && java.io.Serializable.class.isAssignableFrom(superClass))\n\
          459          {\n460              base = createTypeCodeForClassInternal(orb,\
          \ superClass, vh, createdIDs);\n461          }\n462  \n463          // members"
        lineNumber: 453
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/io/ValueUtility.java
          kind: Method
          name: createTypeCodeInternal
          package: org.jboss.com.sun.corba.se.impl.io
      - codeSnip: "28  import java.util.Iterator;\n29  import java.util.List;\n30\
          \  \n31  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;\n\
          32  import org.jboss.com.sun.corba.se.impl.encoding.EncapsInputStream;\n\
          33  import org.jboss.com.sun.corba.se.impl.encoding.EncapsOutputStream;\n\
          34  import org.jboss.com.sun.corba.se.spi.ior.Identifiable;\n35  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IdentifiableFactoryFinder;\n36  import\
          \ org.jboss.com.sun.corba.se.spi.ior.WriteContents;\n37  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          38  import org.omg.CORBA_2_3.portable.InputStream;\n39  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          40  \n41  /**\n42   * This static utility class contains various utility\
          \ methods for reading and writing CDR encapsulations.\n43   * \n44   * @author\
          \ Ken Cavanaugh\n45   */\n46  public class EncapsulationUtility\n47  {\n\
          48      private EncapsulationUtility()"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/EncapsulationUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/EncapsulationUtility.java
          kind: Class
          name: EncapsulationUtility
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "29  import java.util.List;\n30  \n31  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;\n\
          32  import org.jboss.com.sun.corba.se.impl.encoding.EncapsInputStream;\n\
          33  import org.jboss.com.sun.corba.se.impl.encoding.EncapsOutputStream;\n\
          34  import org.jboss.com.sun.corba.se.spi.ior.Identifiable;\n35  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IdentifiableFactoryFinder;\n36  import\
          \ org.jboss.com.sun.corba.se.spi.ior.WriteContents;\n37  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          38  import org.omg.CORBA_2_3.portable.InputStream;\n39  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          40  \n41  /**\n42   * This static utility class contains various utility\
          \ methods for reading and writing CDR encapsulations.\n43   * \n44   * @author\
          \ Ken Cavanaugh\n45   */\n46  public class EncapsulationUtility\n47  {\n\
          48      private EncapsulationUtility()\n49      {"
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/EncapsulationUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/EncapsulationUtility.java
          kind: Class
          name: EncapsulationUtility
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "42  import org.jboss.com.sun.corba.se.spi.ior.IORTemplateList;\n\
          43  import org.jboss.com.sun.corba.se.spi.ior.IdentifiableContainerBase;\n\
          44  import org.jboss.com.sun.corba.se.spi.ior.IdentifiableFactoryFinder;\n\
          45  import org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n46  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n\
          47  import org.jboss.com.sun.corba.se.spi.ior.TaggedProfile;\n48  import\
          \ org.jboss.com.sun.corba.se.spi.ior.TaggedProfileTemplate;\n49  import\
          \ org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfile;\n50  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          51  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n52  import org.omg.CORBA_2_3.portable.InputStream;\n\
          53  import org.omg.CORBA_2_3.portable.OutputStream;\n54  import org.omg.IOP.TAG_INTERNET_IOP;\n\
          55  \n56  /**\n57   * An IOR is represented as a list of profiles. Only\
          \ objects that extend TaggedProfile should be added to an IOR.\n58   * However,\
          \ enforcing this restriction requires overriding all of the addXXX methods\
          \ inherited from List, so no check is\n59   * included here.\n60   * \n\
          61   * @author Ken Cavanaugh\n62   */"
        lineNumber: 52
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/IORImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/IORImpl.java
          kind: Class
          name: IORImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "43  import org.jboss.com.sun.corba.se.spi.ior.IdentifiableContainerBase;\n\
          44  import org.jboss.com.sun.corba.se.spi.ior.IdentifiableFactoryFinder;\n\
          45  import org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n46  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n\
          47  import org.jboss.com.sun.corba.se.spi.ior.TaggedProfile;\n48  import\
          \ org.jboss.com.sun.corba.se.spi.ior.TaggedProfileTemplate;\n49  import\
          \ org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfile;\n50  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          51  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n52  import org.omg.CORBA_2_3.portable.InputStream;\n\
          53  import org.omg.CORBA_2_3.portable.OutputStream;\n54  import org.omg.IOP.TAG_INTERNET_IOP;\n\
          55  \n56  /**\n57   * An IOR is represented as a list of profiles. Only\
          \ objects that extend TaggedProfile should be added to an IOR.\n58   * However,\
          \ enforcing this restriction requires overriding all of the addXXX methods\
          \ inherited from List, so no check is\n59   * included here.\n60   * \n\
          61   * @author Ken Cavanaugh\n62   */\n63  public class IORImpl extends\
          \ IdentifiableContainerBase implements IOR"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/IORImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/IORImpl.java
          kind: Class
          name: IORImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "29  \n30  import org.jboss.com.sun.corba.se.spi.ior.IOR;\n31  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IORFactory;\n32  import org.jboss.com.sun.corba.se.spi.ior.IORTemplate;\n\
          33  import org.jboss.com.sun.corba.se.spi.ior.IdentifiableContainerBase;\n\
          34  import org.jboss.com.sun.corba.se.spi.ior.IdentifiableFactoryFinder;\n\
          35  import org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n36  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n\
          37  import org.jboss.com.sun.corba.se.spi.ior.TaggedProfileTemplate;\n38\
          \  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n39  import org.omg.CORBA_2_3.portable.InputStream;\n\
          40  import org.omg.CORBA_2_3.portable.OutputStream;\n41  \n42  /**\n43 \
          \  * This class is a container of TaggedProfileTemplates.\n44   * \n45 \
          \  * @author\n46   */\n47  public class IORTemplateImpl extends IdentifiableContainerBase\
          \ implements IORTemplate\n48  {\n49      private ObjectKeyTemplate oktemp;"
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/IORTemplateImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/IORTemplateImpl.java
          kind: Class
          name: IORTemplateImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "30  import org.jboss.com.sun.corba.se.spi.ior.IOR;\n31  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IORFactory;\n32  import org.jboss.com.sun.corba.se.spi.ior.IORTemplate;\n\
          33  import org.jboss.com.sun.corba.se.spi.ior.IdentifiableContainerBase;\n\
          34  import org.jboss.com.sun.corba.se.spi.ior.IdentifiableFactoryFinder;\n\
          35  import org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n36  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n\
          37  import org.jboss.com.sun.corba.se.spi.ior.TaggedProfileTemplate;\n38\
          \  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n39  import org.omg.CORBA_2_3.portable.InputStream;\n\
          40  import org.omg.CORBA_2_3.portable.OutputStream;\n41  \n42  /**\n43 \
          \  * This class is a container of TaggedProfileTemplates.\n44   * \n45 \
          \  * @author\n46   */\n47  public class IORTemplateImpl extends IdentifiableContainerBase\
          \ implements IORTemplate\n48  {\n49      private ObjectKeyTemplate oktemp;\n\
          50  "
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/IORTemplateImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/IORTemplateImpl.java
          kind: Class
          name: IORTemplateImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "28  import java.util.ArrayList;\n29  import java.util.Iterator;\n\
          30  \n31  import org.jboss.com.sun.corba.se.spi.ior.IOR;\n32  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          33  import org.jboss.com.sun.corba.se.spi.ior.IORFactory;\n34  import org.jboss.com.sun.corba.se.spi.ior.IORTemplate;\n\
          35  import org.jboss.com.sun.corba.se.spi.ior.IORTemplateList;\n36  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n37  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          38  import org.omg.CORBA_2_3.portable.InputStream;\n39  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          40  \n41  public class IORTemplateListImpl extends FreezableList implements\
          \ IORTemplateList\n42  {\n43      /*\n44       * This class must override\
          \ add( int, Object ) and set( int, Object ) so that adding an IORTemplateList\
          \ to an\n45       * IORTemplateList just results in a list of TaggedProfileTemplates.\n\
          46       */\n47      public Object set(int index, Object element)\n48  \
          \    {"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/IORTemplateListImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/IORTemplateListImpl.java
          kind: Class
          name: IORTemplateListImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "29  import java.util.Iterator;\n30  \n31  import org.jboss.com.sun.corba.se.spi.ior.IOR;\n\
          32  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n33  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IORFactory;\n34  import org.jboss.com.sun.corba.se.spi.ior.IORTemplate;\n\
          35  import org.jboss.com.sun.corba.se.spi.ior.IORTemplateList;\n36  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n37  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          38  import org.omg.CORBA_2_3.portable.InputStream;\n39  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          40  \n41  public class IORTemplateListImpl extends FreezableList implements\
          \ IORTemplateList\n42  {\n43      /*\n44       * This class must override\
          \ add( int, Object ) and set( int, Object ) so that adding an IORTemplateList\
          \ to an\n45       * IORTemplateList just results in a list of TaggedProfileTemplates.\n\
          46       */\n47      public Object set(int index, Object element)\n48  \
          \    {\n49          if (element instanceof IORTemplate)"
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/IORTemplateListImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/IORTemplateListImpl.java
          kind: Class
          name: IORTemplateListImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.impl.ior;\n27  \n28  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          29  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n30  import\
          \ org.omg.CORBA.OctetSeqHolder;\n31  import org.omg.CORBA_2_3.portable.InputStream;\n\
          32  import org.omg.CORBA_2_3.portable.OutputStream;\n33  \n34  /**\n35 \
          \  * @author Ken Cavanaugh\n36   */\n37  public final class JIDLObjectKeyTemplate\
          \ extends NewObjectKeyTemplateBase\n38  {\n39      /**\n40       * This\
          \ constructor reads the template ONLY from the stream."
        lineNumber: 30
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/JIDLObjectKeyTemplate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/JIDLObjectKeyTemplate.java
          kind: Class
          name: JIDLObjectKeyTemplate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "21   * Please contact Oracle, 500 Oracle Parkway, Redwood Shores,\
          \ CA 94065 USA\n22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n\
          27  \n28  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n29  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          30  import org.omg.CORBA.OctetSeqHolder;\n31  import org.omg.CORBA_2_3.portable.InputStream;\n\
          32  import org.omg.CORBA_2_3.portable.OutputStream;\n33  \n34  /**\n35 \
          \  * @author Ken Cavanaugh\n36   */\n37  public final class JIDLObjectKeyTemplate\
          \ extends NewObjectKeyTemplateBase\n38  {\n39      /**\n40       * This\
          \ constructor reads the template ONLY from the stream.\n41       */"
        lineNumber: 31
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/JIDLObjectKeyTemplate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/JIDLObjectKeyTemplate.java
          kind: Class
          name: JIDLObjectKeyTemplate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n\
          27  \n28  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n29  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          30  import org.omg.CORBA.OctetSeqHolder;\n31  import org.omg.CORBA_2_3.portable.InputStream;\n\
          32  import org.omg.CORBA_2_3.portable.OutputStream;\n33  \n34  /**\n35 \
          \  * @author Ken Cavanaugh\n36   */\n37  public final class JIDLObjectKeyTemplate\
          \ extends NewObjectKeyTemplateBase\n38  {\n39      /**\n40       * This\
          \ constructor reads the template ONLY from the stream.\n41       */\n42\
          \      public JIDLObjectKeyTemplate(ORB orb, int magic, int scid, InputStream\
          \ is)"
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/JIDLObjectKeyTemplate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/JIDLObjectKeyTemplate.java
          kind: Class
          name: JIDLObjectKeyTemplate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "21   * Please contact Oracle, 500 Oracle Parkway, Redwood Shores,\
          \ CA 94065 USA\n22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n\
          27  \n28  import java.util.Iterator;\n29  \n30  import org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n\
          31  import org.omg.CORBA_2_3.portable.OutputStream;\n32  \n33  abstract\
          \ class ObjectAdapterIdBase implements ObjectAdapterId\n34  {\n35      public\
          \ boolean equals(Object other)\n36      {\n37          if (!(other instanceof\
          \ ObjectAdapterId))\n38              return false;\n39  \n40          ObjectAdapterId\
          \ theOther = (ObjectAdapterId) other;\n41  "
        lineNumber: 31
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectAdapterIdBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectAdapterIdBase.java
          kind: Class
          name: ObjectAdapterIdBase
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "21   * Please contact Oracle, 500 Oracle Parkway, Redwood Shores,\
          \ CA 94065 USA\n22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n\
          27  \n28  import java.util.Arrays;\n29  \n30  import org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n\
          31  import org.omg.CORBA_2_3.portable.OutputStream;\n32  \n33  /**\n34 \
          \  * @author\n35   */\n36  public final class ObjectIdImpl implements ObjectId\n\
          37  {\n38      private byte[] id;\n39  \n40      public boolean equals(Object\
          \ obj)\n41      {"
        lineNumber: 31
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectIdImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectIdImpl.java
          kind: Class
          name: ObjectIdImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "27  \n28  import java.io.IOException;\n29  \n30  import org.jboss.com.sun.corba.se.impl.encoding.EncapsInputStream;\n\
          31  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n32  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n33  import org.jboss.com.sun.corba.se.spi.ior.ObjectKey;\n\
          34  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyFactory;\n35  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n36  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          37  import org.omg.CORBA.MARSHAL;\n38  import org.omg.CORBA.OctetSeqHolder;\n\
          39  import org.omg.CORBA_2_3.portable.InputStream;\n40  \n41  /**\n42  \
          \ * Based on the magic and scid, return the appropriate ObjectKeyTemplate.\
          \ Expects to be called with a valid magic. If\n43   * scid is not valid,\
          \ null should be returned.\n44   */\n45  interface Handler\n46  {\n47  \
          \    ObjectKeyTemplate handle(int magic, int scid, InputStream is, OctetSeqHolder\
          \ osh);"
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectKeyFactoryImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectKeyFactoryImpl.java
          kind: Class
          name: ObjectKeyFactoryImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "28  import java.io.IOException;\n29  \n30  import org.jboss.com.sun.corba.se.impl.encoding.EncapsInputStream;\n\
          31  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n32  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n33  import org.jboss.com.sun.corba.se.spi.ior.ObjectKey;\n\
          34  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyFactory;\n35  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n36  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          37  import org.omg.CORBA.MARSHAL;\n38  import org.omg.CORBA.OctetSeqHolder;\n\
          39  import org.omg.CORBA_2_3.portable.InputStream;\n40  \n41  /**\n42  \
          \ * Based on the magic and scid, return the appropriate ObjectKeyTemplate.\
          \ Expects to be called with a valid magic. If\n43   * scid is not valid,\
          \ null should be returned.\n44   */\n45  interface Handler\n46  {\n47  \
          \    ObjectKeyTemplate handle(int magic, int scid, InputStream is, OctetSeqHolder\
          \ osh);\n48  }"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectKeyFactoryImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectKeyFactoryImpl.java
          kind: Class
          name: ObjectKeyFactoryImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "29  \n30  import org.jboss.com.sun.corba.se.impl.encoding.EncapsInputStream;\n\
          31  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n32  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n33  import org.jboss.com.sun.corba.se.spi.ior.ObjectKey;\n\
          34  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyFactory;\n35  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n36  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          37  import org.omg.CORBA.MARSHAL;\n38  import org.omg.CORBA.OctetSeqHolder;\n\
          39  import org.omg.CORBA_2_3.portable.InputStream;\n40  \n41  /**\n42  \
          \ * Based on the magic and scid, return the appropriate ObjectKeyTemplate.\
          \ Expects to be called with a valid magic. If\n43   * scid is not valid,\
          \ null should be returned.\n44   */\n45  interface Handler\n46  {\n47  \
          \    ObjectKeyTemplate handle(int magic, int scid, InputStream is, OctetSeqHolder\
          \ osh);\n48  }\n49  "
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectKeyFactoryImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectKeyFactoryImpl.java
          kind: Class
          name: ObjectKeyFactoryImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "28  import java.util.Iterator;\n29  \n30  import org.jboss.com.sun.corba.se.impl.logging.IORSystemException;\n\
          31  import org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n32  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n33  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n\
          34  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n36  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;\n\
          37  import org.jboss.com.sun.corba.se.spi.protocol.CorbaServerRequestDispatcher;\n\
          38  import org.omg.CORBA_2_3.portable.InputStream;\n39  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          40  \n41  /**\n42   * @author\n43   */\n44  public abstract class ObjectKeyTemplateBase\
          \ implements ObjectKeyTemplate\n45  {\n46      // Fixed constants for Java\
          \ IDL object key template forms\n47      public static final String JIDL_ORB_ID\
          \ = \"\";\n48  "
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectKeyTemplateBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectKeyTemplateBase.java
          kind: Class
          name: ObjectKeyTemplateBase
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "29  \n30  import org.jboss.com.sun.corba.se.impl.logging.IORSystemException;\n\
          31  import org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n32  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n33  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n\
          34  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n36  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;\n\
          37  import org.jboss.com.sun.corba.se.spi.protocol.CorbaServerRequestDispatcher;\n\
          38  import org.omg.CORBA_2_3.portable.InputStream;\n39  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          40  \n41  /**\n42   * @author\n43   */\n44  public abstract class ObjectKeyTemplateBase\
          \ implements ObjectKeyTemplate\n45  {\n46      // Fixed constants for Java\
          \ IDL object key template forms\n47      public static final String JIDL_ORB_ID\
          \ = \"\";\n48  \n49      private static final String[] JIDL_OAID_STRINGS\
          \ = {\"TransientObjectAdapter\"};"
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectKeyTemplateBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectKeyTemplateBase.java
          kind: Class
          name: ObjectKeyTemplateBase
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: " 94      {\n 95          return ObjectReferenceFactoryHelper.type();\n\
          \ 96      }\n 97  \n 98      /**\n 99       * Read the data into a (presumably)\
          \ empty ObjectReferenceFactoryImpl. This sets the orb to the ORB of the\n\
          100       * InputStream.\n101       */\n102      public void _read(InputStream\
          \ is)\n103      {\n104          org.omg.CORBA_2_3.portable.InputStream istr\
          \ = (org.omg.CORBA_2_3.portable.InputStream) is;\n105  \n106          iorTemplates\
          \ = IORFactories.makeIORTemplateList(istr);\n107      }\n108  \n109    \
          \  /**\n110       * Write the state to the OutputStream.\n111       */\n\
          112      public void _write(OutputStream os)\n113      {\n114          org.omg.CORBA_2_3.portable.OutputStream\
          \ ostr = (org.omg.CORBA_2_3.portable.OutputStream) os;"
        lineNumber: 104
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceFactoryImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceFactoryImpl.java
          kind: Method
          name: _read
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "104          org.omg.CORBA_2_3.portable.InputStream istr = (org.omg.CORBA_2_3.portable.InputStream)\
          \ is;\n105  \n106          iorTemplates = IORFactories.makeIORTemplateList(istr);\n\
          107      }\n108  \n109      /**\n110       * Write the state to the OutputStream.\n\
          111       */\n112      public void _write(OutputStream os)\n113      {\n\
          114          org.omg.CORBA_2_3.portable.OutputStream ostr = (org.omg.CORBA_2_3.portable.OutputStream)\
          \ os;\n115  \n116          iorTemplates.write(ostr);\n117      }\n118  \n\
          119      public IORFactory getIORFactory()\n120      {\n121          return\
          \ iorTemplates;\n122      }\n123  \n124      public IORTemplateList getIORTemplateList()"
        lineNumber: 114
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceFactoryImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceFactoryImpl.java
          kind: Method
          name: _write
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n\
          27  \n28  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n29  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IORFactory;\n30  import org.jboss.com.sun.corba.se.spi.ior.IORTemplateList;\n\
          31  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n32  import org.omg.CORBA.TypeCode;\n\
          33  import org.omg.CORBA.portable.InputStream;\n34  import org.omg.CORBA.portable.OutputStream;\n\
          35  import org.omg.CORBA.portable.StreamableValue;\n36  import org.omg.PortableInterceptor.ObjectReferenceFactory;\n\
          37  import org.omg.PortableInterceptor.ObjectReferenceFactoryHelper;\n38\
          \  \n39  /**\n40   * This is an implementation of the ObjectReferenceFactory\
          \ abstract value type defined by the portable interceptors IDL.\n41   *\
          \ Note that this is a direct Java implementation of the abstract value type:\
          \ there is no stateful value type defined in\n42   * IDL, since defining\
          \ the state in IDL is awkward and inefficient. The best way to define the\
          \ state is to use internal"
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceFactoryImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceFactoryImpl.java
          kind: Class
          name: ObjectReferenceFactoryImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n\
          27  \n28  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n29  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IORFactory;\n30  import org.jboss.com.sun.corba.se.spi.ior.IORTemplateList;\n\
          31  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n32  import org.omg.CORBA.TypeCode;\n\
          33  import org.omg.CORBA.portable.InputStream;\n34  import org.omg.CORBA.portable.OutputStream;\n\
          35  import org.omg.CORBA.portable.StreamableValue;\n36  import org.omg.PortableInterceptor.ObjectReferenceFactory;\n\
          37  import org.omg.PortableInterceptor.ObjectReferenceFactoryHelper;\n38\
          \  \n39  /**\n40   * This is an implementation of the ObjectReferenceFactory\
          \ abstract value type defined by the portable interceptors IDL.\n41   *\
          \ Note that this is a direct Java implementation of the abstract value type:\
          \ there is no stateful value type defined in\n42   * IDL, since defining\
          \ the state in IDL is awkward and inefficient. The best way to define the\
          \ state is to use internal\n43   * data structures that can be written to\
          \ and read from CORBA streams."
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceFactoryImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceFactoryImpl.java
          kind: Class
          name: ObjectReferenceFactoryImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n\
          27  \n28  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n29  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IORFactory;\n30  import org.jboss.com.sun.corba.se.spi.ior.IORTemplateList;\n\
          31  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n32  import org.omg.CORBA.TypeCode;\n\
          33  import org.omg.CORBA.portable.InputStream;\n34  import org.omg.CORBA.portable.OutputStream;\n\
          35  import org.omg.CORBA.portable.StreamableValue;\n36  import org.omg.PortableInterceptor.ObjectReferenceFactory;\n\
          37  import org.omg.PortableInterceptor.ObjectReferenceFactoryHelper;\n38\
          \  \n39  /**\n40   * This is an implementation of the ObjectReferenceFactory\
          \ abstract value type defined by the portable interceptors IDL.\n41   *\
          \ Note that this is a direct Java implementation of the abstract value type:\
          \ there is no stateful value type defined in\n42   * IDL, since defining\
          \ the state in IDL is awkward and inefficient. The best way to define the\
          \ state is to use internal\n43   * data structures that can be written to\
          \ and read from CORBA streams.\n44   */"
        lineNumber: 34
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceFactoryImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceFactoryImpl.java
          kind: Class
          name: ObjectReferenceFactoryImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n27  \n\
          28  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n29  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IORFactory;\n30  import org.jboss.com.sun.corba.se.spi.ior.IORTemplateList;\n\
          31  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n32  import org.omg.CORBA.TypeCode;\n\
          33  import org.omg.CORBA.portable.InputStream;\n34  import org.omg.CORBA.portable.OutputStream;\n\
          35  import org.omg.CORBA.portable.StreamableValue;\n36  import org.omg.PortableInterceptor.ObjectReferenceFactory;\n\
          37  import org.omg.PortableInterceptor.ObjectReferenceFactoryHelper;\n38\
          \  \n39  /**\n40   * This is an implementation of the ObjectReferenceFactory\
          \ abstract value type defined by the portable interceptors IDL.\n41   *\
          \ Note that this is a direct Java implementation of the abstract value type:\
          \ there is no stateful value type defined in\n42   * IDL, since defining\
          \ the state in IDL is awkward and inefficient. The best way to define the\
          \ state is to use internal\n43   * data structures that can be written to\
          \ and read from CORBA streams.\n44   */\n45  public class ObjectReferenceFactoryImpl\
          \ extends ObjectReferenceProducerBase"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceFactoryImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceFactoryImpl.java
          kind: Class
          name: ObjectReferenceFactoryImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: " 93      public TypeCode _type()\n 94      {\n 95          return\
          \ ObjectReferenceTemplateHelper.type();\n 96      }\n 97  \n 98      /**\n\
          \ 99       * Read the data into a (presumably) empty ORTImpl. This sets\
          \ the orb to the ORB of the InputStream.\n100       */\n101      public\
          \ void _read(InputStream is)\n102      {\n103          org.omg.CORBA_2_3.portable.InputStream\
          \ istr = (org.omg.CORBA_2_3.portable.InputStream) is;\n104          iorTemplate\
          \ = IORFactories.makeIORTemplate(istr);\n105          orb = (ORB) (istr.orb());\n\
          106      }\n107  \n108      /**\n109       * Write the state to the OutputStream.\n\
          110       */\n111      public void _write(OutputStream os)\n112      {\n\
          113          org.omg.CORBA_2_3.portable.OutputStream ostr = (org.omg.CORBA_2_3.portable.OutputStream)\
          \ os;"
        lineNumber: 103
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceTemplateImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceTemplateImpl.java
          kind: Method
          name: _read
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "103          org.omg.CORBA_2_3.portable.InputStream istr = (org.omg.CORBA_2_3.portable.InputStream)\
          \ is;\n104          iorTemplate = IORFactories.makeIORTemplate(istr);\n\
          105          orb = (ORB) (istr.orb());\n106      }\n107  \n108      /**\n\
          109       * Write the state to the OutputStream.\n110       */\n111    \
          \  public void _write(OutputStream os)\n112      {\n113          org.omg.CORBA_2_3.portable.OutputStream\
          \ ostr = (org.omg.CORBA_2_3.portable.OutputStream) os;\n114  \n115     \
          \     iorTemplate.write(ostr);\n116      }\n117  \n118      public String\
          \ server_id()\n119      {\n120          int val = iorTemplate.getObjectKeyTemplate().getServerId();\n\
          121          return Integer.toString(val);\n122      }\n123  "
        lineNumber: 113
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceTemplateImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceTemplateImpl.java
          kind: Method
          name: _write
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n\
          27  \n28  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n29  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IORFactory;\n30  import org.jboss.com.sun.corba.se.spi.ior.IORTemplate;\n\
          31  import org.jboss.com.sun.corba.se.spi.ior.IORTemplateList;\n32  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n33  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          34  import org.omg.CORBA.TypeCode;\n35  import org.omg.CORBA.portable.InputStream;\n\
          36  import org.omg.CORBA.portable.OutputStream;\n37  import org.omg.CORBA.portable.StreamableValue;\n\
          38  import org.omg.PortableInterceptor.ObjectReferenceTemplate;\n39  import\
          \ org.omg.PortableInterceptor.ObjectReferenceTemplateHelper;\n40  \n41 \
          \ /**\n42   * This is an implementation of the ObjectReferenceTemplate abstract\
          \ value type defined by the portable interceptors\n43   * IDL. Note that\
          \ this is a direct Java implementation of the abstract value type: there\
          \ is no stateful value type\n44   * defined in IDL, since defining the state\
          \ in IDL is awkward and inefficient. The best way to define the state is\
          \ to"
        lineNumber: 34
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceTemplateImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceTemplateImpl.java
          kind: Class
          name: ObjectReferenceTemplateImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n27  \n\
          28  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n29  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IORFactory;\n30  import org.jboss.com.sun.corba.se.spi.ior.IORTemplate;\n\
          31  import org.jboss.com.sun.corba.se.spi.ior.IORTemplateList;\n32  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n33  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          34  import org.omg.CORBA.TypeCode;\n35  import org.omg.CORBA.portable.InputStream;\n\
          36  import org.omg.CORBA.portable.OutputStream;\n37  import org.omg.CORBA.portable.StreamableValue;\n\
          38  import org.omg.PortableInterceptor.ObjectReferenceTemplate;\n39  import\
          \ org.omg.PortableInterceptor.ObjectReferenceTemplateHelper;\n40  \n41 \
          \ /**\n42   * This is an implementation of the ObjectReferenceTemplate abstract\
          \ value type defined by the portable interceptors\n43   * IDL. Note that\
          \ this is a direct Java implementation of the abstract value type: there\
          \ is no stateful value type\n44   * defined in IDL, since defining the state\
          \ in IDL is awkward and inefficient. The best way to define the state is\
          \ to\n45   * use internal data structures that can be written to and read\
          \ from CORBA streams."
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceTemplateImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceTemplateImpl.java
          kind: Class
          name: ObjectReferenceTemplateImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "26  package org.jboss.com.sun.corba.se.impl.ior;\n27  \n28  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n29  import org.jboss.com.sun.corba.se.spi.ior.IORFactory;\n\
          30  import org.jboss.com.sun.corba.se.spi.ior.IORTemplate;\n31  import org.jboss.com.sun.corba.se.spi.ior.IORTemplateList;\n\
          32  import org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n33  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n34  import org.omg.CORBA.TypeCode;\n\
          35  import org.omg.CORBA.portable.InputStream;\n36  import org.omg.CORBA.portable.OutputStream;\n\
          37  import org.omg.CORBA.portable.StreamableValue;\n38  import org.omg.PortableInterceptor.ObjectReferenceTemplate;\n\
          39  import org.omg.PortableInterceptor.ObjectReferenceTemplateHelper;\n\
          40  \n41  /**\n42   * This is an implementation of the ObjectReferenceTemplate\
          \ abstract value type defined by the portable interceptors\n43   * IDL.\
          \ Note that this is a direct Java implementation of the abstract value type:\
          \ there is no stateful value type\n44   * defined in IDL, since defining\
          \ the state in IDL is awkward and inefficient. The best way to define the\
          \ state is to\n45   * use internal data structures that can be written to\
          \ and read from CORBA streams.\n46   */"
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceTemplateImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceTemplateImpl.java
          kind: Class
          name: ObjectReferenceTemplateImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "27  \n28  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          29  import org.jboss.com.sun.corba.se.spi.ior.IORFactory;\n30  import org.jboss.com.sun.corba.se.spi.ior.IORTemplate;\n\
          31  import org.jboss.com.sun.corba.se.spi.ior.IORTemplateList;\n32  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n33  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          34  import org.omg.CORBA.TypeCode;\n35  import org.omg.CORBA.portable.InputStream;\n\
          36  import org.omg.CORBA.portable.OutputStream;\n37  import org.omg.CORBA.portable.StreamableValue;\n\
          38  import org.omg.PortableInterceptor.ObjectReferenceTemplate;\n39  import\
          \ org.omg.PortableInterceptor.ObjectReferenceTemplateHelper;\n40  \n41 \
          \ /**\n42   * This is an implementation of the ObjectReferenceTemplate abstract\
          \ value type defined by the portable interceptors\n43   * IDL. Note that\
          \ this is a direct Java implementation of the abstract value type: there\
          \ is no stateful value type\n44   * defined in IDL, since defining the state\
          \ in IDL is awkward and inefficient. The best way to define the state is\
          \ to\n45   * use internal data structures that can be written to and read\
          \ from CORBA streams.\n46   */\n47  public class ObjectReferenceTemplateImpl\
          \ extends ObjectReferenceProducerBase"
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceTemplateImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/ObjectReferenceTemplateImpl.java
          kind: Class
          name: ObjectReferenceTemplateImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n\
          27  \n28  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          29  import org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n30  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          31  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n32  import\
          \ org.omg.CORBA.OctetSeqHolder;\n33  import org.omg.CORBA_2_3.portable.InputStream;\n\
          34  import org.omg.CORBA_2_3.portable.OutputStream;\n35  \n36  /**\n37 \
          \  * Handles object keys created by JDK ORBs from before JDK 1.4.0.\n38\
          \   */\n39  public final class OldJIDLObjectKeyTemplate extends OldObjectKeyTemplateBase\n\
          40  {\n41      /**\n42       * JDK 1.3.1 FCS did not include a version byte\
          \ at the end of its object keys. JDK 1.3.1_01 included the byte with"
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/OldJIDLObjectKeyTemplate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/OldJIDLObjectKeyTemplate.java
          kind: Class
          name: OldJIDLObjectKeyTemplate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n\
          27  \n28  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          29  import org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n30  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          31  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n32  import\
          \ org.omg.CORBA.OctetSeqHolder;\n33  import org.omg.CORBA_2_3.portable.InputStream;\n\
          34  import org.omg.CORBA_2_3.portable.OutputStream;\n35  \n36  /**\n37 \
          \  * Handles object keys created by JDK ORBs from before JDK 1.4.0.\n38\
          \   */\n39  public final class OldJIDLObjectKeyTemplate extends OldObjectKeyTemplateBase\n\
          40  {\n41      /**\n42       * JDK 1.3.1 FCS did not include a version byte\
          \ at the end of its object keys. JDK 1.3.1_01 included the byte with\n43\
          \       * the value 1. Anything below 1 is considered an invalid value."
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/OldJIDLObjectKeyTemplate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/OldJIDLObjectKeyTemplate.java
          kind: Class
          name: OldJIDLObjectKeyTemplate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n\
          27  \n28  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          29  import org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n30  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          31  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n32  import\
          \ org.omg.CORBA.OctetSeqHolder;\n33  import org.omg.CORBA_2_3.portable.InputStream;\n\
          34  import org.omg.CORBA_2_3.portable.OutputStream;\n35  \n36  /**\n37 \
          \  * Handles object keys created by JDK ORBs from before JDK 1.4.0.\n38\
          \   */\n39  public final class OldJIDLObjectKeyTemplate extends OldObjectKeyTemplateBase\n\
          40  {\n41      /**\n42       * JDK 1.3.1 FCS did not include a version byte\
          \ at the end of its object keys. JDK 1.3.1_01 included the byte with\n43\
          \       * the value 1. Anything below 1 is considered an invalid value.\n\
          44       */"
        lineNumber: 34
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/OldJIDLObjectKeyTemplate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/OldJIDLObjectKeyTemplate.java
          kind: Class
          name: OldJIDLObjectKeyTemplate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "18   * 2 along with this work; if not, write to the Free Software\
          \ Foundation,\n19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.impl.ior;\n27  \n28  import org.omg.CORBA.INTERNAL;\n\
          29  import org.omg.CORBA.OctetSeqHolder;\n30  \n31  import org.omg.CORBA_2_3.portable.InputStream;\n\
          32  import org.omg.CORBA_2_3.portable.OutputStream;\n33  \n34  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          35  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;\n36  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          37  \n38  import org.jboss.com.sun.corba.se.impl.ior.ObjectKeyFactoryImpl;"
        lineNumber: 28
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/OldPOAObjectKeyTemplate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/OldPOAObjectKeyTemplate.java
          kind: Class
          name: OldPOAObjectKeyTemplate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.impl.ior;\n27  \n28  import org.omg.CORBA.INTERNAL;\n\
          29  import org.omg.CORBA.OctetSeqHolder;\n30  \n31  import org.omg.CORBA_2_3.portable.InputStream;\n\
          32  import org.omg.CORBA_2_3.portable.OutputStream;\n33  \n34  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          35  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;\n36  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          37  \n38  import org.jboss.com.sun.corba.se.impl.ior.ObjectKeyFactoryImpl;\n\
          39  "
        lineNumber: 29
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/OldPOAObjectKeyTemplate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/OldPOAObjectKeyTemplate.java
          kind: Class
          name: OldPOAObjectKeyTemplate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "21   * Please contact Oracle, 500 Oracle Parkway, Redwood Shores,\
          \ CA 94065 USA\n22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n\
          27  \n28  import org.omg.CORBA.INTERNAL;\n29  import org.omg.CORBA.OctetSeqHolder;\n\
          30  \n31  import org.omg.CORBA_2_3.portable.InputStream;\n32  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          33  \n34  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n35  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;\n\
          36  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n37  \n\
          38  import org.jboss.com.sun.corba.se.impl.ior.ObjectKeyFactoryImpl;\n39\
          \  \n40  /**\n41   * @author Ken Cavanaugh"
        lineNumber: 31
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/OldPOAObjectKeyTemplate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/OldPOAObjectKeyTemplate.java
          kind: Class
          name: OldPOAObjectKeyTemplate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n\
          27  \n28  import org.omg.CORBA.INTERNAL;\n29  import org.omg.CORBA.OctetSeqHolder;\n\
          30  \n31  import org.omg.CORBA_2_3.portable.InputStream;\n32  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          33  \n34  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n35  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;\n\
          36  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n37  \n\
          38  import org.jboss.com.sun.corba.se.impl.ior.ObjectKeyFactoryImpl;\n39\
          \  \n40  /**\n41   * @author Ken Cavanaugh\n42   */"
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/OldPOAObjectKeyTemplate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/OldPOAObjectKeyTemplate.java
          kind: Class
          name: OldPOAObjectKeyTemplate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n\
          27  \n28  import org.jboss.com.sun.corba.se.spi.activation.POANameHelper;\n\
          29  import org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n30  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n31  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          32  import org.omg.CORBA.OctetSeqHolder;\n33  import org.omg.CORBA_2_3.portable.InputStream;\n\
          34  import org.omg.CORBA_2_3.portable.OutputStream;\n35  \n36  /**\n37 \
          \  * @author\n38   */\n39  public final class POAObjectKeyTemplate extends\
          \ NewObjectKeyTemplateBase\n40  {\n41      /**\n42       * This constructor\
          \ reads the template ONLY from the stream."
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/POAObjectKeyTemplate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/POAObjectKeyTemplate.java
          kind: Class
          name: POAObjectKeyTemplate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n\
          27  \n28  import org.jboss.com.sun.corba.se.spi.activation.POANameHelper;\n\
          29  import org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n30  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n31  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          32  import org.omg.CORBA.OctetSeqHolder;\n33  import org.omg.CORBA_2_3.portable.InputStream;\n\
          34  import org.omg.CORBA_2_3.portable.OutputStream;\n35  \n36  /**\n37 \
          \  * @author\n38   */\n39  public final class POAObjectKeyTemplate extends\
          \ NewObjectKeyTemplateBase\n40  {\n41      /**\n42       * This constructor\
          \ reads the template ONLY from the stream.\n43       */"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/POAObjectKeyTemplate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/POAObjectKeyTemplate.java
          kind: Class
          name: POAObjectKeyTemplate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior;\n\
          27  \n28  import org.jboss.com.sun.corba.se.spi.activation.POANameHelper;\n\
          29  import org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n30  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n31  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          32  import org.omg.CORBA.OctetSeqHolder;\n33  import org.omg.CORBA_2_3.portable.InputStream;\n\
          34  import org.omg.CORBA_2_3.portable.OutputStream;\n35  \n36  /**\n37 \
          \  * @author\n38   */\n39  public final class POAObjectKeyTemplate extends\
          \ NewObjectKeyTemplateBase\n40  {\n41      /**\n42       * This constructor\
          \ reads the template ONLY from the stream.\n43       */\n44      public\
          \ POAObjectKeyTemplate(ORB orb, int magic, int scid, InputStream is)"
        lineNumber: 34
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/POAObjectKeyTemplate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/POAObjectKeyTemplate.java
          kind: Class
          name: POAObjectKeyTemplate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "105          for (int i = 0; i < profileTags.length; i++)\n106\
          \          {\n107              ostr.write_long(profileTags[i]);\n108   \
          \           ostr.write_long(profileData[i].length);\n109              ostr.write_octet_array(profileData[i],\
          \ 0, profileData[i].length);\n110          }\n111  \n112          InputStream\
          \ istr = ostr.create_input_stream();\n113  \n114          // read the IOR\
          \ back from the stream\n115          org.omg.CORBA.Object obj = istr.read_Object();\n\
          116          return StubAdapter.getDelegate(obj);\n117      }\n118  \n119\
          \      public void doRead(java.io.ObjectInputStream stream) throws IOException,\
          \ ClassNotFoundException\n120      {\n121          // read the IOR from\
          \ the ObjectInputStream\n122          int typeLength = stream.readInt();\n\
          123          typeData = new byte[typeLength];\n124          stream.readFully(typeData);\n\
          125          int numProfiles = stream.readInt();"
        lineNumber: 115
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/StubIORImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/StubIORImpl.java
          kind: Method
          name: getDelegate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "27   * RMI-IIOP v1.0\n28   * Copyright IBM Corp. 1998 1999  All\
          \ Rights Reserved\n29   *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.ior;\n\
          33  \n34  import java.io.IOException;\n35  import java.io.ObjectOutputStream;\n\
          36  \n37  import org.omg.CORBA.ORB;\n38  import org.omg.CORBA.portable.Delegate;\n\
          39  import org.omg.CORBA.portable.InputStream;\n40  import org.omg.CORBA.portable.OutputStream;\n\
          41  \n42  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          43  \n44  /**\n45   * This class implements a very simply IOR representation\
          \ which must be completely ORBImpl free so that this class can\n46   * be\
          \ used in the implementation of a portable StubDelegateImpl.\n47   */"
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/StubIORImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/StubIORImpl.java
          kind: Class
          name: StubIORImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "28   * Copyright IBM Corp. 1998 1999  All Rights Reserved\n29 \
          \  *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.ior;\n\
          33  \n34  import java.io.IOException;\n35  import java.io.ObjectOutputStream;\n\
          36  \n37  import org.omg.CORBA.ORB;\n38  import org.omg.CORBA.portable.Delegate;\n\
          39  import org.omg.CORBA.portable.InputStream;\n40  import org.omg.CORBA.portable.OutputStream;\n\
          41  \n42  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          43  \n44  /**\n45   * This class implements a very simply IOR representation\
          \ which must be completely ORBImpl free so that this class can\n46   * be\
          \ used in the implementation of a portable StubDelegateImpl.\n47   */\n\
          48  public class StubIORImpl"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/StubIORImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/StubIORImpl.java
          kind: Class
          name: StubIORImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "29   *\n30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.ior;\n\
          33  \n34  import java.io.IOException;\n35  import java.io.ObjectOutputStream;\n\
          36  \n37  import org.omg.CORBA.ORB;\n38  import org.omg.CORBA.portable.Delegate;\n\
          39  import org.omg.CORBA.portable.InputStream;\n40  import org.omg.CORBA.portable.OutputStream;\n\
          41  \n42  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          43  \n44  /**\n45   * This class implements a very simply IOR representation\
          \ which must be completely ORBImpl free so that this class can\n46   * be\
          \ used in the implementation of a portable StubDelegateImpl.\n47   */\n\
          48  public class StubIORImpl\n49  {"
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/StubIORImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/StubIORImpl.java
          kind: Class
          name: StubIORImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "30   */\n31  \n32  package org.jboss.com.sun.corba.se.impl.ior;\n\
          33  \n34  import java.io.IOException;\n35  import java.io.ObjectOutputStream;\n\
          36  \n37  import org.omg.CORBA.ORB;\n38  import org.omg.CORBA.portable.Delegate;\n\
          39  import org.omg.CORBA.portable.InputStream;\n40  import org.omg.CORBA.portable.OutputStream;\n\
          41  \n42  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          43  \n44  /**\n45   * This class implements a very simply IOR representation\
          \ which must be completely ORBImpl free so that this class can\n46   * be\
          \ used in the implementation of a portable StubDelegateImpl.\n47   */\n\
          48  public class StubIORImpl\n49  {\n50      // cached hash code"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/StubIORImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/StubIORImpl.java
          kind: Class
          name: StubIORImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "66      }\n67  \n68      public String getRepositoryId()\n69  \
          \    {\n70          if (typeData == null)\n71              return null;\n\
          72  \n73          return new String(typeData);\n74      }\n75  \n76    \
          \  public StubIORImpl(org.omg.CORBA.Object obj)\n77      {\n78         \
          \ // write the IOR to an OutputStream and get an InputStream\n79       \
          \   OutputStream ostr = StubAdapter.getORB(obj).create_output_stream();\n\
          80          ostr.write_Object(obj);\n81          InputStream istr = ostr.create_input_stream();\n\
          82  \n83          // read the IOR components back from the stream\n84  \
          \        int typeLength = istr.read_long();\n85          typeData = new\
          \ byte[typeLength];\n86          istr.read_octet_array(typeData, 0, typeLength);"
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/StubIORImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/StubIORImpl.java
          kind: Constructor
          name: StubIORImpl
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "29  import org.jboss.com.sun.corba.se.impl.logging.IORSystemException;\n\
          30  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n31  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n32  import org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n\
          33  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n34  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          36  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;\n37  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          38  import org.jboss.com.sun.corba.se.spi.protocol.CorbaServerRequestDispatcher;\n\
          39  import org.omg.CORBA.OctetSeqHolder;\n40  import org.omg.CORBA_2_3.portable.InputStream;\n\
          41  import org.omg.CORBA_2_3.portable.OutputStream;\n42  \n43  /**\n44 \
          \  * @author Ken Cavanaugh\n45   */\n46  public class WireObjectKeyTemplate\
          \ implements ObjectKeyTemplate\n47  {\n48      private IORSystemException\
          \ wrapper;\n49  "
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/WireObjectKeyTemplate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/WireObjectKeyTemplate.java
          kind: Class
          name: WireObjectKeyTemplate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "30  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n\
          31  import org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n32  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n33  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n\
          34  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n36  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;\n\
          37  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n38  import\
          \ org.jboss.com.sun.corba.se.spi.protocol.CorbaServerRequestDispatcher;\n\
          39  import org.omg.CORBA.OctetSeqHolder;\n40  import org.omg.CORBA_2_3.portable.InputStream;\n\
          41  import org.omg.CORBA_2_3.portable.OutputStream;\n42  \n43  /**\n44 \
          \  * @author Ken Cavanaugh\n45   */\n46  public class WireObjectKeyTemplate\
          \ implements ObjectKeyTemplate\n47  {\n48      private IORSystemException\
          \ wrapper;\n49  \n50      public boolean equals(Object obj)"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/WireObjectKeyTemplate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/WireObjectKeyTemplate.java
          kind: Class
          name: WireObjectKeyTemplate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "31  import org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n\
          32  import org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n33  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n\
          34  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n36  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;\n\
          37  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n38  import\
          \ org.jboss.com.sun.corba.se.spi.protocol.CorbaServerRequestDispatcher;\n\
          39  import org.omg.CORBA.OctetSeqHolder;\n40  import org.omg.CORBA_2_3.portable.InputStream;\n\
          41  import org.omg.CORBA_2_3.portable.OutputStream;\n42  \n43  /**\n44 \
          \  * @author Ken Cavanaugh\n45   */\n46  public class WireObjectKeyTemplate\
          \ implements ObjectKeyTemplate\n47  {\n48      private IORSystemException\
          \ wrapper;\n49  \n50      public boolean equals(Object obj)\n51      {"
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/WireObjectKeyTemplate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/WireObjectKeyTemplate.java
          kind: Class
          name: WireObjectKeyTemplate
          package: org.jboss.com.sun.corba.se.impl.ior
      - codeSnip: "19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.impl.ior.iiop;\n27  \n28  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPAddress;\n\
          29  import org.omg.CORBA_2_3.portable.OutputStream;\n30  \n31  /**\n32 \
          \  * @author\n33   */\n34  abstract class IIOPAddressBase implements IIOPAddress\n\
          35  {\n36      // Ports are marshalled as shorts on the wire. The IDL type\
          \ is unsigned short, which lacks a convenient\n37      // representation\
          \ in Java in the 32768-65536 range. So, we treat ports as ints throught\
          \ this code, except that\n38      // marshalling requires a scaling conversion.\
          \ intToShort and shortToInt are provided for this purpose.\n39      protected\
          \ short intToShort(int value)"
        lineNumber: 29
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/IIOPAddressBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/IIOPAddressBase.java
          kind: Class
          name: IIOPAddressBase
          package: org.jboss.com.sun.corba.se.impl.ior.iiop
      - codeSnip: "21   * Please contact Oracle, 500 Oracle Parkway, Redwood Shores,\
          \ CA 94065 USA\n22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.ior.iiop;\n\
          27  \n28  import org.jboss.com.sun.corba.se.impl.logging.IORSystemException;\n\
          29  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n30 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n31  import org.omg.CORBA_2_3.portable.InputStream;\n\
          32  \n33  /**\n34   * @author\n35   */\n36  public final class IIOPAddressImpl\
          \ extends IIOPAddressBase\n37  {\n38      private IORSystemException wrapper;\n\
          39  \n40      private String host;\n41  "
        lineNumber: 31
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/IIOPAddressImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/IIOPAddressImpl.java
          kind: Class
          name: IIOPAddressImpl
          package: org.jboss.com.sun.corba.se.impl.ior.iiop
      - codeSnip: "45  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPFactories;\n\
          46  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfile;\n47  import\
          \ org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfileTemplate;\n48  import\
          \ org.jboss.com.sun.corba.se.spi.ior.iiop.JavaCodebaseComponent;\n49  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n50  import org.jboss.com.sun.corba.se.spi.oa.ObjectAdapter;\n\
          51  import org.jboss.com.sun.corba.se.spi.oa.ObjectAdapterFactory;\n52 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n53  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;\n\
          54  import org.jboss.com.sun.corba.se.spi.protocol.RequestDispatcherRegistry;\n\
          55  import org.omg.CORBA.SystemException;\n56  import org.omg.CORBA_2_3.portable.InputStream;\n\
          57  import org.omg.CORBA_2_3.portable.OutputStream;\n58  import org.omg.IOP.TAG_INTERNET_IOP;\n\
          59  import org.omg.IOP.TAG_JAVA_CODEBASE;\n60  \n61  /**\n62   * @author\n\
          63   */\n64  public class IIOPProfileImpl extends IdentifiableBase implements\
          \ IIOPProfile\n65  {"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/IIOPProfileImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/IIOPProfileImpl.java
          kind: Class
          name: IIOPProfileImpl
          package: org.jboss.com.sun.corba.se.impl.ior.iiop
      - codeSnip: "46  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfile;\n\
          47  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfileTemplate;\n\
          48  import org.jboss.com.sun.corba.se.spi.ior.iiop.JavaCodebaseComponent;\n\
          49  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n50 \
          \ import org.jboss.com.sun.corba.se.spi.oa.ObjectAdapter;\n51  import org.jboss.com.sun.corba.se.spi.oa.ObjectAdapterFactory;\n\
          52  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n53  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;\n\
          54  import org.jboss.com.sun.corba.se.spi.protocol.RequestDispatcherRegistry;\n\
          55  import org.omg.CORBA.SystemException;\n56  import org.omg.CORBA_2_3.portable.InputStream;\n\
          57  import org.omg.CORBA_2_3.portable.OutputStream;\n58  import org.omg.IOP.TAG_INTERNET_IOP;\n\
          59  import org.omg.IOP.TAG_JAVA_CODEBASE;\n60  \n61  /**\n62   * @author\n\
          63   */\n64  public class IIOPProfileImpl extends IdentifiableBase implements\
          \ IIOPProfile\n65  {\n66      private ORB orb;"
        lineNumber: 56
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/IIOPProfileImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/IIOPProfileImpl.java
          kind: Class
          name: IIOPProfileImpl
          package: org.jboss.com.sun.corba.se.impl.ior.iiop
      - codeSnip: "47  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfileTemplate;\n\
          48  import org.jboss.com.sun.corba.se.spi.ior.iiop.JavaCodebaseComponent;\n\
          49  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n50 \
          \ import org.jboss.com.sun.corba.se.spi.oa.ObjectAdapter;\n51  import org.jboss.com.sun.corba.se.spi.oa.ObjectAdapterFactory;\n\
          52  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n53  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;\n\
          54  import org.jboss.com.sun.corba.se.spi.protocol.RequestDispatcherRegistry;\n\
          55  import org.omg.CORBA.SystemException;\n56  import org.omg.CORBA_2_3.portable.InputStream;\n\
          57  import org.omg.CORBA_2_3.portable.OutputStream;\n58  import org.omg.IOP.TAG_INTERNET_IOP;\n\
          59  import org.omg.IOP.TAG_JAVA_CODEBASE;\n60  \n61  /**\n62   * @author\n\
          63   */\n64  public class IIOPProfileImpl extends IdentifiableBase implements\
          \ IIOPProfile\n65  {\n66      private ORB orb;\n67  "
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/IIOPProfileImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/IIOPProfileImpl.java
          kind: Class
          name: IIOPProfileImpl
          package: org.jboss.com.sun.corba.se.impl.ior.iiop
      - codeSnip: "31  import org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n32  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n33  import org.jboss.com.sun.corba.se.spi.ior.TaggedProfile;\n\
          34  import org.jboss.com.sun.corba.se.spi.ior.TaggedProfileTemplate;\n35\
          \  import org.jboss.com.sun.corba.se.spi.ior.TaggedProfileTemplateBase;\n\
          36  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n37  import\
          \ org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPAddress;\n38  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPFactories;\n\
          39  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfileTemplate;\n\
          40  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n41  import org.omg.CORBA_2_3.portable.InputStream;\n\
          42  import org.omg.CORBA_2_3.portable.OutputStream;\n43  import org.omg.IOP.TAG_INTERNET_IOP;\n\
          44  \n45  /**\n46   * @author If getMinorVersion==0, this does not contain\
          \ any tagged components\n47   */\n48  public class IIOPProfileTemplateImpl\
          \ extends TaggedProfileTemplateBase implements IIOPProfileTemplate\n49 \
          \ {\n50      private ORB orb;\n51  "
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/IIOPProfileTemplateImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/IIOPProfileTemplateImpl.java
          kind: Class
          name: IIOPProfileTemplateImpl
          package: org.jboss.com.sun.corba.se.impl.ior.iiop
      - codeSnip: "32  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n\
          33  import org.jboss.com.sun.corba.se.spi.ior.TaggedProfile;\n34  import\
          \ org.jboss.com.sun.corba.se.spi.ior.TaggedProfileTemplate;\n35  import\
          \ org.jboss.com.sun.corba.se.spi.ior.TaggedProfileTemplateBase;\n36  import\
          \ org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n37  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPAddress;\n\
          38  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPFactories;\n39  import\
          \ org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfileTemplate;\n40  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n41  import org.omg.CORBA_2_3.portable.InputStream;\n\
          42  import org.omg.CORBA_2_3.portable.OutputStream;\n43  import org.omg.IOP.TAG_INTERNET_IOP;\n\
          44  \n45  /**\n46   * @author If getMinorVersion==0, this does not contain\
          \ any tagged components\n47   */\n48  public class IIOPProfileTemplateImpl\
          \ extends TaggedProfileTemplateBase implements IIOPProfileTemplate\n49 \
          \ {\n50      private ORB orb;\n51  \n52      private GIOPVersion giopVersion;"
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/IIOPProfileTemplateImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/IIOPProfileTemplateImpl.java
          kind: Class
          name: IIOPProfileTemplateImpl
          package: org.jboss.com.sun.corba.se.impl.ior.iiop
      - codeSnip: "20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.impl.ior.iiop;\n27  \n28  import org.jboss.com.sun.corba.se.spi.ior.TaggedComponentBase;\n\
          29  import org.jboss.com.sun.corba.se.spi.ior.iiop.JavaCodebaseComponent;\n\
          30  import org.omg.CORBA_2_3.portable.OutputStream;\n31  import org.omg.IOP.TAG_JAVA_CODEBASE;\n\
          32  \n33  /**\n34   * @author\n35   */\n36  public class JavaCodebaseComponentImpl\
          \ extends TaggedComponentBase implements JavaCodebaseComponent\n37  {\n\
          38      private String URLs;\n39  \n40      public boolean equals(Object\
          \ obj)"
        lineNumber: 30
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/JavaCodebaseComponentImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/JavaCodebaseComponentImpl.java
          kind: Class
          name: JavaCodebaseComponentImpl
          package: org.jboss.com.sun.corba.se.impl.ior.iiop
      - codeSnip: "20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  package org.jboss.com.sun.corba.se.impl.ior.iiop;\n\
          26  \n27  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n\
          28  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\n\
          29  import org.jboss.com.sun.corba.se.spi.ior.TaggedComponentBase;\n30 \
          \ import org.omg.CORBA_2_3.portable.OutputStream;\n31  \n32  /**\n33   *\
          \ Tagged component that contains a value that indicates the Java serialization\
          \ version supported by the ORB.\n34   * \n35   * ORB Java serialization\
          \ uses IIOP as the transport protocol, but uses Java serialization mechanism\
          \ and its\n36   * accompanying encodings, instead of IIOP CDR serialization\
          \ mechanism. Java serialization is generally observed to be\n37   * faster\
          \ than CDR.\n38   */\n39  public class JavaSerializationComponent extends\
          \ TaggedComponentBase\n40  {"
        lineNumber: 30
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/JavaSerializationComponent.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/JavaSerializationComponent.java
          kind: Class
          name: JavaSerializationComponent
          package: org.jboss.com.sun.corba.se.impl.ior.iiop
      - codeSnip: "23   * questions.\n24   */\n25  \n26  /**\n27   */\n28  package\
          \ org.jboss.com.sun.corba.se.impl.ior.iiop;\n29  \n30  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n\
          31  import org.jboss.com.sun.corba.se.spi.ior.TaggedComponentBase;\n32 \
          \ import org.jboss.com.sun.corba.se.spi.ior.iiop.MaxStreamFormatVersionComponent;\n\
          33  import org.omg.CORBA_2_3.portable.OutputStream;\n34  import org.omg.IOP.TAG_RMI_CUSTOM_MAX_STREAM_FORMAT;\n\
          35  \n36  // Java to IDL ptc 02-01-12 1.4.11\n37  // TAG_RMI_CUSTOM_MAX_STREAM_FORMAT\n\
          38  public class MaxStreamFormatVersionComponentImpl extends TaggedComponentBase\
          \ implements MaxStreamFormatVersionComponent\n39  {\n40      private byte\
          \ version;\n41  \n42      public static final MaxStreamFormatVersionComponentImpl\
          \ singleton = new MaxStreamFormatVersionComponentImpl();\n43  "
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/MaxStreamFormatVersionComponentImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/MaxStreamFormatVersionComponentImpl.java
          kind: Class
          name: MaxStreamFormatVersionComponentImpl
          package: org.jboss.com.sun.corba.se.impl.ior.iiop
      - codeSnip: "20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.impl.ior.iiop;\n27  \n28  import org.jboss.com.sun.corba.se.spi.ior.TaggedComponentBase;\n\
          29  import org.jboss.com.sun.corba.se.spi.ior.iiop.ORBTypeComponent;\n30\
          \  import org.omg.CORBA_2_3.portable.OutputStream;\n31  import org.omg.IOP.TAG_ORB_TYPE;\n\
          32  \n33  /**\n34   * @author Ken Cavanaugh\n35   */\n36  public class ORBTypeComponentImpl\
          \ extends TaggedComponentBase implements ORBTypeComponent\n37  {\n38   \
          \   private int ORBType;\n39  \n40      public boolean equals(Object obj)"
        lineNumber: 30
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/ORBTypeComponentImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/ORBTypeComponentImpl.java
          kind: Class
          name: ORBTypeComponentImpl
          package: org.jboss.com.sun.corba.se.impl.ior.iiop
      - codeSnip: "25  \n26  /**\n27   */\n28  package org.jboss.com.sun.corba.se.impl.ior.iiop;\n\
          29  \n30  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          31  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n32  import\
          \ org.jboss.com.sun.corba.se.spi.ior.TaggedComponentBase;\n33  import org.jboss.com.sun.corba.se.spi.ior.iiop.RequestPartitioningComponent;\n\
          34  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35 \
          \ import org.omg.CORBA_2_3.portable.OutputStream;\n36  \n37  public class\
          \ RequestPartitioningComponentImpl extends TaggedComponentBase implements\
          \ RequestPartitioningComponent\n38  {\n39      private static ORBUtilSystemException\
          \ wrapper = ORBUtilSystemException.get(CORBALogDomains.OA_IOR);\n40  \n\
          41      private int partitionToUse;\n42  \n43      public boolean equals(Object\
          \ obj)\n44      {\n45          if (!(obj instanceof RequestPartitioningComponentImpl))"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/RequestPartitioningComponentImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/ior/iiop/RequestPartitioningComponentImpl.java
          kind: Class
          name: RequestPartitioningComponentImpl
          package: org.jboss.com.sun.corba.se.impl.ior.iiop
      - lineNumber: 77
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - lineNumber: 121
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Method
          name: unregisterTargetsForORB
          package: ''
      - lineNumber: 328
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Method
          name: writeAny
          package: ''
      - lineNumber: 330
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Method
          name: writeAny
          package: ''
      - lineNumber: 338
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Method
          name: writeAny
          package: ''
      - lineNumber: 340
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Method
          name: writeAny
          package: ''
      - lineNumber: 386
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Method
          name: createTypeCode
          package: ''
      - lineNumber: 408
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Method
          name: createTypeCodeForNull
          package: ''
      - lineNumber: 466
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Method
          name: writeRemoteObject
          package: ''
      - lineNumber: 486
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Method
          name: writeAbstractObject
          package: ''
      - lineNumber: 550
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Method
          name: unexportObject
          package: ''
      - lineNumber: 669
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Method
          name: isLocal
          package: ''
      - lineNumber: 741
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Method
          name: copyObjects
          package: ''
      - lineNumber: 773
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Method
          name: copyObject
          package: ''
      - lineNumber: 805
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Method
          name: copyObject
          package: ''
      - lineNumber: 808
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Method
          name: copyObject
          package: ''
      - codeSnip: " 81  import org.omg.CORBA.COMM_FAILURE;\n 82  import org.omg.CORBA.CompletionStatus;\n\
          \ 83  import org.omg.CORBA.INVALID_ACTIVITY;\n 84  import org.omg.CORBA.INVALID_TRANSACTION;\n\
          \ 85  import org.omg.CORBA.INV_OBJREF;\n 86  import org.omg.CORBA.MARSHAL;\n\
          \ 87  import org.omg.CORBA.NO_PERMISSION;\n 88  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          \ 89  import org.omg.CORBA.SystemException;\n 90  import org.omg.CORBA.TCKind;\n\
          \ 91  import org.omg.CORBA.TRANSACTION_REQUIRED;\n 92  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;\n\
          \ 93  import org.omg.CORBA.TypeCode;\n 94  import org.omg.CORBA.portable.InputStream;\n\
          \ 95  import org.omg.CORBA.portable.OutputStream;\n 96  import org.omg.CORBA.portable.UnknownException;\n\
          \ 97  \n 98  /**\n 99   * Provides utility methods that can be used by stubs\
          \ and ties to perform common operations.\n100   */\n101  public class Util\
          \ implements javax.rmi.CORBA.UtilDelegate"
        lineNumber: 91
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: " 82  import org.omg.CORBA.CompletionStatus;\n 83  import org.omg.CORBA.INVALID_ACTIVITY;\n\
          \ 84  import org.omg.CORBA.INVALID_TRANSACTION;\n 85  import org.omg.CORBA.INV_OBJREF;\n\
          \ 86  import org.omg.CORBA.MARSHAL;\n 87  import org.omg.CORBA.NO_PERMISSION;\n\
          \ 88  import org.omg.CORBA.OBJECT_NOT_EXIST;\n 89  import org.omg.CORBA.SystemException;\n\
          \ 90  import org.omg.CORBA.TCKind;\n 91  import org.omg.CORBA.TRANSACTION_REQUIRED;\n\
          \ 92  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;\n 93  import org.omg.CORBA.TypeCode;\n\
          \ 94  import org.omg.CORBA.portable.InputStream;\n 95  import org.omg.CORBA.portable.OutputStream;\n\
          \ 96  import org.omg.CORBA.portable.UnknownException;\n 97  \n 98  /**\n\
          \ 99   * Provides utility methods that can be used by stubs and ties to\
          \ perform common operations.\n100   */\n101  public class Util implements\
          \ javax.rmi.CORBA.UtilDelegate\n102  {"
        lineNumber: 92
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: " 83  import org.omg.CORBA.INVALID_ACTIVITY;\n 84  import org.omg.CORBA.INVALID_TRANSACTION;\n\
          \ 85  import org.omg.CORBA.INV_OBJREF;\n 86  import org.omg.CORBA.MARSHAL;\n\
          \ 87  import org.omg.CORBA.NO_PERMISSION;\n 88  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          \ 89  import org.omg.CORBA.SystemException;\n 90  import org.omg.CORBA.TCKind;\n\
          \ 91  import org.omg.CORBA.TRANSACTION_REQUIRED;\n 92  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;\n\
          \ 93  import org.omg.CORBA.TypeCode;\n 94  import org.omg.CORBA.portable.InputStream;\n\
          \ 95  import org.omg.CORBA.portable.OutputStream;\n 96  import org.omg.CORBA.portable.UnknownException;\n\
          \ 97  \n 98  /**\n 99   * Provides utility methods that can be used by stubs\
          \ and ties to perform common operations.\n100   */\n101  public class Util\
          \ implements javax.rmi.CORBA.UtilDelegate\n102  {\n103      // Runs as long\
          \ as there are exportedServants"
        lineNumber: 93
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: " 84  import org.omg.CORBA.INVALID_TRANSACTION;\n 85  import org.omg.CORBA.INV_OBJREF;\n\
          \ 86  import org.omg.CORBA.MARSHAL;\n 87  import org.omg.CORBA.NO_PERMISSION;\n\
          \ 88  import org.omg.CORBA.OBJECT_NOT_EXIST;\n 89  import org.omg.CORBA.SystemException;\n\
          \ 90  import org.omg.CORBA.TCKind;\n 91  import org.omg.CORBA.TRANSACTION_REQUIRED;\n\
          \ 92  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;\n 93  import org.omg.CORBA.TypeCode;\n\
          \ 94  import org.omg.CORBA.portable.InputStream;\n 95  import org.omg.CORBA.portable.OutputStream;\n\
          \ 96  import org.omg.CORBA.portable.UnknownException;\n 97  \n 98  /**\n\
          \ 99   * Provides utility methods that can be used by stubs and ties to\
          \ perform common operations.\n100   */\n101  public class Util implements\
          \ javax.rmi.CORBA.UtilDelegate\n102  {\n103      // Runs as long as there\
          \ are exportedServants\n104      private static KeepAlive keepAlive = null;"
        lineNumber: 94
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: " 85  import org.omg.CORBA.INV_OBJREF;\n 86  import org.omg.CORBA.MARSHAL;\n\
          \ 87  import org.omg.CORBA.NO_PERMISSION;\n 88  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          \ 89  import org.omg.CORBA.SystemException;\n 90  import org.omg.CORBA.TCKind;\n\
          \ 91  import org.omg.CORBA.TRANSACTION_REQUIRED;\n 92  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;\n\
          \ 93  import org.omg.CORBA.TypeCode;\n 94  import org.omg.CORBA.portable.InputStream;\n\
          \ 95  import org.omg.CORBA.portable.OutputStream;\n 96  import org.omg.CORBA.portable.UnknownException;\n\
          \ 97  \n 98  /**\n 99   * Provides utility methods that can be used by stubs\
          \ and ties to perform common operations.\n100   */\n101  public class Util\
          \ implements javax.rmi.CORBA.UtilDelegate\n102  {\n103      // Runs as long\
          \ as there are exportedServants\n104      private static KeepAlive keepAlive\
          \ = null;\n105  "
        lineNumber: 95
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: " 86  import org.omg.CORBA.MARSHAL;\n 87  import org.omg.CORBA.NO_PERMISSION;\n\
          \ 88  import org.omg.CORBA.OBJECT_NOT_EXIST;\n 89  import org.omg.CORBA.SystemException;\n\
          \ 90  import org.omg.CORBA.TCKind;\n 91  import org.omg.CORBA.TRANSACTION_REQUIRED;\n\
          \ 92  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;\n 93  import org.omg.CORBA.TypeCode;\n\
          \ 94  import org.omg.CORBA.portable.InputStream;\n 95  import org.omg.CORBA.portable.OutputStream;\n\
          \ 96  import org.omg.CORBA.portable.UnknownException;\n 97  \n 98  /**\n\
          \ 99   * Provides utility methods that can be used by stubs and ties to\
          \ perform common operations.\n100   */\n101  public class Util implements\
          \ javax.rmi.CORBA.UtilDelegate\n102  {\n103      // Runs as long as there\
          \ are exportedServants\n104      private static KeepAlive keepAlive = null;\n\
          105  \n106      // Maps targets to ties."
        lineNumber: 96
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: '66  import org.jboss.com.sun.corba.se.pept.transport.ContactInfoList;

          67  import org.jboss.com.sun.corba.se.spi.copyobject.CopierManager;

          68  import org.jboss.com.sun.corba.se.spi.copyobject.ObjectCopier;

          69  import org.jboss.com.sun.corba.se.spi.copyobject.ReflectiveCopyException;

          70  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          71  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          72  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          73  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          74  import org.jboss.com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher;

          75  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;

          76  import org.omg.CORBA.ACTIVITY_COMPLETED;

          77  import org.omg.CORBA.ACTIVITY_REQUIRED;

          78  import org.omg.CORBA.Any;

          79  import org.omg.CORBA.BAD_OPERATION;

          80  import org.omg.CORBA.BAD_PARAM;

          81  import org.omg.CORBA.COMM_FAILURE;

          82  import org.omg.CORBA.CompletionStatus;

          83  import org.omg.CORBA.INVALID_ACTIVITY;

          84  import org.omg.CORBA.INVALID_TRANSACTION;

          85  import org.omg.CORBA.INV_OBJREF;

          86  import org.omg.CORBA.MARSHAL;'
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: '68  import org.jboss.com.sun.corba.se.spi.copyobject.ObjectCopier;

          69  import org.jboss.com.sun.corba.se.spi.copyobject.ReflectiveCopyException;

          70  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          71  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          72  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          73  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          74  import org.jboss.com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher;

          75  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;

          76  import org.omg.CORBA.ACTIVITY_COMPLETED;

          77  import org.omg.CORBA.ACTIVITY_REQUIRED;

          78  import org.omg.CORBA.Any;

          79  import org.omg.CORBA.BAD_OPERATION;

          80  import org.omg.CORBA.BAD_PARAM;

          81  import org.omg.CORBA.COMM_FAILURE;

          82  import org.omg.CORBA.CompletionStatus;

          83  import org.omg.CORBA.INVALID_ACTIVITY;

          84  import org.omg.CORBA.INVALID_TRANSACTION;

          85  import org.omg.CORBA.INV_OBJREF;

          86  import org.omg.CORBA.MARSHAL;

          87  import org.omg.CORBA.NO_PERMISSION;

          88  import org.omg.CORBA.OBJECT_NOT_EXIST;'
        lineNumber: 78
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: '69  import org.jboss.com.sun.corba.se.spi.copyobject.ReflectiveCopyException;

          70  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          71  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          72  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          73  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          74  import org.jboss.com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher;

          75  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;

          76  import org.omg.CORBA.ACTIVITY_COMPLETED;

          77  import org.omg.CORBA.ACTIVITY_REQUIRED;

          78  import org.omg.CORBA.Any;

          79  import org.omg.CORBA.BAD_OPERATION;

          80  import org.omg.CORBA.BAD_PARAM;

          81  import org.omg.CORBA.COMM_FAILURE;

          82  import org.omg.CORBA.CompletionStatus;

          83  import org.omg.CORBA.INVALID_ACTIVITY;

          84  import org.omg.CORBA.INVALID_TRANSACTION;

          85  import org.omg.CORBA.INV_OBJREF;

          86  import org.omg.CORBA.MARSHAL;

          87  import org.omg.CORBA.NO_PERMISSION;

          88  import org.omg.CORBA.OBJECT_NOT_EXIST;

          89  import org.omg.CORBA.SystemException;'
        lineNumber: 79
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: '70  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          71  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          72  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          73  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          74  import org.jboss.com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher;

          75  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;

          76  import org.omg.CORBA.ACTIVITY_COMPLETED;

          77  import org.omg.CORBA.ACTIVITY_REQUIRED;

          78  import org.omg.CORBA.Any;

          79  import org.omg.CORBA.BAD_OPERATION;

          80  import org.omg.CORBA.BAD_PARAM;

          81  import org.omg.CORBA.COMM_FAILURE;

          82  import org.omg.CORBA.CompletionStatus;

          83  import org.omg.CORBA.INVALID_ACTIVITY;

          84  import org.omg.CORBA.INVALID_TRANSACTION;

          85  import org.omg.CORBA.INV_OBJREF;

          86  import org.omg.CORBA.MARSHAL;

          87  import org.omg.CORBA.NO_PERMISSION;

          88  import org.omg.CORBA.OBJECT_NOT_EXIST;

          89  import org.omg.CORBA.SystemException;

          90  import org.omg.CORBA.TCKind;'
        lineNumber: 80
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: '71  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          72  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          73  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          74  import org.jboss.com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher;

          75  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;

          76  import org.omg.CORBA.ACTIVITY_COMPLETED;

          77  import org.omg.CORBA.ACTIVITY_REQUIRED;

          78  import org.omg.CORBA.Any;

          79  import org.omg.CORBA.BAD_OPERATION;

          80  import org.omg.CORBA.BAD_PARAM;

          81  import org.omg.CORBA.COMM_FAILURE;

          82  import org.omg.CORBA.CompletionStatus;

          83  import org.omg.CORBA.INVALID_ACTIVITY;

          84  import org.omg.CORBA.INVALID_TRANSACTION;

          85  import org.omg.CORBA.INV_OBJREF;

          86  import org.omg.CORBA.MARSHAL;

          87  import org.omg.CORBA.NO_PERMISSION;

          88  import org.omg.CORBA.OBJECT_NOT_EXIST;

          89  import org.omg.CORBA.SystemException;

          90  import org.omg.CORBA.TCKind;

          91  import org.omg.CORBA.TRANSACTION_REQUIRED;'
        lineNumber: 81
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: '72  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          73  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          74  import org.jboss.com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher;

          75  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;

          76  import org.omg.CORBA.ACTIVITY_COMPLETED;

          77  import org.omg.CORBA.ACTIVITY_REQUIRED;

          78  import org.omg.CORBA.Any;

          79  import org.omg.CORBA.BAD_OPERATION;

          80  import org.omg.CORBA.BAD_PARAM;

          81  import org.omg.CORBA.COMM_FAILURE;

          82  import org.omg.CORBA.CompletionStatus;

          83  import org.omg.CORBA.INVALID_ACTIVITY;

          84  import org.omg.CORBA.INVALID_TRANSACTION;

          85  import org.omg.CORBA.INV_OBJREF;

          86  import org.omg.CORBA.MARSHAL;

          87  import org.omg.CORBA.NO_PERMISSION;

          88  import org.omg.CORBA.OBJECT_NOT_EXIST;

          89  import org.omg.CORBA.SystemException;

          90  import org.omg.CORBA.TCKind;

          91  import org.omg.CORBA.TRANSACTION_REQUIRED;

          92  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;'
        lineNumber: 82
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: '73  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          74  import org.jboss.com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher;

          75  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;

          76  import org.omg.CORBA.ACTIVITY_COMPLETED;

          77  import org.omg.CORBA.ACTIVITY_REQUIRED;

          78  import org.omg.CORBA.Any;

          79  import org.omg.CORBA.BAD_OPERATION;

          80  import org.omg.CORBA.BAD_PARAM;

          81  import org.omg.CORBA.COMM_FAILURE;

          82  import org.omg.CORBA.CompletionStatus;

          83  import org.omg.CORBA.INVALID_ACTIVITY;

          84  import org.omg.CORBA.INVALID_TRANSACTION;

          85  import org.omg.CORBA.INV_OBJREF;

          86  import org.omg.CORBA.MARSHAL;

          87  import org.omg.CORBA.NO_PERMISSION;

          88  import org.omg.CORBA.OBJECT_NOT_EXIST;

          89  import org.omg.CORBA.SystemException;

          90  import org.omg.CORBA.TCKind;

          91  import org.omg.CORBA.TRANSACTION_REQUIRED;

          92  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;

          93  import org.omg.CORBA.TypeCode;'
        lineNumber: 83
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: '74  import org.jboss.com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher;

          75  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;

          76  import org.omg.CORBA.ACTIVITY_COMPLETED;

          77  import org.omg.CORBA.ACTIVITY_REQUIRED;

          78  import org.omg.CORBA.Any;

          79  import org.omg.CORBA.BAD_OPERATION;

          80  import org.omg.CORBA.BAD_PARAM;

          81  import org.omg.CORBA.COMM_FAILURE;

          82  import org.omg.CORBA.CompletionStatus;

          83  import org.omg.CORBA.INVALID_ACTIVITY;

          84  import org.omg.CORBA.INVALID_TRANSACTION;

          85  import org.omg.CORBA.INV_OBJREF;

          86  import org.omg.CORBA.MARSHAL;

          87  import org.omg.CORBA.NO_PERMISSION;

          88  import org.omg.CORBA.OBJECT_NOT_EXIST;

          89  import org.omg.CORBA.SystemException;

          90  import org.omg.CORBA.TCKind;

          91  import org.omg.CORBA.TRANSACTION_REQUIRED;

          92  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;

          93  import org.omg.CORBA.TypeCode;

          94  import org.omg.CORBA.portable.InputStream;'
        lineNumber: 84
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: '75  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;

          76  import org.omg.CORBA.ACTIVITY_COMPLETED;

          77  import org.omg.CORBA.ACTIVITY_REQUIRED;

          78  import org.omg.CORBA.Any;

          79  import org.omg.CORBA.BAD_OPERATION;

          80  import org.omg.CORBA.BAD_PARAM;

          81  import org.omg.CORBA.COMM_FAILURE;

          82  import org.omg.CORBA.CompletionStatus;

          83  import org.omg.CORBA.INVALID_ACTIVITY;

          84  import org.omg.CORBA.INVALID_TRANSACTION;

          85  import org.omg.CORBA.INV_OBJREF;

          86  import org.omg.CORBA.MARSHAL;

          87  import org.omg.CORBA.NO_PERMISSION;

          88  import org.omg.CORBA.OBJECT_NOT_EXIST;

          89  import org.omg.CORBA.SystemException;

          90  import org.omg.CORBA.TCKind;

          91  import org.omg.CORBA.TRANSACTION_REQUIRED;

          92  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;

          93  import org.omg.CORBA.TypeCode;

          94  import org.omg.CORBA.portable.InputStream;

          95  import org.omg.CORBA.portable.OutputStream;'
        lineNumber: 85
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: '76  import org.omg.CORBA.ACTIVITY_COMPLETED;

          77  import org.omg.CORBA.ACTIVITY_REQUIRED;

          78  import org.omg.CORBA.Any;

          79  import org.omg.CORBA.BAD_OPERATION;

          80  import org.omg.CORBA.BAD_PARAM;

          81  import org.omg.CORBA.COMM_FAILURE;

          82  import org.omg.CORBA.CompletionStatus;

          83  import org.omg.CORBA.INVALID_ACTIVITY;

          84  import org.omg.CORBA.INVALID_TRANSACTION;

          85  import org.omg.CORBA.INV_OBJREF;

          86  import org.omg.CORBA.MARSHAL;

          87  import org.omg.CORBA.NO_PERMISSION;

          88  import org.omg.CORBA.OBJECT_NOT_EXIST;

          89  import org.omg.CORBA.SystemException;

          90  import org.omg.CORBA.TCKind;

          91  import org.omg.CORBA.TRANSACTION_REQUIRED;

          92  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;

          93  import org.omg.CORBA.TypeCode;

          94  import org.omg.CORBA.portable.InputStream;

          95  import org.omg.CORBA.portable.OutputStream;

          96  import org.omg.CORBA.portable.UnknownException;'
        lineNumber: 86
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: '77  import org.omg.CORBA.ACTIVITY_REQUIRED;

          78  import org.omg.CORBA.Any;

          79  import org.omg.CORBA.BAD_OPERATION;

          80  import org.omg.CORBA.BAD_PARAM;

          81  import org.omg.CORBA.COMM_FAILURE;

          82  import org.omg.CORBA.CompletionStatus;

          83  import org.omg.CORBA.INVALID_ACTIVITY;

          84  import org.omg.CORBA.INVALID_TRANSACTION;

          85  import org.omg.CORBA.INV_OBJREF;

          86  import org.omg.CORBA.MARSHAL;

          87  import org.omg.CORBA.NO_PERMISSION;

          88  import org.omg.CORBA.OBJECT_NOT_EXIST;

          89  import org.omg.CORBA.SystemException;

          90  import org.omg.CORBA.TCKind;

          91  import org.omg.CORBA.TRANSACTION_REQUIRED;

          92  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;

          93  import org.omg.CORBA.TypeCode;

          94  import org.omg.CORBA.portable.InputStream;

          95  import org.omg.CORBA.portable.OutputStream;

          96  import org.omg.CORBA.portable.UnknownException;

          97  '
        lineNumber: 87
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: "78  import org.omg.CORBA.Any;\n79  import org.omg.CORBA.BAD_OPERATION;\n\
          80  import org.omg.CORBA.BAD_PARAM;\n81  import org.omg.CORBA.COMM_FAILURE;\n\
          82  import org.omg.CORBA.CompletionStatus;\n83  import org.omg.CORBA.INVALID_ACTIVITY;\n\
          84  import org.omg.CORBA.INVALID_TRANSACTION;\n85  import org.omg.CORBA.INV_OBJREF;\n\
          86  import org.omg.CORBA.MARSHAL;\n87  import org.omg.CORBA.NO_PERMISSION;\n\
          88  import org.omg.CORBA.OBJECT_NOT_EXIST;\n89  import org.omg.CORBA.SystemException;\n\
          90  import org.omg.CORBA.TCKind;\n91  import org.omg.CORBA.TRANSACTION_REQUIRED;\n\
          92  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;\n93  import org.omg.CORBA.TypeCode;\n\
          94  import org.omg.CORBA.portable.InputStream;\n95  import org.omg.CORBA.portable.OutputStream;\n\
          96  import org.omg.CORBA.portable.UnknownException;\n97  \n98  /**"
        lineNumber: 88
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: "79  import org.omg.CORBA.BAD_OPERATION;\n80  import org.omg.CORBA.BAD_PARAM;\n\
          81  import org.omg.CORBA.COMM_FAILURE;\n82  import org.omg.CORBA.CompletionStatus;\n\
          83  import org.omg.CORBA.INVALID_ACTIVITY;\n84  import org.omg.CORBA.INVALID_TRANSACTION;\n\
          85  import org.omg.CORBA.INV_OBJREF;\n86  import org.omg.CORBA.MARSHAL;\n\
          87  import org.omg.CORBA.NO_PERMISSION;\n88  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          89  import org.omg.CORBA.SystemException;\n90  import org.omg.CORBA.TCKind;\n\
          91  import org.omg.CORBA.TRANSACTION_REQUIRED;\n92  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;\n\
          93  import org.omg.CORBA.TypeCode;\n94  import org.omg.CORBA.portable.InputStream;\n\
          95  import org.omg.CORBA.portable.OutputStream;\n96  import org.omg.CORBA.portable.UnknownException;\n\
          97  \n98  /**\n99   * Provides utility methods that can be used by stubs\
          \ and ties to perform common operations."
        lineNumber: 89
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: "80  import org.omg.CORBA.BAD_PARAM;\n81  import org.omg.CORBA.COMM_FAILURE;\n\
          82  import org.omg.CORBA.CompletionStatus;\n83  import org.omg.CORBA.INVALID_ACTIVITY;\n\
          84  import org.omg.CORBA.INVALID_TRANSACTION;\n85  import org.omg.CORBA.INV_OBJREF;\n\
          86  import org.omg.CORBA.MARSHAL;\n87  import org.omg.CORBA.NO_PERMISSION;\n\
          88  import org.omg.CORBA.OBJECT_NOT_EXIST;\n89  import org.omg.CORBA.SystemException;\n\
          90  import org.omg.CORBA.TCKind;\n91  import org.omg.CORBA.TRANSACTION_REQUIRED;\n\
          92  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;\n93  import org.omg.CORBA.TypeCode;\n\
          94  import org.omg.CORBA.portable.InputStream;\n95  import org.omg.CORBA.portable.OutputStream;\n\
          96  import org.omg.CORBA.portable.UnknownException;\n97  \n98  /**\n99 \
          \  * Provides utility methods that can be used by stubs and ties to perform\
          \ common operations.\n100   */"
        lineNumber: 90
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/CORBA/Util.java
          kind: Class
          name: Util
          package: ''
      - codeSnip: "215          try\n216          {\n217              if (narrowTo.isAssignableFrom(narrowFrom.getClass()))\n\
          218                  return narrowFrom;\n219  \n220              // Is narrowTo\
          \ an interface that might be implemented by a servant running on iiop?\n\
          221              if (narrowTo.isInterface() && narrowTo != java.io.Serializable.class\n\
          222                      && narrowTo != java.io.Externalizable.class)\n\
          223              {\n224  \n225                  org.omg.CORBA.Object narrowObj\
          \ = (org.omg.CORBA.Object) narrowFrom;\n226  \n227                  // Create\
          \ an id from the narrowTo type...\n228                  String id = RepositoryId.createForAnyType(narrowTo);\n\
          229  \n230                  if (narrowObj._is_a(id))\n231              \
          \    {\n232                      return Utility.loadStub(narrowObj, narrowTo);\n\
          233                  }\n234                  else\n235                 \
          \ {"
        lineNumber: 225
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/PortableRemoteObject.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/PortableRemoteObject.java
          kind: Method
          name: narrow
          package: org.jboss.com.sun.corba.se.impl.javax.rmi
      - codeSnip: "34  import java.rmi.NoSuchObjectException;\n35  import java.rmi.Remote;\n\
          36  import java.rmi.RemoteException;\n37  import java.rmi.server.ExportException;\n\
          38  import java.rmi.server.UnicastRemoteObject;\n39  \n40  import javax.rmi.CORBA.Stub;\n\
          41  import javax.rmi.CORBA.Tie;\n42  import javax.rmi.CORBA.Util;\n43  \n\
          44  import org.omg.CORBA.ORB;\n45  import org.omg.CORBA.SystemException;\n\
          46  \n47  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n48\
          \  import org.jboss.com.sun.corba.se.impl.util.Utility;\n49  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          50  \n51  /**\n52   * Server implementation objects may either inherit from\
          \ javax.rmi.PortableRemoteObject or they may implement a remote\n53   *\
          \ interface and then use the exportObject method to register themselves\
          \ as a server object. The toStub method takes a\n54   * server implementation\
          \ and returns a stub that can be used to access that server object. The\
          \ connect method makes a"
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/PortableRemoteObject.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/PortableRemoteObject.java
          kind: Class
          name: PortableRemoteObject
          package: org.jboss.com.sun.corba.se.impl.javax.rmi
      - codeSnip: "35  import java.rmi.Remote;\n36  import java.rmi.RemoteException;\n\
          37  import java.rmi.server.ExportException;\n38  import java.rmi.server.UnicastRemoteObject;\n\
          39  \n40  import javax.rmi.CORBA.Stub;\n41  import javax.rmi.CORBA.Tie;\n\
          42  import javax.rmi.CORBA.Util;\n43  \n44  import org.omg.CORBA.ORB;\n\
          45  import org.omg.CORBA.SystemException;\n46  \n47  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n\
          48  import org.jboss.com.sun.corba.se.impl.util.Utility;\n49  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          50  \n51  /**\n52   * Server implementation objects may either inherit from\
          \ javax.rmi.PortableRemoteObject or they may implement a remote\n53   *\
          \ interface and then use the exportObject method to register themselves\
          \ as a server object. The toStub method takes a\n54   * server implementation\
          \ and returns a stub that can be used to access that server object. The\
          \ connect method makes a\n55   * Remote object ready for remote communication.\
          \ The unexportObject method is used to deregister a server object,"
        lineNumber: 45
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/PortableRemoteObject.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/javax/rmi/PortableRemoteObject.java
          kind: Class
          name: PortableRemoteObject
          package: org.jboss.com.sun.corba.se.impl.javax.rmi
      - codeSnip: "26  // Log wrapper class for Sun private system exceptions in group\
          \ IOR\n27  //\n28  // Generated by mc.scm version %I%, DO NOT EDIT BY HAND!\n\
          29  // Generated from input file src/main/resources/org/jboss/com/sun/corba/se/spi/logging/data/IOR.mc\
          \ on Wed Feb 02 17:13:17 PST 2011\n30  \n31  package org.jboss.com.sun.corba.se.impl.logging;\n\
          32  \n33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.omg.CORBA.BAD_OPERATION;\n37  import org.omg.CORBA.BAD_PARAM;\n\
          38  import org.omg.CORBA.CompletionStatus;\n39  import org.omg.CORBA.INTERNAL;\n\
          40  import org.omg.CORBA.INV_OBJREF;\n41  \n42  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n\
          43  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n44  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n45  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n46  "
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/IORSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/IORSystemException.java
          kind: Class
          name: IORSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "27  //\n28  // Generated by mc.scm version %I%, DO NOT EDIT BY\
          \ HAND!\n29  // Generated from input file src/main/resources/org/jboss/com/sun/corba/se/spi/logging/data/IOR.mc\
          \ on Wed Feb 02 17:13:17 PST 2011\n30  \n31  package org.jboss.com.sun.corba.se.impl.logging;\n\
          32  \n33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.omg.CORBA.BAD_OPERATION;\n37  import org.omg.CORBA.BAD_PARAM;\n\
          38  import org.omg.CORBA.CompletionStatus;\n39  import org.omg.CORBA.INTERNAL;\n\
          40  import org.omg.CORBA.INV_OBJREF;\n41  \n42  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n\
          43  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n44  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n45  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n46  \n47  public class IORSystemException\
          \ extends LogWrapperBase"
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/IORSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/IORSystemException.java
          kind: Class
          name: IORSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "28  // Generated by mc.scm version %I%, DO NOT EDIT BY HAND!\n\
          29  // Generated from input file src/main/resources/org/jboss/com/sun/corba/se/spi/logging/data/IOR.mc\
          \ on Wed Feb 02 17:13:17 PST 2011\n30  \n31  package org.jboss.com.sun.corba.se.impl.logging;\n\
          32  \n33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.omg.CORBA.BAD_OPERATION;\n37  import org.omg.CORBA.BAD_PARAM;\n\
          38  import org.omg.CORBA.CompletionStatus;\n39  import org.omg.CORBA.INTERNAL;\n\
          40  import org.omg.CORBA.INV_OBJREF;\n41  \n42  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n\
          43  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n44  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n45  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n46  \n47  public class IORSystemException\
          \ extends LogWrapperBase\n48  {"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/IORSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/IORSystemException.java
          kind: Class
          name: IORSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "29  // Generated from input file src/main/resources/org/jboss/com/sun/corba/se/spi/logging/data/IOR.mc\
          \ on Wed Feb 02 17:13:17 PST 2011\n30  \n31  package org.jboss.com.sun.corba.se.impl.logging;\n\
          32  \n33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.omg.CORBA.BAD_OPERATION;\n37  import org.omg.CORBA.BAD_PARAM;\n\
          38  import org.omg.CORBA.CompletionStatus;\n39  import org.omg.CORBA.INTERNAL;\n\
          40  import org.omg.CORBA.INV_OBJREF;\n41  \n42  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n\
          43  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n44  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n45  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n46  \n47  public class IORSystemException\
          \ extends LogWrapperBase\n48  {\n49  "
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/IORSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/IORSystemException.java
          kind: Class
          name: IORSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "30  \n31  package org.jboss.com.sun.corba.se.impl.logging;\n32\
          \  \n33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.omg.CORBA.BAD_OPERATION;\n37  import org.omg.CORBA.BAD_PARAM;\n\
          38  import org.omg.CORBA.CompletionStatus;\n39  import org.omg.CORBA.INTERNAL;\n\
          40  import org.omg.CORBA.INV_OBJREF;\n41  \n42  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n\
          43  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n44  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n45  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n46  \n47  public class IORSystemException\
          \ extends LogWrapperBase\n48  {\n49  \n50      public IORSystemException(Logger\
          \ logger)"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/IORSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/IORSystemException.java
          kind: Class
          name: IORSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - lineNumber: 52
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: 11   * This code is distributed in the hope that it will be useful,
          but WITHOUT
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "29  // Generated from input file src/main/resources/org/jboss/com/sun/corba/se/spi/logging/data/OMG.mc\
          \ on Wed Feb 02 17:13:19 PST 2011\n30  \n31  package org.jboss.com.sun.corba.se.impl.logging;\n\
          32  \n33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n\
          37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n38\
          \  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n39  import org.omg.CORBA.BAD_CONTEXT;\n\
          40  import org.omg.CORBA.BAD_INV_ORDER;\n41  import org.omg.CORBA.BAD_OPERATION;\n\
          42  import org.omg.CORBA.BAD_PARAM;\n43  import org.omg.CORBA.BAD_TYPECODE;\n\
          44  import org.omg.CORBA.CompletionStatus;\n45  import org.omg.CORBA.DATA_CONVERSION;\n\
          46  import org.omg.CORBA.IMP_LIMIT;\n47  import org.omg.CORBA.INITIALIZE;\n\
          48  import org.omg.CORBA.INTERNAL;\n49  import org.omg.CORBA.INTF_REPOS;"
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "31  package org.jboss.com.sun.corba.se.impl.logging;\n32  \n33\
          \  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n\
          37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n38\
          \  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n39  import org.omg.CORBA.BAD_CONTEXT;\n\
          40  import org.omg.CORBA.BAD_INV_ORDER;\n41  import org.omg.CORBA.BAD_OPERATION;\n\
          42  import org.omg.CORBA.BAD_PARAM;\n43  import org.omg.CORBA.BAD_TYPECODE;\n\
          44  import org.omg.CORBA.CompletionStatus;\n45  import org.omg.CORBA.DATA_CONVERSION;\n\
          46  import org.omg.CORBA.IMP_LIMIT;\n47  import org.omg.CORBA.INITIALIZE;\n\
          48  import org.omg.CORBA.INTERNAL;\n49  import org.omg.CORBA.INTF_REPOS;\n\
          50  import org.omg.CORBA.INV_OBJREF;\n51  import org.omg.CORBA.INV_POLICY;"
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "32  \n33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n\
          37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n38\
          \  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n39  import org.omg.CORBA.BAD_CONTEXT;\n\
          40  import org.omg.CORBA.BAD_INV_ORDER;\n41  import org.omg.CORBA.BAD_OPERATION;\n\
          42  import org.omg.CORBA.BAD_PARAM;\n43  import org.omg.CORBA.BAD_TYPECODE;\n\
          44  import org.omg.CORBA.CompletionStatus;\n45  import org.omg.CORBA.DATA_CONVERSION;\n\
          46  import org.omg.CORBA.IMP_LIMIT;\n47  import org.omg.CORBA.INITIALIZE;\n\
          48  import org.omg.CORBA.INTERNAL;\n49  import org.omg.CORBA.INTF_REPOS;\n\
          50  import org.omg.CORBA.INV_OBJREF;\n51  import org.omg.CORBA.INV_POLICY;\n\
          52  import org.omg.CORBA.MARSHAL;"
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n\
          37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n38\
          \  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n39  import org.omg.CORBA.BAD_CONTEXT;\n\
          40  import org.omg.CORBA.BAD_INV_ORDER;\n41  import org.omg.CORBA.BAD_OPERATION;\n\
          42  import org.omg.CORBA.BAD_PARAM;\n43  import org.omg.CORBA.BAD_TYPECODE;\n\
          44  import org.omg.CORBA.CompletionStatus;\n45  import org.omg.CORBA.DATA_CONVERSION;\n\
          46  import org.omg.CORBA.IMP_LIMIT;\n47  import org.omg.CORBA.INITIALIZE;\n\
          48  import org.omg.CORBA.INTERNAL;\n49  import org.omg.CORBA.INTF_REPOS;\n\
          50  import org.omg.CORBA.INV_OBJREF;\n51  import org.omg.CORBA.INV_POLICY;\n\
          52  import org.omg.CORBA.MARSHAL;\n53  import org.omg.CORBA.NO_IMPLEMENT;"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "34  import java.util.logging.Logger;\n35  \n36  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n\
          37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n38\
          \  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n39  import org.omg.CORBA.BAD_CONTEXT;\n\
          40  import org.omg.CORBA.BAD_INV_ORDER;\n41  import org.omg.CORBA.BAD_OPERATION;\n\
          42  import org.omg.CORBA.BAD_PARAM;\n43  import org.omg.CORBA.BAD_TYPECODE;\n\
          44  import org.omg.CORBA.CompletionStatus;\n45  import org.omg.CORBA.DATA_CONVERSION;\n\
          46  import org.omg.CORBA.IMP_LIMIT;\n47  import org.omg.CORBA.INITIALIZE;\n\
          48  import org.omg.CORBA.INTERNAL;\n49  import org.omg.CORBA.INTF_REPOS;\n\
          50  import org.omg.CORBA.INV_OBJREF;\n51  import org.omg.CORBA.INV_POLICY;\n\
          52  import org.omg.CORBA.MARSHAL;\n53  import org.omg.CORBA.NO_IMPLEMENT;\n\
          54  import org.omg.CORBA.NO_RESOURCES;"
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "35  \n36  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n\
          37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n38\
          \  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n39  import org.omg.CORBA.BAD_CONTEXT;\n\
          40  import org.omg.CORBA.BAD_INV_ORDER;\n41  import org.omg.CORBA.BAD_OPERATION;\n\
          42  import org.omg.CORBA.BAD_PARAM;\n43  import org.omg.CORBA.BAD_TYPECODE;\n\
          44  import org.omg.CORBA.CompletionStatus;\n45  import org.omg.CORBA.DATA_CONVERSION;\n\
          46  import org.omg.CORBA.IMP_LIMIT;\n47  import org.omg.CORBA.INITIALIZE;\n\
          48  import org.omg.CORBA.INTERNAL;\n49  import org.omg.CORBA.INTF_REPOS;\n\
          50  import org.omg.CORBA.INV_OBJREF;\n51  import org.omg.CORBA.INV_POLICY;\n\
          52  import org.omg.CORBA.MARSHAL;\n53  import org.omg.CORBA.NO_IMPLEMENT;\n\
          54  import org.omg.CORBA.NO_RESOURCES;\n55  import org.omg.CORBA.OBJECT_NOT_EXIST;"
        lineNumber: 45
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: '36  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;

          37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;

          38  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          39  import org.omg.CORBA.BAD_CONTEXT;

          40  import org.omg.CORBA.BAD_INV_ORDER;

          41  import org.omg.CORBA.BAD_OPERATION;

          42  import org.omg.CORBA.BAD_PARAM;

          43  import org.omg.CORBA.BAD_TYPECODE;

          44  import org.omg.CORBA.CompletionStatus;

          45  import org.omg.CORBA.DATA_CONVERSION;

          46  import org.omg.CORBA.IMP_LIMIT;

          47  import org.omg.CORBA.INITIALIZE;

          48  import org.omg.CORBA.INTERNAL;

          49  import org.omg.CORBA.INTF_REPOS;

          50  import org.omg.CORBA.INV_OBJREF;

          51  import org.omg.CORBA.INV_POLICY;

          52  import org.omg.CORBA.MARSHAL;

          53  import org.omg.CORBA.NO_IMPLEMENT;

          54  import org.omg.CORBA.NO_RESOURCES;

          55  import org.omg.CORBA.OBJECT_NOT_EXIST;

          56  import org.omg.CORBA.OBJ_ADAPTER;'
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: '37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;

          38  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          39  import org.omg.CORBA.BAD_CONTEXT;

          40  import org.omg.CORBA.BAD_INV_ORDER;

          41  import org.omg.CORBA.BAD_OPERATION;

          42  import org.omg.CORBA.BAD_PARAM;

          43  import org.omg.CORBA.BAD_TYPECODE;

          44  import org.omg.CORBA.CompletionStatus;

          45  import org.omg.CORBA.DATA_CONVERSION;

          46  import org.omg.CORBA.IMP_LIMIT;

          47  import org.omg.CORBA.INITIALIZE;

          48  import org.omg.CORBA.INTERNAL;

          49  import org.omg.CORBA.INTF_REPOS;

          50  import org.omg.CORBA.INV_OBJREF;

          51  import org.omg.CORBA.INV_POLICY;

          52  import org.omg.CORBA.MARSHAL;

          53  import org.omg.CORBA.NO_IMPLEMENT;

          54  import org.omg.CORBA.NO_RESOURCES;

          55  import org.omg.CORBA.OBJECT_NOT_EXIST;

          56  import org.omg.CORBA.OBJ_ADAPTER;

          57  import org.omg.CORBA.OMGVMCID;'
        lineNumber: 47
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: '38  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          39  import org.omg.CORBA.BAD_CONTEXT;

          40  import org.omg.CORBA.BAD_INV_ORDER;

          41  import org.omg.CORBA.BAD_OPERATION;

          42  import org.omg.CORBA.BAD_PARAM;

          43  import org.omg.CORBA.BAD_TYPECODE;

          44  import org.omg.CORBA.CompletionStatus;

          45  import org.omg.CORBA.DATA_CONVERSION;

          46  import org.omg.CORBA.IMP_LIMIT;

          47  import org.omg.CORBA.INITIALIZE;

          48  import org.omg.CORBA.INTERNAL;

          49  import org.omg.CORBA.INTF_REPOS;

          50  import org.omg.CORBA.INV_OBJREF;

          51  import org.omg.CORBA.INV_POLICY;

          52  import org.omg.CORBA.MARSHAL;

          53  import org.omg.CORBA.NO_IMPLEMENT;

          54  import org.omg.CORBA.NO_RESOURCES;

          55  import org.omg.CORBA.OBJECT_NOT_EXIST;

          56  import org.omg.CORBA.OBJ_ADAPTER;

          57  import org.omg.CORBA.OMGVMCID;

          58  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;'
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: '39  import org.omg.CORBA.BAD_CONTEXT;

          40  import org.omg.CORBA.BAD_INV_ORDER;

          41  import org.omg.CORBA.BAD_OPERATION;

          42  import org.omg.CORBA.BAD_PARAM;

          43  import org.omg.CORBA.BAD_TYPECODE;

          44  import org.omg.CORBA.CompletionStatus;

          45  import org.omg.CORBA.DATA_CONVERSION;

          46  import org.omg.CORBA.IMP_LIMIT;

          47  import org.omg.CORBA.INITIALIZE;

          48  import org.omg.CORBA.INTERNAL;

          49  import org.omg.CORBA.INTF_REPOS;

          50  import org.omg.CORBA.INV_OBJREF;

          51  import org.omg.CORBA.INV_POLICY;

          52  import org.omg.CORBA.MARSHAL;

          53  import org.omg.CORBA.NO_IMPLEMENT;

          54  import org.omg.CORBA.NO_RESOURCES;

          55  import org.omg.CORBA.OBJECT_NOT_EXIST;

          56  import org.omg.CORBA.OBJ_ADAPTER;

          57  import org.omg.CORBA.OMGVMCID;

          58  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;

          59  import org.omg.CORBA.TRANSIENT;'
        lineNumber: 49
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: '40  import org.omg.CORBA.BAD_INV_ORDER;

          41  import org.omg.CORBA.BAD_OPERATION;

          42  import org.omg.CORBA.BAD_PARAM;

          43  import org.omg.CORBA.BAD_TYPECODE;

          44  import org.omg.CORBA.CompletionStatus;

          45  import org.omg.CORBA.DATA_CONVERSION;

          46  import org.omg.CORBA.IMP_LIMIT;

          47  import org.omg.CORBA.INITIALIZE;

          48  import org.omg.CORBA.INTERNAL;

          49  import org.omg.CORBA.INTF_REPOS;

          50  import org.omg.CORBA.INV_OBJREF;

          51  import org.omg.CORBA.INV_POLICY;

          52  import org.omg.CORBA.MARSHAL;

          53  import org.omg.CORBA.NO_IMPLEMENT;

          54  import org.omg.CORBA.NO_RESOURCES;

          55  import org.omg.CORBA.OBJECT_NOT_EXIST;

          56  import org.omg.CORBA.OBJ_ADAPTER;

          57  import org.omg.CORBA.OMGVMCID;

          58  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;

          59  import org.omg.CORBA.TRANSIENT;

          60  import org.omg.CORBA.UNKNOWN;'
        lineNumber: 50
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: '41  import org.omg.CORBA.BAD_OPERATION;

          42  import org.omg.CORBA.BAD_PARAM;

          43  import org.omg.CORBA.BAD_TYPECODE;

          44  import org.omg.CORBA.CompletionStatus;

          45  import org.omg.CORBA.DATA_CONVERSION;

          46  import org.omg.CORBA.IMP_LIMIT;

          47  import org.omg.CORBA.INITIALIZE;

          48  import org.omg.CORBA.INTERNAL;

          49  import org.omg.CORBA.INTF_REPOS;

          50  import org.omg.CORBA.INV_OBJREF;

          51  import org.omg.CORBA.INV_POLICY;

          52  import org.omg.CORBA.MARSHAL;

          53  import org.omg.CORBA.NO_IMPLEMENT;

          54  import org.omg.CORBA.NO_RESOURCES;

          55  import org.omg.CORBA.OBJECT_NOT_EXIST;

          56  import org.omg.CORBA.OBJ_ADAPTER;

          57  import org.omg.CORBA.OMGVMCID;

          58  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;

          59  import org.omg.CORBA.TRANSIENT;

          60  import org.omg.CORBA.UNKNOWN;

          61  '
        lineNumber: 51
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "43  import org.omg.CORBA.BAD_TYPECODE;\n44  import org.omg.CORBA.CompletionStatus;\n\
          45  import org.omg.CORBA.DATA_CONVERSION;\n46  import org.omg.CORBA.IMP_LIMIT;\n\
          47  import org.omg.CORBA.INITIALIZE;\n48  import org.omg.CORBA.INTERNAL;\n\
          49  import org.omg.CORBA.INTF_REPOS;\n50  import org.omg.CORBA.INV_OBJREF;\n\
          51  import org.omg.CORBA.INV_POLICY;\n52  import org.omg.CORBA.MARSHAL;\n\
          53  import org.omg.CORBA.NO_IMPLEMENT;\n54  import org.omg.CORBA.NO_RESOURCES;\n\
          55  import org.omg.CORBA.OBJECT_NOT_EXIST;\n56  import org.omg.CORBA.OBJ_ADAPTER;\n\
          57  import org.omg.CORBA.OMGVMCID;\n58  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;\n\
          59  import org.omg.CORBA.TRANSIENT;\n60  import org.omg.CORBA.UNKNOWN;\n\
          61  \n62  public class OMGSystemException extends LogWrapperBase\n63  {"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "44  import org.omg.CORBA.CompletionStatus;\n45  import org.omg.CORBA.DATA_CONVERSION;\n\
          46  import org.omg.CORBA.IMP_LIMIT;\n47  import org.omg.CORBA.INITIALIZE;\n\
          48  import org.omg.CORBA.INTERNAL;\n49  import org.omg.CORBA.INTF_REPOS;\n\
          50  import org.omg.CORBA.INV_OBJREF;\n51  import org.omg.CORBA.INV_POLICY;\n\
          52  import org.omg.CORBA.MARSHAL;\n53  import org.omg.CORBA.NO_IMPLEMENT;\n\
          54  import org.omg.CORBA.NO_RESOURCES;\n55  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          56  import org.omg.CORBA.OBJ_ADAPTER;\n57  import org.omg.CORBA.OMGVMCID;\n\
          58  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;\n59  import org.omg.CORBA.TRANSIENT;\n\
          60  import org.omg.CORBA.UNKNOWN;\n61  \n62  public class OMGSystemException\
          \ extends LogWrapperBase\n63  {\n64  "
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "45  import org.omg.CORBA.DATA_CONVERSION;\n46  import org.omg.CORBA.IMP_LIMIT;\n\
          47  import org.omg.CORBA.INITIALIZE;\n48  import org.omg.CORBA.INTERNAL;\n\
          49  import org.omg.CORBA.INTF_REPOS;\n50  import org.omg.CORBA.INV_OBJREF;\n\
          51  import org.omg.CORBA.INV_POLICY;\n52  import org.omg.CORBA.MARSHAL;\n\
          53  import org.omg.CORBA.NO_IMPLEMENT;\n54  import org.omg.CORBA.NO_RESOURCES;\n\
          55  import org.omg.CORBA.OBJECT_NOT_EXIST;\n56  import org.omg.CORBA.OBJ_ADAPTER;\n\
          57  import org.omg.CORBA.OMGVMCID;\n58  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;\n\
          59  import org.omg.CORBA.TRANSIENT;\n60  import org.omg.CORBA.UNKNOWN;\n\
          61  \n62  public class OMGSystemException extends LogWrapperBase\n63  {\n\
          64  \n65      public OMGSystemException(Logger logger)"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "46  import org.omg.CORBA.IMP_LIMIT;\n47  import org.omg.CORBA.INITIALIZE;\n\
          48  import org.omg.CORBA.INTERNAL;\n49  import org.omg.CORBA.INTF_REPOS;\n\
          50  import org.omg.CORBA.INV_OBJREF;\n51  import org.omg.CORBA.INV_POLICY;\n\
          52  import org.omg.CORBA.MARSHAL;\n53  import org.omg.CORBA.NO_IMPLEMENT;\n\
          54  import org.omg.CORBA.NO_RESOURCES;\n55  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          56  import org.omg.CORBA.OBJ_ADAPTER;\n57  import org.omg.CORBA.OMGVMCID;\n\
          58  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;\n59  import org.omg.CORBA.TRANSIENT;\n\
          60  import org.omg.CORBA.UNKNOWN;\n61  \n62  public class OMGSystemException\
          \ extends LogWrapperBase\n63  {\n64  \n65      public OMGSystemException(Logger\
          \ logger)\n66      {"
        lineNumber: 56
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "47  import org.omg.CORBA.INITIALIZE;\n48  import org.omg.CORBA.INTERNAL;\n\
          49  import org.omg.CORBA.INTF_REPOS;\n50  import org.omg.CORBA.INV_OBJREF;\n\
          51  import org.omg.CORBA.INV_POLICY;\n52  import org.omg.CORBA.MARSHAL;\n\
          53  import org.omg.CORBA.NO_IMPLEMENT;\n54  import org.omg.CORBA.NO_RESOURCES;\n\
          55  import org.omg.CORBA.OBJECT_NOT_EXIST;\n56  import org.omg.CORBA.OBJ_ADAPTER;\n\
          57  import org.omg.CORBA.OMGVMCID;\n58  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;\n\
          59  import org.omg.CORBA.TRANSIENT;\n60  import org.omg.CORBA.UNKNOWN;\n\
          61  \n62  public class OMGSystemException extends LogWrapperBase\n63  {\n\
          64  \n65      public OMGSystemException(Logger logger)\n66      {\n67  \
          \        super(logger);"
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "48  import org.omg.CORBA.INTERNAL;\n49  import org.omg.CORBA.INTF_REPOS;\n\
          50  import org.omg.CORBA.INV_OBJREF;\n51  import org.omg.CORBA.INV_POLICY;\n\
          52  import org.omg.CORBA.MARSHAL;\n53  import org.omg.CORBA.NO_IMPLEMENT;\n\
          54  import org.omg.CORBA.NO_RESOURCES;\n55  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          56  import org.omg.CORBA.OBJ_ADAPTER;\n57  import org.omg.CORBA.OMGVMCID;\n\
          58  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;\n59  import org.omg.CORBA.TRANSIENT;\n\
          60  import org.omg.CORBA.UNKNOWN;\n61  \n62  public class OMGSystemException\
          \ extends LogWrapperBase\n63  {\n64  \n65      public OMGSystemException(Logger\
          \ logger)\n66      {\n67          super(logger);\n68      }"
        lineNumber: 58
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "49  import org.omg.CORBA.INTF_REPOS;\n50  import org.omg.CORBA.INV_OBJREF;\n\
          51  import org.omg.CORBA.INV_POLICY;\n52  import org.omg.CORBA.MARSHAL;\n\
          53  import org.omg.CORBA.NO_IMPLEMENT;\n54  import org.omg.CORBA.NO_RESOURCES;\n\
          55  import org.omg.CORBA.OBJECT_NOT_EXIST;\n56  import org.omg.CORBA.OBJ_ADAPTER;\n\
          57  import org.omg.CORBA.OMGVMCID;\n58  import org.omg.CORBA.TRANSACTION_ROLLEDBACK;\n\
          59  import org.omg.CORBA.TRANSIENT;\n60  import org.omg.CORBA.UNKNOWN;\n\
          61  \n62  public class OMGSystemException extends LogWrapperBase\n63  {\n\
          64  \n65      public OMGSystemException(Logger logger)\n66      {\n67  \
          \        super(logger);\n68      }\n69  "
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/OMGSystemException.java
          kind: Class
          name: OMGSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "30  \n31  package org.jboss.com.sun.corba.se.impl.logging;\n32\
          \  \n33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n37  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n\
          39  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.BAD_TYPECODE;\n44  import org.omg.CORBA.COMM_FAILURE;\n\
          45  import org.omg.CORBA.CompletionStatus;\n46  import org.omg.CORBA.DATA_CONVERSION;\n\
          47  import org.omg.CORBA.INITIALIZE;\n48  import org.omg.CORBA.INTERNAL;\n\
          49  import org.omg.CORBA.INV_OBJREF;\n50  import org.omg.CORBA.MARSHAL;"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
          kind: Class
          name: ORBUtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "31  package org.jboss.com.sun.corba.se.impl.logging;\n32  \n33\
          \  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n37  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n\
          39  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.BAD_TYPECODE;\n44  import org.omg.CORBA.COMM_FAILURE;\n\
          45  import org.omg.CORBA.CompletionStatus;\n46  import org.omg.CORBA.DATA_CONVERSION;\n\
          47  import org.omg.CORBA.INITIALIZE;\n48  import org.omg.CORBA.INTERNAL;\n\
          49  import org.omg.CORBA.INV_OBJREF;\n50  import org.omg.CORBA.MARSHAL;\n\
          51  import org.omg.CORBA.NO_IMPLEMENT;"
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
          kind: Class
          name: ORBUtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "32  \n33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n37  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n\
          39  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.BAD_TYPECODE;\n44  import org.omg.CORBA.COMM_FAILURE;\n\
          45  import org.omg.CORBA.CompletionStatus;\n46  import org.omg.CORBA.DATA_CONVERSION;\n\
          47  import org.omg.CORBA.INITIALIZE;\n48  import org.omg.CORBA.INTERNAL;\n\
          49  import org.omg.CORBA.INV_OBJREF;\n50  import org.omg.CORBA.MARSHAL;\n\
          51  import org.omg.CORBA.NO_IMPLEMENT;\n52  import org.omg.CORBA.OBJECT_NOT_EXIST;"
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
          kind: Class
          name: ORBUtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n37  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n\
          39  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.BAD_TYPECODE;\n44  import org.omg.CORBA.COMM_FAILURE;\n\
          45  import org.omg.CORBA.CompletionStatus;\n46  import org.omg.CORBA.DATA_CONVERSION;\n\
          47  import org.omg.CORBA.INITIALIZE;\n48  import org.omg.CORBA.INTERNAL;\n\
          49  import org.omg.CORBA.INV_OBJREF;\n50  import org.omg.CORBA.MARSHAL;\n\
          51  import org.omg.CORBA.NO_IMPLEMENT;\n52  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          53  import org.omg.CORBA.OBJ_ADAPTER;"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
          kind: Class
          name: ORBUtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "34  import java.util.logging.Logger;\n35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n\
          37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n39  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.BAD_TYPECODE;\n44  import org.omg.CORBA.COMM_FAILURE;\n\
          45  import org.omg.CORBA.CompletionStatus;\n46  import org.omg.CORBA.DATA_CONVERSION;\n\
          47  import org.omg.CORBA.INITIALIZE;\n48  import org.omg.CORBA.INTERNAL;\n\
          49  import org.omg.CORBA.INV_OBJREF;\n50  import org.omg.CORBA.MARSHAL;\n\
          51  import org.omg.CORBA.NO_IMPLEMENT;\n52  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          53  import org.omg.CORBA.OBJ_ADAPTER;\n54  import org.omg.CORBA.TRANSIENT;"
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
          kind: Class
          name: ORBUtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n\
          37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n39  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.BAD_TYPECODE;\n44  import org.omg.CORBA.COMM_FAILURE;\n\
          45  import org.omg.CORBA.CompletionStatus;\n46  import org.omg.CORBA.DATA_CONVERSION;\n\
          47  import org.omg.CORBA.INITIALIZE;\n48  import org.omg.CORBA.INTERNAL;\n\
          49  import org.omg.CORBA.INV_OBJREF;\n50  import org.omg.CORBA.MARSHAL;\n\
          51  import org.omg.CORBA.NO_IMPLEMENT;\n52  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          53  import org.omg.CORBA.OBJ_ADAPTER;\n54  import org.omg.CORBA.TRANSIENT;\n\
          55  import org.omg.CORBA.UNKNOWN;"
        lineNumber: 45
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
          kind: Class
          name: ORBUtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: '36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;

          37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;

          38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;

          39  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          40  import org.omg.CORBA.BAD_INV_ORDER;

          41  import org.omg.CORBA.BAD_OPERATION;

          42  import org.omg.CORBA.BAD_PARAM;

          43  import org.omg.CORBA.BAD_TYPECODE;

          44  import org.omg.CORBA.COMM_FAILURE;

          45  import org.omg.CORBA.CompletionStatus;

          46  import org.omg.CORBA.DATA_CONVERSION;

          47  import org.omg.CORBA.INITIALIZE;

          48  import org.omg.CORBA.INTERNAL;

          49  import org.omg.CORBA.INV_OBJREF;

          50  import org.omg.CORBA.MARSHAL;

          51  import org.omg.CORBA.NO_IMPLEMENT;

          52  import org.omg.CORBA.OBJECT_NOT_EXIST;

          53  import org.omg.CORBA.OBJ_ADAPTER;

          54  import org.omg.CORBA.TRANSIENT;

          55  import org.omg.CORBA.UNKNOWN;

          56  '
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
          kind: Class
          name: ORBUtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n\
          38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n39\
          \  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.BAD_TYPECODE;\n44  import org.omg.CORBA.COMM_FAILURE;\n\
          45  import org.omg.CORBA.CompletionStatus;\n46  import org.omg.CORBA.DATA_CONVERSION;\n\
          47  import org.omg.CORBA.INITIALIZE;\n48  import org.omg.CORBA.INTERNAL;\n\
          49  import org.omg.CORBA.INV_OBJREF;\n50  import org.omg.CORBA.MARSHAL;\n\
          51  import org.omg.CORBA.NO_IMPLEMENT;\n52  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          53  import org.omg.CORBA.OBJ_ADAPTER;\n54  import org.omg.CORBA.TRANSIENT;\n\
          55  import org.omg.CORBA.UNKNOWN;\n56  \n57  public class ORBUtilSystemException\
          \ extends LogWrapperBase"
        lineNumber: 47
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
          kind: Class
          name: ORBUtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n\
          39  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.BAD_TYPECODE;\n44  import org.omg.CORBA.COMM_FAILURE;\n\
          45  import org.omg.CORBA.CompletionStatus;\n46  import org.omg.CORBA.DATA_CONVERSION;\n\
          47  import org.omg.CORBA.INITIALIZE;\n48  import org.omg.CORBA.INTERNAL;\n\
          49  import org.omg.CORBA.INV_OBJREF;\n50  import org.omg.CORBA.MARSHAL;\n\
          51  import org.omg.CORBA.NO_IMPLEMENT;\n52  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          53  import org.omg.CORBA.OBJ_ADAPTER;\n54  import org.omg.CORBA.TRANSIENT;\n\
          55  import org.omg.CORBA.UNKNOWN;\n56  \n57  public class ORBUtilSystemException\
          \ extends LogWrapperBase\n58  {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
          kind: Class
          name: ORBUtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "39  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import\
          \ org.omg.CORBA.BAD_INV_ORDER;\n41  import org.omg.CORBA.BAD_OPERATION;\n\
          42  import org.omg.CORBA.BAD_PARAM;\n43  import org.omg.CORBA.BAD_TYPECODE;\n\
          44  import org.omg.CORBA.COMM_FAILURE;\n45  import org.omg.CORBA.CompletionStatus;\n\
          46  import org.omg.CORBA.DATA_CONVERSION;\n47  import org.omg.CORBA.INITIALIZE;\n\
          48  import org.omg.CORBA.INTERNAL;\n49  import org.omg.CORBA.INV_OBJREF;\n\
          50  import org.omg.CORBA.MARSHAL;\n51  import org.omg.CORBA.NO_IMPLEMENT;\n\
          52  import org.omg.CORBA.OBJECT_NOT_EXIST;\n53  import org.omg.CORBA.OBJ_ADAPTER;\n\
          54  import org.omg.CORBA.TRANSIENT;\n55  import org.omg.CORBA.UNKNOWN;\n\
          56  \n57  public class ORBUtilSystemException extends LogWrapperBase\n58\
          \  {\n59  "
        lineNumber: 49
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
          kind: Class
          name: ORBUtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "40  import org.omg.CORBA.BAD_INV_ORDER;\n41  import org.omg.CORBA.BAD_OPERATION;\n\
          42  import org.omg.CORBA.BAD_PARAM;\n43  import org.omg.CORBA.BAD_TYPECODE;\n\
          44  import org.omg.CORBA.COMM_FAILURE;\n45  import org.omg.CORBA.CompletionStatus;\n\
          46  import org.omg.CORBA.DATA_CONVERSION;\n47  import org.omg.CORBA.INITIALIZE;\n\
          48  import org.omg.CORBA.INTERNAL;\n49  import org.omg.CORBA.INV_OBJREF;\n\
          50  import org.omg.CORBA.MARSHAL;\n51  import org.omg.CORBA.NO_IMPLEMENT;\n\
          52  import org.omg.CORBA.OBJECT_NOT_EXIST;\n53  import org.omg.CORBA.OBJ_ADAPTER;\n\
          54  import org.omg.CORBA.TRANSIENT;\n55  import org.omg.CORBA.UNKNOWN;\n\
          56  \n57  public class ORBUtilSystemException extends LogWrapperBase\n58\
          \  {\n59  \n60      public ORBUtilSystemException(Logger logger)"
        lineNumber: 50
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
          kind: Class
          name: ORBUtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.BAD_TYPECODE;\n44  import org.omg.CORBA.COMM_FAILURE;\n\
          45  import org.omg.CORBA.CompletionStatus;\n46  import org.omg.CORBA.DATA_CONVERSION;\n\
          47  import org.omg.CORBA.INITIALIZE;\n48  import org.omg.CORBA.INTERNAL;\n\
          49  import org.omg.CORBA.INV_OBJREF;\n50  import org.omg.CORBA.MARSHAL;\n\
          51  import org.omg.CORBA.NO_IMPLEMENT;\n52  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          53  import org.omg.CORBA.OBJ_ADAPTER;\n54  import org.omg.CORBA.TRANSIENT;\n\
          55  import org.omg.CORBA.UNKNOWN;\n56  \n57  public class ORBUtilSystemException\
          \ extends LogWrapperBase\n58  {\n59  \n60      public ORBUtilSystemException(Logger\
          \ logger)\n61      {"
        lineNumber: 51
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
          kind: Class
          name: ORBUtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "42  import org.omg.CORBA.BAD_PARAM;\n43  import org.omg.CORBA.BAD_TYPECODE;\n\
          44  import org.omg.CORBA.COMM_FAILURE;\n45  import org.omg.CORBA.CompletionStatus;\n\
          46  import org.omg.CORBA.DATA_CONVERSION;\n47  import org.omg.CORBA.INITIALIZE;\n\
          48  import org.omg.CORBA.INTERNAL;\n49  import org.omg.CORBA.INV_OBJREF;\n\
          50  import org.omg.CORBA.MARSHAL;\n51  import org.omg.CORBA.NO_IMPLEMENT;\n\
          52  import org.omg.CORBA.OBJECT_NOT_EXIST;\n53  import org.omg.CORBA.OBJ_ADAPTER;\n\
          54  import org.omg.CORBA.TRANSIENT;\n55  import org.omg.CORBA.UNKNOWN;\n\
          56  \n57  public class ORBUtilSystemException extends LogWrapperBase\n58\
          \  {\n59  \n60      public ORBUtilSystemException(Logger logger)\n61   \
          \   {\n62          super(logger);"
        lineNumber: 52
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
          kind: Class
          name: ORBUtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "43  import org.omg.CORBA.BAD_TYPECODE;\n44  import org.omg.CORBA.COMM_FAILURE;\n\
          45  import org.omg.CORBA.CompletionStatus;\n46  import org.omg.CORBA.DATA_CONVERSION;\n\
          47  import org.omg.CORBA.INITIALIZE;\n48  import org.omg.CORBA.INTERNAL;\n\
          49  import org.omg.CORBA.INV_OBJREF;\n50  import org.omg.CORBA.MARSHAL;\n\
          51  import org.omg.CORBA.NO_IMPLEMENT;\n52  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          53  import org.omg.CORBA.OBJ_ADAPTER;\n54  import org.omg.CORBA.TRANSIENT;\n\
          55  import org.omg.CORBA.UNKNOWN;\n56  \n57  public class ORBUtilSystemException\
          \ extends LogWrapperBase\n58  {\n59  \n60      public ORBUtilSystemException(Logger\
          \ logger)\n61      {\n62          super(logger);\n63      }"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
          kind: Class
          name: ORBUtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "44  import org.omg.CORBA.COMM_FAILURE;\n45  import org.omg.CORBA.CompletionStatus;\n\
          46  import org.omg.CORBA.DATA_CONVERSION;\n47  import org.omg.CORBA.INITIALIZE;\n\
          48  import org.omg.CORBA.INTERNAL;\n49  import org.omg.CORBA.INV_OBJREF;\n\
          50  import org.omg.CORBA.MARSHAL;\n51  import org.omg.CORBA.NO_IMPLEMENT;\n\
          52  import org.omg.CORBA.OBJECT_NOT_EXIST;\n53  import org.omg.CORBA.OBJ_ADAPTER;\n\
          54  import org.omg.CORBA.TRANSIENT;\n55  import org.omg.CORBA.UNKNOWN;\n\
          56  \n57  public class ORBUtilSystemException extends LogWrapperBase\n58\
          \  {\n59  \n60      public ORBUtilSystemException(Logger logger)\n61   \
          \   {\n62          super(logger);\n63      }\n64  "
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
          kind: Class
          name: ORBUtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "45  import org.omg.CORBA.CompletionStatus;\n46  import org.omg.CORBA.DATA_CONVERSION;\n\
          47  import org.omg.CORBA.INITIALIZE;\n48  import org.omg.CORBA.INTERNAL;\n\
          49  import org.omg.CORBA.INV_OBJREF;\n50  import org.omg.CORBA.MARSHAL;\n\
          51  import org.omg.CORBA.NO_IMPLEMENT;\n52  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          53  import org.omg.CORBA.OBJ_ADAPTER;\n54  import org.omg.CORBA.TRANSIENT;\n\
          55  import org.omg.CORBA.UNKNOWN;\n56  \n57  public class ORBUtilSystemException\
          \ extends LogWrapperBase\n58  {\n59  \n60      public ORBUtilSystemException(Logger\
          \ logger)\n61      {\n62          super(logger);\n63      }\n64  \n65  \
          \    private static LogWrapperFactory factory = new LogWrapperFactory()"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/ORBUtilSystemException.java
          kind: Class
          name: ORBUtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "30  \n31  package org.jboss.com.sun.corba.se.impl.logging;\n32\
          \  \n33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n37  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n\
          39  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.CompletionStatus;\n44  import org.omg.CORBA.INITIALIZE;\n\
          45  import org.omg.CORBA.INTERNAL;\n46  import org.omg.CORBA.NO_IMPLEMENT;\n\
          47  import org.omg.CORBA.OBJECT_NOT_EXIST;\n48  import org.omg.CORBA.OBJ_ADAPTER;\n\
          49  import org.omg.CORBA.TRANSIENT;\n50  import org.omg.CORBA.UNKNOWN;"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
          kind: Class
          name: POASystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "31  package org.jboss.com.sun.corba.se.impl.logging;\n32  \n33\
          \  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n37  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n\
          39  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.CompletionStatus;\n44  import org.omg.CORBA.INITIALIZE;\n\
          45  import org.omg.CORBA.INTERNAL;\n46  import org.omg.CORBA.NO_IMPLEMENT;\n\
          47  import org.omg.CORBA.OBJECT_NOT_EXIST;\n48  import org.omg.CORBA.OBJ_ADAPTER;\n\
          49  import org.omg.CORBA.TRANSIENT;\n50  import org.omg.CORBA.UNKNOWN;\n\
          51  "
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
          kind: Class
          name: POASystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "32  \n33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n37  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n\
          39  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.CompletionStatus;\n44  import org.omg.CORBA.INITIALIZE;\n\
          45  import org.omg.CORBA.INTERNAL;\n46  import org.omg.CORBA.NO_IMPLEMENT;\n\
          47  import org.omg.CORBA.OBJECT_NOT_EXIST;\n48  import org.omg.CORBA.OBJ_ADAPTER;\n\
          49  import org.omg.CORBA.TRANSIENT;\n50  import org.omg.CORBA.UNKNOWN;\n\
          51  \n52  public class POASystemException extends LogWrapperBase"
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
          kind: Class
          name: POASystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n37  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n\
          39  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.CompletionStatus;\n44  import org.omg.CORBA.INITIALIZE;\n\
          45  import org.omg.CORBA.INTERNAL;\n46  import org.omg.CORBA.NO_IMPLEMENT;\n\
          47  import org.omg.CORBA.OBJECT_NOT_EXIST;\n48  import org.omg.CORBA.OBJ_ADAPTER;\n\
          49  import org.omg.CORBA.TRANSIENT;\n50  import org.omg.CORBA.UNKNOWN;\n\
          51  \n52  public class POASystemException extends LogWrapperBase\n53  {"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
          kind: Class
          name: POASystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "34  import java.util.logging.Logger;\n35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n\
          37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n39  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.CompletionStatus;\n44  import org.omg.CORBA.INITIALIZE;\n\
          45  import org.omg.CORBA.INTERNAL;\n46  import org.omg.CORBA.NO_IMPLEMENT;\n\
          47  import org.omg.CORBA.OBJECT_NOT_EXIST;\n48  import org.omg.CORBA.OBJ_ADAPTER;\n\
          49  import org.omg.CORBA.TRANSIENT;\n50  import org.omg.CORBA.UNKNOWN;\n\
          51  \n52  public class POASystemException extends LogWrapperBase\n53  {\n\
          54  "
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
          kind: Class
          name: POASystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n\
          37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n39  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.CompletionStatus;\n44  import org.omg.CORBA.INITIALIZE;\n\
          45  import org.omg.CORBA.INTERNAL;\n46  import org.omg.CORBA.NO_IMPLEMENT;\n\
          47  import org.omg.CORBA.OBJECT_NOT_EXIST;\n48  import org.omg.CORBA.OBJ_ADAPTER;\n\
          49  import org.omg.CORBA.TRANSIENT;\n50  import org.omg.CORBA.UNKNOWN;\n\
          51  \n52  public class POASystemException extends LogWrapperBase\n53  {\n\
          54  \n55      public POASystemException(Logger logger)"
        lineNumber: 45
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
          kind: Class
          name: POASystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n37 \
          \ import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n39  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.CompletionStatus;\n44  import org.omg.CORBA.INITIALIZE;\n\
          45  import org.omg.CORBA.INTERNAL;\n46  import org.omg.CORBA.NO_IMPLEMENT;\n\
          47  import org.omg.CORBA.OBJECT_NOT_EXIST;\n48  import org.omg.CORBA.OBJ_ADAPTER;\n\
          49  import org.omg.CORBA.TRANSIENT;\n50  import org.omg.CORBA.UNKNOWN;\n\
          51  \n52  public class POASystemException extends LogWrapperBase\n53  {\n\
          54  \n55      public POASystemException(Logger logger)\n56      {"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
          kind: Class
          name: POASystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n\
          38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n39\
          \  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.CompletionStatus;\n44  import org.omg.CORBA.INITIALIZE;\n\
          45  import org.omg.CORBA.INTERNAL;\n46  import org.omg.CORBA.NO_IMPLEMENT;\n\
          47  import org.omg.CORBA.OBJECT_NOT_EXIST;\n48  import org.omg.CORBA.OBJ_ADAPTER;\n\
          49  import org.omg.CORBA.TRANSIENT;\n50  import org.omg.CORBA.UNKNOWN;\n\
          51  \n52  public class POASystemException extends LogWrapperBase\n53  {\n\
          54  \n55      public POASystemException(Logger logger)\n56      {\n57  \
          \        super(logger);"
        lineNumber: 47
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
          kind: Class
          name: POASystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n\
          39  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_INV_ORDER;\n\
          41  import org.omg.CORBA.BAD_OPERATION;\n42  import org.omg.CORBA.BAD_PARAM;\n\
          43  import org.omg.CORBA.CompletionStatus;\n44  import org.omg.CORBA.INITIALIZE;\n\
          45  import org.omg.CORBA.INTERNAL;\n46  import org.omg.CORBA.NO_IMPLEMENT;\n\
          47  import org.omg.CORBA.OBJECT_NOT_EXIST;\n48  import org.omg.CORBA.OBJ_ADAPTER;\n\
          49  import org.omg.CORBA.TRANSIENT;\n50  import org.omg.CORBA.UNKNOWN;\n\
          51  \n52  public class POASystemException extends LogWrapperBase\n53  {\n\
          54  \n55      public POASystemException(Logger logger)\n56      {\n57  \
          \        super(logger);\n58      }"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
          kind: Class
          name: POASystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "39  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import\
          \ org.omg.CORBA.BAD_INV_ORDER;\n41  import org.omg.CORBA.BAD_OPERATION;\n\
          42  import org.omg.CORBA.BAD_PARAM;\n43  import org.omg.CORBA.CompletionStatus;\n\
          44  import org.omg.CORBA.INITIALIZE;\n45  import org.omg.CORBA.INTERNAL;\n\
          46  import org.omg.CORBA.NO_IMPLEMENT;\n47  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          48  import org.omg.CORBA.OBJ_ADAPTER;\n49  import org.omg.CORBA.TRANSIENT;\n\
          50  import org.omg.CORBA.UNKNOWN;\n51  \n52  public class POASystemException\
          \ extends LogWrapperBase\n53  {\n54  \n55      public POASystemException(Logger\
          \ logger)\n56      {\n57          super(logger);\n58      }\n59  "
        lineNumber: 49
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
          kind: Class
          name: POASystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "40  import org.omg.CORBA.BAD_INV_ORDER;\n41  import org.omg.CORBA.BAD_OPERATION;\n\
          42  import org.omg.CORBA.BAD_PARAM;\n43  import org.omg.CORBA.CompletionStatus;\n\
          44  import org.omg.CORBA.INITIALIZE;\n45  import org.omg.CORBA.INTERNAL;\n\
          46  import org.omg.CORBA.NO_IMPLEMENT;\n47  import org.omg.CORBA.OBJECT_NOT_EXIST;\n\
          48  import org.omg.CORBA.OBJ_ADAPTER;\n49  import org.omg.CORBA.TRANSIENT;\n\
          50  import org.omg.CORBA.UNKNOWN;\n51  \n52  public class POASystemException\
          \ extends LogWrapperBase\n53  {\n54  \n55      public POASystemException(Logger\
          \ logger)\n56      {\n57          super(logger);\n58      }\n59  \n60  \
          \    private static LogWrapperFactory factory = new LogWrapperFactory()"
        lineNumber: 50
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/POASystemException.java
          kind: Class
          name: POASystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "30  \n31  package org.jboss.com.sun.corba.se.impl.logging;\n32\
          \  \n33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n37  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n\
          39  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_OPERATION;\n\
          41  import org.omg.CORBA.BAD_PARAM;\n42  import org.omg.CORBA.CompletionStatus;\n\
          43  import org.omg.CORBA.DATA_CONVERSION;\n44  import org.omg.CORBA.INTERNAL;\n\
          45  import org.omg.CORBA.INV_OBJREF;\n46  import org.omg.CORBA.MARSHAL;\n\
          47  import org.omg.CORBA.UNKNOWN;\n48  \n49  public class UtilSystemException\
          \ extends LogWrapperBase\n50  {"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/UtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/UtilSystemException.java
          kind: Class
          name: UtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "31  package org.jboss.com.sun.corba.se.impl.logging;\n32  \n33\
          \  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n37  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n\
          39  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_OPERATION;\n\
          41  import org.omg.CORBA.BAD_PARAM;\n42  import org.omg.CORBA.CompletionStatus;\n\
          43  import org.omg.CORBA.DATA_CONVERSION;\n44  import org.omg.CORBA.INTERNAL;\n\
          45  import org.omg.CORBA.INV_OBJREF;\n46  import org.omg.CORBA.MARSHAL;\n\
          47  import org.omg.CORBA.UNKNOWN;\n48  \n49  public class UtilSystemException\
          \ extends LogWrapperBase\n50  {\n51  "
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/UtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/UtilSystemException.java
          kind: Class
          name: UtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "32  \n33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n37  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n\
          39  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_OPERATION;\n\
          41  import org.omg.CORBA.BAD_PARAM;\n42  import org.omg.CORBA.CompletionStatus;\n\
          43  import org.omg.CORBA.DATA_CONVERSION;\n44  import org.omg.CORBA.INTERNAL;\n\
          45  import org.omg.CORBA.INV_OBJREF;\n46  import org.omg.CORBA.MARSHAL;\n\
          47  import org.omg.CORBA.UNKNOWN;\n48  \n49  public class UtilSystemException\
          \ extends LogWrapperBase\n50  {\n51  \n52      public UtilSystemException(Logger\
          \ logger)"
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/UtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/UtilSystemException.java
          kind: Class
          name: UtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "33  import java.util.logging.Level;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n37  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n\
          39  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_OPERATION;\n\
          41  import org.omg.CORBA.BAD_PARAM;\n42  import org.omg.CORBA.CompletionStatus;\n\
          43  import org.omg.CORBA.DATA_CONVERSION;\n44  import org.omg.CORBA.INTERNAL;\n\
          45  import org.omg.CORBA.INV_OBJREF;\n46  import org.omg.CORBA.MARSHAL;\n\
          47  import org.omg.CORBA.UNKNOWN;\n48  \n49  public class UtilSystemException\
          \ extends LogWrapperBase\n50  {\n51  \n52      public UtilSystemException(Logger\
          \ logger)\n53      {"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/UtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/UtilSystemException.java
          kind: Class
          name: UtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "34  import java.util.logging.Logger;\n35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n\
          37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n39  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_OPERATION;\n\
          41  import org.omg.CORBA.BAD_PARAM;\n42  import org.omg.CORBA.CompletionStatus;\n\
          43  import org.omg.CORBA.DATA_CONVERSION;\n44  import org.omg.CORBA.INTERNAL;\n\
          45  import org.omg.CORBA.INV_OBJREF;\n46  import org.omg.CORBA.MARSHAL;\n\
          47  import org.omg.CORBA.UNKNOWN;\n48  \n49  public class UtilSystemException\
          \ extends LogWrapperBase\n50  {\n51  \n52      public UtilSystemException(Logger\
          \ logger)\n53      {\n54          super(logger);"
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/UtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/UtilSystemException.java
          kind: Class
          name: UtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "35  \n36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n\
          37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n39  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_OPERATION;\n\
          41  import org.omg.CORBA.BAD_PARAM;\n42  import org.omg.CORBA.CompletionStatus;\n\
          43  import org.omg.CORBA.DATA_CONVERSION;\n44  import org.omg.CORBA.INTERNAL;\n\
          45  import org.omg.CORBA.INV_OBJREF;\n46  import org.omg.CORBA.MARSHAL;\n\
          47  import org.omg.CORBA.UNKNOWN;\n48  \n49  public class UtilSystemException\
          \ extends LogWrapperBase\n50  {\n51  \n52      public UtilSystemException(Logger\
          \ logger)\n53      {\n54          super(logger);\n55      }"
        lineNumber: 45
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/UtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/UtilSystemException.java
          kind: Class
          name: UtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "36  import org.jboss.com.sun.corba.se.impl.util.SUNVMCID;\n37 \
          \ import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n38  import\
          \ org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n39  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_OPERATION;\n\
          41  import org.omg.CORBA.BAD_PARAM;\n42  import org.omg.CORBA.CompletionStatus;\n\
          43  import org.omg.CORBA.DATA_CONVERSION;\n44  import org.omg.CORBA.INTERNAL;\n\
          45  import org.omg.CORBA.INV_OBJREF;\n46  import org.omg.CORBA.MARSHAL;\n\
          47  import org.omg.CORBA.UNKNOWN;\n48  \n49  public class UtilSystemException\
          \ extends LogWrapperBase\n50  {\n51  \n52      public UtilSystemException(Logger\
          \ logger)\n53      {\n54          super(logger);\n55      }\n56  "
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/UtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/UtilSystemException.java
          kind: Class
          name: UtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "37  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperBase;\n\
          38  import org.jboss.com.sun.corba.se.spi.logging.LogWrapperFactory;\n39\
          \  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.omg.CORBA.BAD_OPERATION;\n\
          41  import org.omg.CORBA.BAD_PARAM;\n42  import org.omg.CORBA.CompletionStatus;\n\
          43  import org.omg.CORBA.DATA_CONVERSION;\n44  import org.omg.CORBA.INTERNAL;\n\
          45  import org.omg.CORBA.INV_OBJREF;\n46  import org.omg.CORBA.MARSHAL;\n\
          47  import org.omg.CORBA.UNKNOWN;\n48  \n49  public class UtilSystemException\
          \ extends LogWrapperBase\n50  {\n51  \n52      public UtilSystemException(Logger\
          \ logger)\n53      {\n54          super(logger);\n55      }\n56  \n57  \
          \    private static LogWrapperFactory factory = new LogWrapperFactory()"
        lineNumber: 47
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/UtilSystemException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/logging/UtilSystemException.java
          kind: Class
          name: UtilSystemException
          package: org.jboss.com.sun.corba.se.impl.logging
      - codeSnip: "136              byte[] oid = orb.peekInvocationInfo().id();\n\
          137              if( oid == null) return true;\n138              else return\
          \ false;\n139          } catch (EmptyStackException exception){\n140   \
          \           throw wrapper.noContext(exception) ;\n141          }\n142  \
          \    }\n143  \n144      // The get_interface() method has been replaced\
          \ by get_interface_def()\n145  \n146      public org.omg.CORBA.Object get_interface_def(Servant\
          \ Self)\n147      {\n148          throw wrapper.methodNotImplemented() ;\n\
          149      }\n150  \n151  \tpublic Object get_component(Servant self) {\n\
          152  \t\treturn null;\n153  \t}\n154  \n155  \tpublic InterfaceDef get_interface(Servant\
          \ self) {\n156  \t\treturn InterfaceDefHelper.narrow(get_interface_def(self));"
        lineNumber: 146
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/DelegateImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/DelegateImpl.java
          kind: Method
          name: get_interface_def
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  package org.jboss.com.sun.corba.se.impl.oa.poa;\n\
          26  \n27  import java.util.EmptyStackException;\n28  \n29  import org.jboss.com.sun.corba.se.impl.logging.POASystemException;\n\
          30  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n31 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n32  import org.omg.CORBA.InterfaceDef;\n\
          33  import org.omg.CORBA.InterfaceDefHelper;\n34  import org.omg.CORBA.Object;\n\
          35  import org.omg.PortableServer.POA;\n36  import org.omg.PortableServer.Servant;\n\
          37  \n38  public class DelegateImpl implements org.omg.PortableServer.portable.Delegate\n\
          39  {\n40      private ORB orb ;\n41      private POASystemException wrapper\
          \ ;\n42      private POAFactory factory;"
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/DelegateImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/DelegateImpl.java
          kind: Class
          name: DelegateImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "23   * questions.\n24   */\n25  package org.jboss.com.sun.corba.se.impl.oa.poa;\n\
          26  \n27  import java.util.EmptyStackException;\n28  \n29  import org.jboss.com.sun.corba.se.impl.logging.POASystemException;\n\
          30  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n31 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n32  import org.omg.CORBA.InterfaceDef;\n\
          33  import org.omg.CORBA.InterfaceDefHelper;\n34  import org.omg.CORBA.Object;\n\
          35  import org.omg.PortableServer.POA;\n36  import org.omg.PortableServer.Servant;\n\
          37  \n38  public class DelegateImpl implements org.omg.PortableServer.portable.Delegate\n\
          39  {\n40      private ORB orb ;\n41      private POASystemException wrapper\
          \ ;\n42      private POAFactory factory;\n43  "
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/DelegateImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/DelegateImpl.java
          kind: Class
          name: DelegateImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "24   */\n25  package org.jboss.com.sun.corba.se.impl.oa.poa;\n\
          26  \n27  import java.util.EmptyStackException;\n28  \n29  import org.jboss.com.sun.corba.se.impl.logging.POASystemException;\n\
          30  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n31 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n32  import org.omg.CORBA.InterfaceDef;\n\
          33  import org.omg.CORBA.InterfaceDefHelper;\n34  import org.omg.CORBA.Object;\n\
          35  import org.omg.PortableServer.POA;\n36  import org.omg.PortableServer.Servant;\n\
          37  \n38  public class DelegateImpl implements org.omg.PortableServer.portable.Delegate\n\
          39  {\n40      private ORB orb ;\n41      private POASystemException wrapper\
          \ ;\n42      private POAFactory factory;\n43  \n44      public DelegateImpl(ORB\
          \ orb, POAFactory factory){"
        lineNumber: 34
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/DelegateImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/DelegateImpl.java
          kind: Class
          name: DelegateImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "41      private POASystemException wrapper ;\n42      private POAFactory\
          \ factory;\n43  \n44      public DelegateImpl(ORB orb, POAFactory factory){\n\
          45          this.orb = orb ;\n46          this.wrapper = POASystemException.get(\
          \ orb,\n47              CORBALogDomains.OA ) ;\n48          this.factory\
          \ = factory;\n49      }\n50  \n51      public org.omg.CORBA.ORB orb(Servant\
          \ self)\n52      {\n53          return orb;\n54      }\n55  \n56      public\
          \ org.omg.CORBA.Object this_object(Servant self)\n57      {\n58        \
          \  byte[] oid;\n59          POA poa;\n60          try {\n61            \
          \  oid = orb.peekInvocationInfo().id();"
        lineNumber: 51
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/DelegateImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/DelegateImpl.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "46          this.wrapper = POASystemException.get( orb,\n47   \
          \           CORBALogDomains.OA ) ;\n48          this.factory = factory;\n\
          49      }\n50  \n51      public org.omg.CORBA.ORB orb(Servant self)\n52\
          \      {\n53          return orb;\n54      }\n55  \n56      public org.omg.CORBA.Object\
          \ this_object(Servant self)\n57      {\n58          byte[] oid;\n59    \
          \      POA poa;\n60          try {\n61              oid = orb.peekInvocationInfo().id();\n\
          62              poa = (POA)orb.peekInvocationInfo().oa();\n63          \
          \    String repId = self._all_interfaces(poa,oid)[0] ;\n64             \
          \ return poa.create_reference_with_id(oid, repId);\n65          } catch\
          \ (EmptyStackException notInInvocationE) {\n66              //Not within\
          \ an invocation context"
        lineNumber: 56
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/DelegateImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/DelegateImpl.java
          kind: Method
          name: this_object
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "18   * 2 along with this work; if not, write to the Free Software\
          \ Foundation,\n19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.impl.oa.poa;\n27  \n28  import org.omg.CORBA.Policy;\n\
          29  import org.omg.PortableServer.ID_ASSIGNMENT_POLICY_ID;\n30  import org.omg.PortableServer.IdAssignmentPolicyValue;\n\
          31  \n32  final class IdAssignmentPolicyImpl extends org.omg.CORBA.LocalObject\n\
          33          implements\n34              org.omg.PortableServer.IdAssignmentPolicy\n\
          35  {\n36  \n37      private static final long serialVersionUID = -5589531737105347566L;\n\
          38  "
        lineNumber: 28
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/IdAssignmentPolicyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/IdAssignmentPolicyImpl.java
          kind: Class
          name: IdAssignmentPolicyImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.oa.poa;\n\
          27  \n28  import org.omg.CORBA.Policy;\n29  import org.omg.PortableServer.ID_ASSIGNMENT_POLICY_ID;\n\
          30  import org.omg.PortableServer.IdAssignmentPolicyValue;\n31  \n32  final\
          \ class IdAssignmentPolicyImpl extends org.omg.CORBA.LocalObject\n33   \
          \       implements\n34              org.omg.PortableServer.IdAssignmentPolicy\n\
          35  {\n36  \n37      private static final long serialVersionUID = -5589531737105347566L;\n\
          38  \n39      public IdAssignmentPolicyImpl(IdAssignmentPolicyValue value)\n\
          40      {\n41          this.value = value;\n42      }"
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/IdAssignmentPolicyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/IdAssignmentPolicyImpl.java
          kind: Class
          name: IdAssignmentPolicyImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "18   * 2 along with this work; if not, write to the Free Software\
          \ Foundation,\n19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.impl.oa.poa;\n27  \n28  import org.omg.CORBA.Policy;\n\
          29  import org.omg.PortableServer.ID_UNIQUENESS_POLICY_ID;\n30  import org.omg.PortableServer.IdUniquenessPolicy;\n\
          31  import org.omg.PortableServer.IdUniquenessPolicyValue;\n32  \n33  final\
          \ class IdUniquenessPolicyImpl extends org.omg.CORBA.LocalObject implements\
          \ IdUniquenessPolicy\n34  {\n35  \n36      private static final long serialVersionUID\
          \ = -2373453208253083393L;\n37  \n38      public IdUniquenessPolicyImpl(IdUniquenessPolicyValue\
          \ value)"
        lineNumber: 28
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/IdUniquenessPolicyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/IdUniquenessPolicyImpl.java
          kind: Class
          name: IdUniquenessPolicyImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.oa.poa;\n\
          27  \n28  import org.omg.CORBA.Policy;\n29  import org.omg.PortableServer.ID_UNIQUENESS_POLICY_ID;\n\
          30  import org.omg.PortableServer.IdUniquenessPolicy;\n31  import org.omg.PortableServer.IdUniquenessPolicyValue;\n\
          32  \n33  final class IdUniquenessPolicyImpl extends org.omg.CORBA.LocalObject\
          \ implements IdUniquenessPolicy\n34  {\n35  \n36      private static final\
          \ long serialVersionUID = -2373453208253083393L;\n37  \n38      public IdUniquenessPolicyImpl(IdUniquenessPolicyValue\
          \ value)\n39      {\n40          this.value = value;\n41      }\n42  \n\
          43      public IdUniquenessPolicyValue value()"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/IdUniquenessPolicyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/IdUniquenessPolicyImpl.java
          kind: Class
          name: IdUniquenessPolicyImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "18   * 2 along with this work; if not, write to the Free Software\
          \ Foundation,\n19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.impl.oa.poa;\n27  \n28  import org.omg.CORBA.Policy;\n\
          29  import org.omg.PortableServer.IMPLICIT_ACTIVATION_POLICY_ID;\n30  import\
          \ org.omg.PortableServer.ImplicitActivationPolicy;\n31  import org.omg.PortableServer.ImplicitActivationPolicyValue;\n\
          32  \n33  final class ImplicitActivationPolicyImpl extends org.omg.CORBA.LocalObject\
          \ implements ImplicitActivationPolicy\n34  {\n35  \n36      private static\
          \ final long serialVersionUID = 3189145753312485561L;\n37  \n38      public\
          \ ImplicitActivationPolicyImpl(ImplicitActivationPolicyValue value)"
        lineNumber: 28
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/ImplicitActivationPolicyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/ImplicitActivationPolicyImpl.java
          kind: Class
          name: ImplicitActivationPolicyImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.oa.poa;\n\
          27  \n28  import org.omg.CORBA.Policy;\n29  import org.omg.PortableServer.IMPLICIT_ACTIVATION_POLICY_ID;\n\
          30  import org.omg.PortableServer.ImplicitActivationPolicy;\n31  import\
          \ org.omg.PortableServer.ImplicitActivationPolicyValue;\n32  \n33  final\
          \ class ImplicitActivationPolicyImpl extends org.omg.CORBA.LocalObject implements\
          \ ImplicitActivationPolicy\n34  {\n35  \n36      private static final long\
          \ serialVersionUID = 3189145753312485561L;\n37  \n38      public ImplicitActivationPolicyImpl(ImplicitActivationPolicyValue\
          \ value)\n39      {\n40          this.value = value;\n41      }\n42  \n\
          43      public ImplicitActivationPolicyValue value()"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/ImplicitActivationPolicyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/ImplicitActivationPolicyImpl.java
          kind: Class
          name: ImplicitActivationPolicyImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "18   * 2 along with this work; if not, write to the Free Software\
          \ Foundation,\n19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.impl.oa.poa;\n27  \n28  import org.omg.CORBA.Policy;\n\
          29  import org.omg.PortableServer.LIFESPAN_POLICY_ID;\n30  import org.omg.PortableServer.LifespanPolicy;\n\
          31  import org.omg.PortableServer.LifespanPolicyValue;\n32  \n33  final\
          \ class LifespanPolicyImpl extends org.omg.CORBA.LocalObject implements\
          \ LifespanPolicy\n34  {\n35  \n36      private static final long serialVersionUID\
          \ = -7620425659409055717L;\n37  \n38      public LifespanPolicyImpl(LifespanPolicyValue\
          \ value)"
        lineNumber: 28
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/LifespanPolicyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/LifespanPolicyImpl.java
          kind: Class
          name: LifespanPolicyImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.oa.poa;\n\
          27  \n28  import org.omg.CORBA.Policy;\n29  import org.omg.PortableServer.LIFESPAN_POLICY_ID;\n\
          30  import org.omg.PortableServer.LifespanPolicy;\n31  import org.omg.PortableServer.LifespanPolicyValue;\n\
          32  \n33  final class LifespanPolicyImpl extends org.omg.CORBA.LocalObject\
          \ implements LifespanPolicy\n34  {\n35  \n36      private static final long\
          \ serialVersionUID = -7620425659409055717L;\n37  \n38      public LifespanPolicyImpl(LifespanPolicyValue\
          \ value)\n39      {\n40          this.value = value;\n41      }\n42  \n\
          43      public LifespanPolicyValue value()"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/LifespanPolicyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/LifespanPolicyImpl.java
          kind: Class
          name: LifespanPolicyImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "164      }\n165  \n166      private void throwInternalIfNull(Object\
          \ o)\n167      {\n168          if (o == null)\n169          {\n170     \
          \         throw wrapper.poacurrentNullField(CompletionStatus.COMPLETED_MAYBE);\n\
          171          }\n172      }\n173  \n174      public org.omg.CORBA.Object\
          \ get_reference() throws NoContext\n175      {\n176          Servant servant\
          \ = get_servant();\n177          if (servant != null)\n178             \
          \ return servant._this_object(orb);\n179          return null;\n180    \
          \  }\n181  \n182      public Servant get_servant() throws NoContext\n183\
          \      {\n184          return getServant();"
        lineNumber: 174
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POACurrent.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POACurrent.java
          kind: Method
          name: get_reference
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "25  \n26  package org.jboss.com.sun.corba.se.impl.oa.poa;\n27 \
          \ \n28  import java.util.EmptyStackException;\n29  \n30  import org.jboss.com.sun.corba.se.impl.logging.POASystemException;\n\
          31  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n32 \
          \ import org.jboss.com.sun.corba.se.spi.oa.OAInvocationInfo;\n33  import\
          \ org.jboss.com.sun.corba.se.spi.oa.ObjectAdapter;\n34  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          35  import org.omg.CORBA.CompletionStatus;\n36  import org.omg.PortableServer.POA;\n\
          37  import org.omg.PortableServer.Servant;\n38  import org.omg.PortableServer.CurrentPackage.NoContext;\n\
          39  import org.omg.PortableServer.ServantLocatorPackage.CookieHolder;\n\
          40  \n41  // XXX Needs to be turned into LocalObjectImpl.\n42  \n43  public\
          \ class POACurrent extends org.omg.CORBA.portable.ObjectImpl implements\
          \ org.omg.PortableServer.Current\n44  {\n45      private static final long\
          \ serialVersionUID = 6652432719945390553L;"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POACurrent.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POACurrent.java
          kind: Class
          name: POACurrent
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "33  import org.jboss.com.sun.corba.se.spi.oa.ObjectAdapter;\n34\
          \  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n35  import org.omg.CORBA.CompletionStatus;\n\
          36  import org.omg.PortableServer.POA;\n37  import org.omg.PortableServer.Servant;\n\
          38  import org.omg.PortableServer.CurrentPackage.NoContext;\n39  import\
          \ org.omg.PortableServer.ServantLocatorPackage.CookieHolder;\n40  \n41 \
          \ // XXX Needs to be turned into LocalObjectImpl.\n42  \n43  public class\
          \ POACurrent extends org.omg.CORBA.portable.ObjectImpl implements org.omg.PortableServer.Current\n\
          44  {\n45      private static final long serialVersionUID = 6652432719945390553L;\n\
          46  \n47      private ORB orb;\n48  \n49      private POASystemException\
          \ wrapper;\n50  \n51      public POACurrent(ORB orb)\n52      {\n53    \
          \      this.orb = orb;"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POACurrent.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POACurrent.java
          kind: Class
          name: POACurrent
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "35  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          36  import org.jboss.com.sun.corba.se.impl.logging.POASystemException;\n\
          37  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n38  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n39  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          40  import org.jboss.com.sun.corba.se.spi.oa.ObjectAdapter;\n41  import\
          \ org.jboss.com.sun.corba.se.spi.oa.ObjectAdapterFactory;\n42  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          43  import org.jboss.com.sun.corba.se.spi.orbutil.closure.Closure;\n44 \
          \ import org.jboss.com.sun.corba.se.spi.orbutil.closure.ClosureFactory;\n\
          45  import org.omg.CORBA.OBJECT_NOT_EXIST;\n46  import org.omg.CORBA.TRANSIENT;\n\
          47  import org.omg.CORBA.ORBPackage.InvalidName;\n48  import org.omg.PortableServer.POA;\n\
          49  import org.omg.PortableServer.POAManager;\n50  import org.omg.PortableServer.Servant;\n\
          51  \n52  public class POAFactory implements ObjectAdapterFactory\n53  {\n\
          54      // Maps servants to POAs for deactivating servants when unexportObject\
          \ is called.\n55      // Maintained by POAs activate_object and deactivate_object."
        lineNumber: 45
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAFactory.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAFactory.java
          kind: Class
          name: POAFactory
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "36  import org.jboss.com.sun.corba.se.impl.logging.POASystemException;\n\
          37  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n38  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n39  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          40  import org.jboss.com.sun.corba.se.spi.oa.ObjectAdapter;\n41  import\
          \ org.jboss.com.sun.corba.se.spi.oa.ObjectAdapterFactory;\n42  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          43  import org.jboss.com.sun.corba.se.spi.orbutil.closure.Closure;\n44 \
          \ import org.jboss.com.sun.corba.se.spi.orbutil.closure.ClosureFactory;\n\
          45  import org.omg.CORBA.OBJECT_NOT_EXIST;\n46  import org.omg.CORBA.TRANSIENT;\n\
          47  import org.omg.CORBA.ORBPackage.InvalidName;\n48  import org.omg.PortableServer.POA;\n\
          49  import org.omg.PortableServer.POAManager;\n50  import org.omg.PortableServer.Servant;\n\
          51  \n52  public class POAFactory implements ObjectAdapterFactory\n53  {\n\
          54      // Maps servants to POAs for deactivating servants when unexportObject\
          \ is called.\n55      // Maintained by POAs activate_object and deactivate_object.\n\
          56      private Map<Servant, POA> exportedServantsToPOA = new WeakHashMap<Servant,\
          \ POA>();"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAFactory.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAFactory.java
          kind: Class
          name: POAFactory
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "37  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n\
          38  import org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n39  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n40  import org.jboss.com.sun.corba.se.spi.oa.ObjectAdapter;\n\
          41  import org.jboss.com.sun.corba.se.spi.oa.ObjectAdapterFactory;\n42 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n43  import org.jboss.com.sun.corba.se.spi.orbutil.closure.Closure;\n\
          44  import org.jboss.com.sun.corba.se.spi.orbutil.closure.ClosureFactory;\n\
          45  import org.omg.CORBA.OBJECT_NOT_EXIST;\n46  import org.omg.CORBA.TRANSIENT;\n\
          47  import org.omg.CORBA.ORBPackage.InvalidName;\n48  import org.omg.PortableServer.POA;\n\
          49  import org.omg.PortableServer.POAManager;\n50  import org.omg.PortableServer.Servant;\n\
          51  \n52  public class POAFactory implements ObjectAdapterFactory\n53  {\n\
          54      // Maps servants to POAs for deactivating servants when unexportObject\
          \ is called.\n55      // Maintained by POAs activate_object and deactivate_object.\n\
          56      private Map<Servant, POA> exportedServantsToPOA = new WeakHashMap<Servant,\
          \ POA>();\n57  "
        lineNumber: 47
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAFactory.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAFactory.java
          kind: Class
          name: POAFactory
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "1326                  ORBUtility.dprint(this, \"Exiting deactivate_object\
          \ on poa \" + this);\n1327              }\n1328  \n1329              unlock();\n\
          1330          }\n1331      }\n1332  \n1333      /**\n1334       * <code>create_reference</code>\
          \ <b>3.3.8.17</b>\n1335       */\n1336      public org.omg.CORBA.Object\
          \ create_reference(String repId) throws WrongPolicy\n1337      {\n1338 \
          \         try\n1339          {\n1340              lock();\n1341  \n1342\
          \              if (debug)\n1343              {\n1344                  ORBUtility.dprint(this,\
          \ \"Calling create_reference(repId=\" + repId + \") on poa \" + this);\n\
          1345              }\n1346  "
        lineNumber: 1336
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
          kind: Method
          name: create_reference
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "1348          }\n1349          finally\n1350          {\n1351 \
          \             unlock();\n1352          }\n1353      }\n1354  \n1355    \
          \  /**\n1356       * <code>create_reference_with_id</code> <b>3.3.8.18</b>\n\
          1357       */\n1358      public org.omg.CORBA.Object create_reference_with_id(byte[]\
          \ oid, String repId)\n1359      {\n1360          try\n1361          {\n\
          1362              lock();\n1363  \n1364              if (debug)\n1365  \
          \            {\n1366                  ORBUtility.dprint(this, \"Calling\
          \ create_reference_with_id(oid=\" + oid + \" repId=\" + repId + \") on poa\
          \ \"\n1367                          + this);\n1368              }"
        lineNumber: 1358
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
          kind: Method
          name: create_reference_with_id
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "1397          }\n1398          finally\n1399          {\n1400 \
          \             unlock();\n1401          }\n1402      }\n1403  \n1404    \
          \  /**\n1405       * <code>servant_to_reference</code> <b>3.3.8.20</b>\n\
          1406       */\n1407      public org.omg.CORBA.Object servant_to_reference(Servant\
          \ servant) throws ServantNotActive, WrongPolicy\n1408      {\n1409     \
          \     try\n1410          {\n1411              lock();\n1412  \n1413    \
          \          if (debug)\n1414              {\n1415                  ORBUtility.dprint(this,\
          \ \"Calling servant_to_reference(servant=\" + servant + \") on poa \" +\
          \ this);\n1416              }\n1417  "
        lineNumber: 1407
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
          kind: Method
          name: servant_to_reference
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "1421          }\n1422          finally\n1423          {\n1424 \
          \             unlock();\n1425          }\n1426      }\n1427  \n1428    \
          \  /**\n1429       * <code>reference_to_servant</code> <b>3.3.8.21</b>\n\
          1430       */\n1431      public Servant reference_to_servant(org.omg.CORBA.Object\
          \ reference) throws ObjectNotActive, WrongPolicy,\n1432              WrongAdapter\n\
          1433      {\n1434          try\n1435          {\n1436              lock();\n\
          1437  \n1438              if (debug)\n1439              {\n1440        \
          \          ORBUtility.dprint(this, \"Calling reference_to_servant(reference=\"\
          \ + reference + \") on poa \" + this);\n1441              }"
        lineNumber: 1431
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
          kind: Method
          name: reference_to_servant
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "1452          }\n1453          finally\n1454          {\n1455 \
          \             unlock();\n1456          }\n1457      }\n1458  \n1459    \
          \  /**\n1460       * <code>reference_to_id</code> <b>3.3.8.22</b>\n1461\
          \       */\n1462      public byte[] reference_to_id(org.omg.CORBA.Object\
          \ reference) throws WrongAdapter, WrongPolicy\n1463      {\n1464       \
          \   try\n1465          {\n1466              lock();\n1467  \n1468      \
          \        if (debug)\n1469              {\n1470                  ORBUtility.dprint(this,\
          \ \"Calling reference_to_id(reference=\" + reference + \") on poa \" + this);\n\
          1471              }\n1472  "
        lineNumber: 1462
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
          kind: Method
          name: reference_to_id
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "1505          }\n1506          finally\n1507          {\n1508 \
          \             unlock();\n1509          }\n1510      }\n1511  \n1512    \
          \  /**\n1513       * <code>id_to_reference</code> <b>3.3.8.24</b>\n1514\
          \       */\n1515      public org.omg.CORBA.Object id_to_reference(byte[]\
          \ id) throws ObjectNotActive, WrongPolicy\n1516  \n1517      {\n1518   \
          \       try\n1519          {\n1520              lock();\n1521  \n1522  \
          \            if (debug)\n1523              {\n1524                  ORBUtility.dprint(this,\
          \ \"Calling id_to_reference(id=\" + id + \") on poa \" + this);\n1525  \
          \            }"
        lineNumber: 1515
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
          kind: Method
          name: id_to_reference
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "1691          {\n1692              if (debug)\n1693           \
          \   {\n1694                  ORBUtility.dprint(this, \"Exiting getInvocationServant\
          \ on poa \" + this);\n1695              }\n1696  \n1697              unlock();\n\
          1698          }\n1699      }\n1700  \n1701      public org.omg.CORBA.Object\
          \ getLocalServant(byte[] objectId)\n1702      {\n1703          return null;\n\
          1704      }\n1705  \n1706      /**\n1707       * Called from the subcontract\
          \ to let this POA cleanup after an invocation. Note: If getServant was called,\
          \ then\n1708       * returnServant MUST be called, even in the case of exceptions.\
          \ This may be called multiple times for a single\n1709       * request.\n\
          1710       */\n1711      public void returnServant()"
        lineNumber: 1701
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
          kind: Method
          name: getLocalServant
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "466  \n467              if (debug)\n468              {\n469   \
          \               ORBUtility.dprint(this, \"Exiting destroyIfNotInitDone on\
          \ poa \" + this);\n470              }\n471  \n472              unlock();\n\
          473          }\n474      }\n475  \n476      private byte[] internalReferenceToId(org.omg.CORBA.Object\
          \ reference) throws WrongAdapter\n477      {\n478          IOR ior = ORBUtility.getIOR(reference);\n\
          479          IORTemplateList thisTemplate = ior.getIORTemplates();\n480\
          \  \n481          ObjectReferenceFactory orf = getCurrentFactory();\n482\
          \          IORTemplateList poaTemplate = IORFactories.getIORTemplateList(orf);\n\
          483  \n484          if (!poaTemplate.isEquivalent(thisTemplate))\n485  \
          \            throw new WrongAdapter();\n486  "
        lineNumber: 476
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
          kind: Method
          name: internalReferenceToId
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: '47  import org.jboss.com.sun.corba.se.spi.ior.IORTemplateList;

          48  import org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;

          49  import org.jboss.com.sun.corba.se.spi.ior.ObjectId;

          50  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;

          51  import org.jboss.com.sun.corba.se.spi.ior.TaggedProfile;

          52  import org.jboss.com.sun.corba.se.spi.oa.OADestroyed;

          53  import org.jboss.com.sun.corba.se.spi.oa.OAInvocationInfo;

          54  import org.jboss.com.sun.corba.se.spi.oa.ObjectAdapterBase;

          55  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          56  import org.jboss.com.sun.corba.se.spi.protocol.ForwardException;

          57  import org.omg.CORBA.Policy;

          58  import org.omg.CORBA.SystemException;

          59  import org.omg.PortableInterceptor.NON_EXISTENT;

          60  import org.omg.PortableInterceptor.ObjectReferenceFactory;

          61  import org.omg.PortableInterceptor.ObjectReferenceTemplate;

          62  import org.omg.PortableServer.AdapterActivator;

          63  import org.omg.PortableServer.ForwardRequest;

          64  import org.omg.PortableServer.IdAssignmentPolicy;

          65  import org.omg.PortableServer.IdAssignmentPolicyValue;

          66  import org.omg.PortableServer.IdUniquenessPolicy;

          67  import org.omg.PortableServer.IdUniquenessPolicyValue;'
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
          kind: Class
          name: DestroyThread
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: '48  import org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;

          49  import org.jboss.com.sun.corba.se.spi.ior.ObjectId;

          50  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;

          51  import org.jboss.com.sun.corba.se.spi.ior.TaggedProfile;

          52  import org.jboss.com.sun.corba.se.spi.oa.OADestroyed;

          53  import org.jboss.com.sun.corba.se.spi.oa.OAInvocationInfo;

          54  import org.jboss.com.sun.corba.se.spi.oa.ObjectAdapterBase;

          55  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          56  import org.jboss.com.sun.corba.se.spi.protocol.ForwardException;

          57  import org.omg.CORBA.Policy;

          58  import org.omg.CORBA.SystemException;

          59  import org.omg.PortableInterceptor.NON_EXISTENT;

          60  import org.omg.PortableInterceptor.ObjectReferenceFactory;

          61  import org.omg.PortableInterceptor.ObjectReferenceTemplate;

          62  import org.omg.PortableServer.AdapterActivator;

          63  import org.omg.PortableServer.ForwardRequest;

          64  import org.omg.PortableServer.IdAssignmentPolicy;

          65  import org.omg.PortableServer.IdAssignmentPolicyValue;

          66  import org.omg.PortableServer.IdUniquenessPolicy;

          67  import org.omg.PortableServer.IdUniquenessPolicyValue;

          68  import org.omg.PortableServer.ImplicitActivationPolicy;'
        lineNumber: 58
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAImpl.java
          kind: Class
          name: DestroyThread
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "25  \n26  package org.jboss.com.sun.corba.se.impl.oa.poa;\n27 \
          \ \n28  import java.util.HashSet;\n29  import java.util.Iterator;\n30  import\
          \ java.util.Set;\n31  \n32  import org.jboss.com.sun.corba.se.impl.logging.POASystemException;\n\
          33  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n34  import\
          \ org.jboss.com.sun.corba.se.spi.protocol.PIHandler;\n35  import org.omg.CORBA.CompletionStatus;\n\
          36  import org.omg.PortableInterceptor.ACTIVE;\n37  import org.omg.PortableInterceptor.DISCARDING;\n\
          38  import org.omg.PortableInterceptor.HOLDING;\n39  import org.omg.PortableInterceptor.INACTIVE;\n\
          40  import org.omg.PortableInterceptor.NON_EXISTENT;\n41  import org.omg.PortableServer.POA;\n\
          42  import org.omg.PortableServer.POAManager;\n43  import org.omg.PortableServer.POAManagerPackage.State;\n\
          44  \n45  /**"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAManagerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAManagerImpl.java
          kind: Class
          name: POAManagerImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "40  import org.omg.PortableInterceptor.NON_EXISTENT;\n41  import\
          \ org.omg.PortableServer.POA;\n42  import org.omg.PortableServer.POAManager;\n\
          43  import org.omg.PortableServer.POAManagerPackage.State;\n44  \n45  /**\n\
          46   * POAManagerImpl is the implementation of the POAManager interface.\
          \ Its public methods are activate(), hold_requests(),\n47   * discard_requests()\
          \ and deactivate().\n48   */\n49  \n50  public class POAManagerImpl extends\
          \ org.omg.CORBA.LocalObject implements POAManager\n51  {\n52      private\
          \ static final long serialVersionUID = 5295604954267836516L;\n53  \n54 \
          \     private final POAFactory factory; // factory which contains global\
          \ state for all POAManagers\n55  \n56      private PIHandler pihandler;\
          \ // for adapterManagerStateChanged\n57  \n58      private State state;\
          \ // current state of this POAManager\n59  \n60      private Set<POA> poas\
          \ = new HashSet<POA>(4); // all poas controlled by this POAManager"
        lineNumber: 50
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAManagerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAManagerImpl.java
          kind: Class
          name: POAManagerImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "25  \n26  package org.jboss.com.sun.corba.se.impl.oa.poa;\n27 \
          \ \n28  import java.util.Set;\n29  \n30  import org.jboss.com.sun.corba.se.impl.oa.NullServantImpl;\n\
          31  import org.jboss.com.sun.corba.se.impl.oa.poa.ActiveObjectMap.Key;\n\
          32  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n33  import\
          \ org.jboss.com.sun.corba.se.spi.oa.NullServant;\n34  import org.jboss.com.sun.corba.se.spi.oa.OAInvocationInfo;\n\
          35  import org.omg.CORBA.SystemException;\n36  import org.omg.PortableServer.ForwardRequest;\n\
          37  import org.omg.PortableServer.Servant;\n38  import org.omg.PortableServer.ServantActivator;\n\
          39  import org.omg.PortableServer.ServantManager;\n40  import org.omg.PortableServer.POAPackage.NoServant;\n\
          41  import org.omg.PortableServer.POAPackage.ObjectNotActive;\n42  import\
          \ org.omg.PortableServer.POAPackage.WrongPolicy;\n43  \n44  /**\n45   *\
          \ Implementation of POARequesHandler that provides policy specific operations\
          \ on the POA."
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAPolicyMediatorImpl_R_USM.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/POAPolicyMediatorImpl_R_USM.java
          kind: Class
          name: Etherealizer
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "25  package org.jboss.com.sun.corba.se.impl.oa.poa;\n26  \n27 \
          \ import java.util.BitSet;\n28  import java.util.HashMap;\n29  import java.util.Iterator;\n\
          30  \n31  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n\
          32  import org.jboss.com.sun.corba.se.spi.extension.CopyObjectPolicy;\n\
          33  import org.jboss.com.sun.corba.se.spi.extension.ServantCachingPolicy;\n\
          34  import org.jboss.com.sun.corba.se.spi.extension.ZeroPortPolicy;\n35\
          \  import org.omg.CORBA.Policy;\n36  import org.omg.PortableServer.ID_ASSIGNMENT_POLICY_ID;\n\
          37  import org.omg.PortableServer.ID_UNIQUENESS_POLICY_ID;\n38  import org.omg.PortableServer.IMPLICIT_ACTIVATION_POLICY_ID;\n\
          39  import org.omg.PortableServer.IdAssignmentPolicy;\n40  import org.omg.PortableServer.IdAssignmentPolicyValue;\n\
          41  import org.omg.PortableServer.IdUniquenessPolicy;\n42  import org.omg.PortableServer.IdUniquenessPolicyValue;\n\
          43  import org.omg.PortableServer.ImplicitActivationPolicy;\n44  import\
          \ org.omg.PortableServer.ImplicitActivationPolicyValue;\n45  import org.omg.PortableServer.LIFESPAN_POLICY_ID;"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/Policies.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/Policies.java
          kind: Class
          name: Policies
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "18   * 2 along with this work; if not, write to the Free Software\
          \ Foundation,\n19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.impl.oa.poa;\n27  \n28  import org.omg.CORBA.Policy;\n\
          29  import org.omg.PortableServer.REQUEST_PROCESSING_POLICY_ID;\n30  import\
          \ org.omg.PortableServer.RequestProcessingPolicy;\n31  import org.omg.PortableServer.RequestProcessingPolicyValue;\n\
          32  \n33  public class RequestProcessingPolicyImpl extends org.omg.CORBA.LocalObject\
          \ implements RequestProcessingPolicy\n34  {\n35  \n36      private static\
          \ final long serialVersionUID = 5900928116128639434L;\n37  \n38      public\
          \ RequestProcessingPolicyImpl(RequestProcessingPolicyValue value)"
        lineNumber: 28
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/RequestProcessingPolicyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/RequestProcessingPolicyImpl.java
          kind: Class
          name: RequestProcessingPolicyImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.oa.poa;\n\
          27  \n28  import org.omg.CORBA.Policy;\n29  import org.omg.PortableServer.REQUEST_PROCESSING_POLICY_ID;\n\
          30  import org.omg.PortableServer.RequestProcessingPolicy;\n31  import org.omg.PortableServer.RequestProcessingPolicyValue;\n\
          32  \n33  public class RequestProcessingPolicyImpl extends org.omg.CORBA.LocalObject\
          \ implements RequestProcessingPolicy\n34  {\n35  \n36      private static\
          \ final long serialVersionUID = 5900928116128639434L;\n37  \n38      public\
          \ RequestProcessingPolicyImpl(RequestProcessingPolicyValue value)\n39  \
          \    {\n40          this.value = value;\n41      }\n42  \n43      public\
          \ RequestProcessingPolicyValue value()"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/RequestProcessingPolicyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/RequestProcessingPolicyImpl.java
          kind: Class
          name: RequestProcessingPolicyImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "18   * 2 along with this work; if not, write to the Free Software\
          \ Foundation,\n19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.impl.oa.poa;\n27  \n28  import org.omg.CORBA.Policy;\n\
          29  import org.omg.PortableServer.SERVANT_RETENTION_POLICY_ID;\n30  import\
          \ org.omg.PortableServer.ServantRetentionPolicy;\n31  import org.omg.PortableServer.ServantRetentionPolicyValue;\n\
          32  \n33  final class ServantRetentionPolicyImpl extends org.omg.CORBA.LocalObject\
          \ implements ServantRetentionPolicy\n34  {\n35  \n36      private static\
          \ final long serialVersionUID = 7744962424711138173L;\n37  \n38      public\
          \ ServantRetentionPolicyImpl(ServantRetentionPolicyValue value)"
        lineNumber: 28
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/ServantRetentionPolicyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/ServantRetentionPolicyImpl.java
          kind: Class
          name: ServantRetentionPolicyImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.oa.poa;\n\
          27  \n28  import org.omg.CORBA.Policy;\n29  import org.omg.PortableServer.SERVANT_RETENTION_POLICY_ID;\n\
          30  import org.omg.PortableServer.ServantRetentionPolicy;\n31  import org.omg.PortableServer.ServantRetentionPolicyValue;\n\
          32  \n33  final class ServantRetentionPolicyImpl extends org.omg.CORBA.LocalObject\
          \ implements ServantRetentionPolicy\n34  {\n35  \n36      private static\
          \ final long serialVersionUID = 7744962424711138173L;\n37  \n38      public\
          \ ServantRetentionPolicyImpl(ServantRetentionPolicyValue value)\n39    \
          \  {\n40          this.value = value;\n41      }\n42  \n43      public ServantRetentionPolicyValue\
          \ value()"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/ServantRetentionPolicyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/ServantRetentionPolicyImpl.java
          kind: Class
          name: ServantRetentionPolicyImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "18   * 2 along with this work; if not, write to the Free Software\
          \ Foundation,\n19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.impl.oa.poa;\n27  \n28  import org.omg.CORBA.Policy;\n\
          29  import org.omg.PortableServer.THREAD_POLICY_ID;\n30  import org.omg.PortableServer.ThreadPolicy;\n\
          31  import org.omg.PortableServer.ThreadPolicyValue;\n32  \n33  final class\
          \ ThreadPolicyImpl extends org.omg.CORBA.LocalObject implements ThreadPolicy\n\
          34  {\n35  \n36      private static final long serialVersionUID = -1130695147546073341L;\n\
          37  \n38      public ThreadPolicyImpl(ThreadPolicyValue value)"
        lineNumber: 28
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/ThreadPolicyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/ThreadPolicyImpl.java
          kind: Class
          name: ThreadPolicyImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.oa.poa;\n\
          27  \n28  import org.omg.CORBA.Policy;\n29  import org.omg.PortableServer.THREAD_POLICY_ID;\n\
          30  import org.omg.PortableServer.ThreadPolicy;\n31  import org.omg.PortableServer.ThreadPolicyValue;\n\
          32  \n33  final class ThreadPolicyImpl extends org.omg.CORBA.LocalObject\
          \ implements ThreadPolicy\n34  {\n35  \n36      private static final long\
          \ serialVersionUID = -1130695147546073341L;\n37  \n38      public ThreadPolicyImpl(ThreadPolicyValue\
          \ value)\n39      {\n40          this.value = value;\n41      }\n42  \n\
          43      public ThreadPolicyValue value()"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/ThreadPolicyImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/oa/poa/ThreadPolicyImpl.java
          kind: Class
          name: ThreadPolicyImpl
          package: org.jboss.com.sun.corba.se.impl.oa.poa
      - codeSnip: "19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.impl.orb;\n27  \n28  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;\n\
          29  import org.omg.CORBA.portable.OutputStream;\n30  \n31  public class\
          \ ORBVersionImpl implements ORBVersion\n32  {\n33      private byte orbType;\n\
          34  \n35      public ORBVersionImpl(byte orbType)\n36      {\n37       \
          \   this.orbType = orbType;\n38      }\n39  "
        lineNumber: 29
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orb/ORBVersionImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orb/ORBVersionImpl.java
          kind: Class
          name: ORBVersionImpl
          package: org.jboss.com.sun.corba.se.impl.orb
      - codeSnip: "29  import java.io.ObjectInputStream;\n30  import java.util.Hashtable;\n\
          31  \n32  /**\n33   * Implements legacy behavior from before Ladybird to\
          \ maintain backwards compatibility.\n34   */\n35  public class IIOPInputStream_1_3\
          \ extends org.jboss.com.sun.corba.se.impl.io.IIOPInputStream\n36  {\n37\
          \      // The newer version in the io package correctly reads a wstring\
          \ instead.\n38      // This concerns bug 4379597.\n39      protected String\
          \ internalReadUTF(org.omg.CORBA.portable.InputStream stream)\n40      {\n\
          41          return stream.read_string();\n42      }\n43  \n44      /**\n\
          45       * Before JDK 1.3.1_01, the PutField/GetField implementation actually\
          \ sent a Hashtable.\n46       */\n47      @SuppressWarnings(\"unchecked\"\
          )\n48      public ObjectInputStream.GetField readFields() throws IOException,\
          \ ClassNotFoundException, NotActiveException\n49      {"
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/IIOPInputStream_1_3.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/IIOPInputStream_1_3.java
          kind: Method
          name: internalReadUTF
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "31   * Implements legacy behavior from before Ladybird to maintain\
          \ backwards compatibility.\n32   */\n33  @SuppressWarnings(\"deprecation\"\
          )\n34  public class IIOPOutputStream_1_3 extends org.jboss.com.sun.corba.se.impl.io.IIOPOutputStream\n\
          35  {\n36      // We can't assume that the superclass's putFields member\
          \ will be non-private. We must allow the RI to run on JDK\n37      // 1.3.1\
          \ FCS as well as the JDK 1.3.1_01 patch.\n38      private ObjectOutputStream.PutField\
          \ putFields_1_3;\n39  \n40      // The newer version in the io package correctly\
          \ writes a wstring instead. This concerns bug 4379597.\n41      protected\
          \ void internalWriteUTF(org.omg.CORBA.portable.OutputStream stream, String\
          \ data)\n42      {\n43          stream.write_string(data);\n44      }\n\
          45  \n46      public IIOPOutputStream_1_3() throws java.io.IOException\n\
          47      {\n48          super();\n49      }\n50  \n51      /**"
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/IIOPOutputStream_1_3.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/IIOPOutputStream_1_3.java
          kind: Method
          name: internalWriteUTF
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "112          {\n113              return (type.kind().value() ==\
          \ TCKind._tk_except && type.member_count() == 3\n114                   \
          \   && type.member_type(0).equal(systemExceptionMembers[0].type)\n115  \
          \                    && type.member_type(1).equal(systemExceptionMembers[1].type)\
          \ && type.member_type(2).equal(\n116                      systemExceptionMembers[2].type));\n\
          117          }\n118          catch (BadKind ex)\n119          {\n120   \
          \           return false;\n121          }\n122          catch (org.omg.CORBA.TypeCodePackage.Bounds\
          \ ex)\n123          {\n124              return false;\n125          }\n\
          126      }\n127  \n128      /**\n129       * Static method for writing a\
          \ CORBA standard exception to an Any.\n130       * \n131       * @param\
          \ any\n132       *            The Any to write the SystemException into."
        lineNumber: 122
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Method
          name: isSystemExceptionTypeCode
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: '50  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfile;

          51  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfileTemplate;

          52  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          53  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          54  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;

          55  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          56  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;

          57  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          58  import org.jboss.com.sun.corba.se.spi.protocol.CorbaMessageMediator;

          59  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;

          60  import org.omg.CORBA.Any;

          61  import org.omg.CORBA.BAD_OPERATION;

          62  import org.omg.CORBA.BAD_PARAM;

          63  import org.omg.CORBA.CompletionStatus;

          64  import org.omg.CORBA.INTERNAL;

          65  import org.omg.CORBA.StructMember;

          66  import org.omg.CORBA.SystemException;

          67  import org.omg.CORBA.TCKind;

          68  import org.omg.CORBA.TypeCode;

          69  import org.omg.CORBA.TypeCodePackage.BadKind;

          70  import org.omg.CORBA.portable.InputStream;'
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Class
          name: ORBUtility
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: '51  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfileTemplate;

          52  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          53  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          54  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;

          55  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          56  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;

          57  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          58  import org.jboss.com.sun.corba.se.spi.protocol.CorbaMessageMediator;

          59  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;

          60  import org.omg.CORBA.Any;

          61  import org.omg.CORBA.BAD_OPERATION;

          62  import org.omg.CORBA.BAD_PARAM;

          63  import org.omg.CORBA.CompletionStatus;

          64  import org.omg.CORBA.INTERNAL;

          65  import org.omg.CORBA.StructMember;

          66  import org.omg.CORBA.SystemException;

          67  import org.omg.CORBA.TCKind;

          68  import org.omg.CORBA.TypeCode;

          69  import org.omg.CORBA.TypeCodePackage.BadKind;

          70  import org.omg.CORBA.portable.InputStream;

          71  import org.omg.CORBA.portable.OutputStream;'
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Class
          name: ORBUtility
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: '52  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;

          53  import org.jboss.com.sun.corba.se.spi.orb.ORB;

          54  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;

          55  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;

          56  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;

          57  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;

          58  import org.jboss.com.sun.corba.se.spi.protocol.CorbaMessageMediator;

          59  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;

          60  import org.omg.CORBA.Any;

          61  import org.omg.CORBA.BAD_OPERATION;

          62  import org.omg.CORBA.BAD_PARAM;

          63  import org.omg.CORBA.CompletionStatus;

          64  import org.omg.CORBA.INTERNAL;

          65  import org.omg.CORBA.StructMember;

          66  import org.omg.CORBA.SystemException;

          67  import org.omg.CORBA.TCKind;

          68  import org.omg.CORBA.TypeCode;

          69  import org.omg.CORBA.TypeCodePackage.BadKind;

          70  import org.omg.CORBA.portable.InputStream;

          71  import org.omg.CORBA.portable.OutputStream;

          72  '
        lineNumber: 62
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Class
          name: ORBUtility
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "53  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n54  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORBVersion;\n55  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          56  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          57  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;\n\
          58  import org.jboss.com.sun.corba.se.spi.protocol.CorbaMessageMediator;\n\
          59  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;\n\
          60  import org.omg.CORBA.Any;\n61  import org.omg.CORBA.BAD_OPERATION;\n\
          62  import org.omg.CORBA.BAD_PARAM;\n63  import org.omg.CORBA.CompletionStatus;\n\
          64  import org.omg.CORBA.INTERNAL;\n65  import org.omg.CORBA.StructMember;\n\
          66  import org.omg.CORBA.SystemException;\n67  import org.omg.CORBA.TCKind;\n\
          68  import org.omg.CORBA.TypeCode;\n69  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          70  import org.omg.CORBA.portable.InputStream;\n71  import org.omg.CORBA.portable.OutputStream;\n\
          72  \n73  /**"
        lineNumber: 63
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Class
          name: ORBUtility
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "54  import org.jboss.com.sun.corba.se.spi.orb.ORBVersion;\n55 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n56  import\
          \ org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n57  import\
          \ org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;\n58  import\
          \ org.jboss.com.sun.corba.se.spi.protocol.CorbaMessageMediator;\n59  import\
          \ org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;\n60  import\
          \ org.omg.CORBA.Any;\n61  import org.omg.CORBA.BAD_OPERATION;\n62  import\
          \ org.omg.CORBA.BAD_PARAM;\n63  import org.omg.CORBA.CompletionStatus;\n\
          64  import org.omg.CORBA.INTERNAL;\n65  import org.omg.CORBA.StructMember;\n\
          66  import org.omg.CORBA.SystemException;\n67  import org.omg.CORBA.TCKind;\n\
          68  import org.omg.CORBA.TypeCode;\n69  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          70  import org.omg.CORBA.portable.InputStream;\n71  import org.omg.CORBA.portable.OutputStream;\n\
          72  \n73  /**\n74   * Handy class full of static functions that don't belong\
          \ in util.Utility for pure ORB reasons."
        lineNumber: 64
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Class
          name: ORBUtility
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "55  import org.jboss.com.sun.corba.se.spi.orb.ORBVersionFactory;\n\
          56  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          57  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;\n\
          58  import org.jboss.com.sun.corba.se.spi.protocol.CorbaMessageMediator;\n\
          59  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;\n\
          60  import org.omg.CORBA.Any;\n61  import org.omg.CORBA.BAD_OPERATION;\n\
          62  import org.omg.CORBA.BAD_PARAM;\n63  import org.omg.CORBA.CompletionStatus;\n\
          64  import org.omg.CORBA.INTERNAL;\n65  import org.omg.CORBA.StructMember;\n\
          66  import org.omg.CORBA.SystemException;\n67  import org.omg.CORBA.TCKind;\n\
          68  import org.omg.CORBA.TypeCode;\n69  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          70  import org.omg.CORBA.portable.InputStream;\n71  import org.omg.CORBA.portable.OutputStream;\n\
          72  \n73  /**\n74   * Handy class full of static functions that don't belong\
          \ in util.Utility for pure ORB reasons.\n75   */"
        lineNumber: 65
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Class
          name: ORBUtility
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "56  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          57  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;\n\
          58  import org.jboss.com.sun.corba.se.spi.protocol.CorbaMessageMediator;\n\
          59  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;\n\
          60  import org.omg.CORBA.Any;\n61  import org.omg.CORBA.BAD_OPERATION;\n\
          62  import org.omg.CORBA.BAD_PARAM;\n63  import org.omg.CORBA.CompletionStatus;\n\
          64  import org.omg.CORBA.INTERNAL;\n65  import org.omg.CORBA.StructMember;\n\
          66  import org.omg.CORBA.SystemException;\n67  import org.omg.CORBA.TCKind;\n\
          68  import org.omg.CORBA.TypeCode;\n69  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          70  import org.omg.CORBA.portable.InputStream;\n71  import org.omg.CORBA.portable.OutputStream;\n\
          72  \n73  /**\n74   * Handy class full of static functions that don't belong\
          \ in util.Utility for pure ORB reasons.\n75   */\n76  public final class\
          \ ORBUtility"
        lineNumber: 66
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Class
          name: ORBUtility
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "57  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;\n\
          58  import org.jboss.com.sun.corba.se.spi.protocol.CorbaMessageMediator;\n\
          59  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;\n\
          60  import org.omg.CORBA.Any;\n61  import org.omg.CORBA.BAD_OPERATION;\n\
          62  import org.omg.CORBA.BAD_PARAM;\n63  import org.omg.CORBA.CompletionStatus;\n\
          64  import org.omg.CORBA.INTERNAL;\n65  import org.omg.CORBA.StructMember;\n\
          66  import org.omg.CORBA.SystemException;\n67  import org.omg.CORBA.TCKind;\n\
          68  import org.omg.CORBA.TypeCode;\n69  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          70  import org.omg.CORBA.portable.InputStream;\n71  import org.omg.CORBA.portable.OutputStream;\n\
          72  \n73  /**\n74   * Handy class full of static functions that don't belong\
          \ in util.Utility for pure ORB reasons.\n75   */\n76  public final class\
          \ ORBUtility\n77  {"
        lineNumber: 67
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Class
          name: ORBUtility
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "58  import org.jboss.com.sun.corba.se.spi.protocol.CorbaMessageMediator;\n\
          59  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;\n\
          60  import org.omg.CORBA.Any;\n61  import org.omg.CORBA.BAD_OPERATION;\n\
          62  import org.omg.CORBA.BAD_PARAM;\n63  import org.omg.CORBA.CompletionStatus;\n\
          64  import org.omg.CORBA.INTERNAL;\n65  import org.omg.CORBA.StructMember;\n\
          66  import org.omg.CORBA.SystemException;\n67  import org.omg.CORBA.TCKind;\n\
          68  import org.omg.CORBA.TypeCode;\n69  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          70  import org.omg.CORBA.portable.InputStream;\n71  import org.omg.CORBA.portable.OutputStream;\n\
          72  \n73  /**\n74   * Handy class full of static functions that don't belong\
          \ in util.Utility for pure ORB reasons.\n75   */\n76  public final class\
          \ ORBUtility\n77  {\n78      private ORBUtility()"
        lineNumber: 68
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Class
          name: ORBUtility
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "59  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;\n\
          60  import org.omg.CORBA.Any;\n61  import org.omg.CORBA.BAD_OPERATION;\n\
          62  import org.omg.CORBA.BAD_PARAM;\n63  import org.omg.CORBA.CompletionStatus;\n\
          64  import org.omg.CORBA.INTERNAL;\n65  import org.omg.CORBA.StructMember;\n\
          66  import org.omg.CORBA.SystemException;\n67  import org.omg.CORBA.TCKind;\n\
          68  import org.omg.CORBA.TypeCode;\n69  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          70  import org.omg.CORBA.portable.InputStream;\n71  import org.omg.CORBA.portable.OutputStream;\n\
          72  \n73  /**\n74   * Handy class full of static functions that don't belong\
          \ in util.Utility for pure ORB reasons.\n75   */\n76  public final class\
          \ ORBUtility\n77  {\n78      private ORBUtility()\n79      {"
        lineNumber: 69
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Class
          name: ORBUtility
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "60  import org.omg.CORBA.Any;\n61  import org.omg.CORBA.BAD_OPERATION;\n\
          62  import org.omg.CORBA.BAD_PARAM;\n63  import org.omg.CORBA.CompletionStatus;\n\
          64  import org.omg.CORBA.INTERNAL;\n65  import org.omg.CORBA.StructMember;\n\
          66  import org.omg.CORBA.SystemException;\n67  import org.omg.CORBA.TCKind;\n\
          68  import org.omg.CORBA.TypeCode;\n69  import org.omg.CORBA.TypeCodePackage.BadKind;\n\
          70  import org.omg.CORBA.portable.InputStream;\n71  import org.omg.CORBA.portable.OutputStream;\n\
          72  \n73  /**\n74   * Handy class full of static functions that don't belong\
          \ in util.Utility for pure ORB reasons.\n75   */\n76  public final class\
          \ ORBUtility\n77  {\n78      private ORBUtility()\n79      {\n80      }"
        lineNumber: 70
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Class
          name: ORBUtility
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "61  import org.omg.CORBA.BAD_OPERATION;\n62  import org.omg.CORBA.BAD_PARAM;\n\
          63  import org.omg.CORBA.CompletionStatus;\n64  import org.omg.CORBA.INTERNAL;\n\
          65  import org.omg.CORBA.StructMember;\n66  import org.omg.CORBA.SystemException;\n\
          67  import org.omg.CORBA.TCKind;\n68  import org.omg.CORBA.TypeCode;\n69\
          \  import org.omg.CORBA.TypeCodePackage.BadKind;\n70  import org.omg.CORBA.portable.InputStream;\n\
          71  import org.omg.CORBA.portable.OutputStream;\n72  \n73  /**\n74   * Handy\
          \ class full of static functions that don't belong in util.Utility for pure\
          \ ORB reasons.\n75   */\n76  public final class ORBUtility\n77  {\n78  \
          \    private ORBUtility()\n79      {\n80      }\n81  "
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Class
          name: ORBUtility
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "692      {\n693          ORB orb = ior.getORB();\n694         \
          \ CorbaContactInfoList ccil = orb.getCorbaContactInfoListFactory().create(ior);\n\
          695          CorbaClientDelegate del = orb.getClientDelegateFactory().create(ccil);\n\
          696          return del;\n697      }\n698  \n699      /**\n700       * This\
          \ method is used to create untyped object references.\n701       */\n702\
          \      public static org.omg.CORBA.Object makeObjectReference(IOR ior)\n\
          703      {\n704          CorbaClientDelegate del = makeClientDelegate(ior);\n\
          705          org.omg.CORBA.Object objectImpl = new CORBAObjectImpl();\n\
          706          StubAdapter.setDelegate(objectImpl, del);\n707          return\
          \ objectImpl;\n708      }\n709  \n710      /**\n711       * This method\
          \ obtains an IOR from a CORBA object reference. It will return null if obj\
          \ is a local object, a null\n712       * object, or an object implemented\
          \ by a different ORB. It will throw BAD_OPERATION if obj is an unconnected"
        lineNumber: 702
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Method
          name: makeObjectReference
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "695          CorbaClientDelegate del = orb.getClientDelegateFactory().create(ccil);\n\
          696          return del;\n697      }\n698  \n699      /**\n700       * This\
          \ method is used to create untyped object references.\n701       */\n702\
          \      public static org.omg.CORBA.Object makeObjectReference(IOR ior)\n\
          703      {\n704          CorbaClientDelegate del = makeClientDelegate(ior);\n\
          705          org.omg.CORBA.Object objectImpl = new CORBAObjectImpl();\n\
          706          StubAdapter.setDelegate(objectImpl, del);\n707          return\
          \ objectImpl;\n708      }\n709  \n710      /**\n711       * This method\
          \ obtains an IOR from a CORBA object reference. It will return null if obj\
          \ is a local object, a null\n712       * object, or an object implemented\
          \ by a different ORB. It will throw BAD_OPERATION if obj is an unconnected\n\
          713       * RMI-IIOP object.\n714       * \n715       * @return IOR the\
          \ IOR that represents this objref. This will never be null."
        lineNumber: 705
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Method
          name: makeObjectReference
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "711       * This method obtains an IOR from a CORBA object reference.\
          \ It will return null if obj is a local object, a null\n712       * object,\
          \ or an object implemented by a different ORB. It will throw BAD_OPERATION\
          \ if obj is an unconnected\n713       * RMI-IIOP object.\n714       * \n\
          715       * @return IOR the IOR that represents this objref. This will never\
          \ be null.\n716       * @exception BAD_OPERATION\n717       *          \
          \      (from oi._get_delegate) if obj is a normal objref, but does not have\
          \ a delegate set.\n718       * @exception BAD_PARAM\n719       *       \
          \         if obj is a local object, or else was created by a foreign ORB.\n\
          720       */\n721      public static IOR getIOR(org.omg.CORBA.Object obj)\n\
          722      {\n723          if (obj == null)\n724              throw wrapper.nullObjectReference();\n\
          725  \n726          IOR ior = null;\n727          if (StubAdapter.isStub(obj))\n\
          728          {\n729              org.omg.CORBA.portable.Delegate del = StubAdapter.getDelegate(obj);\n\
          730  \n731              if (del instanceof CorbaClientDelegate)"
        lineNumber: 721
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Method
          name: getIOR
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "719       *                if obj is a local object, or else was\
          \ created by a foreign ORB.\n720       */\n721      public static IOR getIOR(org.omg.CORBA.Object\
          \ obj)\n722      {\n723          if (obj == null)\n724              throw\
          \ wrapper.nullObjectReference();\n725  \n726          IOR ior = null;\n\
          727          if (StubAdapter.isStub(obj))\n728          {\n729         \
          \     org.omg.CORBA.portable.Delegate del = StubAdapter.getDelegate(obj);\n\
          730  \n731              if (del instanceof CorbaClientDelegate)\n732   \
          \           {\n733                  CorbaClientDelegate cdel = (CorbaClientDelegate)\
          \ del;\n734                  ContactInfoList cil = cdel.getContactInfoList();\n\
          735  \n736                  if (cil instanceof CorbaContactInfoList)\n737\
          \                  {\n738                      CorbaContactInfoList ccil\
          \ = (CorbaContactInfoList) cil;\n739                      ior = ccil.getTargetIOR();"
        lineNumber: 729
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Method
          name: getIOR
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "764  \n765      /**\n766       * Obtains an IOR for the object\
          \ reference obj, first connecting it to the ORB if necessary.\n767     \
          \  * \n768       * @return IOR the IOR that represents this objref. This\
          \ will never be null.\n769       * @exception BAD_OPERATION\n770       *\
          \                if the object could not be connected, if a connection attempt\
          \ was needed.\n771       * @exception BAD_PARAM\n772       *           \
          \     if obj is a local object, or else was created by a foreign ORB.\n\
          773       */\n774      public static IOR connectAndGetIOR(ORB orb, org.omg.CORBA.Object\
          \ obj)\n775      {\n776          IOR result;\n777          try\n778    \
          \      {\n779              result = getIOR(obj);\n780          }\n781  \
          \        catch (BAD_OPERATION bop)\n782          {\n783              if\
          \ (StubAdapter.isStub(obj))\n784              {"
        lineNumber: 774
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ORBUtility.java
          kind: Method
          name: connectAndGetIOR
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "45  import java.security.DigestOutputStream;\n46  import java.security.MessageDigest;\n\
          47  import java.security.NoSuchAlgorithmException;\n48  import java.security.PrivilegedAction;\n\
          49  import java.util.Arrays;\n50  import java.util.Comparator;\n51  import\
          \ java.util.Hashtable;\n52  \n53  import org.jboss.com.sun.corba.se.impl.io.ObjectStreamClass;\n\
          54  import org.jboss.com.sun.corba.se.impl.io.ValueUtility;\n55  import\
          \ org.omg.CORBA.ValueMember;\n56  \n57  /**\n58   * This is duplicated here\
          \ to preserve the JDK 1.3.1FCS behavior\n59   * of calculating the OMG hash\
          \ code incorrectly when serialPersistentFields\n60   * is used, but some\
          \ of the fields no longer exist in the class itself.\n61   *\n62   * We\
          \ have to duplicate it since we aren't allowed to modify the\n63   * org.jboss.com.sun.corba.se.impl.io\
          \ version further, and can't make it\n64   * public outside of its package\
          \ for security reasons.\n65   */"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ObjectStreamClass_1_3_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ObjectStreamClass_1_3_1.java
          kind: Class
          name: ObjectStreamClass_1_3_1
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "295      /**\n296       * Used to convert ascii to hex.\n297  \
          \     */\n298      private static final byte ASCII_HEX[] = {(byte) '0',\
          \ (byte) '1', (byte) '2', (byte) '3', (byte) '4', (byte) '5',\n299     \
          \         (byte) '6', (byte) '7', (byte) '8', (byte) '9', (byte) 'A', (byte)\
          \ 'B', (byte) 'C', (byte) 'D', (byte) 'E',\n300              (byte) 'F',};\n\
          301  \n302      // Interface Rep ID Strings\n303      public static final\
          \ String kjava_rmi_Remote = createForAnyType(java.rmi.Remote.class);\n304\
          \  \n305      public static final String korg_omg_CORBA_Object = createForAnyType(org.omg.CORBA.Object.class);\n\
          306  \n307      // Dummy arguments for getIdFromHelper method\n308     \
          \ public static final Class<?> kNoParamTypes[] = {};\n309  \n310      public\
          \ static final Object kNoArgs[] = {};\n311  \n312      RepositoryId_1_3()\n\
          313      {\n314      }\n315  "
        lineNumber: 305
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3.java
          kind: Constant
          name: korg_omg_CORBA_Object
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "36  import java.net.MalformedURLException;\n37  import java.util.Hashtable;\n\
          38  \n39  import javax.rmi.CORBA.Util;\n40  \n41  import org.jboss.com.sun.corba.se.impl.io.ObjectStreamClass;\n\
          42  import org.jboss.com.sun.corba.se.impl.util.IdentityHashtable;\n43 \
          \ import org.jboss.com.sun.corba.se.impl.util.JDKBridge;\n44  import org.jboss.com.sun.corba.se.impl.util.PackagePrefixChecker;\n\
          45  import org.jboss.com.sun.corba.se.impl.util.Utility;\n46  import org.omg.CORBA.portable.IDLEntity;\n\
          47  import org.omg.CORBA.portable.ValueBase;\n48  \n49  // keeping the original\
          \ RepositoryId class that was shipped in\n50  // JDK 1.3.  It has interoperability\
          \ bugs\n51  \n52  public class RepositoryId_1_3\n53  {\n54  \n55      //\
          \ Legal IDL Identifier characters (1 = legal). Note that '.' (2E) is marked\
          \ as legal even though it is not legal in\n56      // IDL. This allows us\
          \ to treat a fully qualified Java name with '.' package separators uniformly,\
          \ and is safe"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3.java
          kind: Class
          name: RepositoryId_1_3
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "37  import java.util.Hashtable;\n38  \n39  import javax.rmi.CORBA.Util;\n\
          40  \n41  import org.jboss.com.sun.corba.se.impl.io.ObjectStreamClass;\n\
          42  import org.jboss.com.sun.corba.se.impl.util.IdentityHashtable;\n43 \
          \ import org.jboss.com.sun.corba.se.impl.util.JDKBridge;\n44  import org.jboss.com.sun.corba.se.impl.util.PackagePrefixChecker;\n\
          45  import org.jboss.com.sun.corba.se.impl.util.Utility;\n46  import org.omg.CORBA.portable.IDLEntity;\n\
          47  import org.omg.CORBA.portable.ValueBase;\n48  \n49  // keeping the original\
          \ RepositoryId class that was shipped in\n50  // JDK 1.3.  It has interoperability\
          \ bugs\n51  \n52  public class RepositoryId_1_3\n53  {\n54  \n55      //\
          \ Legal IDL Identifier characters (1 = legal). Note that '.' (2E) is marked\
          \ as legal even though it is not legal in\n56      // IDL. This allows us\
          \ to treat a fully qualified Java name with '.' package separators uniformly,\
          \ and is safe\n57      // because that is the only legal use of '.' in a\
          \ Java name."
        lineNumber: 47
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3.java
          kind: Class
          name: RepositoryId_1_3
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: '812      {

          813          try

          814          {

          815              Class<?> helperClazz = Utility.loadClassForClass(clazz.getName()
          + "Helper", null, clazz.getClassLoader(),

          816                      clazz, clazz.getClassLoader());

          817              Method idMethod = helperClazz.getDeclaredMethod("id", kNoParamTypes);

          818              return (String) idMethod.invoke(null, kNoArgs);

          819          }

          820          catch (java.lang.ClassNotFoundException cnfe)

          821          {

          822              throw new org.omg.CORBA.MARSHAL(cnfe.toString());

          823          }

          824          catch (java.lang.NoSuchMethodException nsme)

          825          {

          826              throw new org.omg.CORBA.MARSHAL(nsme.toString());

          827          }

          828          catch (java.lang.reflect.InvocationTargetException ite)

          829          {

          830              throw new org.omg.CORBA.MARSHAL(ite.toString());

          831          }

          832          catch (java.lang.IllegalAccessException iae)'
        lineNumber: 822
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3.java
          kind: Method
          name: getIdFromHelper
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: '816                      clazz, clazz.getClassLoader());

          817              Method idMethod = helperClazz.getDeclaredMethod("id", kNoParamTypes);

          818              return (String) idMethod.invoke(null, kNoArgs);

          819          }

          820          catch (java.lang.ClassNotFoundException cnfe)

          821          {

          822              throw new org.omg.CORBA.MARSHAL(cnfe.toString());

          823          }

          824          catch (java.lang.NoSuchMethodException nsme)

          825          {

          826              throw new org.omg.CORBA.MARSHAL(nsme.toString());

          827          }

          828          catch (java.lang.reflect.InvocationTargetException ite)

          829          {

          830              throw new org.omg.CORBA.MARSHAL(ite.toString());

          831          }

          832          catch (java.lang.IllegalAccessException iae)

          833          {

          834              throw new org.omg.CORBA.MARSHAL(iae.toString());

          835          }

          836      }'
        lineNumber: 826
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3.java
          kind: Method
          name: getIdFromHelper
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "820          catch (java.lang.ClassNotFoundException cnfe)\n821\
          \          {\n822              throw new org.omg.CORBA.MARSHAL(cnfe.toString());\n\
          823          }\n824          catch (java.lang.NoSuchMethodException nsme)\n\
          825          {\n826              throw new org.omg.CORBA.MARSHAL(nsme.toString());\n\
          827          }\n828          catch (java.lang.reflect.InvocationTargetException\
          \ ite)\n829          {\n830              throw new org.omg.CORBA.MARSHAL(ite.toString());\n\
          831          }\n832          catch (java.lang.IllegalAccessException iae)\n\
          833          {\n834              throw new org.omg.CORBA.MARSHAL(iae.toString());\n\
          835          }\n836      }\n837  \n838      /**\n839       * Createa a repository\
          \ ID for the type if it is either a java type or an IDL type.\n840     \
          \  * "
        lineNumber: 830
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3.java
          kind: Method
          name: getIdFromHelper
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "824          catch (java.lang.NoSuchMethodException nsme)\n825\
          \          {\n826              throw new org.omg.CORBA.MARSHAL(nsme.toString());\n\
          827          }\n828          catch (java.lang.reflect.InvocationTargetException\
          \ ite)\n829          {\n830              throw new org.omg.CORBA.MARSHAL(ite.toString());\n\
          831          }\n832          catch (java.lang.IllegalAccessException iae)\n\
          833          {\n834              throw new org.omg.CORBA.MARSHAL(iae.toString());\n\
          835          }\n836      }\n837  \n838      /**\n839       * Createa a repository\
          \ ID for the type if it is either a java type or an IDL type.\n840     \
          \  * \n841       * @param type\n842       *            The type to create\
          \ rep. id for\n843       * @return The rep. id.\n844       **/"
        lineNumber: 834
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3.java
          kind: Method
          name: getIdFromHelper
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "865          catch (org.jboss.com.sun.corba.se.impl.io.TypeMismatchException\
          \ e)\n866          {\n867              return null;\n868          }\n869\
          \  \n870      }\n871  \n872      public static boolean isAbstractBase(Class<?>\
          \ clazz)\n873      {\n874          return (clazz.isInterface() && IDLEntity.class.isAssignableFrom(clazz)\n\
          875                  && (!ValueBase.class.isAssignableFrom(clazz)) && (!org.omg.CORBA.Object.class.isAssignableFrom(clazz)));\n\
          876  \n877      }\n878  \n879      /**\n880       * Convert strings with\
          \ illegal IDL identifier characters.\n881       * <p>\n882       * Section\
          \ 5.5.7 of OBV spec.\n883       */\n884      private static String convertToISOLatin1(String\
          \ name)\n885      {"
        lineNumber: 875
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3.java
          kind: Method
          name: isAbstractBase
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "31  import java.lang.reflect.Method;\n32  import java.net.MalformedURLException;\n\
          33  import java.util.Hashtable;\n34  \n35  import javax.rmi.CORBA.Util;\n\
          36  \n37  import org.jboss.com.sun.corba.se.impl.util.IdentityHashtable;\n\
          38  import org.jboss.com.sun.corba.se.impl.util.JDKBridge;\n39  import org.jboss.com.sun.corba.se.impl.util.PackagePrefixChecker;\n\
          40  import org.jboss.com.sun.corba.se.impl.util.Utility;\n41  import org.omg.CORBA.portable.IDLEntity;\n\
          42  import org.omg.CORBA.portable.ValueBase;\n43  \n44  /**\n45   * Because\
          \ all methods in RepositoryId are static, we have to duplicate all of this\
          \ code, freezing it in its 1.3.1 form\n46   * for backwards compatibility.\n\
          47   * \n48   * For security reasons, we can't expose enough of io/ObjectStreamClass,\
          \ so it has to be duplicated in orbutil.\n49   */\n50  public class RepositoryId_1_3_1\n\
          51  {"
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3_1.java
          kind: Class
          name: RepositoryId_1_3_1
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "32  import java.net.MalformedURLException;\n33  import java.util.Hashtable;\n\
          34  \n35  import javax.rmi.CORBA.Util;\n36  \n37  import org.jboss.com.sun.corba.se.impl.util.IdentityHashtable;\n\
          38  import org.jboss.com.sun.corba.se.impl.util.JDKBridge;\n39  import org.jboss.com.sun.corba.se.impl.util.PackagePrefixChecker;\n\
          40  import org.jboss.com.sun.corba.se.impl.util.Utility;\n41  import org.omg.CORBA.portable.IDLEntity;\n\
          42  import org.omg.CORBA.portable.ValueBase;\n43  \n44  /**\n45   * Because\
          \ all methods in RepositoryId are static, we have to duplicate all of this\
          \ code, freezing it in its 1.3.1 form\n46   * for backwards compatibility.\n\
          47   * \n48   * For security reasons, we can't expose enough of io/ObjectStreamClass,\
          \ so it has to be duplicated in orbutil.\n49   */\n50  public class RepositoryId_1_3_1\n\
          51  {\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3_1.java
          kind: Class
          name: RepositoryId_1_3_1
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "326              (byte) '6', (byte) '7', (byte) '8', (byte) '9',\
          \ (byte) 'A', (byte) 'B', (byte) 'C', (byte) 'D', (byte) 'E',\n327     \
          \         (byte) 'F',};\n328  \n329      // bug fix for 4328952; to eliminate\
          \ possibility of overriding this\n330      // in a subclass.\n331      public\
          \ static final RepositoryIdCache_1_3_1 cache = new RepositoryIdCache_1_3_1();\n\
          332  \n333      // Interface Rep ID Strings\n334      public static final\
          \ String kjava_rmi_Remote = createForAnyType(java.rmi.Remote.class);\n335\
          \  \n336      public static final String korg_omg_CORBA_Object = createForAnyType(org.omg.CORBA.Object.class);\n\
          337  \n338      // Dummy arguments for getIdFromHelper method\n339     \
          \ public static final Class<?> kNoParamTypes[] = {};\n340  \n341      public\
          \ static final Object kNoArgs[] = {};\n342  \n343      // To create a RepositoryID,\
          \ use code similar to the following:\n344      // RepositoryId.cache.getId(\
          \ id );\n345  \n346      RepositoryId_1_3_1()"
        lineNumber: 336
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3_1.java
          kind: Constant
          name: korg_omg_CORBA_Object
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: '902      {

          903          try

          904          {

          905              Class<?> helperClazz = Utility.loadClassForClass(clazz.getName()
          + "Helper", null, clazz.getClassLoader(),

          906                      clazz, clazz.getClassLoader());

          907              Method idMethod = helperClazz.getDeclaredMethod("id", kNoParamTypes);

          908              return (String) idMethod.invoke(null, kNoArgs);

          909          }

          910          catch (java.lang.ClassNotFoundException cnfe)

          911          {

          912              throw new org.omg.CORBA.MARSHAL(cnfe.toString());

          913          }

          914          catch (java.lang.NoSuchMethodException nsme)

          915          {

          916              throw new org.omg.CORBA.MARSHAL(nsme.toString());

          917          }

          918          catch (java.lang.reflect.InvocationTargetException ite)

          919          {

          920              throw new org.omg.CORBA.MARSHAL(ite.toString());

          921          }

          922          catch (java.lang.IllegalAccessException iae)'
        lineNumber: 912
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3_1.java
          kind: Method
          name: getIdFromHelper
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: '906                      clazz, clazz.getClassLoader());

          907              Method idMethod = helperClazz.getDeclaredMethod("id", kNoParamTypes);

          908              return (String) idMethod.invoke(null, kNoArgs);

          909          }

          910          catch (java.lang.ClassNotFoundException cnfe)

          911          {

          912              throw new org.omg.CORBA.MARSHAL(cnfe.toString());

          913          }

          914          catch (java.lang.NoSuchMethodException nsme)

          915          {

          916              throw new org.omg.CORBA.MARSHAL(nsme.toString());

          917          }

          918          catch (java.lang.reflect.InvocationTargetException ite)

          919          {

          920              throw new org.omg.CORBA.MARSHAL(ite.toString());

          921          }

          922          catch (java.lang.IllegalAccessException iae)

          923          {

          924              throw new org.omg.CORBA.MARSHAL(iae.toString());

          925          }

          926      }'
        lineNumber: 916
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3_1.java
          kind: Method
          name: getIdFromHelper
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "910          catch (java.lang.ClassNotFoundException cnfe)\n911\
          \          {\n912              throw new org.omg.CORBA.MARSHAL(cnfe.toString());\n\
          913          }\n914          catch (java.lang.NoSuchMethodException nsme)\n\
          915          {\n916              throw new org.omg.CORBA.MARSHAL(nsme.toString());\n\
          917          }\n918          catch (java.lang.reflect.InvocationTargetException\
          \ ite)\n919          {\n920              throw new org.omg.CORBA.MARSHAL(ite.toString());\n\
          921          }\n922          catch (java.lang.IllegalAccessException iae)\n\
          923          {\n924              throw new org.omg.CORBA.MARSHAL(iae.toString());\n\
          925          }\n926      }\n927  \n928      /**\n929       * Createa a repository\
          \ ID for the type if it is either a java type or an IDL type.\n930     \
          \  * "
        lineNumber: 920
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3_1.java
          kind: Method
          name: getIdFromHelper
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "914          catch (java.lang.NoSuchMethodException nsme)\n915\
          \          {\n916              throw new org.omg.CORBA.MARSHAL(nsme.toString());\n\
          917          }\n918          catch (java.lang.reflect.InvocationTargetException\
          \ ite)\n919          {\n920              throw new org.omg.CORBA.MARSHAL(ite.toString());\n\
          921          }\n922          catch (java.lang.IllegalAccessException iae)\n\
          923          {\n924              throw new org.omg.CORBA.MARSHAL(iae.toString());\n\
          925          }\n926      }\n927  \n928      /**\n929       * Createa a repository\
          \ ID for the type if it is either a java type or an IDL type.\n930     \
          \  * \n931       * @param type\n932       *            The type to create\
          \ rep. id for\n933       * @return The rep. id.\n934       **/"
        lineNumber: 924
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3_1.java
          kind: Method
          name: getIdFromHelper
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "955          catch (org.jboss.com.sun.corba.se.impl.io.TypeMismatchException\
          \ e)\n956          {\n957              return null;\n958          }\n959\
          \  \n960      }\n961  \n962      public static boolean isAbstractBase(Class<?>\
          \ clazz)\n963      {\n964          return (clazz.isInterface() && IDLEntity.class.isAssignableFrom(clazz)\n\
          965                  && (!ValueBase.class.isAssignableFrom(clazz)) && (!org.omg.CORBA.Object.class.isAssignableFrom(clazz)));\n\
          966  \n967      }\n968  \n969      public static boolean isAnyRequired(Class<?>\
          \ clazz)\n970      {\n971          return ((clazz == java.lang.Object.class)\
          \ || (clazz == java.io.Serializable.class) || (clazz == java.io.Externalizable.class));\n\
          972      }\n973  \n974      public static long fromHex(String hexNumber)\n\
          975      {"
        lineNumber: 965
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/RepositoryId_1_3_1.java
          kind: Method
          name: isAbstractBase
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "188      {\n189          RepositoryId_1_3 repId = RepositoryId_1_3.cache.getId(id);\n\
          190          return repId.isSequence();\n191      }\n192  \n193      /**\n\
          194       * Preserves the incorrect 1.3 behavior which truncates Java chars\
          \ in arrays to 8-bit CORBA chars. Bug 4367783. This\n195       * enables\
          \ us to continue interoperating with our legacy ORBs. If this goes into\
          \ Ladybird, then Ladybird and Kestrel\n196       * will interoperate as\
          \ long as people don't use chars greater than 8-bits.\n197       */\n198\
          \      protected void writeCharArray(org.omg.CORBA_2_3.portable.OutputStream\
          \ out, char[] array, int offset, int length)\n199      {\n200          out.write_char_array(array,\
          \ offset, length);\n201      }\n202  \n203      /**\n204       * Preserves\
          \ the incorrect 1.3 behavior which truncates Java chars in arrays to 8-bit\
          \ CORBA chars. Bug 4367783. This\n205       * enables us to continue interoperating\
          \ with our legacy ORBs. If this goes into Ladybird, then Ladybird and Kestrel\n\
          206       * will interoperate as long as people don't use chars greater\
          \ than 8-bits.\n207       */\n208      protected void readCharArray(org.omg.CORBA_2_3.portable.InputStream\
          \ in, char[] array, int offset, int length)"
        lineNumber: 198
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ValueHandlerImpl_1_3.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ValueHandlerImpl_1_3.java
          kind: Method
          name: writeCharArray
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "198      protected void writeCharArray(org.omg.CORBA_2_3.portable.OutputStream\
          \ out, char[] array, int offset, int length)\n199      {\n200          out.write_char_array(array,\
          \ offset, length);\n201      }\n202  \n203      /**\n204       * Preserves\
          \ the incorrect 1.3 behavior which truncates Java chars in arrays to 8-bit\
          \ CORBA chars. Bug 4367783. This\n205       * enables us to continue interoperating\
          \ with our legacy ORBs. If this goes into Ladybird, then Ladybird and Kestrel\n\
          206       * will interoperate as long as people don't use chars greater\
          \ than 8-bits.\n207       */\n208      protected void readCharArray(org.omg.CORBA_2_3.portable.InputStream\
          \ in, char[] array, int offset, int length)\n209      {\n210          in.read_char_array(array,\
          \ offset, length);\n211      }\n212  \n213      protected final String getOutputStreamClassName()\n\
          214      {\n215          return \"org.jboss.com.sun.corba.se.impl.orbutil.IIOPOutputStream_1_3\"\
          ;\n216      }\n217  \n218      protected final String getInputStreamClassName()"
        lineNumber: 208
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ValueHandlerImpl_1_3.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ValueHandlerImpl_1_3.java
          kind: Method
          name: readCharArray
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "26   * Licensed Materials - Property of IBM\n27   * RMI-IIOP v1.0\n\
          28   * Copyright IBM Corp. 1998 1999  All Rights Reserved\n29   *\n30  \
          \ */\n31  \n32  package org.jboss.com.sun.corba.se.impl.orbutil;\n33  \n\
          34  import java.io.IOException;\n35  \n36  import org.omg.CORBA.TCKind;\n\
          37  \n38  /**\n39   * This class overrides behavior of our current ValueHandlerImpl\
          \ to provide backwards compatibility with JDK 1.3.0.\n40   */\n41  public\
          \ class ValueHandlerImpl_1_3 extends org.jboss.com.sun.corba.se.impl.io.ValueHandlerImpl\n\
          42  {\n43  \n44      public ValueHandlerImpl_1_3()\n45      {\n46      \
          \    super();"
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ValueHandlerImpl_1_3.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ValueHandlerImpl_1_3.java
          kind: Class
          name: ValueHandlerImpl_1_3
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "52      }\n53  \n54      /**\n55       * Writes the value to the\
          \ stream using java semantics.\n56       * \n57       * @param out\n58 \
          \      *            The stream to write the value to\n59       * @param\
          \ value\n60       *            The value to be written to the stream\n61\
          \       **/\n62      public void writeValue(org.omg.CORBA.portable.OutputStream\
          \ _out, java.io.Serializable value)\n63      {\n64          super.writeValue(_out,\
          \ value);\n65      }\n66  \n67      /**\n68       * Reads a value from the\
          \ stream using java semantics.\n69       * \n70       * @param in\n71  \
          \     *            The stream to read the value from\n72       * @param\
          \ clazz"
        lineNumber: 62
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ValueHandlerImpl_1_3.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ValueHandlerImpl_1_3.java
          kind: Method
          name: writeValue
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "67      /**\n68       * Reads a value from the stream using java\
          \ semantics.\n69       * \n70       * @param in\n71       *            The\
          \ stream to read the value from\n72       * @param clazz\n73       *   \
          \         The type of the value to be read in\n74       * @param sender\n\
          75       *            The sending context runtime\n76       **/\n77    \
          \  public java.io.Serializable readValue(org.omg.CORBA.portable.InputStream\
          \ _in, int offset, Class<?> clazz,\n78              String repositoryID,\
          \ org.omg.SendingContext.RunTime _sender)\n79      {\n80          return\
          \ super.readValue(_in, offset, clazz, repositoryID, _sender);\n81      }\n\
          82  \n83      /**\n84       * Returns the repository ID for the given RMI\
          \ value Class.\n85       * \n86       * @param clz\n87       *         \
          \   The class to return a repository ID for."
        lineNumber: 77
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ValueHandlerImpl_1_3.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ValueHandlerImpl_1_3.java
          kind: Method
          name: readValue
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "17   * You should have received a copy of the GNU General Public\
          \ License version\n18   * 2 along with this work; if not, write to the Free\
          \ Software Foundation,\n19   * Inc., 51 Franklin St, Fifth Floor, Boston,\
          \ MA 02110-1301 USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway,\
          \ Redwood Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need\
          \ additional information or have any\n23   * questions.\n24   */\n25  package\
          \ org.jboss.com.sun.corba.se.impl.orbutil;\n26  \n27  import org.omg.CORBA.TCKind;\n\
          28  \n29  /**\n30   * This class overrides behavior of our current ValueHandlerImpl\
          \ to provide backwards compatibility with JDK 1.3.1.\n31   */\n32  public\
          \ class ValueHandlerImpl_1_3_1 extends org.jboss.com.sun.corba.se.impl.io.ValueHandlerImpl\n\
          33  {\n34      public ValueHandlerImpl_1_3_1()\n35      {\n36      }\n37\
          \  "
        lineNumber: 27
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ValueHandlerImpl_1_3_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/ValueHandlerImpl_1_3_1.java
          kind: Class
          name: ValueHandlerImpl_1_3_1
          package: org.jboss.com.sun.corba.se.impl.orbutil
      - codeSnip: "32   and everyone contributing, testing, and using this code.\n\
          33  \n34   History:\n35   Date       Who                What\n36   11Jun1998\
          \  dl               Create public version\n37   */\n38  \n39  package org.jboss.com.sun.corba.se.impl.orbutil.concurrent;\n\
          40  \n41  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n42\
          \  import org.omg.CORBA.INTERNAL;\n43  \n44  public class ReentrantMutex\
          \ implements Sync\n45  {\n46  \n47      /** The thread holding the lock\
          \ **/\n48      protected Thread holder_ = null;\n49  \n50      /** number\
          \ of times thread has acquired the lock **/\n51      protected int counter_\
          \ = 0;\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/concurrent/ReentrantMutex.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/concurrent/ReentrantMutex.java
          kind: Class
          name: ReentrantMutex
          package: org.jboss.com.sun.corba.se.impl.orbutil.concurrent
      - codeSnip: "31  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n\
          32  import org.jboss.com.sun.corba.se.spi.orbutil.fsm.Action;\n33  import\
          \ org.jboss.com.sun.corba.se.spi.orbutil.fsm.ActionBase;\n34  import org.jboss.com.sun.corba.se.spi.orbutil.fsm.FSM;\n\
          35  import org.jboss.com.sun.corba.se.spi.orbutil.fsm.FSMImpl;\n36  import\
          \ org.jboss.com.sun.corba.se.spi.orbutil.fsm.Guard;\n37  import org.jboss.com.sun.corba.se.spi.orbutil.fsm.Input;\n\
          38  import org.jboss.com.sun.corba.se.spi.orbutil.fsm.State;\n39  import\
          \ org.jboss.com.sun.corba.se.spi.orbutil.fsm.StateEngine;\n40  import org.jboss.com.sun.corba.se.spi.orbutil.fsm.StateImpl;\n\
          41  import org.omg.CORBA.INTERNAL;\n42  \n43  /**\n44   * Encodes the state\
          \ transition function for a finite state machine.\n45   * \n46   * @author\
          \ Ken Cavanaugh\n47   */\n48  public class StateEngineImpl implements StateEngine\n\
          49  {\n50      // An action that does nothing at all.\n51      private static\
          \ Action emptyAction = new ActionBase(\"Empty\")"
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/fsm/StateEngineImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/orbutil/fsm/StateEngineImpl.java
          kind: Class
          name: ''
          package: org.jboss.com.sun.corba.se.impl.orbutil.fsm
      - codeSnip: "251  \n252      private static ReaderWriter corbaObjectRW = new\
          \ ReaderWriterBase(\"org.omg.CORBA.Object\")\n253      {\n254          public\
          \ Object read(InputStream is)\n255          {\n256              return is.read_Object();\n\
          257          }\n258  \n259          public void write(OutputStream os, Object\
          \ value)\n260          {\n261              os.write_Object((org.omg.CORBA.Object)\
          \ value);\n262          }\n263      };\n264  \n265      private static ReaderWriter\
          \ anyRW = new ReaderWriterBase(\"any\")\n266      {\n267          public\
          \ Object read(InputStream is)\n268          {\n269              return Util.readAny(is);\n\
          270          }\n271  "
        lineNumber: 261
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicMethodMarshallerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicMethodMarshallerImpl.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "28  import java.io.Externalizable;\n29  import java.io.Serializable;\n\
          30  import java.lang.reflect.Method;\n31  import java.rmi.RemoteException;\n\
          32  \n33  import javax.rmi.PortableRemoteObject;\n34  import javax.rmi.CORBA.Util;\n\
          35  \n36  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicMethodMarshaller;\n\
          38  import org.omg.CORBA.portable.ApplicationException;\n39  import org.omg.CORBA.portable.IDLEntity;\n\
          40  import org.omg.CORBA_2_3.portable.InputStream;\n41  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          42  \n43  public class DynamicMethodMarshallerImpl implements DynamicMethodMarshaller\n\
          44  {\n45      Method method;\n46  \n47      ExceptionHandler ehandler;\n\
          48  "
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicMethodMarshallerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicMethodMarshallerImpl.java
          kind: Class
          name: ''
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "29  import java.io.Serializable;\n30  import java.lang.reflect.Method;\n\
          31  import java.rmi.RemoteException;\n32  \n33  import javax.rmi.PortableRemoteObject;\n\
          34  import javax.rmi.CORBA.Util;\n35  \n36  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicMethodMarshaller;\n\
          38  import org.omg.CORBA.portable.ApplicationException;\n39  import org.omg.CORBA.portable.IDLEntity;\n\
          40  import org.omg.CORBA_2_3.portable.InputStream;\n41  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          42  \n43  public class DynamicMethodMarshallerImpl implements DynamicMethodMarshaller\n\
          44  {\n45      Method method;\n46  \n47      ExceptionHandler ehandler;\n\
          48  \n49      boolean hasArguments = true;"
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicMethodMarshallerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicMethodMarshallerImpl.java
          kind: Class
          name: ''
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "30  import java.lang.reflect.Method;\n31  import java.rmi.RemoteException;\n\
          32  \n33  import javax.rmi.PortableRemoteObject;\n34  import javax.rmi.CORBA.Util;\n\
          35  \n36  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicMethodMarshaller;\n\
          38  import org.omg.CORBA.portable.ApplicationException;\n39  import org.omg.CORBA.portable.IDLEntity;\n\
          40  import org.omg.CORBA_2_3.portable.InputStream;\n41  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          42  \n43  public class DynamicMethodMarshallerImpl implements DynamicMethodMarshaller\n\
          44  {\n45      Method method;\n46  \n47      ExceptionHandler ehandler;\n\
          48  \n49      boolean hasArguments = true;\n50  "
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicMethodMarshallerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicMethodMarshallerImpl.java
          kind: Class
          name: ''
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "31  import java.rmi.RemoteException;\n32  \n33  import javax.rmi.PortableRemoteObject;\n\
          34  import javax.rmi.CORBA.Util;\n35  \n36  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicMethodMarshaller;\n\
          38  import org.omg.CORBA.portable.ApplicationException;\n39  import org.omg.CORBA.portable.IDLEntity;\n\
          40  import org.omg.CORBA_2_3.portable.InputStream;\n41  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          42  \n43  public class DynamicMethodMarshallerImpl implements DynamicMethodMarshaller\n\
          44  {\n45      Method method;\n46  \n47      ExceptionHandler ehandler;\n\
          48  \n49      boolean hasArguments = true;\n50  \n51      boolean hasVoidResult\
          \ = true;"
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicMethodMarshallerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicMethodMarshallerImpl.java
          kind: Class
          name: ''
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "312                  public Object read(InputStream is)\n313  \
          \                {\n314                      return PortableRemoteObject.narrow(is.read_Object(),\
          \ cls);\n315                  }\n316  \n317                  public void\
          \ write(OutputStream os, Object value)\n318                  {\n319    \
          \                  Util.writeRemoteObject(os, value);\n320             \
          \     }\n321              };\n322          else if (cls.equals(org.omg.CORBA.Object.class))\n\
          323              return corbaObjectRW;\n324          else if (org.omg.CORBA.Object.class.isAssignableFrom(cls))\n\
          325              return new ReaderWriterBase(\"org.omg.CORBA.Object(\" +\
          \ cls.getName() + \")\")\n326              {\n327                  public\
          \ Object read(InputStream is)\n328                  {\n329             \
          \         return is.read_Object(cls);\n330                  }\n331  \n332\
          \                  public void write(OutputStream os, Object value)"
        lineNumber: 322
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicMethodMarshallerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicMethodMarshallerImpl.java
          kind: Method
          name: makeReaderWriter
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "314                      return PortableRemoteObject.narrow(is.read_Object(),\
          \ cls);\n315                  }\n316  \n317                  public void\
          \ write(OutputStream os, Object value)\n318                  {\n319    \
          \                  Util.writeRemoteObject(os, value);\n320             \
          \     }\n321              };\n322          else if (cls.equals(org.omg.CORBA.Object.class))\n\
          323              return corbaObjectRW;\n324          else if (org.omg.CORBA.Object.class.isAssignableFrom(cls))\n\
          325              return new ReaderWriterBase(\"org.omg.CORBA.Object(\" +\
          \ cls.getName() + \")\")\n326              {\n327                  public\
          \ Object read(InputStream is)\n328                  {\n329             \
          \         return is.read_Object(cls);\n330                  }\n331  \n332\
          \                  public void write(OutputStream os, Object value)\n333\
          \                  {\n334                      os.write_Object((org.omg.CORBA.Object)\
          \ value);"
        lineNumber: 324
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicMethodMarshallerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicMethodMarshallerImpl.java
          kind: Method
          name: makeReaderWriter
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "324          else if (org.omg.CORBA.Object.class.isAssignableFrom(cls))\n\
          325              return new ReaderWriterBase(\"org.omg.CORBA.Object(\" +\
          \ cls.getName() + \")\")\n326              {\n327                  public\
          \ Object read(InputStream is)\n328                  {\n329             \
          \         return is.read_Object(cls);\n330                  }\n331  \n332\
          \                  public void write(OutputStream os, Object value)\n333\
          \                  {\n334                      os.write_Object((org.omg.CORBA.Object)\
          \ value);\n335                  }\n336              };\n337          else\
          \ if (isAnyClass(cls))\n338              return anyRW;\n339          else\
          \ if (isAbstractInterface(cls))\n340              return abstractInterfaceRW;\n\
          341  \n342          // For anything else, just read it as a value type.\n\
          343          return new ReaderWriterBase(\"value(\" + cls.getName() + \"\
          )\")\n344          {"
        lineNumber: 334
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicMethodMarshallerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicMethodMarshallerImpl.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "29  import java.io.ObjectInputStream;\n30  import java.io.ObjectOutputStream;\n\
          31  import java.io.Serializable;\n32  import java.rmi.RemoteException;\n\
          33  \n34  import org.jboss.com.sun.corba.se.impl.ior.StubIORImpl;\n35  import\
          \ org.jboss.com.sun.corba.se.impl.util.JDKBridge;\n36  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n\
          37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicStub;\n\
          38  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          39  import org.omg.CORBA.ORB;\n40  import org.omg.CORBA.portable.Delegate;\n\
          41  import org.omg.CORBA.portable.OutputStream;\n42  import org.omg.CORBA_2_3.portable.ObjectImpl;\n\
          43  \n44  // XXX Do we need _get_codebase?\n45  public class DynamicStubImpl\
          \ extends ObjectImpl implements DynamicStub, Serializable\n46  {\n47   \
          \   private static final long serialVersionUID = 4852612040012087675L;\n\
          48  \n49      private String[] typeIds;"
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicStubImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicStubImpl.java
          kind: Class
          name: DynamicStubImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "30  import java.io.ObjectOutputStream;\n31  import java.io.Serializable;\n\
          32  import java.rmi.RemoteException;\n33  \n34  import org.jboss.com.sun.corba.se.impl.ior.StubIORImpl;\n\
          35  import org.jboss.com.sun.corba.se.impl.util.JDKBridge;\n36  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n\
          37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicStub;\n\
          38  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          39  import org.omg.CORBA.ORB;\n40  import org.omg.CORBA.portable.Delegate;\n\
          41  import org.omg.CORBA.portable.OutputStream;\n42  import org.omg.CORBA_2_3.portable.ObjectImpl;\n\
          43  \n44  // XXX Do we need _get_codebase?\n45  public class DynamicStubImpl\
          \ extends ObjectImpl implements DynamicStub, Serializable\n46  {\n47   \
          \   private static final long serialVersionUID = 4852612040012087675L;\n\
          48  \n49      private String[] typeIds;\n50  "
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicStubImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicStubImpl.java
          kind: Class
          name: DynamicStubImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "31  import java.io.Serializable;\n32  import java.rmi.RemoteException;\n\
          33  \n34  import org.jboss.com.sun.corba.se.impl.ior.StubIORImpl;\n35  import\
          \ org.jboss.com.sun.corba.se.impl.util.JDKBridge;\n36  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n\
          37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicStub;\n\
          38  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          39  import org.omg.CORBA.ORB;\n40  import org.omg.CORBA.portable.Delegate;\n\
          41  import org.omg.CORBA.portable.OutputStream;\n42  import org.omg.CORBA_2_3.portable.ObjectImpl;\n\
          43  \n44  // XXX Do we need _get_codebase?\n45  public class DynamicStubImpl\
          \ extends ObjectImpl implements DynamicStub, Serializable\n46  {\n47   \
          \   private static final long serialVersionUID = 4852612040012087675L;\n\
          48  \n49      private String[] typeIds;\n50  \n51      private StubIORImpl\
          \ ior;"
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicStubImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicStubImpl.java
          kind: Class
          name: DynamicStubImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "32  import java.rmi.RemoteException;\n33  \n34  import org.jboss.com.sun.corba.se.impl.ior.StubIORImpl;\n\
          35  import org.jboss.com.sun.corba.se.impl.util.JDKBridge;\n36  import org.jboss.com.sun.corba.se.impl.util.RepositoryId;\n\
          37  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicStub;\n\
          38  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          39  import org.omg.CORBA.ORB;\n40  import org.omg.CORBA.portable.Delegate;\n\
          41  import org.omg.CORBA.portable.OutputStream;\n42  import org.omg.CORBA_2_3.portable.ObjectImpl;\n\
          43  \n44  // XXX Do we need _get_codebase?\n45  public class DynamicStubImpl\
          \ extends ObjectImpl implements DynamicStub, Serializable\n46  {\n47   \
          \   private static final long serialVersionUID = 4852612040012087675L;\n\
          48  \n49      private String[] typeIds;\n50  \n51      private StubIORImpl\
          \ ior;\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicStubImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/DynamicStubImpl.java
          kind: Class
          name: DynamicStubImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.presentation.rmi;\n\
          27  \n28  import java.lang.reflect.Method;\n29  import java.rmi.RemoteException;\n\
          30  import java.rmi.UnexpectedException;\n31  \n32  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          33  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n34 \
          \ import org.omg.CORBA.UserException;\n35  import org.omg.CORBA.portable.ApplicationException;\n\
          36  import org.omg.CORBA_2_3.portable.InputStream;\n37  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          38  \n39  public class ExceptionHandlerImpl implements ExceptionHandler\n\
          40  {\n41      private ExceptionRW[] rws;\n42  \n43      private final ORBUtilSystemException\
          \ wrapper;\n44  "
        lineNumber: 34
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ExceptionHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ExceptionHandlerImpl.java
          kind: Class
          name: ExceptionRWIDLImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "25  \n26  package org.jboss.com.sun.corba.se.impl.presentation.rmi;\n\
          27  \n28  import java.lang.reflect.Method;\n29  import java.rmi.RemoteException;\n\
          30  import java.rmi.UnexpectedException;\n31  \n32  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          33  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n34 \
          \ import org.omg.CORBA.UserException;\n35  import org.omg.CORBA.portable.ApplicationException;\n\
          36  import org.omg.CORBA_2_3.portable.InputStream;\n37  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          38  \n39  public class ExceptionHandlerImpl implements ExceptionHandler\n\
          40  {\n41      private ExceptionRW[] rws;\n42  \n43      private final ORBUtilSystemException\
          \ wrapper;\n44  \n45      // /////////////////////////////////////////////////////////////////////////////"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ExceptionHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ExceptionHandlerImpl.java
          kind: Class
          name: ExceptionRWIDLImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "26  package org.jboss.com.sun.corba.se.impl.presentation.rmi;\n\
          27  \n28  import java.lang.reflect.Method;\n29  import java.rmi.RemoteException;\n\
          30  import java.rmi.UnexpectedException;\n31  \n32  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          33  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n34 \
          \ import org.omg.CORBA.UserException;\n35  import org.omg.CORBA.portable.ApplicationException;\n\
          36  import org.omg.CORBA_2_3.portable.InputStream;\n37  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          38  \n39  public class ExceptionHandlerImpl implements ExceptionHandler\n\
          40  {\n41      private ExceptionRW[] rws;\n42  \n43      private final ORBUtilSystemException\
          \ wrapper;\n44  \n45      // /////////////////////////////////////////////////////////////////////////////\n\
          46      // ExceptionRW interface and implementations."
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ExceptionHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ExceptionHandlerImpl.java
          kind: Class
          name: ExceptionRWIDLImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "27  \n28  import java.lang.reflect.Method;\n29  import java.rmi.RemoteException;\n\
          30  import java.rmi.UnexpectedException;\n31  \n32  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          33  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n34 \
          \ import org.omg.CORBA.UserException;\n35  import org.omg.CORBA.portable.ApplicationException;\n\
          36  import org.omg.CORBA_2_3.portable.InputStream;\n37  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          38  \n39  public class ExceptionHandlerImpl implements ExceptionHandler\n\
          40  {\n41      private ExceptionRW[] rws;\n42  \n43      private final ORBUtilSystemException\
          \ wrapper;\n44  \n45      // /////////////////////////////////////////////////////////////////////////////\n\
          46      // ExceptionRW interface and implementations.\n47      // Used to\
          \ read and write exceptions."
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ExceptionHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ExceptionHandlerImpl.java
          kind: Class
          name: ExceptionRWIDLImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "196      /**\n197       * Section 1.2.7\n198       */\n199    \
          \  public boolean isObjectReference(Class<?> c)\n200      {\n201       \
          \   if (c == null)\n202          {\n203              throw new IllegalArgumentException();\n\
          204          }\n205  \n206          return (c.isInterface() && org.omg.CORBA.Object.class.isAssignableFrom(c));\n\
          207      }\n208  \n209      /**\n210       * Section 1.2.8\n211       */\n\
          212      public boolean isEntity(Class<?> c)\n213      {\n214          if\
          \ (c == null)\n215          {\n216              throw new IllegalArgumentException();"
        lineNumber: 206
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/IDLTypesUtil.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/IDLTypesUtil.java
          kind: Method
          name: isObjectReference
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "210       * Section 1.2.8\n211       */\n212      public boolean\
          \ isEntity(Class<?> c)\n213      {\n214          if (c == null)\n215   \
          \       {\n216              throw new IllegalArgumentException();\n217 \
          \         }\n218  \n219          Class<?> superClass = c.getSuperclass();\n\
          220          return (!c.isInterface() && (superClass != null) && (org.omg.CORBA.portable.IDLEntity.class.isAssignableFrom(c)));\n\
          221      }\n222  \n223      /**\n224       * Return true if given method\
          \ is legal property accessor as defined in Section 1.3.4.3 of Java2IDL spec.\n\
          225       */\n226      public boolean isPropertyAccessorMethod(Method m,\
          \ Class<?> c)\n227      {\n228  \n229          String methodName = m.getName();\n\
          230          Class<?> returnType = m.getReturnType();"
        lineNumber: 220
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/IDLTypesUtil.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/IDLTypesUtil.java
          kind: Method
          name: isEntity
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "463              return new IDLType(c, new String[]{\"java\", \"\
          io\"}, \"Serializable\");\n464          }\n465          else if (c == java.io.Externalizable.class)\n\
          466          {\n467              return new IDLType(c, new String[]{\"java\"\
          , \"io\"}, \"Externalizable\");\n468          }\n469          else if (c\
          \ == java.rmi.Remote.class)\n470          {\n471              return new\
          \ IDLType(c, new String[]{\"java\", \"rmi\"}, \"Remote\");\n472        \
          \  }\n473          else if (c == org.omg.CORBA.Object.class)\n474      \
          \    {\n475              return new IDLType(c, \"Object\");\n476       \
          \   }\n477          else\n478          {\n479              return null;\n\
          480          }\n481      }\n482  \n483      /**"
        lineNumber: 473
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/IDLTypesUtil.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/IDLTypesUtil.java
          kind: Method
          name: getSpecialCaseIDLTypeMapping
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "105          // Create an invocation handler for the methods defined\
          \ on DynamicStub, which extends org.omg.CORBA.Object. This\n106        \
          \  // handler delegates all calls directly to a DynamicStubImpl, which extends\
          \ org.omg.CORBA.portable.ObjectImpl.\n107          InvocationHandler dynamicStubHandler\
          \ = DelegateInvocationHandlerImpl.create(stub);\n108  \n109          //\
          \ Create an invocation handler that handles any remote interface methods.\n\
          110          InvocationHandler stubMethodHandler = new StubInvocationHandlerImpl(pm,\
          \ classData, stub);\n111  \n112          // Create a composite handler that\
          \ handles the DynamicStub interface as well as the remote interfaces.\n\
          113          final CompositeInvocationHandler handler = new CustomCompositeInvocationHandlerImpl(stub);\n\
          114          handler.addInvocationHandler(DynamicStub.class, dynamicStubHandler);\n\
          115          handler.addInvocationHandler(org.omg.CORBA.Object.class, dynamicStubHandler);\n\
          116          handler.addInvocationHandler(Object.class, dynamicStubHandler);\n\
          117  \n118          // If the method passed to invoke is not from DynamicStub\
          \ or its superclasses, it must be from an implemented\n119          // interface,\
          \ so we just handle all of these with the stubMethodHandler. This used to\
          \ be done be adding explicit\n120          // entries for stubMethodHandler\
          \ for each remote interface, but that does not work correctly for abstract\n\
          121          // interfaces, since the graph analysis ignores abstract interfaces\
          \ in order to compute the type ids correctly\n122          // (see PresentationManagerImpl.NodeImpl.getChildren).\
          \ Rather than produce more graph traversal code to handle\n123         \
          \ // this problem, we simply use a default. This also points to a possible\
          \ optimization: just use explicit checks\n124          // for the three\
          \ special classes, rather than a general table lookup that usually fails.\n\
          125          handler.setDefaultHandler(stubMethodHandler);"
        lineNumber: 115
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/InvocationHandlerFactoryImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/InvocationHandlerFactoryImpl.java
          kind: Method
          name: getInvocationHandler
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "105          catch (org.omg.PortableServer.POAPackage.ObjectNotActive\
          \ exception)\n106          {\n107              // ignore\n108          }\n\
          109          catch (org.omg.PortableServer.POAPackage.ServantNotActive exception)\n\
          110          {\n111              // ignore\n112          }\n113      }\n\
          114  \n115      public org.omg.CORBA.ORB orb()\n116      {\n117        \
          \  return _orb();\n118      }\n119  \n120      public void orb(org.omg.CORBA.ORB\
          \ orb)\n121      {\n122          try\n123          {\n124              ((org.omg.CORBA_2_3.ORB)\
          \ orb).set_delegate(this);\n125          }"
        lineNumber: 115
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "110          {\n111              // ignore\n112          }\n113\
          \      }\n114  \n115      public org.omg.CORBA.ORB orb()\n116      {\n117\
          \          return _orb();\n118      }\n119  \n120      public void orb(org.omg.CORBA.ORB\
          \ orb)\n121      {\n122          try\n123          {\n124              ((org.omg.CORBA_2_3.ORB)\
          \ orb).set_delegate(this);\n125          }\n126          catch (ClassCastException\
          \ e)\n127          {\n128              throw wrapper.badOrbForServant(e);\n\
          129          }\n130      }"
        lineNumber: 120
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "114  \n115      public org.omg.CORBA.ORB orb()\n116      {\n117\
          \          return _orb();\n118      }\n119  \n120      public void orb(org.omg.CORBA.ORB\
          \ orb)\n121      {\n122          try\n123          {\n124              ((org.omg.CORBA_2_3.ORB)\
          \ orb).set_delegate(this);\n125          }\n126          catch (ClassCastException\
          \ e)\n127          {\n128              throw wrapper.badOrbForServant(e);\n\
          129          }\n130      }\n131  \n132      public org.omg.CORBA.portable.OutputStream\
          \ _invoke(String method, org.omg.CORBA.portable.InputStream _in,\n133  \
          \            ResponseHandler reply)\n134      {"
        lineNumber: 124
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
          kind: Method
          name: orb
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "122          try\n123          {\n124              ((org.omg.CORBA_2_3.ORB)\
          \ orb).set_delegate(this);\n125          }\n126          catch (ClassCastException\
          \ e)\n127          {\n128              throw wrapper.badOrbForServant(e);\n\
          129          }\n130      }\n131  \n132      public org.omg.CORBA.portable.OutputStream\
          \ _invoke(String method, org.omg.CORBA.portable.InputStream _in,\n133  \
          \            ResponseHandler reply)\n134      {\n135          Method javaMethod\
          \ = null;\n136          DynamicMethodMarshaller dmm = null;\n137  \n138\
          \          try\n139          {\n140              InputStream in = (InputStream)\
          \ _in;\n141  \n142              javaMethod = classData.getIDLNameTranslator().getMethod(method);"
        lineNumber: 132
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
          kind: Method
          name: _invoke
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "27  \n28  import java.lang.reflect.InvocationTargetException;\n\
          29  import java.lang.reflect.Method;\n30  import java.rmi.Remote;\n31  \n\
          32  import javax.rmi.CORBA.Tie;\n33  \n34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicMethodMarshaller;\n\
          36  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          37  import org.omg.CORBA.SystemException;\n38  import org.omg.CORBA.portable.ResponseHandler;\n\
          39  import org.omg.CORBA.portable.UnknownException;\n40  import org.omg.CORBA_2_3.portable.InputStream;\n\
          41  import org.omg.CORBA_2_3.portable.OutputStream;\n42  import org.omg.PortableServer.Servant;\n\
          43  \n44  public final class ReflectiveTie extends Servant implements Tie\n\
          45  {\n46      private Remote target = null;\n47  "
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
          kind: Class
          name: ReflectiveTie
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "28  import java.lang.reflect.InvocationTargetException;\n29  import\
          \ java.lang.reflect.Method;\n30  import java.rmi.Remote;\n31  \n32  import\
          \ javax.rmi.CORBA.Tie;\n33  \n34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicMethodMarshaller;\n\
          36  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          37  import org.omg.CORBA.SystemException;\n38  import org.omg.CORBA.portable.ResponseHandler;\n\
          39  import org.omg.CORBA.portable.UnknownException;\n40  import org.omg.CORBA_2_3.portable.InputStream;\n\
          41  import org.omg.CORBA_2_3.portable.OutputStream;\n42  import org.omg.PortableServer.Servant;\n\
          43  \n44  public final class ReflectiveTie extends Servant implements Tie\n\
          45  {\n46      private Remote target = null;\n47  \n48      private PresentationManager\
          \ pm;"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
          kind: Class
          name: ReflectiveTie
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "29  import java.lang.reflect.Method;\n30  import java.rmi.Remote;\n\
          31  \n32  import javax.rmi.CORBA.Tie;\n33  \n34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicMethodMarshaller;\n\
          36  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          37  import org.omg.CORBA.SystemException;\n38  import org.omg.CORBA.portable.ResponseHandler;\n\
          39  import org.omg.CORBA.portable.UnknownException;\n40  import org.omg.CORBA_2_3.portable.InputStream;\n\
          41  import org.omg.CORBA_2_3.portable.OutputStream;\n42  import org.omg.PortableServer.Servant;\n\
          43  \n44  public final class ReflectiveTie extends Servant implements Tie\n\
          45  {\n46      private Remote target = null;\n47  \n48      private PresentationManager\
          \ pm;\n49  "
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
          kind: Class
          name: ReflectiveTie
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "30  import java.rmi.Remote;\n31  \n32  import javax.rmi.CORBA.Tie;\n\
          33  \n34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicMethodMarshaller;\n\
          36  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          37  import org.omg.CORBA.SystemException;\n38  import org.omg.CORBA.portable.ResponseHandler;\n\
          39  import org.omg.CORBA.portable.UnknownException;\n40  import org.omg.CORBA_2_3.portable.InputStream;\n\
          41  import org.omg.CORBA_2_3.portable.OutputStream;\n42  import org.omg.PortableServer.Servant;\n\
          43  \n44  public final class ReflectiveTie extends Servant implements Tie\n\
          45  {\n46      private Remote target = null;\n47  \n48      private PresentationManager\
          \ pm;\n49  \n50      private PresentationManager.ClassData classData = null;"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
          kind: Class
          name: ReflectiveTie
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "31  \n32  import javax.rmi.CORBA.Tie;\n33  \n34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicMethodMarshaller;\n\
          36  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          37  import org.omg.CORBA.SystemException;\n38  import org.omg.CORBA.portable.ResponseHandler;\n\
          39  import org.omg.CORBA.portable.UnknownException;\n40  import org.omg.CORBA_2_3.portable.InputStream;\n\
          41  import org.omg.CORBA_2_3.portable.OutputStream;\n42  import org.omg.PortableServer.Servant;\n\
          43  \n44  public final class ReflectiveTie extends Servant implements Tie\n\
          45  {\n46      private Remote target = null;\n47  \n48      private PresentationManager\
          \ pm;\n49  \n50      private PresentationManager.ClassData classData = null;\n\
          51  "
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
          kind: Class
          name: ReflectiveTie
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "80              Class<?> targetClass = target.getClass();\n81 \
          \             classData = pm.getClassData(targetClass);\n82          }\n\
          83      }\n84  \n85      public Remote getTarget()\n86      {\n87      \
          \    return target;\n88      }\n89  \n90      public org.omg.CORBA.Object\
          \ thisObject()\n91      {\n92          return _this_object();\n93      }\n\
          94  \n95      public void deactivate()\n96      {\n97          try\n98 \
          \         {\n99              _poa().deactivate_object(_poa().servant_to_id(this));\n\
          100          }"
        lineNumber: 90
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/ReflectiveTie.java
          kind: Method
          name: thisObject
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.presentation.rmi;\n\
          27  \n28  import java.rmi.RemoteException;\n29  \n30  import javax.rmi.CORBA.Tie;\n\
          31  \n32  import org.omg.CORBA.BAD_INV_ORDER;\n33  import org.omg.CORBA.BAD_OPERATION;\n\
          34  import org.omg.CORBA.ORB;\n35  import org.omg.CORBA.SystemException;\n\
          36  import org.omg.CORBA.portable.Delegate;\n37  import org.omg.CORBA.portable.ObjectImpl;\n\
          38  \n39  import org.jboss.com.sun.corba.se.impl.corba.CORBAObjectImpl;\n\
          40  import org.jboss.com.sun.corba.se.impl.ior.StubIORImpl;\n41  import\
          \ org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n42  import\
          \ org.jboss.com.sun.corba.se.impl.util.Utility;"
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
          kind: Class
          name: StubConnectImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.presentation.rmi;\n\
          27  \n28  import java.rmi.RemoteException;\n29  \n30  import javax.rmi.CORBA.Tie;\n\
          31  \n32  import org.omg.CORBA.BAD_INV_ORDER;\n33  import org.omg.CORBA.BAD_OPERATION;\n\
          34  import org.omg.CORBA.ORB;\n35  import org.omg.CORBA.SystemException;\n\
          36  import org.omg.CORBA.portable.Delegate;\n37  import org.omg.CORBA.portable.ObjectImpl;\n\
          38  \n39  import org.jboss.com.sun.corba.se.impl.corba.CORBAObjectImpl;\n\
          40  import org.jboss.com.sun.corba.se.impl.ior.StubIORImpl;\n41  import\
          \ org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n42  import\
          \ org.jboss.com.sun.corba.se.impl.util.Utility;\n43  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
          kind: Class
          name: StubConnectImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.presentation.rmi;\n\
          27  \n28  import java.rmi.RemoteException;\n29  \n30  import javax.rmi.CORBA.Tie;\n\
          31  \n32  import org.omg.CORBA.BAD_INV_ORDER;\n33  import org.omg.CORBA.BAD_OPERATION;\n\
          34  import org.omg.CORBA.ORB;\n35  import org.omg.CORBA.SystemException;\n\
          36  import org.omg.CORBA.portable.Delegate;\n37  import org.omg.CORBA.portable.ObjectImpl;\n\
          38  \n39  import org.jboss.com.sun.corba.se.impl.corba.CORBAObjectImpl;\n\
          40  import org.jboss.com.sun.corba.se.impl.ior.StubIORImpl;\n41  import\
          \ org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n42  import\
          \ org.jboss.com.sun.corba.se.impl.util.Utility;\n43  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          44  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;"
        lineNumber: 34
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
          kind: Class
          name: StubConnectImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "25  \n26  package org.jboss.com.sun.corba.se.impl.presentation.rmi;\n\
          27  \n28  import java.rmi.RemoteException;\n29  \n30  import javax.rmi.CORBA.Tie;\n\
          31  \n32  import org.omg.CORBA.BAD_INV_ORDER;\n33  import org.omg.CORBA.BAD_OPERATION;\n\
          34  import org.omg.CORBA.ORB;\n35  import org.omg.CORBA.SystemException;\n\
          36  import org.omg.CORBA.portable.Delegate;\n37  import org.omg.CORBA.portable.ObjectImpl;\n\
          38  \n39  import org.jboss.com.sun.corba.se.impl.corba.CORBAObjectImpl;\n\
          40  import org.jboss.com.sun.corba.se.impl.ior.StubIORImpl;\n41  import\
          \ org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n42  import\
          \ org.jboss.com.sun.corba.se.impl.util.Utility;\n43  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          44  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          45  "
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
          kind: Class
          name: StubConnectImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "26  package org.jboss.com.sun.corba.se.impl.presentation.rmi;\n\
          27  \n28  import java.rmi.RemoteException;\n29  \n30  import javax.rmi.CORBA.Tie;\n\
          31  \n32  import org.omg.CORBA.BAD_INV_ORDER;\n33  import org.omg.CORBA.BAD_OPERATION;\n\
          34  import org.omg.CORBA.ORB;\n35  import org.omg.CORBA.SystemException;\n\
          36  import org.omg.CORBA.portable.Delegate;\n37  import org.omg.CORBA.portable.ObjectImpl;\n\
          38  \n39  import org.jboss.com.sun.corba.se.impl.corba.CORBAObjectImpl;\n\
          40  import org.jboss.com.sun.corba.se.impl.ior.StubIORImpl;\n41  import\
          \ org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n42  import\
          \ org.jboss.com.sun.corba.se.impl.util.Utility;\n43  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          44  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          45  \n46  public abstract class StubConnectImpl"
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
          kind: Class
          name: StubConnectImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "27  \n28  import java.rmi.RemoteException;\n29  \n30  import javax.rmi.CORBA.Tie;\n\
          31  \n32  import org.omg.CORBA.BAD_INV_ORDER;\n33  import org.omg.CORBA.BAD_OPERATION;\n\
          34  import org.omg.CORBA.ORB;\n35  import org.omg.CORBA.SystemException;\n\
          36  import org.omg.CORBA.portable.Delegate;\n37  import org.omg.CORBA.portable.ObjectImpl;\n\
          38  \n39  import org.jboss.com.sun.corba.se.impl.corba.CORBAObjectImpl;\n\
          40  import org.jboss.com.sun.corba.se.impl.ior.StubIORImpl;\n41  import\
          \ org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n42  import\
          \ org.jboss.com.sun.corba.se.impl.util.Utility;\n43  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          44  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          45  \n46  public abstract class StubConnectImpl\n47  {"
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
          kind: Class
          name: StubConnectImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "52       * \n53       * @param ior\n54       *            The StubIORImpl\
          \ for this stub (may be null)\n55       * @param proxy\n56       *     \
          \       The externally visible stub seen by the user (may be the same as\
          \ stub)\n57       * @param stub\n58       *            The stub implementation\
          \ that extends ObjectImpl\n59       * @param orb\n60       *           \
          \ The ORB to which we connect the stub.\n61       */\n62      public static\
          \ StubIORImpl connect(StubIORImpl ior, org.omg.CORBA.Object proxy,\n63 \
          \             org.omg.CORBA.portable.ObjectImpl stub, ORB orb) throws RemoteException\n\
          64      {\n65          Delegate del = null;\n66  \n67          try\n68 \
          \         {\n69              try\n70              {\n71                \
          \  del = StubAdapter.getDelegate(stub);\n72  "
        lineNumber: 62
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
          kind: Method
          name: connect
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "53       * @param ior\n54       *            The StubIORImpl for\
          \ this stub (may be null)\n55       * @param proxy\n56       *         \
          \   The externally visible stub seen by the user (may be the same as stub)\n\
          57       * @param stub\n58       *            The stub implementation that\
          \ extends ObjectImpl\n59       * @param orb\n60       *            The ORB\
          \ to which we connect the stub.\n61       */\n62      public static StubIORImpl\
          \ connect(StubIORImpl ior, org.omg.CORBA.Object proxy,\n63             \
          \ org.omg.CORBA.portable.ObjectImpl stub, ORB orb) throws RemoteException\n\
          64      {\n65          Delegate del = null;\n66  \n67          try\n68 \
          \         {\n69              try\n70              {\n71                \
          \  del = StubAdapter.getDelegate(stub);\n72  \n73                  if (del.orb(stub)\
          \ != orb)"
        lineNumber: 63
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
          kind: Method
          name: connect
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "66  \n67          try\n68          {\n69              try\n70 \
          \             {\n71                  del = StubAdapter.getDelegate(stub);\n\
          72  \n73                  if (del.orb(stub) != orb)\n74                \
          \      throw wrapper.connectWrongOrb();\n75              }\n76         \
          \     catch (org.omg.CORBA.BAD_OPERATION err)\n77              {\n78   \
          \               if (ior == null)\n79                  {\n80            \
          \          // No IOR, can we get a Tie for this stub?\n81              \
          \        Tie tie = Utility.getAndForgetTie(proxy);\n82                 \
          \     if (tie == null)\n83                          throw wrapper.connectNoTie();\n\
          84  \n85                      // Is the tie already connected? If it is,\
          \ check that it's connected to the same ORB, otherwise\n86             \
          \         // connect it."
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubConnectImpl.java
          kind: Method
          name: connect
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "27  \n28  import java.rmi.Remote;\n29  \n30  import javax.rmi.CORBA.Tie;\n\
          31  import javax.rmi.CORBA.Util;\n32  \n33  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          34  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n36  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          37  import org.omg.CORBA.CompletionStatus;\n38  import org.omg.CORBA.portable.IDLEntity;\n\
          39  \n40  public abstract class StubFactoryFactoryDynamicBase extends StubFactoryFactoryBase\n\
          41  {\n42      protected final ORBUtilSystemException wrapper;\n43  \n44\
          \      public StubFactoryFactoryDynamicBase()\n45      {\n46          wrapper\
          \ = ORBUtilSystemException.get(CORBALogDomains.RPC_PRESENTATION);\n47  \
          \    }"
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubFactoryFactoryDynamicBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubFactoryFactoryDynamicBase.java
          kind: Class
          name: StubFactoryFactoryDynamicBase
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "28  import java.rmi.Remote;\n29  \n30  import javax.rmi.CORBA.Tie;\n\
          31  import javax.rmi.CORBA.Util;\n32  \n33  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          34  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n36  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          37  import org.omg.CORBA.CompletionStatus;\n38  import org.omg.CORBA.portable.IDLEntity;\n\
          39  \n40  public abstract class StubFactoryFactoryDynamicBase extends StubFactoryFactoryBase\n\
          41  {\n42      protected final ORBUtilSystemException wrapper;\n43  \n44\
          \      public StubFactoryFactoryDynamicBase()\n45      {\n46          wrapper\
          \ = ORBUtilSystemException.get(CORBALogDomains.RPC_PRESENTATION);\n47  \
          \    }\n48  "
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubFactoryFactoryDynamicBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubFactoryFactoryDynamicBase.java
          kind: Class
          name: StubFactoryFactoryDynamicBase
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "21   * Please contact Oracle, 500 Oracle Parkway, Redwood Shores,\
          \ CA 94065 USA\n22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.presentation.rmi;\n\
          27  \n28  import javax.rmi.CORBA.Tie;\n29  import javax.rmi.CORBA.Util;\n\
          30  \n31  import org.omg.CORBA.CompletionStatus;\n32  \n33  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          34  import org.jboss.com.sun.corba.se.impl.presentation.rmi.StubFactoryFactoryBase;\n\
          35  import org.jboss.com.sun.corba.se.impl.util.PackagePrefixChecker;\n\
          36  import org.jboss.com.sun.corba.se.impl.util.Utility;\n37  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          38  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          39  \n40  public class StubFactoryFactoryStaticImpl extends StubFactoryFactoryBase\n\
          41  {"
        lineNumber: 31
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubFactoryFactoryStaticImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubFactoryFactoryStaticImpl.java
          kind: Class
          name: StubFactoryFactoryStaticImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "30  public class StubFactoryStaticImpl extends StubFactoryBase\n\
          31  {\n32      private Class<?> stubClass;\n33  \n34      public StubFactoryStaticImpl(Class<?>\
          \ cls)\n35      {\n36          super(null);\n37          this.stubClass\
          \ = cls;\n38      }\n39  \n40      public org.omg.CORBA.Object makeStub()\n\
          41      {\n42          org.omg.CORBA.Object stub = null;\n43          try\n\
          44          {\n45              stub = (org.omg.CORBA.Object) stubClass.newInstance();\n\
          46          }\n47          catch (InstantiationException e)\n48        \
          \  {\n49              throw new RuntimeException(e);\n50          }"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubFactoryStaticImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubFactoryStaticImpl.java
          kind: Method
          name: makeStub
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "32      private Class<?> stubClass;\n33  \n34      public StubFactoryStaticImpl(Class<?>\
          \ cls)\n35      {\n36          super(null);\n37          this.stubClass\
          \ = cls;\n38      }\n39  \n40      public org.omg.CORBA.Object makeStub()\n\
          41      {\n42          org.omg.CORBA.Object stub = null;\n43          try\n\
          44          {\n45              stub = (org.omg.CORBA.Object) stubClass.newInstance();\n\
          46          }\n47          catch (InstantiationException e)\n48        \
          \  {\n49              throw new RuntimeException(e);\n50          }\n51\
          \          catch (IllegalAccessException e)\n52          {"
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubFactoryStaticImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubFactoryStaticImpl.java
          kind: Method
          name: makeStub
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "35      {\n36          super(null);\n37          this.stubClass\
          \ = cls;\n38      }\n39  \n40      public org.omg.CORBA.Object makeStub()\n\
          41      {\n42          org.omg.CORBA.Object stub = null;\n43          try\n\
          44          {\n45              stub = (org.omg.CORBA.Object) stubClass.newInstance();\n\
          46          }\n47          catch (InstantiationException e)\n48        \
          \  {\n49              throw new RuntimeException(e);\n50          }\n51\
          \          catch (IllegalAccessException e)\n52          {\n53         \
          \     throw new RuntimeException(e);\n54          }\n55          return\
          \ stub;"
        lineNumber: 45
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubFactoryStaticImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubFactoryStaticImpl.java
          kind: Method
          name: makeStub
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "119          }\n120          catch (SystemException ex)\n121  \
          \        {\n122              throw Util.mapSystemException(ex);\n123   \
          \       }\n124  \n125          if (!isLocal())\n126          {\n127    \
          \          try\n128              {\n129                  org.omg.CORBA_2_3.portable.InputStream\
          \ in = null;\n130                  try\n131                  {\n132    \
          \                  // create request\n133                      org.omg.CORBA_2_3.portable.OutputStream\
          \ out = (org.omg.CORBA_2_3.portable.OutputStream) delegate\n134        \
          \                      .request(stub, giopMethodName, true);\n135  \n136\
          \                      // marshal arguments\n137                      dmm.writeArguments(out,\
          \ args);\n138  \n139                      // finish invocation"
        lineNumber: 129
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
          kind: Method
          name: invoke
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "123          }\n124  \n125          if (!isLocal())\n126      \
          \    {\n127              try\n128              {\n129                  org.omg.CORBA_2_3.portable.InputStream\
          \ in = null;\n130                  try\n131                  {\n132    \
          \                  // create request\n133                      org.omg.CORBA_2_3.portable.OutputStream\
          \ out = (org.omg.CORBA_2_3.portable.OutputStream) delegate\n134        \
          \                      .request(stub, giopMethodName, true);\n135  \n136\
          \                      // marshal arguments\n137                      dmm.writeArguments(out,\
          \ args);\n138  \n139                      // finish invocation\n140    \
          \                  in = (org.omg.CORBA_2_3.portable.InputStream) delegate.invoke(stub,\
          \ out);\n141  \n142                      // unmarshal result\n143      \
          \                return dmm.readResult(in);"
        lineNumber: 133
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
          kind: Method
          name: invoke
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "130                  try\n131                  {\n132         \
          \             // create request\n133                      org.omg.CORBA_2_3.portable.OutputStream\
          \ out = (org.omg.CORBA_2_3.portable.OutputStream) delegate\n134        \
          \                      .request(stub, giopMethodName, true);\n135  \n136\
          \                      // marshal arguments\n137                      dmm.writeArguments(out,\
          \ args);\n138  \n139                      // finish invocation\n140    \
          \                  in = (org.omg.CORBA_2_3.portable.InputStream) delegate.invoke(stub,\
          \ out);\n141  \n142                      // unmarshal result\n143      \
          \                return dmm.readResult(in);\n144                  }\n145\
          \                  catch (ApplicationException ex)\n146                \
          \  {\n147                      throw dmm.readException(ex);\n148       \
          \           }\n149                  catch (RemarshalException ex)\n150 \
          \                 {"
        lineNumber: 140
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
          kind: Method
          name: invoke
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "35  \n36  import org.jboss.com.sun.corba.se.pept.transport.ContactInfoList;\n\
          37  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n38  import org.jboss.com.sun.corba.se.spi.orbutil.proxy.LinkedInvocationHandler;\n\
          39  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicMethodMarshaller;\n\
          40  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          41  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          42  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;\n\
          43  import org.jboss.com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher;\n\
          44  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;\n\
          45  import org.omg.CORBA.SystemException;\n46  import org.omg.CORBA.portable.ApplicationException;\n\
          47  import org.omg.CORBA.portable.Delegate;\n48  import org.omg.CORBA.portable.RemarshalException;\n\
          49  import org.omg.CORBA.portable.ServantObject;\n50  \n51  public final\
          \ class StubInvocationHandlerImpl implements LinkedInvocationHandler\n52\
          \  {\n53      private transient PresentationManager.ClassData classData;\n\
          54  \n55      private transient PresentationManager pm;"
        lineNumber: 45
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
          kind: Class
          name: StubInvocationHandlerImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "36  import org.jboss.com.sun.corba.se.pept.transport.ContactInfoList;\n\
          37  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n38  import org.jboss.com.sun.corba.se.spi.orbutil.proxy.LinkedInvocationHandler;\n\
          39  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicMethodMarshaller;\n\
          40  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          41  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          42  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;\n\
          43  import org.jboss.com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher;\n\
          44  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;\n\
          45  import org.omg.CORBA.SystemException;\n46  import org.omg.CORBA.portable.ApplicationException;\n\
          47  import org.omg.CORBA.portable.Delegate;\n48  import org.omg.CORBA.portable.RemarshalException;\n\
          49  import org.omg.CORBA.portable.ServantObject;\n50  \n51  public final\
          \ class StubInvocationHandlerImpl implements LinkedInvocationHandler\n52\
          \  {\n53      private transient PresentationManager.ClassData classData;\n\
          54  \n55      private transient PresentationManager pm;\n56  "
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
          kind: Class
          name: StubInvocationHandlerImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "37  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n38  import\
          \ org.jboss.com.sun.corba.se.spi.orbutil.proxy.LinkedInvocationHandler;\n\
          39  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicMethodMarshaller;\n\
          40  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          41  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          42  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;\n\
          43  import org.jboss.com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher;\n\
          44  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;\n\
          45  import org.omg.CORBA.SystemException;\n46  import org.omg.CORBA.portable.ApplicationException;\n\
          47  import org.omg.CORBA.portable.Delegate;\n48  import org.omg.CORBA.portable.RemarshalException;\n\
          49  import org.omg.CORBA.portable.ServantObject;\n50  \n51  public final\
          \ class StubInvocationHandlerImpl implements LinkedInvocationHandler\n52\
          \  {\n53      private transient PresentationManager.ClassData classData;\n\
          54  \n55      private transient PresentationManager pm;\n56  \n57      private\
          \ transient org.omg.CORBA.Object stub;"
        lineNumber: 47
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
          kind: Class
          name: StubInvocationHandlerImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "38  import org.jboss.com.sun.corba.se.spi.orbutil.proxy.LinkedInvocationHandler;\n\
          39  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicMethodMarshaller;\n\
          40  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          41  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          42  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;\n\
          43  import org.jboss.com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher;\n\
          44  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;\n\
          45  import org.omg.CORBA.SystemException;\n46  import org.omg.CORBA.portable.ApplicationException;\n\
          47  import org.omg.CORBA.portable.Delegate;\n48  import org.omg.CORBA.portable.RemarshalException;\n\
          49  import org.omg.CORBA.portable.ServantObject;\n50  \n51  public final\
          \ class StubInvocationHandlerImpl implements LinkedInvocationHandler\n52\
          \  {\n53      private transient PresentationManager.ClassData classData;\n\
          54  \n55      private transient PresentationManager pm;\n56  \n57      private\
          \ transient org.omg.CORBA.Object stub;\n58  "
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
          kind: Class
          name: StubInvocationHandlerImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "39  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicMethodMarshaller;\n\
          40  import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          41  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          42  import org.jboss.com.sun.corba.se.spi.protocol.CorbaClientDelegate;\n\
          43  import org.jboss.com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher;\n\
          44  import org.jboss.com.sun.corba.se.spi.transport.CorbaContactInfoList;\n\
          45  import org.omg.CORBA.SystemException;\n46  import org.omg.CORBA.portable.ApplicationException;\n\
          47  import org.omg.CORBA.portable.Delegate;\n48  import org.omg.CORBA.portable.RemarshalException;\n\
          49  import org.omg.CORBA.portable.ServantObject;\n50  \n51  public final\
          \ class StubInvocationHandlerImpl implements LinkedInvocationHandler\n52\
          \  {\n53      private transient PresentationManager.ClassData classData;\n\
          54  \n55      private transient PresentationManager pm;\n56  \n57      private\
          \ transient org.omg.CORBA.Object stub;\n58  \n59      private transient\
          \ Proxy self;"
        lineNumber: 49
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
          kind: Class
          name: StubInvocationHandlerImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "47  import org.omg.CORBA.portable.Delegate;\n48  import org.omg.CORBA.portable.RemarshalException;\n\
          49  import org.omg.CORBA.portable.ServantObject;\n50  \n51  public final\
          \ class StubInvocationHandlerImpl implements LinkedInvocationHandler\n52\
          \  {\n53      private transient PresentationManager.ClassData classData;\n\
          54  \n55      private transient PresentationManager pm;\n56  \n57      private\
          \ transient org.omg.CORBA.Object stub;\n58  \n59      private transient\
          \ Proxy self;\n60  \n61      public void setProxy(Proxy self)\n62      {\n\
          63          this.self = self;\n64      }\n65  \n66      public Proxy getProxy()\n\
          67      {"
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
          kind: Field
          name: stub
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "62      {\n63          this.self = self;\n64      }\n65  \n66 \
          \     public Proxy getProxy()\n67      {\n68          return self;\n69 \
          \     }\n70  \n71      public StubInvocationHandlerImpl(PresentationManager\
          \ pm, PresentationManager.ClassData classData,\n72              org.omg.CORBA.Object\
          \ stub)\n73      {\n74          SecurityManager s = System.getSecurityManager();\n\
          75          if (s != null)\n76          {\n77              s.checkPermission(new\
          \ DynamicAccessPermission(\"access\"));\n78          }\n79          this.classData\
          \ = classData;\n80          this.pm = pm;\n81          this.stub = stub;\n\
          82      }"
        lineNumber: 72
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/presentation/rmi/StubInvocationHandlerImpl.java
          kind: Constructor
          name: StubInvocationHandlerImpl
          package: org.jboss.com.sun.corba.se.impl.presentation.rmi
      - codeSnip: "28  /**\n29   * org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java\
          \ Generated by the IDL-to-Java compiler\n30   * (portable), version \"3.0\"\
          \ from src/main/resources/idl/org/jboss/com/sun/corba/se/GiopIDL/g.idl Sunday,\
          \ June 4,\n31   * 2000 5:18:54 PM PDT\n32   */\n33  \n34  abstract public\
          \ class AddressingDispositionHelper\n35  {\n36      private static String\
          \ _id = \"IDL:messages/AddressingDisposition:1.0\";\n37  \n38      public\
          \ static void insert(org.omg.CORBA.Any a, short that)\n39      {\n40   \
          \       org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          41          a.type(type());\n42          write(out, that);\n43         \
          \ a.read_value(out.create_input_stream(), type());\n44      }\n45  \n46\
          \      public static short extract(org.omg.CORBA.Any a)\n47      {\n48 \
          \         return read(a.create_input_stream());"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "30   * (portable), version \"3.0\" from src/main/resources/idl/org/jboss/com/sun/corba/se/GiopIDL/g.idl\
          \ Sunday, June 4,\n31   * 2000 5:18:54 PM PDT\n32   */\n33  \n34  abstract\
          \ public class AddressingDispositionHelper\n35  {\n36      private static\
          \ String _id = \"IDL:messages/AddressingDisposition:1.0\";\n37  \n38   \
          \   public static void insert(org.omg.CORBA.Any a, short that)\n39     \
          \ {\n40          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          41          a.type(type());\n42          write(out, that);\n43         \
          \ a.read_value(out.create_input_stream(), type());\n44      }\n45  \n46\
          \      public static short extract(org.omg.CORBA.Any a)\n47      {\n48 \
          \         return read(a.create_input_stream());\n49      }\n50  "
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "36      private static String _id = \"IDL:messages/AddressingDisposition:1.0\"\
          ;\n37  \n38      public static void insert(org.omg.CORBA.Any a, short that)\n\
          39      {\n40          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          41          a.type(type());\n42          write(out, that);\n43         \
          \ a.read_value(out.create_input_stream(), type());\n44      }\n45  \n46\
          \      public static short extract(org.omg.CORBA.Any a)\n47      {\n48 \
          \         return read(a.create_input_stream());\n49      }\n50  \n51   \
          \   private static org.omg.CORBA.TypeCode __typeCode = null;\n52  \n53 \
          \     synchronized public static org.omg.CORBA.TypeCode type()\n54     \
          \ {\n55          if (__typeCode == null)\n56          {"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "41          a.type(type());\n42          write(out, that);\n43\
          \          a.read_value(out.create_input_stream(), type());\n44      }\n\
          45  \n46      public static short extract(org.omg.CORBA.Any a)\n47     \
          \ {\n48          return read(a.create_input_stream());\n49      }\n50  \n\
          51      private static org.omg.CORBA.TypeCode __typeCode = null;\n52  \n\
          53      synchronized public static org.omg.CORBA.TypeCode type()\n54   \
          \   {\n55          if (__typeCode == null)\n56          {\n57          \
          \    __typeCode = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          58              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(AddressingDispositionHelper.id(),\n\
          59                      \"AddressingDisposition\", __typeCode);\n60    \
          \      }\n61          return __typeCode;"
        lineNumber: 51
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "43          a.read_value(out.create_input_stream(), type());\n\
          44      }\n45  \n46      public static short extract(org.omg.CORBA.Any a)\n\
          47      {\n48          return read(a.create_input_stream());\n49      }\n\
          50  \n51      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          52  \n53      synchronized public static org.omg.CORBA.TypeCode type()\n\
          54      {\n55          if (__typeCode == null)\n56          {\n57      \
          \        __typeCode = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          58              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(AddressingDispositionHelper.id(),\n\
          59                      \"AddressingDisposition\", __typeCode);\n60    \
          \      }\n61          return __typeCode;\n62      }\n63  "
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "47      {\n48          return read(a.create_input_stream());\n\
          49      }\n50  \n51      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n52  \n53      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n54      {\n55          if (__typeCode == null)\n56          {\n\
          57              __typeCode = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          58              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(AddressingDispositionHelper.id(),\n\
          59                      \"AddressingDisposition\", __typeCode);\n60    \
          \      }\n61          return __typeCode;\n62      }\n63  \n64      public\
          \ static String id()\n65      {\n66          return _id;\n67      }"
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "48          return read(a.create_input_stream());\n49      }\n\
          50  \n51      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          52  \n53      synchronized public static org.omg.CORBA.TypeCode type()\n\
          54      {\n55          if (__typeCode == null)\n56          {\n57      \
          \        __typeCode = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          58              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(AddressingDispositionHelper.id(),\n\
          59                      \"AddressingDisposition\", __typeCode);\n60    \
          \      }\n61          return __typeCode;\n62      }\n63  \n64      public\
          \ static String id()\n65      {\n66          return _id;\n67      }\n68\
          \  "
        lineNumber: 58
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "59                      \"AddressingDisposition\", __typeCode);\n\
          60          }\n61          return __typeCode;\n62      }\n63  \n64     \
          \ public static String id()\n65      {\n66          return _id;\n67    \
          \  }\n68  \n69      public static short read(org.omg.CORBA.portable.InputStream\
          \ istream)\n70      {\n71          short value = (short) 0;\n72        \
          \  value = istream.read_short();\n73          return value;\n74      }\n\
          75  \n76      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, short value)\n77      {\n78          ostream.write_short(value);\n\
          79      }"
        lineNumber: 69
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "66          return _id;\n67      }\n68  \n69      public static\
          \ short read(org.omg.CORBA.portable.InputStream istream)\n70      {\n71\
          \          short value = (short) 0;\n72          value = istream.read_short();\n\
          73          return value;\n74      }\n75  \n76      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, short value)\n77      {\n78          ostream.write_short(value);\n\
          79      }\n80  \n81  }\n"
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/AddressingDispositionHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "52  \n53      // Accessor methods\n54  \n55      public int getRequestId()\n\
          56      {\n57          return this.request_id;\n58      }\n59  \n60    \
          \  // IO methods\n61  \n62      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n63      {\n64          super.read(istream);\n65          this.request_id\
          \ = istream.read_ulong();\n66      }\n67  \n68      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n69      {\n70          super.write(ostream);\n71          ostream.write_ulong(this.request_id);\n\
          72      }"
        lineNumber: 62
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/CancelRequestMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/CancelRequestMessage_1_0.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "58      }\n59  \n60      // IO methods\n61  \n62      public void\
          \ read(org.omg.CORBA.portable.InputStream istream)\n63      {\n64      \
          \    super.read(istream);\n65          this.request_id = istream.read_ulong();\n\
          66      }\n67  \n68      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n69      {\n70          super.write(ostream);\n71          ostream.write_ulong(this.request_id);\n\
          72      }\n73  \n74      public void callback(MessageHandler handler) throws\
          \ java.io.IOException\n75      {\n76          handler.handleInput(this);\n\
          77      }\n78  } // class CancelRequestMessage_1_0"
        lineNumber: 68
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/CancelRequestMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/CancelRequestMessage_1_0.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "55  \n56      // Accessor methods\n57  \n58      public int getRequestId()\n\
          59      {\n60          return this.request_id;\n61      }\n62  \n63    \
          \  // IO methods\n64  \n65      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n66      {\n67          super.read(istream);\n68          this.request_id\
          \ = istream.read_ulong();\n69      }\n70  \n71      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n72      {\n73          super.write(ostream);\n74          ostream.write_ulong(this.request_id);\n\
          75      }"
        lineNumber: 65
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/CancelRequestMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/CancelRequestMessage_1_1.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "61      }\n62  \n63      // IO methods\n64  \n65      public void\
          \ read(org.omg.CORBA.portable.InputStream istream)\n66      {\n67      \
          \    super.read(istream);\n68          this.request_id = istream.read_ulong();\n\
          69      }\n70  \n71      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n72      {\n73          super.write(ostream);\n74          ostream.write_ulong(this.request_id);\n\
          75      }\n76  \n77      public void callback(MessageHandler handler) throws\
          \ java.io.IOException\n78      {\n79          handler.handleInput(this);\n\
          80      }\n81  } // class CancelRequestMessage_1_1"
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/CancelRequestMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/CancelRequestMessage_1_1.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "55  \n56      // Accessor methods\n57  \n58      public int getRequestId()\n\
          59      {\n60          return this.request_id;\n61      }\n62  \n63    \
          \  // IO methods\n64  \n65      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n66      {\n67          super.read(istream);\n68          this.request_id\
          \ = istream.read_ulong();\n69      }\n70  \n71      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n72      {\n73          super.write(ostream);\n74          ostream.write_ulong(this.request_id);\n\
          75      }"
        lineNumber: 65
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/CancelRequestMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/CancelRequestMessage_1_2.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "61      }\n62  \n63      // IO methods\n64  \n65      public void\
          \ read(org.omg.CORBA.portable.InputStream istream)\n66      {\n67      \
          \    super.read(istream);\n68          this.request_id = istream.read_ulong();\n\
          69      }\n70  \n71      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n72      {\n73          super.write(ostream);\n74          ostream.write_ulong(this.request_id);\n\
          75      }\n76  \n77      public void callback(MessageHandler handler) throws\
          \ java.io.IOException\n78      {\n79          handler.handleInput(this);\n\
          80      }\n81  } // class CancelRequestMessage_1_2"
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/CancelRequestMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/CancelRequestMessage_1_2.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: " 89      {\n 90          return GIOPMessageHeaderLength + 4;\n\
          \ 91      }\n 92  \n 93      // IO methods\n 94  \n 95      /*\n 96    \
          \   * This will never be called, since we do not currently read the request_id\
          \ from an CDRInputStream. Instead we use\n 97       * the readGIOP_1_2_requestId\
          \ to read the requestId from a byte buffer.\n 98       */\n 99      public\
          \ void read(org.omg.CORBA.portable.InputStream istream)\n100      {\n101\
          \          super.read(istream);\n102          this.request_id = istream.read_ulong();\n\
          103      }\n104  \n105      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n106      {\n107          super.write(ostream);\n108        \
          \  ostream.write_ulong(this.request_id);\n109      }"
        lineNumber: 99
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/FragmentMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/FragmentMessage_1_2.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: " 95      /*\n 96       * This will never be called, since we do\
          \ not currently read the request_id from an CDRInputStream. Instead we use\n\
          \ 97       * the readGIOP_1_2_requestId to read the requestId from a byte\
          \ buffer.\n 98       */\n 99      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n100      {\n101          super.read(istream);\n102         \
          \ this.request_id = istream.read_ulong();\n103      }\n104  \n105      public\
          \ void write(org.omg.CORBA.portable.OutputStream ostream)\n106      {\n\
          107          super.write(ostream);\n108          ostream.write_ulong(this.request_id);\n\
          109      }\n110  \n111      public void callback(MessageHandler handler)\
          \ throws java.io.IOException\n112      {\n113          handler.handleInput(this);\n\
          114      }\n115  } // class FragmentMessage_1_2"
        lineNumber: 105
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/FragmentMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/FragmentMessage_1_2.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "25  \n26  package org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders;\n\
          27  \n28  /**\n29   * org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfo.java\
          \ Generated by the IDL-to-Java compiler\n30   * (portable), version \"3.0\"\
          \ from src/main/resources/idl/org/jboss/com/sun/corba/se/GiopIDL/g.idl Sunday,\
          \ June 4,\n31   * 2000 5:18:54 PM PDT\n32   */\n33  \n34  @SuppressWarnings(\"\
          serial\")\n35  public final class IORAddressingInfo implements org.omg.CORBA.portable.IDLEntity\n\
          36  {\n37      public int selected_profile_index = 0;\n38  \n39      public\
          \ org.omg.IOP.IOR ior = null;\n40  \n41      public IORAddressingInfo()\n\
          42      {\n43      } // ctor\n44  \n45      public IORAddressingInfo(int\
          \ _selected_profile_index, org.omg.IOP.IOR _ior)"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfo.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfo.java
          kind: Class
          name: IORAddressingInfo
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: " 86      }\n 87  \n 88      public static IORAddressingInfo read(org.omg.CORBA.portable.InputStream\
          \ istream)\n 89      {\n 90          IORAddressingInfo value = new IORAddressingInfo();\n\
          \ 91          value.selected_profile_index = istream.read_ulong();\n 92\
          \          value.ior = org.omg.IOP.IORHelper.read(istream);\n 93       \
          \   return value;\n 94      }\n 95  \n 96      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, IORAddressingInfo value)\n 97      {\n 98          ostream.write_ulong(value.selected_profile_index);\n\
          \ 99          org.omg.IOP.IORHelper.write(ostream, value.ior);\n100    \
          \  }\n101  \n102  }\n"
        lineNumber: 96
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "28  /**\n29   * org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java\
          \ Generated by the IDL-to-Java compiler\n30   * (portable), version \"3.0\"\
          \ from src/main/resources/idl/org/jboss/com/sun/corba/se/GiopIDL/g.idl Sunday,\
          \ June 4,\n31   * 2000 5:18:54 PM PDT\n32   */\n33  \n34  abstract public\
          \ class IORAddressingInfoHelper\n35  {\n36      private static String _id\
          \ = \"IDL:messages/IORAddressingInfo:1.0\";\n37  \n38      public static\
          \ void insert(org.omg.CORBA.Any a, IORAddressingInfo that)\n39      {\n\
          40          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          41          a.type(type());\n42          write(out, that);\n43         \
          \ a.read_value(out.create_input_stream(), type());\n44      }\n45  \n46\
          \      public static IORAddressingInfo extract(org.omg.CORBA.Any a)\n47\
          \      {\n48          return read(a.create_input_stream());"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "30   * (portable), version \"3.0\" from src/main/resources/idl/org/jboss/com/sun/corba/se/GiopIDL/g.idl\
          \ Sunday, June 4,\n31   * 2000 5:18:54 PM PDT\n32   */\n33  \n34  abstract\
          \ public class IORAddressingInfoHelper\n35  {\n36      private static String\
          \ _id = \"IDL:messages/IORAddressingInfo:1.0\";\n37  \n38      public static\
          \ void insert(org.omg.CORBA.Any a, IORAddressingInfo that)\n39      {\n\
          40          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          41          a.type(type());\n42          write(out, that);\n43         \
          \ a.read_value(out.create_input_stream(), type());\n44      }\n45  \n46\
          \      public static IORAddressingInfo extract(org.omg.CORBA.Any a)\n47\
          \      {\n48          return read(a.create_input_stream());\n49      }\n\
          50  "
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "36      private static String _id = \"IDL:messages/IORAddressingInfo:1.0\"\
          ;\n37  \n38      public static void insert(org.omg.CORBA.Any a, IORAddressingInfo\
          \ that)\n39      {\n40          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n41          a.type(type());\n42         \
          \ write(out, that);\n43          a.read_value(out.create_input_stream(),\
          \ type());\n44      }\n45  \n46      public static IORAddressingInfo extract(org.omg.CORBA.Any\
          \ a)\n47      {\n48          return read(a.create_input_stream());\n49 \
          \     }\n50  \n51      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n52  \n53      private static boolean __active = false;\n54  \n\
          55      synchronized public static org.omg.CORBA.TypeCode type()\n56   \
          \   {"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "41          a.type(type());\n42          write(out, that);\n43\
          \          a.read_value(out.create_input_stream(), type());\n44      }\n\
          45  \n46      public static IORAddressingInfo extract(org.omg.CORBA.Any\
          \ a)\n47      {\n48          return read(a.create_input_stream());\n49 \
          \     }\n50  \n51      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n52  \n53      private static boolean __active = false;\n54  \n\
          55      synchronized public static org.omg.CORBA.TypeCode type()\n56   \
          \   {\n57          if (__typeCode == null)\n58          {\n59          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n60              {\n61\
          \                  if (__typeCode == null)"
        lineNumber: 51
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "45  \n46      public static IORAddressingInfo extract(org.omg.CORBA.Any\
          \ a)\n47      {\n48          return read(a.create_input_stream());\n49 \
          \     }\n50  \n51      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n52  \n53      private static boolean __active = false;\n54  \n\
          55      synchronized public static org.omg.CORBA.TypeCode type()\n56   \
          \   {\n57          if (__typeCode == null)\n58          {\n59          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n60              {\n61\
          \                  if (__typeCode == null)\n62                  {\n63  \
          \                    if (__active)\n64                      {\n65      \
          \                    return org.omg.CORBA.ORB.init().create_recursive_tc(_id);"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "49      }\n50  \n51      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n52  \n53      private static boolean __active = false;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        synchronized (org.omg.CORBA.TypeCode.class)\n60              {\n\
          61                  if (__typeCode == null)\n62                  {\n63 \
          \                     if (__active)\n64                      {\n65     \
          \                     return org.omg.CORBA.ORB.init().create_recursive_tc(_id);\n\
          66                      }\n67                      __active = true;\n68\
          \                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];\n\
          69                      org.omg.CORBA.TypeCode _tcOf_members0 = null;"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: '55      synchronized public static org.omg.CORBA.TypeCode type()

          56      {

          57          if (__typeCode == null)

          58          {

          59              synchronized (org.omg.CORBA.TypeCode.class)

          60              {

          61                  if (__typeCode == null)

          62                  {

          63                      if (__active)

          64                      {

          65                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          66                      }

          67                      __active = true;

          68                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];

          69                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          70                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_ulong);

          71                      _members0[0] = new org.omg.CORBA.StructMember("selected_profile_index",
          _tcOf_members0, null);

          72                      _tcOf_members0 = org.omg.IOP.IORHelper.type();

          73                      _members0[1] = new org.omg.CORBA.StructMember("ior",
          _tcOf_members0, null);

          74                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(IORAddressingInfoHelper.id(),

          75                              "IORAddressingInfo", _members0);'
        lineNumber: 65
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: '58          {

          59              synchronized (org.omg.CORBA.TypeCode.class)

          60              {

          61                  if (__typeCode == null)

          62                  {

          63                      if (__active)

          64                      {

          65                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          66                      }

          67                      __active = true;

          68                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];

          69                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          70                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_ulong);

          71                      _members0[0] = new org.omg.CORBA.StructMember("selected_profile_index",
          _tcOf_members0, null);

          72                      _tcOf_members0 = org.omg.IOP.IORHelper.type();

          73                      _members0[1] = new org.omg.CORBA.StructMember("ior",
          _tcOf_members0, null);

          74                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(IORAddressingInfoHelper.id(),

          75                              "IORAddressingInfo", _members0);

          76                      __active = false;

          77                  }

          78              }'
        lineNumber: 68
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: '59              synchronized (org.omg.CORBA.TypeCode.class)

          60              {

          61                  if (__typeCode == null)

          62                  {

          63                      if (__active)

          64                      {

          65                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          66                      }

          67                      __active = true;

          68                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];

          69                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          70                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_ulong);

          71                      _members0[0] = new org.omg.CORBA.StructMember("selected_profile_index",
          _tcOf_members0, null);

          72                      _tcOf_members0 = org.omg.IOP.IORHelper.type();

          73                      _members0[1] = new org.omg.CORBA.StructMember("ior",
          _tcOf_members0, null);

          74                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(IORAddressingInfoHelper.id(),

          75                              "IORAddressingInfo", _members0);

          76                      __active = false;

          77                  }

          78              }

          79          }'
        lineNumber: 69
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: '60              {

          61                  if (__typeCode == null)

          62                  {

          63                      if (__active)

          64                      {

          65                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          66                      }

          67                      __active = true;

          68                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];

          69                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          70                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_ulong);

          71                      _members0[0] = new org.omg.CORBA.StructMember("selected_profile_index",
          _tcOf_members0, null);

          72                      _tcOf_members0 = org.omg.IOP.IORHelper.type();

          73                      _members0[1] = new org.omg.CORBA.StructMember("ior",
          _tcOf_members0, null);

          74                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(IORAddressingInfoHelper.id(),

          75                              "IORAddressingInfo", _members0);

          76                      __active = false;

          77                  }

          78              }

          79          }

          80          return __typeCode;'
        lineNumber: 70
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: '61                  if (__typeCode == null)

          62                  {

          63                      if (__active)

          64                      {

          65                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          66                      }

          67                      __active = true;

          68                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];

          69                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          70                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_ulong);

          71                      _members0[0] = new org.omg.CORBA.StructMember("selected_profile_index",
          _tcOf_members0, null);

          72                      _tcOf_members0 = org.omg.IOP.IORHelper.type();

          73                      _members0[1] = new org.omg.CORBA.StructMember("ior",
          _tcOf_members0, null);

          74                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(IORAddressingInfoHelper.id(),

          75                              "IORAddressingInfo", _members0);

          76                      __active = false;

          77                  }

          78              }

          79          }

          80          return __typeCode;

          81      }'
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "63                      if (__active)\n64                     \
          \ {\n65                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);\n\
          66                      }\n67                      __active = true;\n68\
          \                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];\n\
          69                      org.omg.CORBA.TypeCode _tcOf_members0 = null;\n\
          70                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_ulong);\n\
          71                      _members0[0] = new org.omg.CORBA.StructMember(\"\
          selected_profile_index\", _tcOf_members0, null);\n72                   \
          \   _tcOf_members0 = org.omg.IOP.IORHelper.type();\n73                 \
          \     _members0[1] = new org.omg.CORBA.StructMember(\"ior\", _tcOf_members0,\
          \ null);\n74                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(IORAddressingInfoHelper.id(),\n\
          75                              \"IORAddressingInfo\", _members0);\n76 \
          \                     __active = false;\n77                  }\n78     \
          \         }\n79          }\n80          return __typeCode;\n81      }\n\
          82  \n83      public static String id()"
        lineNumber: 73
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "64                      {\n65                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);\n\
          66                      }\n67                      __active = true;\n68\
          \                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];\n\
          69                      org.omg.CORBA.TypeCode _tcOf_members0 = null;\n\
          70                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_ulong);\n\
          71                      _members0[0] = new org.omg.CORBA.StructMember(\"\
          selected_profile_index\", _tcOf_members0, null);\n72                   \
          \   _tcOf_members0 = org.omg.IOP.IORHelper.type();\n73                 \
          \     _members0[1] = new org.omg.CORBA.StructMember(\"ior\", _tcOf_members0,\
          \ null);\n74                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(IORAddressingInfoHelper.id(),\n\
          75                              \"IORAddressingInfo\", _members0);\n76 \
          \                     __active = false;\n77                  }\n78     \
          \         }\n79          }\n80          return __typeCode;\n81      }\n\
          82  \n83      public static String id()\n84      {"
        lineNumber: 74
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "78              }\n79          }\n80          return __typeCode;\n\
          81      }\n82  \n83      public static String id()\n84      {\n85      \
          \    return _id;\n86      }\n87  \n88      public static IORAddressingInfo\
          \ read(org.omg.CORBA.portable.InputStream istream)\n89      {\n90      \
          \    IORAddressingInfo value = new IORAddressingInfo();\n91          value.selected_profile_index\
          \ = istream.read_ulong();\n92          value.ior = org.omg.IOP.IORHelper.read(istream);\n\
          93          return value;\n94      }\n95  \n96      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, IORAddressingInfo value)\n97      {\n98          ostream.write_ulong(value.selected_profile_index);"
        lineNumber: 88
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/IORAddressingInfoHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: " 87          return null; // 1.0 LocateReply body does not contain\
          \ SystemException\n 88      }\n 89  \n 90      public IOR getIOR()\n 91\
          \      {\n 92          return this.ior;\n 93      }\n 94  \n 95      //\
          \ IO methods\n 96  \n 97      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n 98      {\n 99          super.read(istream);\n100         \
          \ this.request_id = istream.read_ulong();\n101          this.locate_status\
          \ = istream.read_long();\n102          isValidReplyStatus(this.locate_status);\
          \ // raises exception on error\n103  \n104          // The code below reads\
          \ the reply body if status is OBJECT_FORWARD\n105          if (this.locate_status\
          \ == OBJECT_FORWARD)\n106          {\n107              CDRInputStream cdr\
          \ = (CDRInputStream) istream;"
        lineNumber: 97
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_0.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "103  \n104          // The code below reads the reply body if status\
          \ is OBJECT_FORWARD\n105          if (this.locate_status == OBJECT_FORWARD)\n\
          106          {\n107              CDRInputStream cdr = (CDRInputStream) istream;\n\
          108              this.ior = IORFactories.makeIOR(cdr);\n109          }\n\
          110      }\n111  \n112      // Note, this writes only the header information.\
          \ IOR may be written afterwards into the reply mesg body.\n113      public\
          \ void write(org.omg.CORBA.portable.OutputStream ostream)\n114      {\n\
          115          super.write(ostream);\n116          ostream.write_ulong(this.request_id);\n\
          117          ostream.write_long(this.locate_status);\n118      }\n119  \n\
          120      // Static methods\n121  \n122      public static void isValidReplyStatus(int\
          \ replyStatus)\n123      {"
        lineNumber: 113
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_0.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders;\n\
          27  \n28  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          29  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          30  import org.jboss.com.sun.corba.se.spi.ior.IOR;\n31  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          32  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n33 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n34  import org.omg.CORBA.CompletionStatus;\n\
          35  import org.omg.CORBA.SystemException;\n36  \n37  /**\n38   * This implements\
          \ the GIOP 1.0 LocateReply header.\n39   * \n40   * @author Ram Jeyaraman\
          \ 05/14/2000\n41   */\n42  \n43  public final class LocateReplyMessage_1_0\
          \ extends Message_1_0 implements LocateReplyMessage\n44  {"
        lineNumber: 34
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_0.java
          kind: Class
          name: LocateReplyMessage_1_0
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "25  \n26  package org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders;\n\
          27  \n28  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          29  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          30  import org.jboss.com.sun.corba.se.spi.ior.IOR;\n31  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          32  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n33 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n34  import org.omg.CORBA.CompletionStatus;\n\
          35  import org.omg.CORBA.SystemException;\n36  \n37  /**\n38   * This implements\
          \ the GIOP 1.0 LocateReply header.\n39   * \n40   * @author Ram Jeyaraman\
          \ 05/14/2000\n41   */\n42  \n43  public final class LocateReplyMessage_1_0\
          \ extends Message_1_0 implements LocateReplyMessage\n44  {\n45  "
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_0.java
          kind: Class
          name: LocateReplyMessage_1_0
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: " 88          return null; // 1.0 LocateReply body does not contain\
          \ SystemException\n 89      }\n 90  \n 91      public IOR getIOR()\n 92\
          \      {\n 93          return this.ior;\n 94      }\n 95  \n 96      //\
          \ IO methods\n 97  \n 98      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n 99      {\n100          super.read(istream);\n101         \
          \ this.request_id = istream.read_ulong();\n102          this.reply_status\
          \ = istream.read_long();\n103          isValidReplyStatus(this.reply_status);\
          \ // raises exception on error\n104  \n105          // The code below reads\
          \ the reply body if status is OBJECT_FORWARD\n106          if (this.reply_status\
          \ == OBJECT_FORWARD)\n107          {\n108              CDRInputStream cdr\
          \ = (CDRInputStream) istream;"
        lineNumber: 98
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_1.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "105          // The code below reads the reply body if status is\
          \ OBJECT_FORWARD\n106          if (this.reply_status == OBJECT_FORWARD)\n\
          107          {\n108              CDRInputStream cdr = (CDRInputStream) istream;\n\
          109              this.ior = IORFactories.makeIOR(cdr);\n110          }\n\
          111      }\n112  \n113      // Note, this writes only the header information.\
          \ SystemException or IOR may be written afterwards into the reply\n114 \
          \     // mesg body.\n115      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n116      {\n117          super.write(ostream);\n118        \
          \  ostream.write_ulong(this.request_id);\n119          ostream.write_long(this.reply_status);\n\
          120      }\n121  \n122      // Static methods\n123  \n124      public static\
          \ void isValidReplyStatus(int replyStatus)\n125      {"
        lineNumber: 115
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_1.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "25  \n26  package org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders;\n\
          27  \n28  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          29  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          30  import org.jboss.com.sun.corba.se.spi.ior.IOR;\n31  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          32  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n33  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n34  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          35  import org.omg.CORBA.CompletionStatus;\n36  import org.omg.CORBA.SystemException;\n\
          37  \n38  /**\n39   * This implements the GIOP 1.1 LocateReply header.\n\
          40   * \n41   * @author Ram Jeyaraman 05/14/2000\n42   */\n43  \n44  public\
          \ final class LocateReplyMessage_1_1 extends Message_1_1 implements LocateReplyMessage\n\
          45  {"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_1.java
          kind: Class
          name: LocateReplyMessage_1_1
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "26  package org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders;\n\
          27  \n28  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          29  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          30  import org.jboss.com.sun.corba.se.spi.ior.IOR;\n31  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          32  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n33  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n34  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          35  import org.omg.CORBA.CompletionStatus;\n36  import org.omg.CORBA.SystemException;\n\
          37  \n38  /**\n39   * This implements the GIOP 1.1 LocateReply header.\n\
          40   * \n41   * @author Ram Jeyaraman 05/14/2000\n42   */\n43  \n44  public\
          \ final class LocateReplyMessage_1_1 extends Message_1_1 implements LocateReplyMessage\n\
          45  {\n46  "
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_1.java
          kind: Class
          name: LocateReplyMessage_1_1
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: " 99          return MessageBase.getSystemException(exClassName,\
          \ minorCode, completionStatus, message, wrapper);\n100      }\n101  \n102\
          \      public IOR getIOR()\n103      {\n104          return this.ior;\n\
          105      }\n106  \n107      // IO methods\n108  \n109      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n110      {\n111          super.read(istream);\n112         \
          \ this.request_id = istream.read_ulong();\n113          this.reply_status\
          \ = istream.read_long();\n114          isValidReplyStatus(this.reply_status);\
          \ // raises exception on error\n115  \n116          // GIOP 1.2 LocateReply\
          \ message bodies are not aligned on 8 byte boundaries.\n117  \n118     \
          \     // The code below reads the reply body in some cases LOC_SYSTEM_EXCEPTION\
          \ & OBJECT_FORWARD & OBJECT_FORWARD_PERM\n119          // & LOC_NEEDS_ADDRESSING_MODE"
        lineNumber: 109
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_2.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "149          else if (this.reply_status == LOC_NEEDS_ADDRESSING_MODE)\n\
          150          {\n151              // read GIOP::AddressingDisposition from\
          \ body and resend the original request using the requested addressing\n\
          152              // mode. The resending is transparent to the caller.\n\
          153              this.addrDisposition = AddressingDispositionHelper.read(istream);\n\
          154          }\n155      }\n156  \n157      // Note, this writes only the\
          \ header information. SystemException or IOR or GIOP::AddressingDisposition\
          \ may be\n158      // written afterwards into the reply mesg body.\n159\
          \      public void write(org.omg.CORBA.portable.OutputStream ostream)\n\
          160      {\n161          super.write(ostream);\n162          ostream.write_ulong(this.request_id);\n\
          163          ostream.write_long(this.reply_status);\n164  \n165        \
          \  // GIOP 1.2 LocateReply message bodies are not aligned on 8 byte boundaries.\n\
          166      }\n167  \n168      // Static methods\n169  "
        lineNumber: 159
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_2.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "26  package org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders;\n\
          27  \n28  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          29  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          30  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n31  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IOR;\n32  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          33  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n34  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          36  import org.omg.CORBA.CompletionStatus;\n37  import org.omg.CORBA.SystemException;\n\
          38  \n39  /**\n40   * This implements the GIOP 1.2 LocateReply header.\n\
          41   * \n42   * @author Ram Jeyaraman 05/14/2000\n43   */\n44  \n45  public\
          \ final class LocateReplyMessage_1_2 extends Message_1_2 implements LocateReplyMessage\n\
          46  {"
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_2.java
          kind: Class
          name: LocateReplyMessage_1_2
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "27  \n28  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          29  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          30  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n31  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IOR;\n32  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          33  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n34  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          36  import org.omg.CORBA.CompletionStatus;\n37  import org.omg.CORBA.SystemException;\n\
          38  \n39  /**\n40   * This implements the GIOP 1.2 LocateReply header.\n\
          41   * \n42   * @author Ram Jeyaraman 05/14/2000\n43   */\n44  \n45  public\
          \ final class LocateReplyMessage_1_2 extends Message_1_2 implements LocateReplyMessage\n\
          46  {\n47  "
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage_1_2.java
          kind: Class
          name: LocateReplyMessage_1_2
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: " 84  \n 85      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n 86      {\n 87          super.read(istream);;\n 88        \
          \  this.request_id = istream.read_ulong();\n 89          int _len0 = istream.read_long();\n\
          \ 90          this.object_key = new byte[_len0];\n 91          istream.read_octet_array(this.object_key,\
          \ 0, _len0);\n 92      }\n 93  \n 94      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n 95      {\n 96          super.write(ostream);\n 97        \
          \  ostream.write_ulong(this.request_id);\n 98          nullCheck(this.object_key);\n\
          \ 99          ostream.write_long(this.object_key.length);\n100         \
          \ ostream.write_octet_array(this.object_key, 0, this.object_key.length);\n\
          101      }\n102  \n103      public void callback(MessageHandler handler)\
          \ throws java.io.IOException\n104      {"
        lineNumber: 94
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateRequestMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateRequestMessage_1_0.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "75          {\n76              // this will raise a MARSHAL exception\
          \ upon errors.\n77              this.objectKey = MessageBase.extractObjectKey(object_key,\
          \ orb);\n78          }\n79  \n80          return this.objectKey;\n81   \
          \   }\n82  \n83      // IO methods\n84  \n85      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n86      {\n87          super.read(istream);;\n88          this.request_id\
          \ = istream.read_ulong();\n89          int _len0 = istream.read_long();\n\
          90          this.object_key = new byte[_len0];\n91          istream.read_octet_array(this.object_key,\
          \ 0, _len0);\n92      }\n93  \n94      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n95      {"
        lineNumber: 85
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateRequestMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateRequestMessage_1_0.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: " 85  \n 86      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n 87      {\n 88          super.read(istream);\n 89         \
          \ this.request_id = istream.read_ulong();\n 90          int _len1 = istream.read_long();\n\
          \ 91          this.object_key = new byte[_len1];\n 92          istream.read_octet_array(this.object_key,\
          \ 0, _len1);\n 93      }\n 94  \n 95      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n 96      {\n 97          super.write(ostream);\n 98        \
          \  ostream.write_ulong(this.request_id);\n 99          nullCheck(this.object_key);\n\
          100          ostream.write_long(this.object_key.length);\n101          ostream.write_octet_array(this.object_key,\
          \ 0, this.object_key.length);\n102      }\n103  \n104      public void callback(MessageHandler\
          \ handler) throws java.io.IOException\n105      {"
        lineNumber: 95
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateRequestMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateRequestMessage_1_1.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "76          {\n77              // this will raise a MARSHAL exception\
          \ upon errors.\n78              this.objectKey = MessageBase.extractObjectKey(object_key,\
          \ orb);\n79          }\n80  \n81          return this.objectKey;\n82   \
          \   }\n83  \n84      // IO methods\n85  \n86      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n87      {\n88          super.read(istream);\n89          this.request_id\
          \ = istream.read_ulong();\n90          int _len1 = istream.read_long();\n\
          91          this.object_key = new byte[_len1];\n92          istream.read_octet_array(this.object_key,\
          \ 0, _len1);\n93      }\n94  \n95      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n96      {"
        lineNumber: 86
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateRequestMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateRequestMessage_1_1.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: " 82      // IO methods\n 83  \n 84      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n 85      {\n 86          super.read(istream);\n 87         \
          \ this.request_id = istream.read_ulong();\n 88          this.target = TargetAddressHelper.read(istream);\n\
          \ 89          getObjectKey(); // this does AddressingDisposition check\n\
          \ 90      }\n 91  \n 92      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n 93      {\n 94          super.write(ostream);\n 95        \
          \  ostream.write_ulong(this.request_id);\n 96          nullCheck(this.target);\n\
          \ 97          TargetAddressHelper.write(ostream, this.target);\n 98    \
          \  }\n 99  \n100      public void callback(MessageHandler handler) throws\
          \ java.io.IOException\n101      {\n102          handler.handleInput(this);"
        lineNumber: 92
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateRequestMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateRequestMessage_1_2.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "74          {\n75              // this will raise a MARSHAL exception\
          \ upon errors.\n76              this.objectKey = MessageBase.extractObjectKey(target,\
          \ orb);\n77          }\n78  \n79          return this.objectKey;\n80   \
          \   }\n81  \n82      // IO methods\n83  \n84      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n85      {\n86          super.read(istream);\n87          this.request_id\
          \ = istream.read_ulong();\n88          this.target = TargetAddressHelper.read(istream);\n\
          89          getObjectKey(); // this does AddressingDisposition check\n90\
          \      }\n91  \n92      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n93      {\n94          super.write(ostream);"
        lineNumber: 84
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateRequestMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateRequestMessage_1_2.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "42  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          43  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPFactories;\n44  import\
          \ org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfile;\n45  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfileTemplate;\n\
          46  import org.jboss.com.sun.corba.se.spi.ior.iiop.RequestPartitioningComponent;\n\
          47  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n48 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n49  import org.jboss.com.sun.corba.se.spi.servicecontext.ServiceContexts;\n\
          50  import org.jboss.com.sun.corba.se.spi.transport.CorbaConnection;\n51\
          \  import org.jboss.com.sun.corba.se.spi.transport.ReadTimeouts;\n52  import\
          \ org.omg.CORBA.CompletionStatus;\n53  import org.omg.CORBA.Principal;\n\
          54  import org.omg.CORBA.SystemException;\n55  import org.omg.IOP.TaggedProfile;\n\
          56  \n57  /**\n58   * This class acts as the base class for the various\
          \ GIOP message types. This also serves as a factory to create various\n\
          59   * message types. We currently support GIOP 1.0, 1.1 and 1.2 message\
          \ types.\n60   * \n61   * @author Ram Jeyaraman 05/14/2000\n62   */"
        lineNumber: 52
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/MessageBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/MessageBase.java
          kind: Class
          name: MessageBase
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "43  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPFactories;\n\
          44  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfile;\n45  import\
          \ org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfileTemplate;\n46  import\
          \ org.jboss.com.sun.corba.se.spi.ior.iiop.RequestPartitioningComponent;\n\
          47  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n48 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n49  import org.jboss.com.sun.corba.se.spi.servicecontext.ServiceContexts;\n\
          50  import org.jboss.com.sun.corba.se.spi.transport.CorbaConnection;\n51\
          \  import org.jboss.com.sun.corba.se.spi.transport.ReadTimeouts;\n52  import\
          \ org.omg.CORBA.CompletionStatus;\n53  import org.omg.CORBA.Principal;\n\
          54  import org.omg.CORBA.SystemException;\n55  import org.omg.IOP.TaggedProfile;\n\
          56  \n57  /**\n58   * This class acts as the base class for the various\
          \ GIOP message types. This also serves as a factory to create various\n\
          59   * message types. We currently support GIOP 1.0, 1.1 and 1.2 message\
          \ types.\n60   * \n61   * @author Ram Jeyaraman 05/14/2000\n62   */\n63\
          \  "
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/MessageBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/MessageBase.java
          kind: Class
          name: MessageBase
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "44  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfile;\n\
          45  import org.jboss.com.sun.corba.se.spi.ior.iiop.IIOPProfileTemplate;\n\
          46  import org.jboss.com.sun.corba.se.spi.ior.iiop.RequestPartitioningComponent;\n\
          47  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n48 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n49  import org.jboss.com.sun.corba.se.spi.servicecontext.ServiceContexts;\n\
          50  import org.jboss.com.sun.corba.se.spi.transport.CorbaConnection;\n51\
          \  import org.jboss.com.sun.corba.se.spi.transport.ReadTimeouts;\n52  import\
          \ org.omg.CORBA.CompletionStatus;\n53  import org.omg.CORBA.Principal;\n\
          54  import org.omg.CORBA.SystemException;\n55  import org.omg.IOP.TaggedProfile;\n\
          56  \n57  /**\n58   * This class acts as the base class for the various\
          \ GIOP message types. This also serves as a factory to create various\n\
          59   * message types. We currently support GIOP 1.0, 1.1 and 1.2 message\
          \ types.\n60   * \n61   * @author Ram Jeyaraman 05/14/2000\n62   */\n63\
          \  \n64  @SuppressWarnings(\"deprecation\")"
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/MessageBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/MessageBase.java
          kind: Class
          name: MessageBase
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "125      public FragmentMessage createFragmentMessage()\n126  \
          \    {\n127          throw wrapper.fragmentationDisallowed(CompletionStatus.COMPLETED_MAYBE);\n\
          128      }\n129  \n130      // IO methods\n131  \n132      // This should\
          \ do nothing even if it is called. The Message Header already is read off\
          \ java.io.InputStream (not a\n133      // CDRInputStream) by IIOPConnection\
          \ in order to choose the correct CDR Version, msg_type, and msg_size. So,\
          \ we\n134      // would never need to read the Message Header off a CDRInputStream.\n\
          135      public void read(org.omg.CORBA.portable.InputStream istream)\n\
          136      {\n137          /*\n138           * this.magic = istream.read_long();\
          \ this.GIOP_version = (new GIOPVersion()).read(istream); this.byte_order\
          \ =\n139           * istream.read_boolean(); this.message_type = istream.read_octet();\
          \ this.message_size = istream.read_ulong();\n140           */\n141     \
          \ }\n142  \n143      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n144      {\n145          ostream.write_long(this.magic);"
        lineNumber: 135
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/Message_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/Message_1_0.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "133      // CDRInputStream) by IIOPConnection in order to choose\
          \ the correct CDR Version, msg_type, and msg_size. So, we\n134      // would\
          \ never need to read the Message Header off a CDRInputStream.\n135     \
          \ public void read(org.omg.CORBA.portable.InputStream istream)\n136    \
          \  {\n137          /*\n138           * this.magic = istream.read_long();\
          \ this.GIOP_version = (new GIOPVersion()).read(istream); this.byte_order\
          \ =\n139           * istream.read_boolean(); this.message_type = istream.read_octet();\
          \ this.message_size = istream.read_ulong();\n140           */\n141     \
          \ }\n142  \n143      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n144      {\n145          ostream.write_long(this.magic);\n146\
          \          nullCheck(this.GIOP_version);\n147          this.GIOP_version.write(ostream);\n\
          148          ostream.write_boolean(this.byte_order);\n149          ostream.write_octet(this.message_type);\n\
          150          ostream.write_ulong(this.message_size);\n151      }\n152  \n\
          153  } // class Message_1_0"
        lineNumber: 143
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/Message_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/Message_1_0.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders;\n\
          27  \n28  import java.nio.ByteBuffer;\n29  \n30  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          31  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n32  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n33  import org.omg.CORBA.CompletionStatus;\n\
          34  \n35  /*\n36   * This implements the GIOP 1.0 Message header.\n37  \
          \ *\n38   * @author Ram Jeyaraman 05/14/2000\n39   */\n40  \n41  public\
          \ class Message_1_0 extends MessageBase\n42  {\n43  "
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/Message_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/Message_1_0.java
          kind: Class
          name: Message_1_0
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "178          }\n179  \n180          throw wrapper.giopVersionError(CompletionStatus.COMPLETED_MAYBE);\n\
          181      }\n182  \n183      // IO methods\n184  \n185      // This should\
          \ do nothing even if it is called. The Message Header is read off a java.io.InputStream\
          \ (not a\n186      // CDRInputStream) by IIOPConnection in order to choose\
          \ the correct CDR Version , msg_type, and msg_size. So, we\n187      //\
          \ would never need to read the Message Header off a CDRInputStream.\n188\
          \      public void read(org.omg.CORBA.portable.InputStream istream)\n189\
          \      {\n190          /*\n191           * this.magic = istream.read_long();\
          \ this.GIOP_version = (new GIOPVersion()).read(istream); this.flags =\n\
          192           * istream.read_octet(); this.message_type = istream.read_octet();\
          \ this.message_size = istream.read_ulong();\n193           */\n194     \
          \ }\n195  \n196      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n197      {\n198          ostream.write_long(this.magic);"
        lineNumber: 188
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/Message_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/Message_1_1.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "186      // CDRInputStream) by IIOPConnection in order to choose\
          \ the correct CDR Version , msg_type, and msg_size. So, we\n187      //\
          \ would never need to read the Message Header off a CDRInputStream.\n188\
          \      public void read(org.omg.CORBA.portable.InputStream istream)\n189\
          \      {\n190          /*\n191           * this.magic = istream.read_long();\
          \ this.GIOP_version = (new GIOPVersion()).read(istream); this.flags =\n\
          192           * istream.read_octet(); this.message_type = istream.read_octet();\
          \ this.message_size = istream.read_ulong();\n193           */\n194     \
          \ }\n195  \n196      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n197      {\n198          ostream.write_long(this.magic);\n199\
          \          nullCheck(this.GIOP_version);\n200          this.GIOP_version.write(ostream);\n\
          201          ostream.write_octet(this.flags);\n202          ostream.write_octet(this.message_type);\n\
          203          ostream.write_ulong(this.message_size);\n204      }\n205  }\
          \ // class Message_1_1\n"
        lineNumber: 196
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/Message_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/Message_1_1.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders;\n\
          27  \n28  import java.nio.ByteBuffer;\n29  \n30  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          31  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n32  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n33  import org.omg.CORBA.CompletionStatus;\n\
          34  \n35  /*\n36   * This implements the GIOP 1.1 & 1.2 Message header.\n\
          37   *\n38   * @author Ram Jeyaraman 05/14/2000\n39   */\n40  \n41  public\
          \ class Message_1_1 extends MessageBase\n42  {\n43  "
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/Message_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/Message_1_1.java
          kind: Class
          name: Message_1_1
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "118          return this.ior;\n119      }\n120  \n121      public\
          \ void setIOR(IOR ior)\n122      {\n123          this.ior = ior;\n124  \
          \    }\n125  \n126      // IO methods\n127  \n128      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n129      {\n130          super.read(istream);\n131         \
          \ this.service_contexts = new ServiceContexts((org.omg.CORBA_2_3.portable.InputStream)\
          \ istream);\n132          this.request_id = istream.read_ulong();\n133 \
          \         this.reply_status = istream.read_long();\n134          isValidReplyStatus(this.reply_status);\
          \ // raises exception on error\n135  \n136          // The code below reads\
          \ the reply body in some cases SYSTEM_EXCEPTION & LOCATION_FORWARD\n137\
          \          if (this.reply_status == SYSTEM_EXCEPTION)\n138          {"
        lineNumber: 128
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_0.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "121      public void setIOR(IOR ior)\n122      {\n123         \
          \ this.ior = ior;\n124      }\n125  \n126      // IO methods\n127  \n128\
          \      public void read(org.omg.CORBA.portable.InputStream istream)\n129\
          \      {\n130          super.read(istream);\n131          this.service_contexts\
          \ = new ServiceContexts((org.omg.CORBA_2_3.portable.InputStream) istream);\n\
          132          this.request_id = istream.read_ulong();\n133          this.reply_status\
          \ = istream.read_long();\n134          isValidReplyStatus(this.reply_status);\
          \ // raises exception on error\n135  \n136          // The code below reads\
          \ the reply body in some cases SYSTEM_EXCEPTION & LOCATION_FORWARD\n137\
          \          if (this.reply_status == SYSTEM_EXCEPTION)\n138          {\n\
          139  \n140              String reposId = istream.read_string();\n141   \
          \           this.exClassName = ORBUtility.classNameOf(reposId);"
        lineNumber: 131
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_0.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "164          }\n165          else if (this.reply_status == LOCATION_FORWARD)\n\
          166          {\n167              CDRInputStream cdr = (CDRInputStream) istream;\n\
          168              this.ior = IORFactories.makeIOR(cdr);\n169          }\n\
          170      }\n171  \n172      // Note, this writes only the header information.\
          \ SystemException or IOR may be written afterwards into the reply\n173 \
          \     // mesg body.\n174      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n175      {\n176          super.write(ostream);\n177        \
          \  if (this.service_contexts != null)\n178          {\n179             \
          \ service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream) ostream,\
          \ GIOPVersion.V1_0);\n180          }\n181          else\n182          {\n\
          183              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream);\n184          }"
        lineNumber: 174
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_0.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "169          }\n170      }\n171  \n172      // Note, this writes\
          \ only the header information. SystemException or IOR may be written afterwards\
          \ into the reply\n173      // mesg body.\n174      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n175      {\n176          super.write(ostream);\n177        \
          \  if (this.service_contexts != null)\n178          {\n179             \
          \ service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream) ostream,\
          \ GIOPVersion.V1_0);\n180          }\n181          else\n182          {\n\
          183              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream);\n184          }\n185          ostream.write_ulong(this.request_id);\n\
          186          ostream.write_long(this.reply_status);\n187      }\n188  \n\
          189      // Static methods"
        lineNumber: 179
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_0.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "173      // mesg body.\n174      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n175      {\n176          super.write(ostream);\n177        \
          \  if (this.service_contexts != null)\n178          {\n179             \
          \ service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream) ostream,\
          \ GIOPVersion.V1_0);\n180          }\n181          else\n182          {\n\
          183              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream);\n184          }\n185          ostream.write_ulong(this.request_id);\n\
          186          ostream.write_long(this.reply_status);\n187      }\n188  \n\
          189      // Static methods\n190  \n191      public static void isValidReplyStatus(int\
          \ replyStatus)\n192      {\n193          switch (replyStatus)"
        lineNumber: 183
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_0.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "27  \n28  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          29  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          30  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n31  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IOR;\n32  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          33  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n34  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          36  import org.jboss.com.sun.corba.se.spi.servicecontext.ServiceContexts;\n\
          37  import org.omg.CORBA.CompletionStatus;\n38  import org.omg.CORBA.SystemException;\n\
          39  \n40  /**\n41   * This implements the GIOP 1.0 Reply header.\n42   *\
          \ \n43   * @author Ram Jeyaraman 05/14/2000\n44   */\n45  \n46  public final\
          \ class ReplyMessage_1_0 extends Message_1_0 implements ReplyMessage\n47\
          \  {"
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_0.java
          kind: Class
          name: ReplyMessage_1_0
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "28  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          29  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          30  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n31  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IOR;\n32  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          33  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n34  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          36  import org.jboss.com.sun.corba.se.spi.servicecontext.ServiceContexts;\n\
          37  import org.omg.CORBA.CompletionStatus;\n38  import org.omg.CORBA.SystemException;\n\
          39  \n40  /**\n41   * This implements the GIOP 1.0 Reply header.\n42   *\
          \ \n43   * @author Ram Jeyaraman 05/14/2000\n44   */\n45  \n46  public final\
          \ class ReplyMessage_1_0 extends Message_1_0 implements ReplyMessage\n47\
          \  {\n48  "
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_0.java
          kind: Class
          name: ReplyMessage_1_0
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "118          return this.ior;\n119      }\n120  \n121      public\
          \ void setIOR(IOR ior)\n122      {\n123          this.ior = ior;\n124  \
          \    }\n125  \n126      // IO methods\n127  \n128      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n129      {\n130          super.read(istream);\n131         \
          \ this.service_contexts = new ServiceContexts((org.omg.CORBA_2_3.portable.InputStream)\
          \ istream);\n132          this.request_id = istream.read_ulong();\n133 \
          \         this.reply_status = istream.read_long();\n134          isValidReplyStatus(this.reply_status);\
          \ // raises exception on error\n135  \n136          // The code below reads\
          \ the reply body in some cases SYSTEM_EXCEPTION & LOCATION_FORWARD\n137\
          \          if (this.reply_status == SYSTEM_EXCEPTION)\n138          {"
        lineNumber: 128
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_1.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "121      public void setIOR(IOR ior)\n122      {\n123         \
          \ this.ior = ior;\n124      }\n125  \n126      // IO methods\n127  \n128\
          \      public void read(org.omg.CORBA.portable.InputStream istream)\n129\
          \      {\n130          super.read(istream);\n131          this.service_contexts\
          \ = new ServiceContexts((org.omg.CORBA_2_3.portable.InputStream) istream);\n\
          132          this.request_id = istream.read_ulong();\n133          this.reply_status\
          \ = istream.read_long();\n134          isValidReplyStatus(this.reply_status);\
          \ // raises exception on error\n135  \n136          // The code below reads\
          \ the reply body in some cases SYSTEM_EXCEPTION & LOCATION_FORWARD\n137\
          \          if (this.reply_status == SYSTEM_EXCEPTION)\n138          {\n\
          139  \n140              String reposId = istream.read_string();\n141   \
          \           this.exClassName = ORBUtility.classNameOf(reposId);"
        lineNumber: 131
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_1.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "163          }\n164          else if (this.reply_status == LOCATION_FORWARD)\n\
          165          {\n166              CDRInputStream cdr = (CDRInputStream) istream;\n\
          167              this.ior = IORFactories.makeIOR(cdr);\n168          }\n\
          169      }\n170  \n171      // Note, this writes only the header information.\
          \ SystemException or IOR may be written afterwards into the reply\n172 \
          \     // mesg body.\n173      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n174      {\n175          super.write(ostream);\n176        \
          \  if (this.service_contexts != null)\n177          {\n178             \
          \ service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream) ostream,\
          \ GIOPVersion.V1_1);\n179          }\n180          else\n181          {\n\
          182              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream);\n183          }"
        lineNumber: 173
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_1.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "168          }\n169      }\n170  \n171      // Note, this writes\
          \ only the header information. SystemException or IOR may be written afterwards\
          \ into the reply\n172      // mesg body.\n173      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n174      {\n175          super.write(ostream);\n176        \
          \  if (this.service_contexts != null)\n177          {\n178             \
          \ service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream) ostream,\
          \ GIOPVersion.V1_1);\n179          }\n180          else\n181          {\n\
          182              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream);\n183          }\n184          ostream.write_ulong(this.request_id);\n\
          185          ostream.write_long(this.reply_status);\n186      }\n187  \n\
          188      // Static methods"
        lineNumber: 178
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_1.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "172      // mesg body.\n173      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n174      {\n175          super.write(ostream);\n176        \
          \  if (this.service_contexts != null)\n177          {\n178             \
          \ service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream) ostream,\
          \ GIOPVersion.V1_1);\n179          }\n180          else\n181          {\n\
          182              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream);\n183          }\n184          ostream.write_ulong(this.request_id);\n\
          185          ostream.write_long(this.reply_status);\n186      }\n187  \n\
          188      // Static methods\n189  \n190      public static void isValidReplyStatus(int\
          \ replyStatus)\n191      {\n192          switch (replyStatus)"
        lineNumber: 182
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_1.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "27  \n28  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          29  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          30  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n31  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IOR;\n32  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          33  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n34  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          36  import org.jboss.com.sun.corba.se.spi.servicecontext.ServiceContexts;\n\
          37  import org.omg.CORBA.CompletionStatus;\n38  import org.omg.CORBA.SystemException;\n\
          39  \n40  /**\n41   * This implements the GIOP 1.1 Reply header.\n42   *\
          \ \n43   * @author Ram Jeyaraman 05/14/2000\n44   */\n45  \n46  public final\
          \ class ReplyMessage_1_1 extends Message_1_1 implements ReplyMessage\n47\
          \  {"
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_1.java
          kind: Class
          name: ReplyMessage_1_1
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "28  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          29  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          30  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n31  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IOR;\n32  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          33  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n34  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n35  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          36  import org.jboss.com.sun.corba.se.spi.servicecontext.ServiceContexts;\n\
          37  import org.omg.CORBA.CompletionStatus;\n38  import org.omg.CORBA.SystemException;\n\
          39  \n40  /**\n41   * This implements the GIOP 1.1 Reply header.\n42   *\
          \ \n43   * @author Ram Jeyaraman 05/14/2000\n44   */\n45  \n46  public final\
          \ class ReplyMessage_1_1 extends Message_1_1 implements ReplyMessage\n47\
          \  {\n48  "
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_1.java
          kind: Class
          name: ReplyMessage_1_1
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "119          return this.ior;\n120      }\n121  \n122      public\
          \ void setIOR(IOR ior)\n123      {\n124          this.ior = ior;\n125  \
          \    }\n126  \n127      // IO methods\n128  \n129      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n130      {\n131          super.read(istream);\n132         \
          \ this.request_id = istream.read_ulong();\n133          this.reply_status\
          \ = istream.read_long();\n134          isValidReplyStatus(this.reply_status);\
          \ // raises exception on error\n135          this.service_contexts = new\
          \ ServiceContexts((org.omg.CORBA_2_3.portable.InputStream) istream);\n136\
          \  \n137          // CORBA formal 00-11-0 15.4.2.2 GIOP 1.2 body must be\
          \ aligned on an 8 octet boundary. Ensures that the first\n138          //\
          \ read operation called from the stub code, during body deconstruction,\
          \ would skip the header padding, that was\n139          // inserted to ensure\
          \ that the body was aligned on an 8-octet boundary."
        lineNumber: 129
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_2.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "125      }\n126  \n127      // IO methods\n128  \n129      public\
          \ void read(org.omg.CORBA.portable.InputStream istream)\n130      {\n131\
          \          super.read(istream);\n132          this.request_id = istream.read_ulong();\n\
          133          this.reply_status = istream.read_long();\n134          isValidReplyStatus(this.reply_status);\
          \ // raises exception on error\n135          this.service_contexts = new\
          \ ServiceContexts((org.omg.CORBA_2_3.portable.InputStream) istream);\n136\
          \  \n137          // CORBA formal 00-11-0 15.4.2.2 GIOP 1.2 body must be\
          \ aligned on an 8 octet boundary. Ensures that the first\n138          //\
          \ read operation called from the stub code, during body deconstruction,\
          \ would skip the header padding, that was\n139          // inserted to ensure\
          \ that the body was aligned on an 8-octet boundary.\n140          ((CDRInputStream)\
          \ istream).setHeaderPadding(true);\n141  \n142          // The code below\
          \ reads the reply body in some cases SYSTEM_EXCEPTION & LOCATION_FORWARD\
          \ & LOCATION_FORWARD_PERM\n143          // & NEEDS_ADDRESSING_MODE\n144\
          \          if (this.reply_status == SYSTEM_EXCEPTION)\n145          {"
        lineNumber: 135
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_2.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "177          else if (this.reply_status == NEEDS_ADDRESSING_MODE)\n\
          178          {\n179              // read GIOP::AddressingDisposition from\
          \ body and resend the original request using the requested addressing\n\
          180              // mode. The resending is transparent to the client program.\n\
          181              this.addrDisposition = AddressingDispositionHelper.read(istream);\n\
          182          }\n183      }\n184  \n185      // Note, this writes only the\
          \ header information. SystemException or IOR or GIOP::AddressingDisposition\
          \ may be\n186      // written afterwards into the reply mesg body.\n187\
          \      public void write(org.omg.CORBA.portable.OutputStream ostream)\n\
          188      {\n189          super.write(ostream);\n190          ostream.write_ulong(this.request_id);\n\
          191          ostream.write_long(this.reply_status);\n192          if (this.service_contexts\
          \ != null)\n193          {\n194              service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream, GIOPVersion.V1_2);\n195          }\n196          else\n197  \
          \        {"
        lineNumber: 187
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_2.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "184  \n185      // Note, this writes only the header information.\
          \ SystemException or IOR or GIOP::AddressingDisposition may be\n186    \
          \  // written afterwards into the reply mesg body.\n187      public void\
          \ write(org.omg.CORBA.portable.OutputStream ostream)\n188      {\n189  \
          \        super.write(ostream);\n190          ostream.write_ulong(this.request_id);\n\
          191          ostream.write_long(this.reply_status);\n192          if (this.service_contexts\
          \ != null)\n193          {\n194              service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream, GIOPVersion.V1_2);\n195          }\n196          else\n197  \
          \        {\n198              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream);\n199          }\n200  \n201          // CORBA formal 00-11-0\
          \ 15.4.2.2 GIOP 1.2 body must be aligned on an 8 octet boundary. Ensures\
          \ that the first\n202          // write operation called from the stub code,\
          \ during body construction, would insert a header padding, such that\n203\
          \          // the body is aligned on an 8-octet boundary.\n204         \
          \ ((CDROutputStream) ostream).setHeaderPadding(true);"
        lineNumber: 194
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_2.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "188      {\n189          super.write(ostream);\n190          ostream.write_ulong(this.request_id);\n\
          191          ostream.write_long(this.reply_status);\n192          if (this.service_contexts\
          \ != null)\n193          {\n194              service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream, GIOPVersion.V1_2);\n195          }\n196          else\n197  \
          \        {\n198              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream);\n199          }\n200  \n201          // CORBA formal 00-11-0\
          \ 15.4.2.2 GIOP 1.2 body must be aligned on an 8 octet boundary. Ensures\
          \ that the first\n202          // write operation called from the stub code,\
          \ during body construction, would insert a header padding, such that\n203\
          \          // the body is aligned on an 8-octet boundary.\n204         \
          \ ((CDROutputStream) ostream).setHeaderPadding(true);\n205  \n206      }\n\
          207  \n208      // Static methods"
        lineNumber: 198
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_2.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "28  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          29  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;\n30\
          \  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          31  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n32  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IOR;\n33  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          34  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n35  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n36  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          37  import org.jboss.com.sun.corba.se.spi.servicecontext.ServiceContexts;\n\
          38  import org.omg.CORBA.CompletionStatus;\n39  import org.omg.CORBA.SystemException;\n\
          40  \n41  /**\n42   * This implements the GIOP 1.2 Reply header.\n43   *\
          \ \n44   * @author Ram Jeyaraman 05/14/2000\n45   */\n46  \n47  public final\
          \ class ReplyMessage_1_2 extends Message_1_2 implements ReplyMessage\n48\
          \  {"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_2.java
          kind: Class
          name: ReplyMessage_1_2
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "29  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;\n\
          30  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          31  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n32  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IOR;\n33  import org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n\
          34  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n35  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n36  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          37  import org.jboss.com.sun.corba.se.spi.servicecontext.ServiceContexts;\n\
          38  import org.omg.CORBA.CompletionStatus;\n39  import org.omg.CORBA.SystemException;\n\
          40  \n41  /**\n42   * This implements the GIOP 1.2 Reply header.\n43   *\
          \ \n44   * @author Ram Jeyaraman 05/14/2000\n45   */\n46  \n47  public final\
          \ class ReplyMessage_1_2 extends Message_1_2 implements ReplyMessage\n48\
          \  {\n49  "
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage_1_2.java
          kind: Class
          name: ReplyMessage_1_2
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "126      // Mutators\n127  \n128      public void setThreadPoolToUse(int\
          \ poolToUse)\n129      {\n130          // No-op, must be GIOP Version 1.1\
          \ or greater\n131          // to support this SUN PROPRIETARY EXTENSION.\n\
          132      }\n133  \n134      // IO methods\n135  \n136      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n137      {\n138          super.read(istream);\n139         \
          \ this.service_contexts = new ServiceContexts((org.omg.CORBA_2_3.portable.InputStream)\
          \ istream);\n140          this.request_id = istream.read_ulong();\n141 \
          \         this.response_expected = istream.read_boolean();\n142        \
          \  int _len0 = istream.read_long();\n143          this.object_key = new\
          \ byte[_len0];\n144          istream.read_octet_array(this.object_key, 0,\
          \ _len0);\n145          this.operation = istream.read_string();\n146   \
          \       this.requesting_principal = istream.read_Principal();"
        lineNumber: 136
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_0.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "129      {\n130          // No-op, must be GIOP Version 1.1 or\
          \ greater\n131          // to support this SUN PROPRIETARY EXTENSION.\n\
          132      }\n133  \n134      // IO methods\n135  \n136      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n137      {\n138          super.read(istream);\n139         \
          \ this.service_contexts = new ServiceContexts((org.omg.CORBA_2_3.portable.InputStream)\
          \ istream);\n140          this.request_id = istream.read_ulong();\n141 \
          \         this.response_expected = istream.read_boolean();\n142        \
          \  int _len0 = istream.read_long();\n143          this.object_key = new\
          \ byte[_len0];\n144          istream.read_octet_array(this.object_key, 0,\
          \ _len0);\n145          this.operation = istream.read_string();\n146   \
          \       this.requesting_principal = istream.read_Principal();\n147     \
          \ }\n148  \n149      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)"
        lineNumber: 139
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_0.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "139          this.service_contexts = new ServiceContexts((org.omg.CORBA_2_3.portable.InputStream)\
          \ istream);\n140          this.request_id = istream.read_ulong();\n141 \
          \         this.response_expected = istream.read_boolean();\n142        \
          \  int _len0 = istream.read_long();\n143          this.object_key = new\
          \ byte[_len0];\n144          istream.read_octet_array(this.object_key, 0,\
          \ _len0);\n145          this.operation = istream.read_string();\n146   \
          \       this.requesting_principal = istream.read_Principal();\n147     \
          \ }\n148  \n149      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n150      {\n151          super.write(ostream);\n152        \
          \  if (this.service_contexts != null)\n153          {\n154             \
          \ service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream) ostream,\
          \ GIOPVersion.V1_0);\n155          }\n156          else\n157          {\n\
          158              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream);\n159          }"
        lineNumber: 149
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_0.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "144          istream.read_octet_array(this.object_key, 0, _len0);\n\
          145          this.operation = istream.read_string();\n146          this.requesting_principal\
          \ = istream.read_Principal();\n147      }\n148  \n149      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n150      {\n151          super.write(ostream);\n152        \
          \  if (this.service_contexts != null)\n153          {\n154             \
          \ service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream) ostream,\
          \ GIOPVersion.V1_0);\n155          }\n156          else\n157          {\n\
          158              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream);\n159          }\n160          ostream.write_ulong(this.request_id);\n\
          161          ostream.write_boolean(this.response_expected);\n162       \
          \   nullCheck(this.object_key);\n163          ostream.write_long(this.object_key.length);\n\
          164          ostream.write_octet_array(this.object_key, 0, this.object_key.length);"
        lineNumber: 154
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_0.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "148  \n149      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n150      {\n151          super.write(ostream);\n152        \
          \  if (this.service_contexts != null)\n153          {\n154             \
          \ service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream) ostream,\
          \ GIOPVersion.V1_0);\n155          }\n156          else\n157          {\n\
          158              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream);\n159          }\n160          ostream.write_ulong(this.request_id);\n\
          161          ostream.write_boolean(this.response_expected);\n162       \
          \   nullCheck(this.object_key);\n163          ostream.write_long(this.object_key.length);\n\
          164          ostream.write_octet_array(this.object_key, 0, this.object_key.length);\n\
          165          ostream.write_string(this.operation);\n166          if (this.requesting_principal\
          \ != null)\n167          {\n168              ostream.write_Principal(this.requesting_principal);"
        lineNumber: 158
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_0.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders;\n\
          27  \n28  import org.jboss.com.sun.corba.se.spi.ior.ObjectKey;\n29  import\
          \ org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n30  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n\
          31  import org.jboss.com.sun.corba.se.spi.servicecontext.ServiceContexts;\n\
          32  import org.omg.CORBA.Principal;\n33  \n34  /**\n35   * This implements\
          \ the GIOP 1.0 Request header.\n36   * \n37   * @author Ram Jeyaraman 05/14/2000\n\
          38   */\n39  \n40  @SuppressWarnings(\"deprecation\")\n41  public final\
          \ class RequestMessage_1_0 extends Message_1_0 implements RequestMessage\n\
          42  {"
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_0.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_0.java
          kind: Class
          name: RequestMessage_1_0
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "126          return this.operation;\n127      }\n128  \n129   \
          \   public Principal getPrincipal()\n130      {\n131          return this.requesting_principal;\n\
          132      }\n133  \n134      // IO methods\n135  \n136      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n137      {\n138          super.read(istream);\n139         \
          \ this.service_contexts = new ServiceContexts((org.omg.CORBA_2_3.portable.InputStream)\
          \ istream);\n140          this.request_id = istream.read_ulong();\n141 \
          \         this.response_expected = istream.read_boolean();\n142        \
          \  this.reserved = new byte[3];\n143          for (int _o0 = 0; _o0 < (3);\
          \ ++_o0)\n144          {\n145              this.reserved[_o0] = istream.read_octet();\n\
          146          }"
        lineNumber: 136
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_1.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "129      public Principal getPrincipal()\n130      {\n131     \
          \     return this.requesting_principal;\n132      }\n133  \n134      //\
          \ IO methods\n135  \n136      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n137      {\n138          super.read(istream);\n139         \
          \ this.service_contexts = new ServiceContexts((org.omg.CORBA_2_3.portable.InputStream)\
          \ istream);\n140          this.request_id = istream.read_ulong();\n141 \
          \         this.response_expected = istream.read_boolean();\n142        \
          \  this.reserved = new byte[3];\n143          for (int _o0 = 0; _o0 < (3);\
          \ ++_o0)\n144          {\n145              this.reserved[_o0] = istream.read_octet();\n\
          146          }\n147          int _len1 = istream.read_long();\n148     \
          \     this.object_key = new byte[_len1];\n149          istream.read_octet_array(this.object_key,\
          \ 0, _len1);"
        lineNumber: 139
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_1.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "144          {\n145              this.reserved[_o0] = istream.read_octet();\n\
          146          }\n147          int _len1 = istream.read_long();\n148     \
          \     this.object_key = new byte[_len1];\n149          istream.read_octet_array(this.object_key,\
          \ 0, _len1);\n150          this.operation = istream.read_string();\n151\
          \          this.requesting_principal = istream.read_Principal();\n152  \
          \    }\n153  \n154      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n155      {\n156          super.write(ostream);\n157        \
          \  if (this.service_contexts != null)\n158          {\n159             \
          \ service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream) ostream,\
          \ GIOPVersion.V1_1);\n160          }\n161          else\n162          {\n\
          163              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream);\n164          }"
        lineNumber: 154
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_1.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "149          istream.read_octet_array(this.object_key, 0, _len1);\n\
          150          this.operation = istream.read_string();\n151          this.requesting_principal\
          \ = istream.read_Principal();\n152      }\n153  \n154      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n155      {\n156          super.write(ostream);\n157        \
          \  if (this.service_contexts != null)\n158          {\n159             \
          \ service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream) ostream,\
          \ GIOPVersion.V1_1);\n160          }\n161          else\n162          {\n\
          163              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream);\n164          }\n165          ostream.write_ulong(this.request_id);\n\
          166          ostream.write_boolean(this.response_expected);\n167       \
          \   nullCheck(this.reserved);\n168          if (this.reserved.length !=\
          \ (3))\n169          {"
        lineNumber: 159
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_1.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "153  \n154      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n155      {\n156          super.write(ostream);\n157        \
          \  if (this.service_contexts != null)\n158          {\n159             \
          \ service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream) ostream,\
          \ GIOPVersion.V1_1);\n160          }\n161          else\n162          {\n\
          163              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream);\n164          }\n165          ostream.write_ulong(this.request_id);\n\
          166          ostream.write_boolean(this.response_expected);\n167       \
          \   nullCheck(this.reserved);\n168          if (this.reserved.length !=\
          \ (3))\n169          {\n170              throw wrapper.badReservedLength(org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);\n\
          171          }\n172          for (int _i0 = 0; _i0 < (3); ++_i0)\n173  \
          \        {"
        lineNumber: 163
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_1.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: '160          }

          161          else

          162          {

          163              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)
          ostream);

          164          }

          165          ostream.write_ulong(this.request_id);

          166          ostream.write_boolean(this.response_expected);

          167          nullCheck(this.reserved);

          168          if (this.reserved.length != (3))

          169          {

          170              throw wrapper.badReservedLength(org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

          171          }

          172          for (int _i0 = 0; _i0 < (3); ++_i0)

          173          {

          174              ostream.write_octet(this.reserved[_i0]);

          175          }

          176          nullCheck(this.object_key);

          177          ostream.write_long(this.object_key.length);

          178          ostream.write_octet_array(this.object_key, 0, this.object_key.length);

          179          ostream.write_string(this.operation);

          180          if (this.requesting_principal != null)'
        lineNumber: 170
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_1.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "24   */\n25  \n26  package org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders;\n\
          27  \n28  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          29  import org.jboss.com.sun.corba.se.spi.ior.ObjectKey;\n30  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          31  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n32 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n33  import org.jboss.com.sun.corba.se.spi.servicecontext.ServiceContexts;\n\
          34  import org.omg.CORBA.Principal;\n35  \n36  /**\n37   * This implements\
          \ the GIOP 1.1 Request header.\n38   * \n39   * @author Ram Jeyaraman 05/14/2000\n\
          40   */\n41  \n42  @SuppressWarnings(\"deprecation\")\n43  public final\
          \ class RequestMessage_1_1 extends Message_1_1 implements RequestMessage\n\
          44  {"
        lineNumber: 34
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_1.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_1.java
          kind: Class
          name: RequestMessage_1_1
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "135          return null;\n136      }\n137  \n138      public ServiceContexts\
          \ getServiceContexts()\n139      {\n140          return this.service_contexts;\n\
          141      }\n142  \n143      // IO methods\n144  \n145      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n146      {\n147          super.read(istream);\n148         \
          \ this.request_id = istream.read_ulong();\n149          this.response_flags\
          \ = istream.read_octet();\n150          this.reserved = new byte[3];\n151\
          \          for (int _o0 = 0; _o0 < (3); ++_o0)\n152          {\n153    \
          \          this.reserved[_o0] = istream.read_octet();\n154          }\n\
          155          this.target = TargetAddressHelper.read(istream);"
        lineNumber: 145
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_2.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "148          this.request_id = istream.read_ulong();\n149     \
          \     this.response_flags = istream.read_octet();\n150          this.reserved\
          \ = new byte[3];\n151          for (int _o0 = 0; _o0 < (3); ++_o0)\n152\
          \          {\n153              this.reserved[_o0] = istream.read_octet();\n\
          154          }\n155          this.target = TargetAddressHelper.read(istream);\n\
          156          getObjectKey(); // this does AddressingDisposition check\n\
          157          this.operation = istream.read_string();\n158          this.service_contexts\
          \ = new ServiceContexts((org.omg.CORBA_2_3.portable.InputStream) istream);\n\
          159  \n160          // CORBA formal 00-11-0 15.4.2.2 GIOP 1.2 body must\
          \ be\n161          // aligned on an 8 octet boundary.\n162          // Ensures\
          \ that the first read operation called from the stub code,\n163        \
          \  // during body deconstruction, would skip the header padding, that was\n\
          164          // inserted to ensure that the body was aligned on an 8-octet\
          \ boundary.\n165          ((CDRInputStream) istream).setHeaderPadding(true);\n\
          166  \n167      }\n168  "
        lineNumber: 158
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_2.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "159  \n160          // CORBA formal 00-11-0 15.4.2.2 GIOP 1.2 body\
          \ must be\n161          // aligned on an 8 octet boundary.\n162        \
          \  // Ensures that the first read operation called from the stub code,\n\
          163          // during body deconstruction, would skip the header padding,\
          \ that was\n164          // inserted to ensure that the body was aligned\
          \ on an 8-octet boundary.\n165          ((CDRInputStream) istream).setHeaderPadding(true);\n\
          166  \n167      }\n168  \n169      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n170      {\n171          super.write(ostream);\n172        \
          \  ostream.write_ulong(this.request_id);\n173          ostream.write_octet(this.response_flags);\n\
          174          nullCheck(this.reserved);\n175          if (this.reserved.length\
          \ != (3))\n176          {\n177              throw wrapper.badReservedLength(org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);\n\
          178          }\n179          for (int _i0 = 0; _i0 < (3); ++_i0)"
        lineNumber: 169
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_2.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "167      }\n168  \n169      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n170      {\n171          super.write(ostream);\n172        \
          \  ostream.write_ulong(this.request_id);\n173          ostream.write_octet(this.response_flags);\n\
          174          nullCheck(this.reserved);\n175          if (this.reserved.length\
          \ != (3))\n176          {\n177              throw wrapper.badReservedLength(org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);\n\
          178          }\n179          for (int _i0 = 0; _i0 < (3); ++_i0)\n180  \
          \        {\n181              ostream.write_octet(this.reserved[_i0]);\n\
          182          }\n183          nullCheck(this.target);\n184          TargetAddressHelper.write(ostream,\
          \ this.target);\n185          ostream.write_string(this.operation);\n186\
          \          if (this.service_contexts != null)\n187          {"
        lineNumber: 177
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_2.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "178          }\n179          for (int _i0 = 0; _i0 < (3); ++_i0)\n\
          180          {\n181              ostream.write_octet(this.reserved[_i0]);\n\
          182          }\n183          nullCheck(this.target);\n184          TargetAddressHelper.write(ostream,\
          \ this.target);\n185          ostream.write_string(this.operation);\n186\
          \          if (this.service_contexts != null)\n187          {\n188     \
          \         service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream, GIOPVersion.V1_2);\n189          }\n190          else\n191  \
          \        {\n192              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream);\n193          }\n194  \n195          // CORBA formal 00-11-0\
          \ 15.4.2.2 GIOP 1.2 body must be\n196          // aligned on an 8 octet\
          \ boundary.\n197          // Ensures that the first write operation called\
          \ from the stub code,\n198          // during body construction, would insert\
          \ a header padding, such that"
        lineNumber: 188
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_2.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "182          }\n183          nullCheck(this.target);\n184     \
          \     TargetAddressHelper.write(ostream, this.target);\n185          ostream.write_string(this.operation);\n\
          186          if (this.service_contexts != null)\n187          {\n188   \
          \           service_contexts.write((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream, GIOPVersion.V1_2);\n189          }\n190          else\n191  \
          \        {\n192              ServiceContexts.writeNullServiceContext((org.omg.CORBA_2_3.portable.OutputStream)\
          \ ostream);\n193          }\n194  \n195          // CORBA formal 00-11-0\
          \ 15.4.2.2 GIOP 1.2 body must be\n196          // aligned on an 8 octet\
          \ boundary.\n197          // Ensures that the first write operation called\
          \ from the stub code,\n198          // during body construction, would insert\
          \ a header padding, such that\n199          // the body is aligned on an\
          \ 8-octet boundary.\n200          ((CDROutputStream) ostream).setHeaderPadding(true);\n\
          201      }\n202  "
        lineNumber: 192
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_2.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "26  package org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders;\n\
          27  \n28  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          29  import org.jboss.com.sun.corba.se.impl.encoding.CDROutputStream;\n30\
          \  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          31  import org.jboss.com.sun.corba.se.spi.ior.ObjectKey;\n32  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          33  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n34 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n35  import org.jboss.com.sun.corba.se.spi.servicecontext.ServiceContexts;\n\
          36  import org.omg.CORBA.Principal;\n37  \n38  /**\n39   * This implements\
          \ the GIOP 1.2 Request header.\n40   * \n41   * @author Ram Jeyaraman 05/14/2000\n\
          42   */\n43  \n44  @SuppressWarnings(\"deprecation\")\n45  public final\
          \ class RequestMessage_1_2 extends Message_1_2 implements RequestMessage\n\
          46  {"
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_2.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage_1_2.java
          kind: Class
          name: RequestMessage_1_2
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: " 87      public void profile(org.omg.IOP.TaggedProfile value)\n\
          \ 88      {\n 89          __discriminator = ProfileAddr.value;\n 90    \
          \      ___profile = value;\n 91          __uninitialized = false;\n 92 \
          \     }\n 93  \n 94      private void verifyprofile(short discriminator)\n\
          \ 95      {\n 96          if (discriminator != ProfileAddr.value)\n 97 \
          \             throw new org.omg.CORBA.BAD_OPERATION();\n 98      }\n 99\
          \  \n100      public IORAddressingInfo ior()\n101      {\n102          if\
          \ (__uninitialized)\n103              throw new org.omg.CORBA.BAD_OPERATION();\n\
          104          verifyior(__discriminator);\n105          return ___ior;\n\
          106      }\n107  "
        lineNumber: 97
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java
          kind: Method
          name: verifyprofile
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: " 93  \n 94      private void verifyprofile(short discriminator)\n\
          \ 95      {\n 96          if (discriminator != ProfileAddr.value)\n 97 \
          \             throw new org.omg.CORBA.BAD_OPERATION();\n 98      }\n 99\
          \  \n100      public IORAddressingInfo ior()\n101      {\n102          if\
          \ (__uninitialized)\n103              throw new org.omg.CORBA.BAD_OPERATION();\n\
          104          verifyior(__discriminator);\n105          return ___ior;\n\
          106      }\n107  \n108      public void ior(IORAddressingInfo value)\n109\
          \      {\n110          __discriminator = ReferenceAddr.value;\n111     \
          \     ___ior = value;\n112          __uninitialized = false;\n113      }"
        lineNumber: 103
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java
          kind: Method
          name: ior
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "108      public void ior(IORAddressingInfo value)\n109      {\n\
          110          __discriminator = ReferenceAddr.value;\n111          ___ior\
          \ = value;\n112          __uninitialized = false;\n113      }\n114  \n115\
          \      private void verifyior(short discriminator)\n116      {\n117    \
          \      if (discriminator != ReferenceAddr.value)\n118              throw\
          \ new org.omg.CORBA.BAD_OPERATION();\n119      }\n120  \n121      public\
          \ void _default()\n122      {\n123          __discriminator = -32768;\n\
          124          __uninitialized = false;\n125      }\n126  \n127  } // class\
          \ TargetAddress\n"
        lineNumber: 118
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java
          kind: Method
          name: verifyior
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "25  \n26  package org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders;\n\
          27  \n28  /**\n29   * org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java\
          \ Generated by the IDL-to-Java compiler (portable),\n30   * version \"3.0\"\
          \ from src/main/resources/idl/org/jboss/com/sun/corba/se/GiopIDL/g.idl Sunday,\
          \ June 4, 2000 5:18:54\n31   * PM PDT\n32   */\n33  \n34  @SuppressWarnings(\"\
          serial\")\n35  public final class TargetAddress implements org.omg.CORBA.portable.IDLEntity\n\
          36  {\n37      private byte[] ___object_key;\n38  \n39      private org.omg.IOP.TaggedProfile\
          \ ___profile;\n40  \n41      private IORAddressingInfo ___ior;\n42  \n43\
          \      private short __discriminator;\n44  \n45      private boolean __uninitialized\
          \ = true;"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java
          kind: Class
          name: TargetAddress
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "44  \n45      private boolean __uninitialized = true;\n46  \n47\
          \      public TargetAddress()\n48      {\n49      }\n50  \n51      public\
          \ short discriminator()\n52      {\n53          if (__uninitialized)\n54\
          \              throw new org.omg.CORBA.BAD_OPERATION();\n55          return\
          \ __discriminator;\n56      }\n57  \n58      public byte[] object_key()\n\
          59      {\n60          if (__uninitialized)\n61              throw new org.omg.CORBA.BAD_OPERATION();\n\
          62          verifyobject_key(__discriminator);\n63          return ___object_key;\n\
          64      }"
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java
          kind: Method
          name: discriminator
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "51      public short discriminator()\n52      {\n53          if\
          \ (__uninitialized)\n54              throw new org.omg.CORBA.BAD_OPERATION();\n\
          55          return __discriminator;\n56      }\n57  \n58      public byte[]\
          \ object_key()\n59      {\n60          if (__uninitialized)\n61        \
          \      throw new org.omg.CORBA.BAD_OPERATION();\n62          verifyobject_key(__discriminator);\n\
          63          return ___object_key;\n64      }\n65  \n66      public void\
          \ object_key(byte[] value)\n67      {\n68          __discriminator = KeyAddr.value;\n\
          69          ___object_key = value;\n70          __uninitialized = false;\n\
          71      }"
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java
          kind: Method
          name: object_key
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "66      public void object_key(byte[] value)\n67      {\n68   \
          \       __discriminator = KeyAddr.value;\n69          ___object_key = value;\n\
          70          __uninitialized = false;\n71      }\n72  \n73      private void\
          \ verifyobject_key(short discriminator)\n74      {\n75          if (discriminator\
          \ != KeyAddr.value)\n76              throw new org.omg.CORBA.BAD_OPERATION();\n\
          77      }\n78  \n79      public org.omg.IOP.TaggedProfile profile()\n80\
          \      {\n81          if (__uninitialized)\n82              throw new org.omg.CORBA.BAD_OPERATION();\n\
          83          verifyprofile(__discriminator);\n84          return ___profile;\n\
          85      }\n86  "
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java
          kind: Method
          name: verifyobject_key
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "72  \n73      private void verifyobject_key(short discriminator)\n\
          74      {\n75          if (discriminator != KeyAddr.value)\n76         \
          \     throw new org.omg.CORBA.BAD_OPERATION();\n77      }\n78  \n79    \
          \  public org.omg.IOP.TaggedProfile profile()\n80      {\n81          if\
          \ (__uninitialized)\n82              throw new org.omg.CORBA.BAD_OPERATION();\n\
          83          verifyprofile(__discriminator);\n84          return ___profile;\n\
          85      }\n86  \n87      public void profile(org.omg.IOP.TaggedProfile value)\n\
          88      {\n89          __discriminator = ProfileAddr.value;\n90        \
          \  ___profile = value;\n91          __uninitialized = false;\n92      }"
        lineNumber: 82
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddress.java
          kind: Method
          name: profile
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - lineNumber: 79
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - lineNumber: 82
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - lineNumber: 83
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - lineNumber: 94
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - lineNumber: 119
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - lineNumber: 124
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - lineNumber: 140
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "28  /**\n29   * org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java\
          \ Generated by the IDL-to-Java\n30   * compiler (portable), version \"3.0\"\
          \ from src/main/resources/idl/org/jboss/com/sun/corba/se/GiopIDL/g.idl Sunday,\
          \ June\n31   * 4, 2000 5:18:54 PM PDT\n32   */\n33  \n34  abstract public\
          \ class TargetAddressHelper\n35  {\n36      private static String _id =\
          \ \"IDL:messages/TargetAddress:1.0\";\n37  \n38      public static void\
          \ insert(org.omg.CORBA.Any a, TargetAddress that)\n39      {\n40       \
          \   org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          41          a.type(type());\n42          write(out, that);\n43         \
          \ a.read_value(out.create_input_stream(), type());\n44      }\n45  \n46\
          \      public static TargetAddress extract(org.omg.CORBA.Any a)\n47    \
          \  {\n48          return read(a.create_input_stream());"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "30   * compiler (portable), version \"3.0\" from src/main/resources/idl/org/jboss/com/sun/corba/se/GiopIDL/g.idl\
          \ Sunday, June\n31   * 4, 2000 5:18:54 PM PDT\n32   */\n33  \n34  abstract\
          \ public class TargetAddressHelper\n35  {\n36      private static String\
          \ _id = \"IDL:messages/TargetAddress:1.0\";\n37  \n38      public static\
          \ void insert(org.omg.CORBA.Any a, TargetAddress that)\n39      {\n40  \
          \        org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          41          a.type(type());\n42          write(out, that);\n43         \
          \ a.read_value(out.create_input_stream(), type());\n44      }\n45  \n46\
          \      public static TargetAddress extract(org.omg.CORBA.Any a)\n47    \
          \  {\n48          return read(a.create_input_stream());\n49      }\n50  "
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "36      private static String _id = \"IDL:messages/TargetAddress:1.0\"\
          ;\n37  \n38      public static void insert(org.omg.CORBA.Any a, TargetAddress\
          \ that)\n39      {\n40          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n41          a.type(type());\n42         \
          \ write(out, that);\n43          a.read_value(out.create_input_stream(),\
          \ type());\n44      }\n45  \n46      public static TargetAddress extract(org.omg.CORBA.Any\
          \ a)\n47      {\n48          return read(a.create_input_stream());\n49 \
          \     }\n50  \n51      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n52  \n53      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n54      {\n55          if (__typeCode == null)\n56          {"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "41          a.type(type());\n42          write(out, that);\n43\
          \          a.read_value(out.create_input_stream(), type());\n44      }\n\
          45  \n46      public static TargetAddress extract(org.omg.CORBA.Any a)\n\
          47      {\n48          return read(a.create_input_stream());\n49      }\n\
          50  \n51      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          52  \n53      synchronized public static org.omg.CORBA.TypeCode type()\n\
          54      {\n55          if (__typeCode == null)\n56          {\n57      \
          \        org.omg.CORBA.TypeCode _disTypeCode0;\n58              _disTypeCode0\
          \ = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          59              _disTypeCode0 = org.omg.CORBA.ORB.init().create_alias_tc(AddressingDispositionHelper.id(),\n\
          60                      \"AddressingDisposition\", _disTypeCode0);\n61 \
          \             org.omg.CORBA.UnionMember[] _members0 = new org.omg.CORBA.UnionMember[3];"
        lineNumber: 51
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "43          a.read_value(out.create_input_stream(), type());\n\
          44      }\n45  \n46      public static TargetAddress extract(org.omg.CORBA.Any\
          \ a)\n47      {\n48          return read(a.create_input_stream());\n49 \
          \     }\n50  \n51      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n52  \n53      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n54      {\n55          if (__typeCode == null)\n56          {\n\
          57              org.omg.CORBA.TypeCode _disTypeCode0;\n58              _disTypeCode0\
          \ = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          59              _disTypeCode0 = org.omg.CORBA.ORB.init().create_alias_tc(AddressingDispositionHelper.id(),\n\
          60                      \"AddressingDisposition\", _disTypeCode0);\n61 \
          \             org.omg.CORBA.UnionMember[] _members0 = new org.omg.CORBA.UnionMember[3];\n\
          62              org.omg.CORBA.TypeCode _tcOf_members0;\n63             \
          \ org.omg.CORBA.Any _anyOf_members0;"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "47      {\n48          return read(a.create_input_stream());\n\
          49      }\n50  \n51      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n52  \n53      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n54      {\n55          if (__typeCode == null)\n56          {\n\
          57              org.omg.CORBA.TypeCode _disTypeCode0;\n58              _disTypeCode0\
          \ = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          59              _disTypeCode0 = org.omg.CORBA.ORB.init().create_alias_tc(AddressingDispositionHelper.id(),\n\
          60                      \"AddressingDisposition\", _disTypeCode0);\n61 \
          \             org.omg.CORBA.UnionMember[] _members0 = new org.omg.CORBA.UnionMember[3];\n\
          62              org.omg.CORBA.TypeCode _tcOf_members0;\n63             \
          \ org.omg.CORBA.Any _anyOf_members0;\n64  \n65              // Branch for\
          \ object_key\n66              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          67              _anyOf_members0.insert_short(KeyAddr.value);"
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "48          return read(a.create_input_stream());\n49      }\n\
          50  \n51      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          52  \n53      synchronized public static org.omg.CORBA.TypeCode type()\n\
          54      {\n55          if (__typeCode == null)\n56          {\n57      \
          \        org.omg.CORBA.TypeCode _disTypeCode0;\n58              _disTypeCode0\
          \ = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          59              _disTypeCode0 = org.omg.CORBA.ORB.init().create_alias_tc(AddressingDispositionHelper.id(),\n\
          60                      \"AddressingDisposition\", _disTypeCode0);\n61 \
          \             org.omg.CORBA.UnionMember[] _members0 = new org.omg.CORBA.UnionMember[3];\n\
          62              org.omg.CORBA.TypeCode _tcOf_members0;\n63             \
          \ org.omg.CORBA.Any _anyOf_members0;\n64  \n65              // Branch for\
          \ object_key\n66              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          67              _anyOf_members0.insert_short(KeyAddr.value);\n68       \
          \       _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_octet);"
        lineNumber: 58
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "49      }\n50  \n51      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n52  \n53      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n54      {\n55          if (__typeCode == null)\n56          {\n\
          57              org.omg.CORBA.TypeCode _disTypeCode0;\n58              _disTypeCode0\
          \ = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          59              _disTypeCode0 = org.omg.CORBA.ORB.init().create_alias_tc(AddressingDispositionHelper.id(),\n\
          60                      \"AddressingDisposition\", _disTypeCode0);\n61 \
          \             org.omg.CORBA.UnionMember[] _members0 = new org.omg.CORBA.UnionMember[3];\n\
          62              org.omg.CORBA.TypeCode _tcOf_members0;\n63             \
          \ org.omg.CORBA.Any _anyOf_members0;\n64  \n65              // Branch for\
          \ object_key\n66              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          67              _anyOf_members0.insert_short(KeyAddr.value);\n68       \
          \       _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_octet);\n\
          69              _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ _tcOf_members0);"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "51      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          52  \n53      synchronized public static org.omg.CORBA.TypeCode type()\n\
          54      {\n55          if (__typeCode == null)\n56          {\n57      \
          \        org.omg.CORBA.TypeCode _disTypeCode0;\n58              _disTypeCode0\
          \ = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          59              _disTypeCode0 = org.omg.CORBA.ORB.init().create_alias_tc(AddressingDispositionHelper.id(),\n\
          60                      \"AddressingDisposition\", _disTypeCode0);\n61 \
          \             org.omg.CORBA.UnionMember[] _members0 = new org.omg.CORBA.UnionMember[3];\n\
          62              org.omg.CORBA.TypeCode _tcOf_members0;\n63             \
          \ org.omg.CORBA.Any _anyOf_members0;\n64  \n65              // Branch for\
          \ object_key\n66              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          67              _anyOf_members0.insert_short(KeyAddr.value);\n68       \
          \       _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_octet);\n\
          69              _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ _tcOf_members0);\n70              _members0[0] = new org.omg.CORBA.UnionMember(\"\
          object_key\", _anyOf_members0, _tcOf_members0, null);\n71  "
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "52  \n53      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n54      {\n55          if (__typeCode == null)\n56          {\n\
          57              org.omg.CORBA.TypeCode _disTypeCode0;\n58              _disTypeCode0\
          \ = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          59              _disTypeCode0 = org.omg.CORBA.ORB.init().create_alias_tc(AddressingDispositionHelper.id(),\n\
          60                      \"AddressingDisposition\", _disTypeCode0);\n61 \
          \             org.omg.CORBA.UnionMember[] _members0 = new org.omg.CORBA.UnionMember[3];\n\
          62              org.omg.CORBA.TypeCode _tcOf_members0;\n63             \
          \ org.omg.CORBA.Any _anyOf_members0;\n64  \n65              // Branch for\
          \ object_key\n66              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          67              _anyOf_members0.insert_short(KeyAddr.value);\n68       \
          \       _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_octet);\n\
          69              _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ _tcOf_members0);\n70              _members0[0] = new org.omg.CORBA.UnionMember(\"\
          object_key\", _anyOf_members0, _tcOf_members0, null);\n71  \n72        \
          \      // Branch for profile"
        lineNumber: 62
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "53      synchronized public static org.omg.CORBA.TypeCode type()\n\
          54      {\n55          if (__typeCode == null)\n56          {\n57      \
          \        org.omg.CORBA.TypeCode _disTypeCode0;\n58              _disTypeCode0\
          \ = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          59              _disTypeCode0 = org.omg.CORBA.ORB.init().create_alias_tc(AddressingDispositionHelper.id(),\n\
          60                      \"AddressingDisposition\", _disTypeCode0);\n61 \
          \             org.omg.CORBA.UnionMember[] _members0 = new org.omg.CORBA.UnionMember[3];\n\
          62              org.omg.CORBA.TypeCode _tcOf_members0;\n63             \
          \ org.omg.CORBA.Any _anyOf_members0;\n64  \n65              // Branch for\
          \ object_key\n66              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          67              _anyOf_members0.insert_short(KeyAddr.value);\n68       \
          \       _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_octet);\n\
          69              _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ _tcOf_members0);\n70              _members0[0] = new org.omg.CORBA.UnionMember(\"\
          object_key\", _anyOf_members0, _tcOf_members0, null);\n71  \n72        \
          \      // Branch for profile\n73              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();"
        lineNumber: 63
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "56          {\n57              org.omg.CORBA.TypeCode _disTypeCode0;\n\
          58              _disTypeCode0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          59              _disTypeCode0 = org.omg.CORBA.ORB.init().create_alias_tc(AddressingDispositionHelper.id(),\n\
          60                      \"AddressingDisposition\", _disTypeCode0);\n61 \
          \             org.omg.CORBA.UnionMember[] _members0 = new org.omg.CORBA.UnionMember[3];\n\
          62              org.omg.CORBA.TypeCode _tcOf_members0;\n63             \
          \ org.omg.CORBA.Any _anyOf_members0;\n64  \n65              // Branch for\
          \ object_key\n66              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          67              _anyOf_members0.insert_short(KeyAddr.value);\n68       \
          \       _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_octet);\n\
          69              _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ _tcOf_members0);\n70              _members0[0] = new org.omg.CORBA.UnionMember(\"\
          object_key\", _anyOf_members0, _tcOf_members0, null);\n71  \n72        \
          \      // Branch for profile\n73              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          74              _anyOf_members0.insert_short(ProfileAddr.value);\n75   \
          \           _tcOf_members0 = org.omg.IOP.TaggedProfileHelper.type();\n76\
          \              _members0[1] = new org.omg.CORBA.UnionMember(\"profile\"\
          , _anyOf_members0, _tcOf_members0, null);"
        lineNumber: 66
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "58              _disTypeCode0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          59              _disTypeCode0 = org.omg.CORBA.ORB.init().create_alias_tc(AddressingDispositionHelper.id(),\n\
          60                      \"AddressingDisposition\", _disTypeCode0);\n61 \
          \             org.omg.CORBA.UnionMember[] _members0 = new org.omg.CORBA.UnionMember[3];\n\
          62              org.omg.CORBA.TypeCode _tcOf_members0;\n63             \
          \ org.omg.CORBA.Any _anyOf_members0;\n64  \n65              // Branch for\
          \ object_key\n66              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          67              _anyOf_members0.insert_short(KeyAddr.value);\n68       \
          \       _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_octet);\n\
          69              _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ _tcOf_members0);\n70              _members0[0] = new org.omg.CORBA.UnionMember(\"\
          object_key\", _anyOf_members0, _tcOf_members0, null);\n71  \n72        \
          \      // Branch for profile\n73              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          74              _anyOf_members0.insert_short(ProfileAddr.value);\n75   \
          \           _tcOf_members0 = org.omg.IOP.TaggedProfileHelper.type();\n76\
          \              _members0[1] = new org.omg.CORBA.UnionMember(\"profile\"\
          , _anyOf_members0, _tcOf_members0, null);\n77  \n78              // Branch\
          \ for ior"
        lineNumber: 68
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "59              _disTypeCode0 = org.omg.CORBA.ORB.init().create_alias_tc(AddressingDispositionHelper.id(),\n\
          60                      \"AddressingDisposition\", _disTypeCode0);\n61 \
          \             org.omg.CORBA.UnionMember[] _members0 = new org.omg.CORBA.UnionMember[3];\n\
          62              org.omg.CORBA.TypeCode _tcOf_members0;\n63             \
          \ org.omg.CORBA.Any _anyOf_members0;\n64  \n65              // Branch for\
          \ object_key\n66              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          67              _anyOf_members0.insert_short(KeyAddr.value);\n68       \
          \       _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_octet);\n\
          69              _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ _tcOf_members0);\n70              _members0[0] = new org.omg.CORBA.UnionMember(\"\
          object_key\", _anyOf_members0, _tcOf_members0, null);\n71  \n72        \
          \      // Branch for profile\n73              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          74              _anyOf_members0.insert_short(ProfileAddr.value);\n75   \
          \           _tcOf_members0 = org.omg.IOP.TaggedProfileHelper.type();\n76\
          \              _members0[1] = new org.omg.CORBA.UnionMember(\"profile\"\
          , _anyOf_members0, _tcOf_members0, null);\n77  \n78              // Branch\
          \ for ior\n79              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();"
        lineNumber: 69
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "60                      \"AddressingDisposition\", _disTypeCode0);\n\
          61              org.omg.CORBA.UnionMember[] _members0 = new org.omg.CORBA.UnionMember[3];\n\
          62              org.omg.CORBA.TypeCode _tcOf_members0;\n63             \
          \ org.omg.CORBA.Any _anyOf_members0;\n64  \n65              // Branch for\
          \ object_key\n66              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          67              _anyOf_members0.insert_short(KeyAddr.value);\n68       \
          \       _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_octet);\n\
          69              _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ _tcOf_members0);\n70              _members0[0] = new org.omg.CORBA.UnionMember(\"\
          object_key\", _anyOf_members0, _tcOf_members0, null);\n71  \n72        \
          \      // Branch for profile\n73              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          74              _anyOf_members0.insert_short(ProfileAddr.value);\n75   \
          \           _tcOf_members0 = org.omg.IOP.TaggedProfileHelper.type();\n76\
          \              _members0[1] = new org.omg.CORBA.UnionMember(\"profile\"\
          , _anyOf_members0, _tcOf_members0, null);\n77  \n78              // Branch\
          \ for ior\n79              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          80              _anyOf_members0.insert_short(ReferenceAddr.value);"
        lineNumber: 70
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "63              org.omg.CORBA.Any _anyOf_members0;\n64  \n65  \
          \            // Branch for object_key\n66              _anyOf_members0 =\
          \ org.omg.CORBA.ORB.init().create_any();\n67              _anyOf_members0.insert_short(KeyAddr.value);\n\
          68              _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_octet);\n\
          69              _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ _tcOf_members0);\n70              _members0[0] = new org.omg.CORBA.UnionMember(\"\
          object_key\", _anyOf_members0, _tcOf_members0, null);\n71  \n72        \
          \      // Branch for profile\n73              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          74              _anyOf_members0.insert_short(ProfileAddr.value);\n75   \
          \           _tcOf_members0 = org.omg.IOP.TaggedProfileHelper.type();\n76\
          \              _members0[1] = new org.omg.CORBA.UnionMember(\"profile\"\
          , _anyOf_members0, _tcOf_members0, null);\n77  \n78              // Branch\
          \ for ior\n79              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          80              _anyOf_members0.insert_short(ReferenceAddr.value);\n81 \
          \             _tcOf_members0 = IORAddressingInfoHelper.type();\n82     \
          \         _members0[2] = new org.omg.CORBA.UnionMember(\"ior\", _anyOf_members0,\
          \ _tcOf_members0, null);\n83              __typeCode = org.omg.CORBA.ORB.init().create_union_tc(TargetAddressHelper.id(),\
          \ \"TargetAddress\","
        lineNumber: 73
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: "66              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          67              _anyOf_members0.insert_short(KeyAddr.value);\n68       \
          \       _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_octet);\n\
          69              _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ _tcOf_members0);\n70              _members0[0] = new org.omg.CORBA.UnionMember(\"\
          object_key\", _anyOf_members0, _tcOf_members0, null);\n71  \n72        \
          \      // Branch for profile\n73              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          74              _anyOf_members0.insert_short(ProfileAddr.value);\n75   \
          \           _tcOf_members0 = org.omg.IOP.TaggedProfileHelper.type();\n76\
          \              _members0[1] = new org.omg.CORBA.UnionMember(\"profile\"\
          , _anyOf_members0, _tcOf_members0, null);\n77  \n78              // Branch\
          \ for ior\n79              _anyOf_members0 = org.omg.CORBA.ORB.init().create_any();\n\
          80              _anyOf_members0.insert_short(ReferenceAddr.value);\n81 \
          \             _tcOf_members0 = IORAddressingInfoHelper.type();\n82     \
          \         _members0[2] = new org.omg.CORBA.UnionMember(\"ior\", _anyOf_members0,\
          \ _tcOf_members0, null);\n83              __typeCode = org.omg.CORBA.ORB.init().create_union_tc(TargetAddressHelper.id(),\
          \ \"TargetAddress\",\n84                      _disTypeCode0, _members0);\n\
          85          }\n86          return __typeCode;"
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/protocol/giopmsgheaders/TargetAddressHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders
      - codeSnip: 11   * This code is distributed in the hope that it will be useful,
          but WITHOUT
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/RepositoryId.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/RepositoryId.java
          kind: Class
          name: RepositoryId
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "319              (byte) '6', (byte) '7', (byte) '8', (byte) '9',\
          \ (byte) 'A', (byte) 'B', (byte) 'C', (byte) 'D', (byte) 'E',\n320     \
          \         (byte) 'F',};\n321  \n322      // bug fix for 4328952; to eliminate\
          \ possibility of overriding this\n323      // in a subclass.\n324      public\
          \ static final RepositoryIdCache cache = new RepositoryIdCache();\n325 \
          \ \n326      // Interface Rep ID Strings\n327      public static final String\
          \ kjava_rmi_Remote = createForAnyType(java.rmi.Remote.class);\n328  \n329\
          \      public static final String korg_omg_CORBA_Object = createForAnyType(org.omg.CORBA.Object.class);\n\
          330  \n331      // Dummy arguments for getIdFromHelper method\n332     \
          \ public static final Class<?> kNoParamTypes[] = {};\n333  \n334      public\
          \ static final Object kNoArgs[] = {};\n335  \n336      // To create a RepositoryID,\
          \ use code similar to the following: RepositoryId.cache.getId( id );\n337\
          \  \n338      RepositoryId()\n339      {"
        lineNumber: 329
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/RepositoryId.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/RepositoryId.java
          kind: Constant
          name: korg_omg_CORBA_Object
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "32  package org.jboss.com.sun.corba.se.impl.util;\n33  \n34  import\
          \ java.io.IOException;\n35  import java.lang.reflect.Method;\n36  import\
          \ java.net.MalformedURLException;\n37  import java.util.Hashtable;\n38 \
          \ \n39  import javax.rmi.CORBA.Util;\n40  \n41  import org.jboss.com.sun.corba.se.impl.io.ObjectStreamClass;\n\
          42  import org.omg.CORBA.portable.IDLEntity;\n43  import org.omg.CORBA.portable.ValueBase;\n\
          44  \n45  public class RepositoryId\n46  {\n47  \n48      // Legal IDL Identifier\
          \ characters (1 = legal). Note that '.' (2E) is marked as legal even though\
          \ it is not legal in\n49      // IDL. This allows us to treat a fully qualified\
          \ Java name with '.' package separators uniformly, and is safe\n50     \
          \ // because that is the only legal use of '.' in a Java name.\n51  \n52\
          \      public static final byte[] IDL_IDENTIFIER_CHARS = {"
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/RepositoryId.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/RepositoryId.java
          kind: Class
          name: RepositoryId
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: '905      {

          906          try

          907          {

          908              Class<?> helperClazz = Utility.loadClassForClass(clazz.getName()
          + "Helper", null, clazz.getClassLoader(),

          909                      clazz, clazz.getClassLoader());

          910              Method idMethod = helperClazz.getDeclaredMethod("id", kNoParamTypes);

          911              return (String) idMethod.invoke(null, kNoArgs);

          912          }

          913          catch (java.lang.ClassNotFoundException cnfe)

          914          {

          915              throw new org.omg.CORBA.MARSHAL(cnfe.toString());

          916          }

          917          catch (java.lang.NoSuchMethodException nsme)

          918          {

          919              throw new org.omg.CORBA.MARSHAL(nsme.toString());

          920          }

          921          catch (java.lang.reflect.InvocationTargetException ite)

          922          {

          923              throw new org.omg.CORBA.MARSHAL(ite.toString());

          924          }

          925          catch (java.lang.IllegalAccessException iae)'
        lineNumber: 915
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/RepositoryId.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/RepositoryId.java
          kind: Method
          name: getIdFromHelper
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: '909                      clazz, clazz.getClassLoader());

          910              Method idMethod = helperClazz.getDeclaredMethod("id", kNoParamTypes);

          911              return (String) idMethod.invoke(null, kNoArgs);

          912          }

          913          catch (java.lang.ClassNotFoundException cnfe)

          914          {

          915              throw new org.omg.CORBA.MARSHAL(cnfe.toString());

          916          }

          917          catch (java.lang.NoSuchMethodException nsme)

          918          {

          919              throw new org.omg.CORBA.MARSHAL(nsme.toString());

          920          }

          921          catch (java.lang.reflect.InvocationTargetException ite)

          922          {

          923              throw new org.omg.CORBA.MARSHAL(ite.toString());

          924          }

          925          catch (java.lang.IllegalAccessException iae)

          926          {

          927              throw new org.omg.CORBA.MARSHAL(iae.toString());

          928          }

          929      }'
        lineNumber: 919
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/RepositoryId.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/RepositoryId.java
          kind: Method
          name: getIdFromHelper
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "913          catch (java.lang.ClassNotFoundException cnfe)\n914\
          \          {\n915              throw new org.omg.CORBA.MARSHAL(cnfe.toString());\n\
          916          }\n917          catch (java.lang.NoSuchMethodException nsme)\n\
          918          {\n919              throw new org.omg.CORBA.MARSHAL(nsme.toString());\n\
          920          }\n921          catch (java.lang.reflect.InvocationTargetException\
          \ ite)\n922          {\n923              throw new org.omg.CORBA.MARSHAL(ite.toString());\n\
          924          }\n925          catch (java.lang.IllegalAccessException iae)\n\
          926          {\n927              throw new org.omg.CORBA.MARSHAL(iae.toString());\n\
          928          }\n929      }\n930  \n931      /**\n932       * Createa a repository\
          \ ID for the type if it is either a java type or an IDL type.\n933     \
          \  * "
        lineNumber: 923
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/RepositoryId.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/RepositoryId.java
          kind: Method
          name: getIdFromHelper
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "917          catch (java.lang.NoSuchMethodException nsme)\n918\
          \          {\n919              throw new org.omg.CORBA.MARSHAL(nsme.toString());\n\
          920          }\n921          catch (java.lang.reflect.InvocationTargetException\
          \ ite)\n922          {\n923              throw new org.omg.CORBA.MARSHAL(ite.toString());\n\
          924          }\n925          catch (java.lang.IllegalAccessException iae)\n\
          926          {\n927              throw new org.omg.CORBA.MARSHAL(iae.toString());\n\
          928          }\n929      }\n930  \n931      /**\n932       * Createa a repository\
          \ ID for the type if it is either a java type or an IDL type.\n933     \
          \  * \n934       * @param type\n935       *            The type to create\
          \ rep. id for\n936       * @return The rep. id.\n937       **/"
        lineNumber: 927
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/RepositoryId.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/RepositoryId.java
          kind: Method
          name: getIdFromHelper
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "958          catch (org.jboss.com.sun.corba.se.impl.io.TypeMismatchException\
          \ e)\n959          {\n960              return null;\n961          }\n962\
          \  \n963      }\n964  \n965      public static boolean isAbstractBase(Class<?>\
          \ clazz)\n966      {\n967          return (clazz.isInterface() && IDLEntity.class.isAssignableFrom(clazz)\n\
          968                  && (!ValueBase.class.isAssignableFrom(clazz)) && (!org.omg.CORBA.Object.class.isAssignableFrom(clazz)));\n\
          969  \n970      }\n971  \n972      public static boolean isAnyRequired(Class<?>\
          \ clazz)\n973      {\n974          return ((clazz == java.lang.Object.class)\
          \ || (clazz == java.io.Serializable.class) || (clazz == java.io.Externalizable.class));\n\
          975      }\n976  \n977      public static long fromHex(String hexNumber)\n\
          978      {"
        lineNumber: 968
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/RepositoryId.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/RepositoryId.java
          kind: Method
          name: isAbstractBase
          package: org.jboss.com.sun.corba.se.impl.util
      - lineNumber: 1050
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/StubEntry.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/StubEntry.java
          kind: Field
          name: stub
          package: ''
      - lineNumber: 1054
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/StubEntry.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/StubEntry.java
          kind: Constructor
          name: StubEntry
          package: ''
      - codeSnip: "1005      }\n1006  \n1007      /**\n1008       * Read an abstract\
          \ interface type from the input stream and narrow it to the desired type.\n\
          1009       * \n1010       * @param in\n1011       *            the stream\
          \ to read from.\n1012       * @throws ClassCastException\n1013       * \
          \            if narrowFrom cannot be cast to narrowTo.\n1014       */\n\
          1015      public static Object readAbstractAndNarrow(org.omg.CORBA_2_3.portable.InputStream\
          \ in, Class<?> narrowTo)\n1016              throws ClassCastException\n\
          1017      {\n1018          Object result = in.read_abstract_interface();\n\
          1019          if (result != null)\n1020              return PortableRemoteObject.narrow(result,\
          \ narrowTo);\n1021          else\n1022              return null;\n1023 \
          \     }\n1024  \n1025      /**"
        lineNumber: 1015
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
          kind: Method
          name: readAbstractAndNarrow
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: 11   * This code is distributed in the hope that it will be useful,
          but WITHOUT
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
          kind: Class
          name: Utility
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "38  \n39  import javax.rmi.PortableRemoteObject;\n40  import javax.rmi.CORBA.Tie;\n\
          41  import javax.rmi.CORBA.Util;\n42  \n43  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          44  import org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n\
          45  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n46 \
          \ import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          47  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          48  import org.omg.CORBA.BAD_OPERATION;\n49  import org.omg.CORBA.CompletionStatus;\n\
          50  import org.omg.CORBA.ORB;\n51  import org.omg.CORBA.SystemException;\n\
          52  import org.omg.CORBA.portable.BoxedValueHelper;\n53  import org.omg.CORBA.portable.Delegate;\n\
          54  import org.omg.CORBA.portable.InputStream;\n55  import org.omg.CORBA.portable.ValueFactory;\n\
          56  \n57  /**\n58   * Handy class full of static functions."
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
          kind: Class
          name: Utility
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "39  import javax.rmi.PortableRemoteObject;\n40  import javax.rmi.CORBA.Tie;\n\
          41  import javax.rmi.CORBA.Util;\n42  \n43  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          44  import org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n\
          45  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n46 \
          \ import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          47  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          48  import org.omg.CORBA.BAD_OPERATION;\n49  import org.omg.CORBA.CompletionStatus;\n\
          50  import org.omg.CORBA.ORB;\n51  import org.omg.CORBA.SystemException;\n\
          52  import org.omg.CORBA.portable.BoxedValueHelper;\n53  import org.omg.CORBA.portable.Delegate;\n\
          54  import org.omg.CORBA.portable.InputStream;\n55  import org.omg.CORBA.portable.ValueFactory;\n\
          56  \n57  /**\n58   * Handy class full of static functions.\n59   */"
        lineNumber: 49
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
          kind: Class
          name: Utility
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "40  import javax.rmi.CORBA.Tie;\n41  import javax.rmi.CORBA.Util;\n\
          42  \n43  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          44  import org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n\
          45  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n46 \
          \ import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          47  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          48  import org.omg.CORBA.BAD_OPERATION;\n49  import org.omg.CORBA.CompletionStatus;\n\
          50  import org.omg.CORBA.ORB;\n51  import org.omg.CORBA.SystemException;\n\
          52  import org.omg.CORBA.portable.BoxedValueHelper;\n53  import org.omg.CORBA.portable.Delegate;\n\
          54  import org.omg.CORBA.portable.InputStream;\n55  import org.omg.CORBA.portable.ValueFactory;\n\
          56  \n57  /**\n58   * Handy class full of static functions.\n59   */\n60\
          \  public final class Utility"
        lineNumber: 50
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
          kind: Class
          name: Utility
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "41  import javax.rmi.CORBA.Util;\n42  \n43  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          44  import org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n\
          45  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n46 \
          \ import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          47  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          48  import org.omg.CORBA.BAD_OPERATION;\n49  import org.omg.CORBA.CompletionStatus;\n\
          50  import org.omg.CORBA.ORB;\n51  import org.omg.CORBA.SystemException;\n\
          52  import org.omg.CORBA.portable.BoxedValueHelper;\n53  import org.omg.CORBA.portable.Delegate;\n\
          54  import org.omg.CORBA.portable.InputStream;\n55  import org.omg.CORBA.portable.ValueFactory;\n\
          56  \n57  /**\n58   * Handy class full of static functions.\n59   */\n60\
          \  public final class Utility\n61  {"
        lineNumber: 51
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
          kind: Class
          name: Utility
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "42  \n43  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          44  import org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n\
          45  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n46 \
          \ import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          47  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          48  import org.omg.CORBA.BAD_OPERATION;\n49  import org.omg.CORBA.CompletionStatus;\n\
          50  import org.omg.CORBA.ORB;\n51  import org.omg.CORBA.SystemException;\n\
          52  import org.omg.CORBA.portable.BoxedValueHelper;\n53  import org.omg.CORBA.portable.Delegate;\n\
          54  import org.omg.CORBA.portable.InputStream;\n55  import org.omg.CORBA.portable.ValueFactory;\n\
          56  \n57  /**\n58   * Handy class full of static functions.\n59   */\n60\
          \  public final class Utility\n61  {\n62  "
        lineNumber: 52
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
          kind: Class
          name: Utility
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "43  import org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n\
          44  import org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n\
          45  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n46 \
          \ import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          47  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          48  import org.omg.CORBA.BAD_OPERATION;\n49  import org.omg.CORBA.CompletionStatus;\n\
          50  import org.omg.CORBA.ORB;\n51  import org.omg.CORBA.SystemException;\n\
          52  import org.omg.CORBA.portable.BoxedValueHelper;\n53  import org.omg.CORBA.portable.Delegate;\n\
          54  import org.omg.CORBA.portable.InputStream;\n55  import org.omg.CORBA.portable.ValueFactory;\n\
          56  \n57  /**\n58   * Handy class full of static functions.\n59   */\n60\
          \  public final class Utility\n61  {\n62  \n63      public static final\
          \ String STUB_PREFIX = \"_\";"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
          kind: Class
          name: Utility
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "44  import org.jboss.com.sun.corba.se.impl.logging.UtilSystemException;\n\
          45  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n46 \
          \ import org.jboss.com.sun.corba.se.spi.presentation.rmi.PresentationManager;\n\
          47  import org.jboss.com.sun.corba.se.spi.presentation.rmi.StubAdapter;\n\
          48  import org.omg.CORBA.BAD_OPERATION;\n49  import org.omg.CORBA.CompletionStatus;\n\
          50  import org.omg.CORBA.ORB;\n51  import org.omg.CORBA.SystemException;\n\
          52  import org.omg.CORBA.portable.BoxedValueHelper;\n53  import org.omg.CORBA.portable.Delegate;\n\
          54  import org.omg.CORBA.portable.InputStream;\n55  import org.omg.CORBA.portable.ValueFactory;\n\
          56  \n57  /**\n58   * Handy class full of static functions.\n59   */\n60\
          \  public final class Utility\n61  {\n62  \n63      public static final\
          \ String STUB_PREFIX = \"_\";\n64  "
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
          kind: Class
          name: Utility
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "442       * \n443       * Throws MARSHAL exception if no factory\
          \ found.\n444       */\n445      public static ValueFactory getFactory(Class<?>\
          \ clazz, String codebase, ORB orb, String repId)\n446      {\n447      \
          \    ValueFactory factory = null;\n448          if ((orb != null) && (repId\
          \ != null))\n449          {\n450              try\n451              {\n\
          452                  factory = ((org.omg.CORBA_2_3.ORB) orb).lookup_value_factory(repId);\n\
          453              }\n454              catch (org.omg.CORBA.BAD_PARAM ex)\n\
          455              {\n456                  // Try other way\n457         \
          \     }\n458          }\n459  \n460          String className = null;\n\
          461          if (clazz != null)\n462          {"
        lineNumber: 452
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
          kind: Method
          name: getFactory
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "444       */\n445      public static ValueFactory getFactory(Class<?>\
          \ clazz, String codebase, ORB orb, String repId)\n446      {\n447      \
          \    ValueFactory factory = null;\n448          if ((orb != null) && (repId\
          \ != null))\n449          {\n450              try\n451              {\n\
          452                  factory = ((org.omg.CORBA_2_3.ORB) orb).lookup_value_factory(repId);\n\
          453              }\n454              catch (org.omg.CORBA.BAD_PARAM ex)\n\
          455              {\n456                  // Try other way\n457         \
          \     }\n458          }\n459  \n460          String className = null;\n\
          461          if (clazz != null)\n462          {\n463              className\
          \ = clazz.getName();\n464              if (codebase == null)"
        lineNumber: 454
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
          kind: Method
          name: getFactory
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "609       * @param remoteCodebase the codebase to use. May be null.\n\
          610       * \n611       * @param onlyMostDerived if true, will fail if cannot\
          \ load a stub for the first repID in the tie. If false, will\n612      \
          \ * walk all repIDs.\n613       * \n614       * @return the StubEntry or\
          \ null if not found.\n615       */\n616      private static StubEntry loadStubAndUpdateCache(Tie\
          \ tie, PresentationManager.StubFactory stubFactory,\n617              String\
          \ remoteCodebase, boolean onlyMostDerived)\n618      {\n619          org.omg.CORBA.Object\
          \ stub = null;\n620          StubEntry entry = null;\n621          boolean\
          \ tieIsStub = StubAdapter.isStub(tie);\n622  \n623          if (stubFactory\
          \ != null)\n624          {\n625              try\n626              {\n627\
          \                  stub = stubFactory.makeStub();\n628              }\n\
          629              catch (Throwable e)"
        lineNumber: 619
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
          kind: Method
          name: loadStubAndUpdateCache
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: '716                  }

          717              }

          718              else

          719              {

          720                  // Tie extends Servant

          721                  try

          722                  {

          723                      Delegate delegate = StubAdapter.getDelegate(tie);

          724                      StubAdapter.setDelegate(stub, delegate);

          725                  }

          726                  catch (org.omg.CORBA.BAD_INV_ORDER bad)

          727                  {

          728                      synchronized (stubToTieCache)

          729                      {

          730                          stubToTieCache.put(stub, tie);

          731                      }

          732                  }

          733                  catch (Exception e)

          734                  {

          735                      // Exception is caught because of any of the

          736                      // following reasons'
        lineNumber: 726
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
          kind: Method
          name: loadStubAndUpdateCache
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "744              entry = new StubEntry(stub, onlyMostDerived);\n\
          745              tieToStubCache.put(tie, entry);\n746          }\n747  \n\
          748          return entry;\n749      }\n750  \n751      /*\n752       *\
          \ If we loadStub(Tie,...) stashed away a tie which was not connected, remove\
          \ it from the cache and return it.\n753       */\n754      public static\
          \ Tie getAndForgetTie(org.omg.CORBA.Object stub)\n755      {\n756      \
          \    synchronized (stubToTieCache)\n757          {\n758              return\
          \ (Tie) stubToTieCache.remove(stub);\n759          }\n760      }\n761  \n\
          762      /*\n763       * Remove any cached Stub for the given tie.\n764\
          \       */"
        lineNumber: 754
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
          kind: Method
          name: getAndForgetTie
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "809          else\n810          {\n811              className =\
          \ stubName(className);\n812          }\n813          return className;\n\
          814      }\n815  \n816      /*\n817       * Load an RMI-IIOP Stub. This\
          \ is used in PortableRemoteObject.narrow.\n818       */\n819      public\
          \ static Object loadStub(org.omg.CORBA.Object narrowFrom, Class<?> narrowTo)\n\
          820      {\n821          Object result = null;\n822  \n823          try\n\
          824          {\n825              // Get the codebase from the delegate to\
          \ use when loading the new stub, if possible...\n826              String\
          \ codebase = null;\n827              try\n828              {\n829      \
          \            // We can't assume that narrowFrom is a CORBA_2_3 stub, yet\
          \ it may have a 2_3 Delegate that provides a"
        lineNumber: 819
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
          kind: Method
          name: loadStub
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "822  \n823          try\n824          {\n825              // Get\
          \ the codebase from the delegate to use when loading the new stub, if possible...\n\
          826              String codebase = null;\n827              try\n828    \
          \          {\n829                  // We can't assume that narrowFrom is\
          \ a CORBA_2_3 stub, yet it may have a 2_3 Delegate that provides a\n830\
          \                  // codebase. Swallow the ClassCastException otherwise.\n\
          831                  Delegate delegate = StubAdapter.getDelegate(narrowFrom);\n\
          832                  codebase = ((org.omg.CORBA_2_3.portable.Delegate) delegate).get_codebase(narrowFrom);\n\
          833  \n834              }\n835              catch (ClassCastException e)\n\
          836              {\n837                  wrapper.classCastExceptionInLoadStub(e);\n\
          838              }\n839  \n840              PresentationManager.StubFactoryFactory\
          \ sff = org.jboss.com.sun.corba.se.spi.orb.ORB.getStubFactoryFactory();\n\
          841              PresentationManager.StubFactory sf = sff.createStubFactory(narrowTo.getName(),\
          \ false, codebase, narrowTo,\n842                      narrowTo.getClassLoader());"
        lineNumber: 832
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/util/Utility.java
          kind: Method
          name: loadStub
          package: org.jboss.com.sun.corba.se.impl.util
      - codeSnip: "18   * 2 along with this work; if not, write to the Free Software\
          \ Foundation,\n19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.org.omg.CORBA;\n27  \n28  import org.omg.CORBA.ORBPackage.InvalidName;\n\
          29  \n30  /**\n31   * This ORB class is defined to provide a home for the\
          \ register_initial_reference operation, which is added by portable\n32 \
          \  * interceptors and CORBA 2.4. It is added here until there is an official\
          \ Java language mapping for the method.\n33   */\n34  abstract public class\
          \ ORB extends org.omg.CORBA_2_3.ORB\n35  {\n36      /**\n37       * If this\
          \ operation is called with an id, <code>\"Y\"</code>, and an object, <code>YY</code>,\
          \ then a subsequent call\n38       * to <code>ORB.resolve_initial_references(\
          \ \"Y\" )</code> will return object <code>YY</code>."
        lineNumber: 28
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/org/omg/CORBA/ORB.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/org/omg/CORBA/ORB.java
          kind: Class
          name: ORB
          package: org.jboss.com.sun.corba.se.org.omg.CORBA
      - codeSnip: "24   */\n25  \n26  package org.jboss.com.sun.corba.se.org.omg.CORBA;\n\
          27  \n28  import org.omg.CORBA.ORBPackage.InvalidName;\n29  \n30  /**\n\
          31   * This ORB class is defined to provide a home for the register_initial_reference\
          \ operation, which is added by portable\n32   * interceptors and CORBA 2.4.\
          \ It is added here until there is an official Java language mapping for\
          \ the method.\n33   */\n34  abstract public class ORB extends org.omg.CORBA_2_3.ORB\n\
          35  {\n36      /**\n37       * If this operation is called with an id, <code>\"\
          Y\"</code>, and an object, <code>YY</code>, then a subsequent call\n38 \
          \      * to <code>ORB.resolve_initial_references( \"Y\" )</code> will return\
          \ object <code>YY</code>.\n39       * \n40       * @param id\n41       *\
          \            The ID by which the initial reference will be known.\n42  \
          \     * @param obj\n43       *            The initial reference itself.\n\
          44       * @throws InvalidName"
        lineNumber: 34
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/org/omg/CORBA/ORB.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/org/omg/CORBA/ORB.java
          kind: Class
          name: ORB
          package: org.jboss.com.sun.corba.se.org.omg.CORBA
      - codeSnip: '40       * @param id

          41       *            The ID by which the initial reference will be known.

          42       * @param obj

          43       *            The initial reference itself.

          44       * @throws InvalidName

          45       *             if this operation is called with an empty string
          id or this operation is called with an id that is

          46       *             already registered, including the default names defined
          by OMG.

          47       * @throws BAD_PARAM

          48       *             if the obj parameter is null.

          49       */

          50      public void register_initial_reference(String id, org.omg.CORBA.Object
          obj) throws InvalidName

          51      {

          52          throw new org.omg.CORBA.NO_IMPLEMENT();

          53      }

          54  }

          '
        lineNumber: 50
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/org/omg/CORBA/ORB.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/org/omg/CORBA/ORB.java
          kind: Method
          name: register_initial_reference
          package: org.jboss.com.sun.corba.se.org.omg.CORBA
      - codeSnip: '42       * @param obj

          43       *            The initial reference itself.

          44       * @throws InvalidName

          45       *             if this operation is called with an empty string
          id or this operation is called with an id that is

          46       *             already registered, including the default names defined
          by OMG.

          47       * @throws BAD_PARAM

          48       *             if the obj parameter is null.

          49       */

          50      public void register_initial_reference(String id, org.omg.CORBA.Object
          obj) throws InvalidName

          51      {

          52          throw new org.omg.CORBA.NO_IMPLEMENT();

          53      }

          54  }

          '
        lineNumber: 52
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/org/omg/CORBA/ORB.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/org/omg/CORBA/ORB.java
          kind: Method
          name: register_initial_reference
          package: org.jboss.com.sun.corba.se.org.omg.CORBA
      - codeSnip: "67       * @return {@link org.jboss.com.sun.corba.se.pept.encoding.InputObject\
          \ InputObject} if the message is synchronous.\n68       * \n69       * @throws\
          \ {@link org.omg.CORBA.portable.ApplicationException ApplicationException}\
          \ if the remote side raises an\n70       *         exception declared in\
          \ the remote interface.\n71       * \n72       * @throws {@link org.omg.CORBA.portable.RemarshalException\
          \ RemarshalException} if the PEPt runtime would like the\n73       *   \
          \      presentation block to start over.\n74       */\n75      public InputObject\
          \ marshalingComplete(java.lang.Object self, OutputObject outputObject)\n\
          76      // REVISIT EXCEPTIONS\n77              throws org.omg.CORBA.portable.ApplicationException,\
          \ org.omg.CORBA.portable.RemarshalException;\n78  \n79      /**\n80    \
          \   * After the presentation block completes a request it signals the PEPt\
          \ runtime by calling this method.\n81       * \n82       * This method may\
          \ release resources. In some cases it may cause control or error messages\
          \ to be sent.\n83       * \n84       * @param broker\n85       *       \
          \     -\n86       * @param inputObject\n87       *            -"
        lineNumber: 77
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/pept/protocol/ClientRequestDispatcher.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/pept/protocol/ClientRequestDispatcher.java
          kind: Method
          name: marshalingComplete
          package: org.jboss.com.sun.corba.se.pept.protocol
      - codeSnip: "28  /**\n29   * org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java\
          \ . Generated by the IDL-to-Java compiler (portable),\n30   * version \"\
          3.2\" from src/main/resources/idl/org/jboss/com/sun/corba/se/spi/activation/activation.idl\
          \ Wednesday,\n31   * February 2, 2011 5:13:28 PM PST\n32   */\n33  \n34\
          \  abstract public class POANameHelper\n35  {\n36      private static String\
          \ _id = \"IDL:activation/POAName:1.0\";\n37  \n38      public static void\
          \ insert(org.omg.CORBA.Any a, String[] that)\n39      {\n40          org.omg.CORBA.portable.OutputStream\
          \ out = a.create_output_stream();\n41          a.type(type());\n42     \
          \     write(out, that);\n43          a.read_value(out.create_input_stream(),\
          \ type());\n44      }\n45  \n46      public static String[] extract(org.omg.CORBA.Any\
          \ a)\n47      {\n48          return read(a.create_input_stream());"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.corba.se.spi.activation
      - codeSnip: "30   * version \"3.2\" from src/main/resources/idl/org/jboss/com/sun/corba/se/spi/activation/activation.idl\
          \ Wednesday,\n31   * February 2, 2011 5:13:28 PM PST\n32   */\n33  \n34\
          \  abstract public class POANameHelper\n35  {\n36      private static String\
          \ _id = \"IDL:activation/POAName:1.0\";\n37  \n38      public static void\
          \ insert(org.omg.CORBA.Any a, String[] that)\n39      {\n40          org.omg.CORBA.portable.OutputStream\
          \ out = a.create_output_stream();\n41          a.type(type());\n42     \
          \     write(out, that);\n43          a.read_value(out.create_input_stream(),\
          \ type());\n44      }\n45  \n46      public static String[] extract(org.omg.CORBA.Any\
          \ a)\n47      {\n48          return read(a.create_input_stream());\n49 \
          \     }\n50  "
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.corba.se.spi.activation
      - codeSnip: "36      private static String _id = \"IDL:activation/POAName:1.0\"\
          ;\n37  \n38      public static void insert(org.omg.CORBA.Any a, String[]\
          \ that)\n39      {\n40          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n41          a.type(type());\n42         \
          \ write(out, that);\n43          a.read_value(out.create_input_stream(),\
          \ type());\n44      }\n45  \n46      public static String[] extract(org.omg.CORBA.Any\
          \ a)\n47      {\n48          return read(a.create_input_stream());\n49 \
          \     }\n50  \n51      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n52  \n53      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n54      {\n55          if (__typeCode == null)\n56          {"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.corba.se.spi.activation
      - codeSnip: "41          a.type(type());\n42          write(out, that);\n43\
          \          a.read_value(out.create_input_stream(), type());\n44      }\n\
          45  \n46      public static String[] extract(org.omg.CORBA.Any a)\n47  \
          \    {\n48          return read(a.create_input_stream());\n49      }\n50\
          \  \n51      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          52  \n53      synchronized public static org.omg.CORBA.TypeCode type()\n\
          54      {\n55          if (__typeCode == null)\n56          {\n57      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n58\
          \              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n59              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          60                      org.jboss.com.sun.corba.se.spi.activation.POANameHelper.id(),\
          \ \"POAName\", __typeCode);\n61          }"
        lineNumber: 51
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.corba.se.spi.activation
      - codeSnip: "43          a.read_value(out.create_input_stream(), type());\n\
          44      }\n45  \n46      public static String[] extract(org.omg.CORBA.Any\
          \ a)\n47      {\n48          return read(a.create_input_stream());\n49 \
          \     }\n50  \n51      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n52  \n53      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n54      {\n55          if (__typeCode == null)\n56          {\n\
          57              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          58              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n59              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          60                      org.jboss.com.sun.corba.se.spi.activation.POANameHelper.id(),\
          \ \"POAName\", __typeCode);\n61          }\n62          return __typeCode;\n\
          63      }"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.spi.activation
      - codeSnip: "47      {\n48          return read(a.create_input_stream());\n\
          49      }\n50  \n51      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n52  \n53      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n54      {\n55          if (__typeCode == null)\n56          {\n\
          57              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          58              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n59              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          60                      org.jboss.com.sun.corba.se.spi.activation.POANameHelper.id(),\
          \ \"POAName\", __typeCode);\n61          }\n62          return __typeCode;\n\
          63      }\n64  \n65      public static String id()\n66      {\n67      \
          \    return _id;"
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.spi.activation
      - codeSnip: "48          return read(a.create_input_stream());\n49      }\n\
          50  \n51      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          52  \n53      synchronized public static org.omg.CORBA.TypeCode type()\n\
          54      {\n55          if (__typeCode == null)\n56          {\n57      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n58\
          \              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n59              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          60                      org.jboss.com.sun.corba.se.spi.activation.POANameHelper.id(),\
          \ \"POAName\", __typeCode);\n61          }\n62          return __typeCode;\n\
          63      }\n64  \n65      public static String id()\n66      {\n67      \
          \    return _id;\n68      }"
        lineNumber: 58
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.spi.activation
      - codeSnip: "49      }\n50  \n51      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n52  \n53      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n54      {\n55          if (__typeCode == null)\n56          {\n\
          57              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          58              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n59              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          60                      org.jboss.com.sun.corba.se.spi.activation.POANameHelper.id(),\
          \ \"POAName\", __typeCode);\n61          }\n62          return __typeCode;\n\
          63      }\n64  \n65      public static String id()\n66      {\n67      \
          \    return _id;\n68      }\n69  "
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.corba.se.spi.activation
      - codeSnip: "60                      org.jboss.com.sun.corba.se.spi.activation.POANameHelper.id(),\
          \ \"POAName\", __typeCode);\n61          }\n62          return __typeCode;\n\
          63      }\n64  \n65      public static String id()\n66      {\n67      \
          \    return _id;\n68      }\n69  \n70      public static String[] read(org.omg.CORBA.portable.InputStream\
          \ istream)\n71      {\n72          String value[] = null;\n73          int\
          \ _len0 = istream.read_long();\n74          value = new String[_len0];\n\
          75          for (int _o1 = 0; _o1 < value.length; ++_o1)\n76           \
          \   value[_o1] = istream.read_string();\n77          return value;\n78 \
          \     }\n79  \n80      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, String[] value)"
        lineNumber: 70
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.spi.activation
      - codeSnip: "70      public static String[] read(org.omg.CORBA.portable.InputStream\
          \ istream)\n71      {\n72          String value[] = null;\n73          int\
          \ _len0 = istream.read_long();\n74          value = new String[_len0];\n\
          75          for (int _o1 = 0; _o1 < value.length; ++_o1)\n76           \
          \   value[_o1] = istream.read_string();\n77          return value;\n78 \
          \     }\n79  \n80      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, String[] value)\n81      {\n82          ostream.write_long(value.length);\n\
          83          for (int _i0 = 0; _i0 < value.length; ++_i0)\n84           \
          \   ostream.write_string(value[_i0]);\n85      }\n86  \n87  }\n"
        lineNumber: 80
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/activation/POANameHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.spi.activation
      - codeSnip: "19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.spi.extension;\n27  \n28  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n\
          29  import org.omg.CORBA.LocalObject;\n30  import org.omg.CORBA.Policy;\n\
          31  \n32  /** Policy used to specify the copyObject implementation to use.\
          \ */\n33  @SuppressWarnings(\"serial\")\n34  public class CopyObjectPolicy\
          \ extends LocalObject implements Policy\n35  {\n36      private final int\
          \ value;\n37  \n38      public CopyObjectPolicy(int value)\n39      {"
        lineNumber: 29
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/CopyObjectPolicy.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/CopyObjectPolicy.java
          kind: Class
          name: CopyObjectPolicy
          package: org.jboss.com.sun.corba.se.spi.extension
      - codeSnip: "20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.spi.extension;\n27  \n28  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n\
          29  import org.omg.CORBA.LocalObject;\n30  import org.omg.CORBA.Policy;\n\
          31  \n32  /** Policy used to specify the copyObject implementation to use.\
          \ */\n33  @SuppressWarnings(\"serial\")\n34  public class CopyObjectPolicy\
          \ extends LocalObject implements Policy\n35  {\n36      private final int\
          \ value;\n37  \n38      public CopyObjectPolicy(int value)\n39      {\n\
          40          this.value = value;"
        lineNumber: 30
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/CopyObjectPolicy.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/CopyObjectPolicy.java
          kind: Class
          name: CopyObjectPolicy
          package: org.jboss.com.sun.corba.se.spi.extension
      - codeSnip: "43      public int getValue()\n44      {\n45          return value;\n\
          46      }\n47  \n48      public int policy_type()\n49      {\n50       \
          \   return ORBConstants.COPY_OBJECT_POLICY;\n51      }\n52  \n53      public\
          \ org.omg.CORBA.Policy copy()\n54      {\n55          return this;\n56 \
          \     }\n57  \n58      public void destroy()\n59      {\n60          //\
          \ NO-OP\n61      }\n62  \n63      public String toString()"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/CopyObjectPolicy.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/CopyObjectPolicy.java
          kind: Method
          name: copy
          package: org.jboss.com.sun.corba.se.spi.extension
      - codeSnip: "142              minimalPolicy = new ServantCachingPolicy(MINIMAL_SEMANTICS);\n\
          143  \n144          return minimalPolicy;\n145      }\n146  \n147      public\
          \ int policy_type()\n148      {\n149          return ORBConstants.SERVANT_CACHING_POLICY;\n\
          150      }\n151  \n152      public org.omg.CORBA.Policy copy()\n153    \
          \  {\n154          return this;\n155      }\n156  \n157      public void\
          \ destroy()\n158      {\n159          // NO-OP\n160      }\n161  }\n"
        lineNumber: 152
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/ServantCachingPolicy.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/ServantCachingPolicy.java
          kind: Method
          name: copy
          package: org.jboss.com.sun.corba.se.spi.extension
      - codeSnip: "19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.spi.extension;\n27  \n28  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n\
          29  import org.omg.CORBA.LocalObject;\n30  import org.omg.CORBA.Policy;\n\
          31  \n32  /**\n33   * Policy used to implement servant caching optimization\
          \ in the POA. Creating a POA with an instance pol of this policy\n34   *\
          \ where pol.getType() &gt; NO_SERVANT_CACHING will cause the servant to\
          \ be looked up in the POA and cached in the\n35   * LocalClientRequestDispatcher\
          \ when the ClientRequestDispatcher is colocated with the implementation\
          \ of the objref.\n36   * This greatly speeds up invocations at the cost\
          \ of violating the POA semantics. In particular, every request to a\n37\
          \   * particular objref must be handled by the same servant. Note that this\
          \ is typically the case for EJB implementations.\n38   * <p>\n39   * If\
          \ servant caching is used, there are two different additional features of\
          \ the POA that are expensive:"
        lineNumber: 29
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/ServantCachingPolicy.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/ServantCachingPolicy.java
          kind: Class
          name: ServantCachingPolicy
          package: org.jboss.com.sun.corba.se.spi.extension
      - codeSnip: "20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.spi.extension;\n27  \n28  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n\
          29  import org.omg.CORBA.LocalObject;\n30  import org.omg.CORBA.Policy;\n\
          31  \n32  /**\n33   * Policy used to implement servant caching optimization\
          \ in the POA. Creating a POA with an instance pol of this policy\n34   *\
          \ where pol.getType() &gt; NO_SERVANT_CACHING will cause the servant to\
          \ be looked up in the POA and cached in the\n35   * LocalClientRequestDispatcher\
          \ when the ClientRequestDispatcher is colocated with the implementation\
          \ of the objref.\n36   * This greatly speeds up invocations at the cost\
          \ of violating the POA semantics. In particular, every request to a\n37\
          \   * particular objref must be handled by the same servant. Note that this\
          \ is typically the case for EJB implementations.\n38   * <p>\n39   * If\
          \ servant caching is used, there are two different additional features of\
          \ the POA that are expensive:\n40   * <ol>"
        lineNumber: 30
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/ServantCachingPolicy.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/ServantCachingPolicy.java
          kind: Class
          name: ServantCachingPolicy
          package: org.jboss.com.sun.corba.se.spi.extension
      - codeSnip: "19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.spi.extension;\n27  \n28  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n\
          29  import org.omg.CORBA.LocalObject;\n30  import org.omg.CORBA.Policy;\n\
          31  \n32  /** Policy used to implement zero IIOP port policy in the POA.\
          \ */\n33  @SuppressWarnings(\"serial\")\n34  public class ZeroPortPolicy\
          \ extends LocalObject implements Policy\n35  {\n36      private static ZeroPortPolicy\
          \ policy = new ZeroPortPolicy(true);\n37  \n38      private boolean flag\
          \ = true;\n39  "
        lineNumber: 29
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/ZeroPortPolicy.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/ZeroPortPolicy.java
          kind: Class
          name: ZeroPortPolicy
          package: org.jboss.com.sun.corba.se.spi.extension
      - codeSnip: "20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.spi.extension;\n27  \n28  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n\
          29  import org.omg.CORBA.LocalObject;\n30  import org.omg.CORBA.Policy;\n\
          31  \n32  /** Policy used to implement zero IIOP port policy in the POA.\
          \ */\n33  @SuppressWarnings(\"serial\")\n34  public class ZeroPortPolicy\
          \ extends LocalObject implements Policy\n35  {\n36      private static ZeroPortPolicy\
          \ policy = new ZeroPortPolicy(true);\n37  \n38      private boolean flag\
          \ = true;\n39  \n40      private ZeroPortPolicy(boolean type)"
        lineNumber: 30
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/ZeroPortPolicy.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/ZeroPortPolicy.java
          kind: Class
          name: ZeroPortPolicy
          package: org.jboss.com.sun.corba.se.spi.extension
      - codeSnip: "55      public synchronized static ZeroPortPolicy getPolicy()\n\
          56      {\n57          return policy;\n58      }\n59  \n60      public int\
          \ policy_type()\n61      {\n62          return ORBConstants.ZERO_PORT_POLICY;\n\
          63      }\n64  \n65      public org.omg.CORBA.Policy copy()\n66      {\n\
          67          return this;\n68      }\n69  \n70      public void destroy()\n\
          71      {\n72          // NO-OP\n73      }\n74  }\n"
        lineNumber: 65
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/ZeroPortPolicy.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/extension/ZeroPortPolicy.java
          kind: Method
          name: copy
          package: org.jboss.com.sun.corba.se.spi.extension
      - codeSnip: "156      public static ObjectReferenceFactory makeObjectReferenceFactory(ORB\
          \ orb, IORTemplateList iortemps)\n157      {\n158          return new ObjectReferenceFactoryImpl(orb,\
          \ iortemps);\n159      }\n160  \n161      public static ObjectKeyFactory\
          \ makeObjectKeyFactory(ORB orb)\n162      {\n163          return new ObjectKeyFactoryImpl(orb);\n\
          164      }\n165  \n166      public static IOR getIOR(org.omg.CORBA.Object\
          \ obj)\n167      {\n168          return ORBUtility.getIOR(obj);\n169   \
          \   }\n170  \n171      public static org.omg.CORBA.Object makeObjectReference(IOR\
          \ ior)\n172      {\n173          return ORBUtility.makeObjectReference(ior);\n\
          174      }\n175  \n176      /**"
        lineNumber: 166
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/IORFactories.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/IORFactories.java
          kind: Method
          name: getIOR
          package: org.jboss.com.sun.corba.se.spi.ior
      - codeSnip: "161      public static ObjectKeyFactory makeObjectKeyFactory(ORB\
          \ orb)\n162      {\n163          return new ObjectKeyFactoryImpl(orb);\n\
          164      }\n165  \n166      public static IOR getIOR(org.omg.CORBA.Object\
          \ obj)\n167      {\n168          return ORBUtility.getIOR(obj);\n169   \
          \   }\n170  \n171      public static org.omg.CORBA.Object makeObjectReference(IOR\
          \ ior)\n172      {\n173          return ORBUtility.makeObjectReference(ior);\n\
          174      }\n175  \n176      /**\n177       * This method must be called\
          \ in order to register the value factories for the ObjectReferenceTemplate\
          \ and\n178       * ObjectReferenceFactory value types.\n179       */\n180\
          \      public static void registerValueFactories(ORB orb)\n181      {"
        lineNumber: 171
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/IORFactories.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/IORFactories.java
          kind: Method
          name: makeObjectReference
          package: org.jboss.com.sun.corba.se.spi.ior
      - codeSnip: "31  import org.jboss.com.sun.corba.se.impl.ior.IORTemplateImpl;\n\
          32  import org.jboss.com.sun.corba.se.impl.ior.IORTemplateListImpl;\n33\
          \  import org.jboss.com.sun.corba.se.impl.ior.ObjectIdImpl;\n34  import\
          \ org.jboss.com.sun.corba.se.impl.ior.ObjectKeyFactoryImpl;\n35  import\
          \ org.jboss.com.sun.corba.se.impl.ior.ObjectKeyImpl;\n36  import org.jboss.com.sun.corba.se.impl.ior.ObjectReferenceFactoryImpl;\n\
          37  import org.jboss.com.sun.corba.se.impl.ior.ObjectReferenceProducerBase;\n\
          38  import org.jboss.com.sun.corba.se.impl.ior.ObjectReferenceTemplateImpl;\n\
          39  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n40  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n41  import org.omg.CORBA.BAD_PARAM;\n\
          42  import org.omg.CORBA.portable.ValueFactory;\n43  import org.omg.CORBA_2_3.portable.InputStream;\n\
          44  import org.omg.PortableInterceptor.ObjectReferenceFactory;\n45  import\
          \ org.omg.PortableInterceptor.ObjectReferenceTemplate;\n46  \n47  /**\n\
          48   * This class provides a number of factory methods for creating various\
          \ IOR SPI classes which are not subclassed for\n49   * specific protocols.\
          \ The following types must be created using this class:\n50   * <ul>\n51\
          \   * <li>ObjectId</li>"
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/IORFactories.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/IORFactories.java
          kind: Class
          name: ''
          package: org.jboss.com.sun.corba.se.spi.ior
      - codeSnip: "32  import org.jboss.com.sun.corba.se.impl.ior.IORTemplateListImpl;\n\
          33  import org.jboss.com.sun.corba.se.impl.ior.ObjectIdImpl;\n34  import\
          \ org.jboss.com.sun.corba.se.impl.ior.ObjectKeyFactoryImpl;\n35  import\
          \ org.jboss.com.sun.corba.se.impl.ior.ObjectKeyImpl;\n36  import org.jboss.com.sun.corba.se.impl.ior.ObjectReferenceFactoryImpl;\n\
          37  import org.jboss.com.sun.corba.se.impl.ior.ObjectReferenceProducerBase;\n\
          38  import org.jboss.com.sun.corba.se.impl.ior.ObjectReferenceTemplateImpl;\n\
          39  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n40  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n41  import org.omg.CORBA.BAD_PARAM;\n\
          42  import org.omg.CORBA.portable.ValueFactory;\n43  import org.omg.CORBA_2_3.portable.InputStream;\n\
          44  import org.omg.PortableInterceptor.ObjectReferenceFactory;\n45  import\
          \ org.omg.PortableInterceptor.ObjectReferenceTemplate;\n46  \n47  /**\n\
          48   * This class provides a number of factory methods for creating various\
          \ IOR SPI classes which are not subclassed for\n49   * specific protocols.\
          \ The following types must be created using this class:\n50   * <ul>\n51\
          \   * <li>ObjectId</li>\n52   * <li>ObjectKey</li>"
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/IORFactories.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/IORFactories.java
          kind: Class
          name: ''
          package: org.jboss.com.sun.corba.se.spi.ior
      - codeSnip: "33  import org.jboss.com.sun.corba.se.impl.ior.ObjectIdImpl;\n\
          34  import org.jboss.com.sun.corba.se.impl.ior.ObjectKeyFactoryImpl;\n35\
          \  import org.jboss.com.sun.corba.se.impl.ior.ObjectKeyImpl;\n36  import\
          \ org.jboss.com.sun.corba.se.impl.ior.ObjectReferenceFactoryImpl;\n37  import\
          \ org.jboss.com.sun.corba.se.impl.ior.ObjectReferenceProducerBase;\n38 \
          \ import org.jboss.com.sun.corba.se.impl.ior.ObjectReferenceTemplateImpl;\n\
          39  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n40  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n41  import org.omg.CORBA.BAD_PARAM;\n\
          42  import org.omg.CORBA.portable.ValueFactory;\n43  import org.omg.CORBA_2_3.portable.InputStream;\n\
          44  import org.omg.PortableInterceptor.ObjectReferenceFactory;\n45  import\
          \ org.omg.PortableInterceptor.ObjectReferenceTemplate;\n46  \n47  /**\n\
          48   * This class provides a number of factory methods for creating various\
          \ IOR SPI classes which are not subclassed for\n49   * specific protocols.\
          \ The following types must be created using this class:\n50   * <ul>\n51\
          \   * <li>ObjectId</li>\n52   * <li>ObjectKey</li>\n53   * <li>IOR</li>"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/IORFactories.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/IORFactories.java
          kind: Class
          name: ''
          package: org.jboss.com.sun.corba.se.spi.ior
      - codeSnip: "20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.spi.ior;\n27  \n28  import org.jboss.com.sun.corba.se.impl.encoding.EncapsOutputStream;\n\
          29  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n30  import org.omg.CORBA_2_3.portable.InputStream;\n\
          31  \n32  /**\n33   * Base class to use for implementing TaggedComponents.\
          \ It implements the getIOPComponent method using the\n34   * TaggedComponent.write()\
          \ method.\n35   * \n36   * @author Ken Cavanaugh\n37   */\n38  public abstract\
          \ class TaggedComponentBase extends IdentifiableBase implements TaggedComponent\n\
          39  {\n40      public org.omg.IOP.TaggedComponent getIOPComponent(org.omg.CORBA.ORB\
          \ orb)"
        lineNumber: 30
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/TaggedComponentBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/TaggedComponentBase.java
          kind: Class
          name: TaggedComponentBase
          package: org.jboss.com.sun.corba.se.spi.ior
      - codeSnip: "30  import org.omg.CORBA_2_3.portable.InputStream;\n31  \n32  /**\n\
          33   * Base class to use for implementing TaggedComponents. It implements\
          \ the getIOPComponent method using the\n34   * TaggedComponent.write() method.\n\
          35   * \n36   * @author Ken Cavanaugh\n37   */\n38  public abstract class\
          \ TaggedComponentBase extends IdentifiableBase implements TaggedComponent\n\
          39  {\n40      public org.omg.IOP.TaggedComponent getIOPComponent(org.omg.CORBA.ORB\
          \ orb)\n41      {\n42          EncapsOutputStream os = new EncapsOutputStream((ORB)\
          \ orb);\n43          write(os);\n44          InputStream is = (InputStream)\
          \ (os.create_input_stream());\n45          return org.omg.IOP.TaggedComponentHelper.read(is);\n\
          46      }\n47  }\n"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/TaggedComponentBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/TaggedComponentBase.java
          kind: Method
          name: getIOPComponent
          package: org.jboss.com.sun.corba.se.spi.ior
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.spi.ior;\n\
          27  \n28  import java.util.Iterator;\n29  \n30  import org.jboss.com.sun.corba.se.impl.ior.EncapsulationUtility;\n\
          31  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n32  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          33  \n34  public abstract class TaggedProfileTemplateBase extends IdentifiableContainerBase\
          \ implements TaggedProfileTemplate\n35  {\n36      public void write(OutputStream\
          \ os)\n37      {\n38          EncapsulationUtility.writeEncapsulation(this,\
          \ os);\n39      }\n40  \n41      public org.omg.IOP.TaggedComponent[] getIOPComponents(ORB\
          \ orb, int id)\n42      {"
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/TaggedProfileTemplateBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/TaggedProfileTemplateBase.java
          kind: Class
          name: TaggedProfileTemplateBase
          package: org.jboss.com.sun.corba.se.spi.ior
      - codeSnip: "228          }\n229      }\n230  \n231      public boolean supportsIORIIOPProfileComponents()\n\
          232      {\n233          return getMinor() > 0 || getMajor() > 1;\n234 \
          \     }\n235  \n236      // IO methods\n237  \n238      public void read(org.omg.CORBA.portable.InputStream\
          \ istream)\n239      {\n240          this.major = istream.read_octet();\n\
          241          this.minor = istream.read_octet();\n242      }\n243  \n244\
          \      public void write(org.omg.CORBA.portable.OutputStream ostream)\n\
          245      {\n246          ostream.write_octet(this.major);\n247         \
          \ ostream.write_octet(this.minor);\n248      }"
        lineNumber: 238
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/iiop/GIOPVersion.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/iiop/GIOPVersion.java
          kind: Method
          name: read
          package: org.jboss.com.sun.corba.se.spi.ior.iiop
      - codeSnip: "234      }\n235  \n236      // IO methods\n237  \n238      public\
          \ void read(org.omg.CORBA.portable.InputStream istream)\n239      {\n240\
          \          this.major = istream.read_octet();\n241          this.minor =\
          \ istream.read_octet();\n242      }\n243  \n244      public void write(org.omg.CORBA.portable.OutputStream\
          \ ostream)\n245      {\n246          ostream.write_octet(this.major);\n\
          247          ostream.write_octet(this.minor);\n248      }\n249  }\n"
        lineNumber: 244
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/iiop/GIOPVersion.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/iiop/GIOPVersion.java
          kind: Method
          name: write
          package: org.jboss.com.sun.corba.se.spi.ior.iiop
      - codeSnip: "35  import org.jboss.com.sun.corba.se.impl.ior.iiop.MaxStreamFormatVersionComponentImpl;\n\
          36  import org.jboss.com.sun.corba.se.impl.ior.iiop.ORBTypeComponentImpl;\n\
          37  import org.jboss.com.sun.corba.se.impl.ior.iiop.RequestPartitioningComponentImpl;\n\
          38  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n39  import\
          \ org.jboss.com.sun.corba.se.spi.ior.EncapsulationFactoryBase;\n40  import\
          \ org.jboss.com.sun.corba.se.spi.ior.Identifiable;\n41  import org.jboss.com.sun.corba.se.spi.ior.IdentifiableFactory;\n\
          42  import org.jboss.com.sun.corba.se.spi.ior.ObjectId;\n43  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n\
          44  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n45  import org.omg.CORBA_2_3.portable.InputStream;\n\
          46  import org.omg.IOP.TAG_ALTERNATE_IIOP_ADDRESS;\n47  import org.omg.IOP.TAG_CODE_SETS;\n\
          48  import org.omg.IOP.TAG_INTERNET_IOP;\n49  import org.omg.IOP.TAG_JAVA_CODEBASE;\n\
          50  import org.omg.IOP.TAG_ORB_TYPE;\n51  import org.omg.IOP.TAG_RMI_CUSTOM_MAX_STREAM_FORMAT;\n\
          52  \n53  /**\n54   * This class provides all of the factories for the IIOP\
          \ profiles and components. This includes direct construction of\n55   *\
          \ profiles and templates, as well as constructing factories that can be\
          \ registered with an IdentifiableFactoryFinder."
        lineNumber: 45
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/iiop/IIOPFactories.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/ior/iiop/IIOPFactories.java
          kind: Class
          name: ''
          package: org.jboss.com.sun.corba.se.spi.ior.iiop
      - codeSnip: "20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  package org.jboss.com.sun.corba.se.spi.oa;\n\
          26  \n27  import javax.rmi.CORBA.Tie;\n28  \n29  import org.jboss.com.sun.corba.se.spi.copyobject.ObjectCopierFactory;\n\
          30  import org.omg.CORBA.portable.ServantObject;\n31  import org.omg.PortableServer.ServantLocatorPackage.CookieHolder;\n\
          32  \n33  /**\n34   * This class is a holder for the information required\
          \ to implement POACurrent. It is also used for the ServantObject\n35   *\
          \ that is returned by _servant_preinvoke calls. This allows us to avoid\
          \ allocating an extra object on each collocated\n36   * invocation.\n37\
          \   */\n38  public class OAInvocationInfo extends ServantObject\n39  {\n\
          40      // This is the container object for the servant."
        lineNumber: 30
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/oa/OAInvocationInfo.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/oa/OAInvocationInfo.java
          kind: Class
          name: OAInvocationInfo
          package: org.jboss.com.sun.corba.se.spi.oa
      - codeSnip: "121          {\n122              PIHandler pih = orb.getPIHandler();\n\
          123              if (pih != null)\n124                  // This runs the\
          \ IORInterceptors.\n125                  pih.objectAdapterCreated(this);\n\
          126          }\n127  \n128          iortemp.makeImmutable();\n129      }\n\
          130  \n131      final public org.omg.CORBA.Object makeObject(String repId,\
          \ byte[] oid)\n132      {\n133          return currentFactory.make_object(repId,\
          \ oid);\n134      }\n135  \n136      final public byte[] getAdapterId()\n\
          137      {\n138          return adapterId;\n139      }\n140  \n141     \
          \ final public ORB getORB()"
        lineNumber: 131
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/oa/ObjectAdapterBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/oa/ObjectAdapterBase.java
          kind: Method
          name: makeObject
          package: org.jboss.com.sun.corba.se.spi.oa
      - codeSnip: "162      final public ObjectReferenceFactory getCurrentFactory()\n\
          163      {\n164          return currentFactory;\n165      }\n166  \n167\
          \      final public void setCurrentFactory(ObjectReferenceFactory factory)\n\
          168      {\n169          currentFactory = factory;\n170      }\n171  \n\
          172      abstract public org.omg.CORBA.Object getLocalServant(byte[] objectId);\n\
          173  \n174      abstract public void getInvocationServant(OAInvocationInfo\
          \ info);\n175  \n176      abstract public void returnServant();\n177  \n\
          178      abstract public void enter() throws OADestroyed;\n179  \n180  \
          \    abstract public void exit();\n181  \n182      abstract protected ObjectCopierFactory\
          \ getObjectCopierFactory();"
        lineNumber: 172
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/oa/ObjectAdapterBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/oa/ObjectAdapterBase.java
          kind: Method
          name: getLocalServant
          package: org.jboss.com.sun.corba.se.spi.oa
      - codeSnip: "28  import org.jboss.com.sun.corba.se.impl.logging.POASystemException;\n\
          29  import org.jboss.com.sun.corba.se.impl.oa.poa.Policies;\n30  import\
          \ org.jboss.com.sun.corba.se.spi.copyobject.ObjectCopierFactory;\n31  import\
          \ org.jboss.com.sun.corba.se.spi.ior.IORFactories;\n32  import org.jboss.com.sun.corba.se.spi.ior.IORTemplate;\n\
          33  import org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n34  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n35  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          36  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n37  import org.jboss.com.sun.corba.se.spi.protocol.PIHandler;\n\
          38  import org.omg.CORBA.Policy;\n39  import org.omg.PortableInterceptor.ObjectReferenceFactory;\n\
          40  import org.omg.PortableInterceptor.ObjectReferenceTemplate;\n41  \n\
          42  abstract public class ObjectAdapterBase extends org.omg.CORBA.LocalObject\
          \ implements ObjectAdapter\n43  {\n44      private ORB orb;\n45  \n46  \
          \    // Exception wrappers\n47      private final POASystemException _iorWrapper;\n\
          48  "
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/oa/ObjectAdapterBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/oa/ObjectAdapterBase.java
          kind: Class
          name: ObjectAdapterBase
          package: org.jboss.com.sun.corba.se.spi.oa
      - codeSnip: "32  import org.jboss.com.sun.corba.se.spi.ior.IORTemplate;\n33\
          \  import org.jboss.com.sun.corba.se.spi.ior.ObjectAdapterId;\n34  import\
          \ org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n35  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n\
          36  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n37  import org.jboss.com.sun.corba.se.spi.protocol.PIHandler;\n\
          38  import org.omg.CORBA.Policy;\n39  import org.omg.PortableInterceptor.ObjectReferenceFactory;\n\
          40  import org.omg.PortableInterceptor.ObjectReferenceTemplate;\n41  \n\
          42  abstract public class ObjectAdapterBase extends org.omg.CORBA.LocalObject\
          \ implements ObjectAdapter\n43  {\n44      private ORB orb;\n45  \n46  \
          \    // Exception wrappers\n47      private final POASystemException _iorWrapper;\n\
          48  \n49      private final POASystemException _invocationWrapper;\n50 \
          \ \n51      private final POASystemException _lifecycleWrapper;\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/oa/ObjectAdapterBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/oa/ObjectAdapterBase.java
          kind: Class
          name: ObjectAdapterBase
          package: org.jboss.com.sun.corba.se.spi.oa
      - codeSnip: "26  package org.jboss.com.sun.corba.se.spi.orb;\n27  \n28  import\
          \ java.security.AccessController;\n29  import java.security.PrivilegedAction;\n\
          30  import java.util.HashMap;\n31  import java.util.Map;\n32  import java.util.Properties;\n\
          33  import java.util.concurrent.ConcurrentHashMap;\n34  import java.util.logging.Logger;\n\
          35  \n36  import org.omg.CORBA.TCKind;\n37  \n38  import org.jboss.com.sun.corba.se.impl.corba.TypeCodeFactory;\n\
          39  import org.jboss.com.sun.corba.se.impl.corba.TypeCodeImpl;\n40  import\
          \ org.jboss.com.sun.corba.se.impl.logging.OMGSystemException;\n41  import\
          \ org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n42  import\
          \ org.jboss.com.sun.corba.se.impl.oa.poa.BadServerIdHandler;\n43  import\
          \ org.jboss.com.sun.corba.se.impl.orbutil.ORBClassLoader;\n44  import org.jboss.com.sun.corba.se.impl.orbutil.ORBConstants;\n\
          45  import org.jboss.com.sun.corba.se.impl.presentation.rmi.PresentationManagerImpl;\n\
          46  import org.jboss.com.sun.corba.se.impl.transport.ByteBufferPoolImpl;"
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/orb/ORB.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/orb/ORB.java
          kind: Class
          name: ORB
          package: org.jboss.com.sun.corba.se.spi.orb
      - codeSnip: "19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.spi.orb;\n27  \n28  import org.jboss.com.sun.corba.se.impl.orb.ORBVersionImpl;\n\
          29  import org.omg.CORBA.portable.InputStream;\n30  \n31  public class ORBVersionFactory\n\
          32  {\n33      private ORBVersionFactory()\n34      {\n35      };\n36  \n\
          37      public static ORBVersion getFOREIGN()\n38      {\n39          return\
          \ ORBVersionImpl.FOREIGN;"
        lineNumber: 29
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/orb/ORBVersionFactory.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/orb/ORBVersionFactory.java
          kind: Class
          name: ORBVersionFactory
          package: org.jboss.com.sun.corba.se.spi.orb
      - codeSnip: "20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.spi.presentation.rmi;\n27  \n28  import java.rmi.RemoteException;\n\
          29  \n30  import org.omg.CORBA.ORB;\n31  import org.omg.CORBA.portable.Delegate;\n\
          32  import org.omg.CORBA.portable.OutputStream;\n33  \n34  /**\n35   * Interface\
          \ used to support dynamically generated stubs. This supplies some methods\
          \ that are found in\n36   * org.omg.CORBA.portable.ObjectImpl that are not\
          \ available in org.omg.CORBA.Object.\n37   */\n38  public interface DynamicStub\
          \ extends org.omg.CORBA.Object\n39  {\n40      /**"
        lineNumber: 30
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/DynamicStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/DynamicStub.java
          kind: Interface
          name: DynamicStub
          package: org.jboss.com.sun.corba.se.spi.presentation.rmi
      - codeSnip: "21   * Please contact Oracle, 500 Oracle Parkway, Redwood Shores,\
          \ CA 94065 USA\n22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.spi.presentation.rmi;\n\
          27  \n28  import java.rmi.RemoteException;\n29  \n30  import org.omg.CORBA.ORB;\n\
          31  import org.omg.CORBA.portable.Delegate;\n32  import org.omg.CORBA.portable.OutputStream;\n\
          33  \n34  /**\n35   * Interface used to support dynamically generated stubs.\
          \ This supplies some methods that are found in\n36   * org.omg.CORBA.portable.ObjectImpl\
          \ that are not available in org.omg.CORBA.Object.\n37   */\n38  public interface\
          \ DynamicStub extends org.omg.CORBA.Object\n39  {\n40      /**\n41     \
          \  * Similar to ObjectImpl._set_delegate"
        lineNumber: 31
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/DynamicStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/DynamicStub.java
          kind: Interface
          name: DynamicStub
          package: org.jboss.com.sun.corba.se.spi.presentation.rmi
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.spi.presentation.rmi;\n\
          27  \n28  import java.rmi.RemoteException;\n29  \n30  import org.omg.CORBA.ORB;\n\
          31  import org.omg.CORBA.portable.Delegate;\n32  import org.omg.CORBA.portable.OutputStream;\n\
          33  \n34  /**\n35   * Interface used to support dynamically generated stubs.\
          \ This supplies some methods that are found in\n36   * org.omg.CORBA.portable.ObjectImpl\
          \ that are not available in org.omg.CORBA.Object.\n37   */\n38  public interface\
          \ DynamicStub extends org.omg.CORBA.Object\n39  {\n40      /**\n41     \
          \  * Similar to ObjectImpl._set_delegate\n42       */"
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/DynamicStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/DynamicStub.java
          kind: Interface
          name: DynamicStub
          package: org.jboss.com.sun.corba.se.spi.presentation.rmi
      - codeSnip: "28  import java.rmi.RemoteException;\n29  \n30  import org.omg.CORBA.ORB;\n\
          31  import org.omg.CORBA.portable.Delegate;\n32  import org.omg.CORBA.portable.OutputStream;\n\
          33  \n34  /**\n35   * Interface used to support dynamically generated stubs.\
          \ This supplies some methods that are found in\n36   * org.omg.CORBA.portable.ObjectImpl\
          \ that are not available in org.omg.CORBA.Object.\n37   */\n38  public interface\
          \ DynamicStub extends org.omg.CORBA.Object\n39  {\n40      /**\n41     \
          \  * Similar to ObjectImpl._set_delegate\n42       */\n43      void setDelegate(Delegate\
          \ delegate);\n44  \n45      /**\n46       * Similar to ObjectImpl._get_delegate\n\
          47       */\n48      Delegate getDelegate();"
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/DynamicStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/DynamicStub.java
          kind: Interface
          name: DynamicStub
          package: org.jboss.com.sun.corba.se.spi.presentation.rmi
      - codeSnip: "104              POAManagerImpl mgrImpl = (POAManagerImpl) mgr;\n\
          105              mgrImpl.implicitActivation();\n106          }\n107  \n\
          108          return ref;\n109      }\n110  \n111      /**\n112       * Given\
          \ any Tie, return the corresponding object refernce, activating the Servant\
          \ if necessary.\n113       */\n114      public static org.omg.CORBA.Object\
          \ activateTie(Tie tie)\n115      {\n116          /**\n117           * Any\
          \ implementation of Tie should be either a Servant or an ObjectImpl, depending\
          \ on which style of code\n118           * generation is used. rmic -iiop\
          \ by default results in an ObjectImpl-based Tie, while rmic -iiop -poa results\n\
          119           * in a Servant-based Tie. Dynamic RMI-IIOP also uses Servant-based\
          \ Ties (see\n120           * impl.presentation.rmi.ReflectiveTie).\n121\
          \           */\n122          if (tie instanceof ObjectImpl)\n123       \
          \   {\n124              return tie.thisObject();"
        lineNumber: 114
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
          kind: Method
          name: activateTie
          package: org.jboss.com.sun.corba.se.spi.presentation.rmi
      - codeSnip: "139       */\n140      public static Delegate getDelegate(Object\
          \ stub)\n141      {\n142          if (stub instanceof DynamicStub)\n143\
          \              return ((DynamicStub) stub).getDelegate();\n144         \
          \ else if (stub instanceof ObjectImpl)\n145              return ((ObjectImpl)\
          \ stub)._get_delegate();\n146          else if (stub instanceof Tie)\n147\
          \          {\n148              Tie tie = (Tie) stub;\n149              org.omg.CORBA.Object\
          \ ref = activateTie(tie);\n150              return getDelegate(ref);\n151\
          \          }\n152          else\n153              throw wrapper.getDelegateRequiresStub();\n\
          154      }\n155  \n156      public static ORB getORB(Object stub)\n157 \
          \     {\n158          if (stub instanceof DynamicStub)\n159            \
          \  return ((DynamicStub) stub).getORB();"
        lineNumber: 149
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
          kind: Method
          name: getDelegate
          package: org.jboss.com.sun.corba.se.spi.presentation.rmi
      - codeSnip: "173              throw wrapper.getTypeIdsRequiresStub();\n174 \
          \     }\n175  \n176      public static void connect(Object stub, ORB orb)\
          \ throws java.rmi.RemoteException\n177      {\n178          if (stub instanceof\
          \ DynamicStub)\n179              ((DynamicStub) stub).connect(orb);\n180\
          \          else if (stub instanceof javax.rmi.CORBA.Stub)\n181         \
          \     ((javax.rmi.CORBA.Stub) stub).connect(orb);\n182          else if\
          \ (stub instanceof ObjectImpl)\n183              orb.connect((org.omg.CORBA.Object)\
          \ stub);\n184          else\n185              throw wrapper.connectRequiresStub();\n\
          186      }\n187  \n188      public static boolean isLocal(Object stub)\n\
          189      {\n190          if (stub instanceof DynamicStub)\n191         \
          \     return ((DynamicStub) stub).isLocal();\n192          else if (stub\
          \ instanceof ObjectImpl)\n193              return ((ObjectImpl) stub)._is_local();"
        lineNumber: 183
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
          kind: Method
          name: connect
          package: org.jboss.com.sun.corba.se.spi.presentation.rmi
      - codeSnip: "20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.spi.presentation.rmi;\n27  \n28  import javax.rmi.CORBA.Tie;\n\
          29  \n30  import org.omg.CORBA.ORB;\n31  import org.omg.CORBA.portable.Delegate;\n\
          32  import org.omg.CORBA.portable.ObjectImpl;\n33  import org.omg.CORBA.portable.OutputStream;\n\
          34  import org.omg.PortableServer.POA;\n35  import org.omg.PortableServer.POAManager;\n\
          36  import org.omg.PortableServer.Servant;\n37  import org.omg.PortableServer.POAPackage.ServantNotActive;\n\
          38  import org.omg.PortableServer.POAPackage.WrongPolicy;\n39  \n40  import\
          \ org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;"
        lineNumber: 30
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
          kind: Class
          name: StubAdapter
          package: org.jboss.com.sun.corba.se.spi.presentation.rmi
      - codeSnip: "21   * Please contact Oracle, 500 Oracle Parkway, Redwood Shores,\
          \ CA 94065 USA\n22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.spi.presentation.rmi;\n\
          27  \n28  import javax.rmi.CORBA.Tie;\n29  \n30  import org.omg.CORBA.ORB;\n\
          31  import org.omg.CORBA.portable.Delegate;\n32  import org.omg.CORBA.portable.ObjectImpl;\n\
          33  import org.omg.CORBA.portable.OutputStream;\n34  import org.omg.PortableServer.POA;\n\
          35  import org.omg.PortableServer.POAManager;\n36  import org.omg.PortableServer.Servant;\n\
          37  import org.omg.PortableServer.POAPackage.ServantNotActive;\n38  import\
          \ org.omg.PortableServer.POAPackage.WrongPolicy;\n39  \n40  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          41  import org.jboss.com.sun.corba.se.impl.oa.poa.POAManagerImpl;"
        lineNumber: 31
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
          kind: Class
          name: StubAdapter
          package: org.jboss.com.sun.corba.se.spi.presentation.rmi
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.spi.presentation.rmi;\n\
          27  \n28  import javax.rmi.CORBA.Tie;\n29  \n30  import org.omg.CORBA.ORB;\n\
          31  import org.omg.CORBA.portable.Delegate;\n32  import org.omg.CORBA.portable.ObjectImpl;\n\
          33  import org.omg.CORBA.portable.OutputStream;\n34  import org.omg.PortableServer.POA;\n\
          35  import org.omg.PortableServer.POAManager;\n36  import org.omg.PortableServer.Servant;\n\
          37  import org.omg.PortableServer.POAPackage.ServantNotActive;\n38  import\
          \ org.omg.PortableServer.POAPackage.WrongPolicy;\n39  \n40  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          41  import org.jboss.com.sun.corba.se.impl.oa.poa.POAManagerImpl;\n42  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;"
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
          kind: Class
          name: StubAdapter
          package: org.jboss.com.sun.corba.se.spi.presentation.rmi
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.spi.presentation.rmi;\n\
          27  \n28  import javax.rmi.CORBA.Tie;\n29  \n30  import org.omg.CORBA.ORB;\n\
          31  import org.omg.CORBA.portable.Delegate;\n32  import org.omg.CORBA.portable.ObjectImpl;\n\
          33  import org.omg.CORBA.portable.OutputStream;\n34  import org.omg.PortableServer.POA;\n\
          35  import org.omg.PortableServer.POAManager;\n36  import org.omg.PortableServer.Servant;\n\
          37  import org.omg.PortableServer.POAPackage.ServantNotActive;\n38  import\
          \ org.omg.PortableServer.POAPackage.WrongPolicy;\n39  \n40  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          41  import org.jboss.com.sun.corba.se.impl.oa.poa.POAManagerImpl;\n42  import\
          \ org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n43  import org.jboss.com.sun.corba.se.spi.presentation.rmi.DynamicStub;"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
          kind: Class
          name: StubAdapter
          package: org.jboss.com.sun.corba.se.spi.presentation.rmi
      - codeSnip: "72              ((DynamicStub) stub).setDelegate(delegate);\n73\
          \          else if (stub instanceof ObjectImpl)\n74              ((ObjectImpl)\
          \ stub)._set_delegate(delegate);\n75          else\n76              throw\
          \ wrapper.setDelegateRequiresStub();\n77      }\n78  \n79      /**\n80 \
          \      * Use implicit activation to get an object reference for the servant.\n\
          81       */\n82      public static org.omg.CORBA.Object activateServant(Servant\
          \ servant)\n83      {\n84          POA poa = servant._default_POA();\n85\
          \          org.omg.CORBA.Object ref = null;\n86  \n87          try\n88 \
          \         {\n89              ref = poa.servant_to_reference(servant);\n\
          90          }\n91          catch (ServantNotActive sna)\n92          {"
        lineNumber: 82
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
          kind: Method
          name: activateServant
          package: org.jboss.com.sun.corba.se.spi.presentation.rmi
      - codeSnip: "75          else\n76              throw wrapper.setDelegateRequiresStub();\n\
          77      }\n78  \n79      /**\n80       * Use implicit activation to get\
          \ an object reference for the servant.\n81       */\n82      public static\
          \ org.omg.CORBA.Object activateServant(Servant servant)\n83      {\n84 \
          \         POA poa = servant._default_POA();\n85          org.omg.CORBA.Object\
          \ ref = null;\n86  \n87          try\n88          {\n89              ref\
          \ = poa.servant_to_reference(servant);\n90          }\n91          catch\
          \ (ServantNotActive sna)\n92          {\n93              throw wrapper.getDelegateServantNotActive(sna);\n\
          94          }\n95          catch (WrongPolicy wp)"
        lineNumber: 85
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/presentation/rmi/StubAdapter.java
          kind: Method
          name: activateServant
          package: org.jboss.com.sun.corba.se.spi.presentation.rmi
      - codeSnip: "18   * 2 along with this work; if not, write to the Free Software\
          \ Foundation,\n19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.spi.protocol;\n27  \n28  public abstract class\
          \ CorbaClientDelegate extends org.omg.CORBA_2_3.portable.Delegate\n29  \
          \        implements\n30              org.jboss.com.sun.corba.se.pept.protocol.ClientDelegate\n\
          31  {\n32  }\n33  \n34  // End of file.\n"
        lineNumber: 28
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/CorbaClientDelegate.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/CorbaClientDelegate.java
          kind: Class
          name: CorbaClientDelegate
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: " 86  \n 87      public byte getStreamFormatVersion(); // REVIST\
          \ name ForRequest?\n 88  \n 89      public byte getStreamFormatVersionForReply();\n\
          \ 90  \n 91      // REVISIT - not sure if the final fragment and DII stuff\
          \ should\n 92      // go here.\n 93  \n 94      public void sendCancelRequestIfFinalFragmentNotSent();\n\
          \ 95  \n 96      public void setDIIInfo(org.omg.CORBA.Request request);\n\
          \ 97  \n 98      public boolean isDIIRequest();\n 99  \n100      public\
          \ Exception unmarshalDIIUserException(String repoId, InputStream inputStream);\n\
          101  \n102      public void setDIIException(Exception exception);\n103 \
          \ \n104      public void handleDIIReply(InputStream inputStream);\n105 \
          \ \n106      public boolean isSystemExceptionReply();"
        lineNumber: 96
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/CorbaMessageMediator.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/CorbaMessageMediator.java
          kind: Method
          name: setDIIInfo
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: "126  \n127      public void setProtocolHandler(CorbaProtocolHandler\
          \ protocolHandler);\n128  \n129      public CorbaProtocolHandler getProtocolHandler();\n\
          130  \n131      // //////////////////////////////////////////////////\n\
          132      //\n133      // ResponseHandler\n134      //\n135  \n136      public\
          \ org.omg.CORBA.portable.OutputStream createReply();\n137  \n138      public\
          \ org.omg.CORBA.portable.OutputStream createExceptionReply();\n139  \n140\
          \      // //////////////////////////////////////////////////\n141      //\n\
          142      // from core.ServerRequest\n143      //\n144  \n145      public\
          \ boolean executeReturnServantInResponseConstructor();\n146  "
        lineNumber: 136
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/CorbaMessageMediator.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/CorbaMessageMediator.java
          kind: Method
          name: createReply
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: "128  \n129      public CorbaProtocolHandler getProtocolHandler();\n\
          130  \n131      // //////////////////////////////////////////////////\n\
          132      //\n133      // ResponseHandler\n134      //\n135  \n136      public\
          \ org.omg.CORBA.portable.OutputStream createReply();\n137  \n138      public\
          \ org.omg.CORBA.portable.OutputStream createExceptionReply();\n139  \n140\
          \      // //////////////////////////////////////////////////\n141      //\n\
          142      // from core.ServerRequest\n143      //\n144  \n145      public\
          \ boolean executeReturnServantInResponseConstructor();\n146  \n147     \
          \ public void setExecuteReturnServantInResponseConstructor(boolean b);\n\
          148  "
        lineNumber: 138
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/CorbaMessageMediator.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/CorbaMessageMediator.java
          kind: Method
          name: createExceptionReply
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: "30  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.LocateReplyMessage;\n\
          31  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.LocateReplyOrReplyMessage;\n\
          32  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\n\
          33  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.ReplyMessage;\n\
          34  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.RequestMessage;\n\
          35  import org.jboss.com.sun.corba.se.pept.protocol.MessageMediator;\n36\
          \  import org.jboss.com.sun.corba.se.spi.ior.IOR;\n37  import org.jboss.com.sun.corba.se.spi.ior.ObjectKey;\n\
          38  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n39  import\
          \ org.jboss.com.sun.corba.se.spi.servicecontext.ServiceContexts;\n40  import\
          \ org.omg.CORBA.SystemException;\n41  import org.omg.CORBA.portable.ResponseHandler;\n\
          42  import org.omg.CORBA_2_3.portable.InputStream;\n43  \n44  /**\n45  \
          \ * @author Harold Carr\n46   */\n47  public interface CorbaMessageMediator\
          \ extends MessageMediator, ResponseHandler\n48  {\n49      public void setReplyHeader(LocateReplyOrReplyMessage\
          \ header);\n50  "
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/CorbaMessageMediator.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/CorbaMessageMediator.java
          kind: Interface
          name: CorbaMessageMediator
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: "31  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.LocateReplyOrReplyMessage;\n\
          32  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\n\
          33  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.ReplyMessage;\n\
          34  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.RequestMessage;\n\
          35  import org.jboss.com.sun.corba.se.pept.protocol.MessageMediator;\n36\
          \  import org.jboss.com.sun.corba.se.spi.ior.IOR;\n37  import org.jboss.com.sun.corba.se.spi.ior.ObjectKey;\n\
          38  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n39  import\
          \ org.jboss.com.sun.corba.se.spi.servicecontext.ServiceContexts;\n40  import\
          \ org.omg.CORBA.SystemException;\n41  import org.omg.CORBA.portable.ResponseHandler;\n\
          42  import org.omg.CORBA_2_3.portable.InputStream;\n43  \n44  /**\n45  \
          \ * @author Harold Carr\n46   */\n47  public interface CorbaMessageMediator\
          \ extends MessageMediator, ResponseHandler\n48  {\n49      public void setReplyHeader(LocateReplyOrReplyMessage\
          \ header);\n50  \n51      public LocateReplyMessage getLocateReplyHeader();"
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/CorbaMessageMediator.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/CorbaMessageMediator.java
          kind: Interface
          name: CorbaMessageMediator
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: "32  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\n\
          33  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.ReplyMessage;\n\
          34  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.RequestMessage;\n\
          35  import org.jboss.com.sun.corba.se.pept.protocol.MessageMediator;\n36\
          \  import org.jboss.com.sun.corba.se.spi.ior.IOR;\n37  import org.jboss.com.sun.corba.se.spi.ior.ObjectKey;\n\
          38  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n39  import\
          \ org.jboss.com.sun.corba.se.spi.servicecontext.ServiceContexts;\n40  import\
          \ org.omg.CORBA.SystemException;\n41  import org.omg.CORBA.portable.ResponseHandler;\n\
          42  import org.omg.CORBA_2_3.portable.InputStream;\n43  \n44  /**\n45  \
          \ * @author Harold Carr\n46   */\n47  public interface CorbaMessageMediator\
          \ extends MessageMediator, ResponseHandler\n48  {\n49      public void setReplyHeader(LocateReplyOrReplyMessage\
          \ header);\n50  \n51      public LocateReplyMessage getLocateReplyHeader();\n\
          52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/CorbaMessageMediator.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/CorbaMessageMediator.java
          kind: Interface
          name: CorbaMessageMediator
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: 11   * This code is distributed in the hope that it will be useful,
          but WITHOUT
        lineNumber: 31
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/ForwardException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/ForwardException.java
          kind: Class
          name: ForwardException
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: "31  import org.omg.CORBA.BAD_PARAM;\n32  \n33  /**\n34   * Thrown\
          \ to signal an OBJECT_FORWARD or LOCATION_FORWARD\n35   */\n36  public class\
          \ ForwardException extends RuntimeException\n37  {\n38  \n39      private\
          \ static final long serialVersionUID = 3312717244337667473L;\n40  \n41 \
          \     private org.omg.CORBA.Object obj;\n42  \n43      private IOR ior;\n\
          44  \n45      public ForwardException(ORB orb, IOR ior)\n46      {\n47 \
          \         super();\n48  \n49          this.obj = null;\n50          this.ior\
          \ = ior;\n51      }"
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/ForwardException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/ForwardException.java
          kind: Field
          name: obj
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: "43      private IOR ior;\n44  \n45      public ForwardException(ORB\
          \ orb, IOR ior)\n46      {\n47          super();\n48  \n49          this.obj\
          \ = null;\n50          this.ior = ior;\n51      }\n52  \n53      public\
          \ ForwardException(ORB orb, org.omg.CORBA.Object obj)\n54      {\n55   \
          \       super();\n56  \n57          // This check is done early so that\
          \ no attempt\n58          // may be made to do a location forward to a local\n\
          59          // object. Doing this lazily would allow\n60          // forwarding\
          \ to locals in some restricted cases.\n61          if (obj instanceof org.omg.CORBA.LocalObject)\n\
          62              throw new BAD_PARAM();\n63  "
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/ForwardException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/ForwardException.java
          kind: Constructor
          name: ForwardException
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: "51      }\n52  \n53      public ForwardException(ORB orb, org.omg.CORBA.Object\
          \ obj)\n54      {\n55          super();\n56  \n57          // This check\
          \ is done early so that no attempt\n58          // may be made to do a location\
          \ forward to a local\n59          // object. Doing this lazily would allow\n\
          60          // forwarding to locals in some restricted cases.\n61      \
          \    if (obj instanceof org.omg.CORBA.LocalObject)\n62              throw\
          \ new BAD_PARAM();\n63  \n64          this.obj = obj;\n65          this.ior\
          \ = null;\n66      }\n67  \n68      public synchronized org.omg.CORBA.Object\
          \ getObject()\n69      {\n70          if (obj == null)\n71          {"
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/ForwardException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/ForwardException.java
          kind: Constructor
          name: ForwardException
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: "58          // may be made to do a location forward to a local\n\
          59          // object. Doing this lazily would allow\n60          // forwarding\
          \ to locals in some restricted cases.\n61          if (obj instanceof org.omg.CORBA.LocalObject)\n\
          62              throw new BAD_PARAM();\n63  \n64          this.obj = obj;\n\
          65          this.ior = null;\n66      }\n67  \n68      public synchronized\
          \ org.omg.CORBA.Object getObject()\n69      {\n70          if (obj == null)\n\
          71          {\n72              obj = ORBUtility.makeObjectReference(ior);\n\
          73          }\n74  \n75          return obj;\n76      }\n77  \n78      public\
          \ synchronized IOR getIOR()"
        lineNumber: 68
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/ForwardException.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/ForwardException.java
          kind: Method
          name: getObject
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: "17   * 2 along with this work; if not, write to the Free Software\
          \ Foundation,\n18   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n19   *\n20   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n21   * or visit www.oracle.com if you need additional\
          \ information or have any\n22   * questions.\n23   */\n24  \n25  package\
          \ org.jboss.com.sun.corba.se.spi.protocol;\n26  \n27  import org.omg.CORBA.Any;\n\
          28  import org.omg.CORBA.NVList;\n29  import org.omg.CORBA.Policy;\n30 \
          \ import org.omg.CORBA.PolicyError;\n31  import org.omg.CORBA.portable.RemarshalException;\n\
          32  import org.omg.PortableInterceptor.Current;\n33  import org.omg.PortableInterceptor.Interceptor;\n\
          34  import org.omg.PortableInterceptor.ObjectReferenceTemplate;\n35  import\
          \ org.omg.PortableInterceptor.PolicyFactory;\n36  import org.omg.PortableInterceptor.ORBInitInfoPackage.DuplicateName;\n\
          37  "
        lineNumber: 27
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/PIHandler.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/PIHandler.java
          kind: Interface
          name: PIHandler
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: "18   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n19   *\n20   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n21   * or visit www.oracle.com if you need additional\
          \ information or have any\n22   * questions.\n23   */\n24  \n25  package\
          \ org.jboss.com.sun.corba.se.spi.protocol;\n26  \n27  import org.omg.CORBA.Any;\n\
          28  import org.omg.CORBA.NVList;\n29  import org.omg.CORBA.Policy;\n30 \
          \ import org.omg.CORBA.PolicyError;\n31  import org.omg.CORBA.portable.RemarshalException;\n\
          32  import org.omg.PortableInterceptor.Current;\n33  import org.omg.PortableInterceptor.Interceptor;\n\
          34  import org.omg.PortableInterceptor.ObjectReferenceTemplate;\n35  import\
          \ org.omg.PortableInterceptor.PolicyFactory;\n36  import org.omg.PortableInterceptor.ORBInitInfoPackage.DuplicateName;\n\
          37  \n38  import org.jboss.com.sun.corba.se.impl.corba.RequestImpl;"
        lineNumber: 28
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/PIHandler.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/PIHandler.java
          kind: Interface
          name: PIHandler
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: "19   *\n20   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n21   * or visit www.oracle.com if you need additional\
          \ information or have any\n22   * questions.\n23   */\n24  \n25  package\
          \ org.jboss.com.sun.corba.se.spi.protocol;\n26  \n27  import org.omg.CORBA.Any;\n\
          28  import org.omg.CORBA.NVList;\n29  import org.omg.CORBA.Policy;\n30 \
          \ import org.omg.CORBA.PolicyError;\n31  import org.omg.CORBA.portable.RemarshalException;\n\
          32  import org.omg.PortableInterceptor.Current;\n33  import org.omg.PortableInterceptor.Interceptor;\n\
          34  import org.omg.PortableInterceptor.ObjectReferenceTemplate;\n35  import\
          \ org.omg.PortableInterceptor.PolicyFactory;\n36  import org.omg.PortableInterceptor.ORBInitInfoPackage.DuplicateName;\n\
          37  \n38  import org.jboss.com.sun.corba.se.impl.corba.RequestImpl;\n39\
          \  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.ReplyMessage;"
        lineNumber: 29
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/PIHandler.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/PIHandler.java
          kind: Interface
          name: PIHandler
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: "20   * Please contact Oracle, 500 Oracle Parkway, Redwood Shores,\
          \ CA 94065 USA\n21   * or visit www.oracle.com if you need additional information\
          \ or have any\n22   * questions.\n23   */\n24  \n25  package org.jboss.com.sun.corba.se.spi.protocol;\n\
          26  \n27  import org.omg.CORBA.Any;\n28  import org.omg.CORBA.NVList;\n\
          29  import org.omg.CORBA.Policy;\n30  import org.omg.CORBA.PolicyError;\n\
          31  import org.omg.CORBA.portable.RemarshalException;\n32  import org.omg.PortableInterceptor.Current;\n\
          33  import org.omg.PortableInterceptor.Interceptor;\n34  import org.omg.PortableInterceptor.ObjectReferenceTemplate;\n\
          35  import org.omg.PortableInterceptor.PolicyFactory;\n36  import org.omg.PortableInterceptor.ORBInitInfoPackage.DuplicateName;\n\
          37  \n38  import org.jboss.com.sun.corba.se.impl.corba.RequestImpl;\n39\
          \  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.ReplyMessage;\n\
          40  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;"
        lineNumber: 30
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/PIHandler.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/PIHandler.java
          kind: Interface
          name: PIHandler
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: "21   * or visit www.oracle.com if you need additional information\
          \ or have any\n22   * questions.\n23   */\n24  \n25  package org.jboss.com.sun.corba.se.spi.protocol;\n\
          26  \n27  import org.omg.CORBA.Any;\n28  import org.omg.CORBA.NVList;\n\
          29  import org.omg.CORBA.Policy;\n30  import org.omg.CORBA.PolicyError;\n\
          31  import org.omg.CORBA.portable.RemarshalException;\n32  import org.omg.PortableInterceptor.Current;\n\
          33  import org.omg.PortableInterceptor.Interceptor;\n34  import org.omg.PortableInterceptor.ObjectReferenceTemplate;\n\
          35  import org.omg.PortableInterceptor.PolicyFactory;\n36  import org.omg.PortableInterceptor.ORBInitInfoPackage.DuplicateName;\n\
          37  \n38  import org.jboss.com.sun.corba.se.impl.corba.RequestImpl;\n39\
          \  import org.jboss.com.sun.corba.se.impl.protocol.giopmsgheaders.ReplyMessage;\n\
          40  import org.jboss.com.sun.corba.se.spi.ior.ObjectKeyTemplate;\n41  import\
          \ org.jboss.com.sun.corba.se.spi.oa.ObjectAdapter;"
        lineNumber: 31
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/PIHandler.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/protocol/PIHandler.java
          kind: Interface
          name: PIHandler
          package: org.jboss.com.sun.corba.se.spi.protocol
      - codeSnip: "21   * Please contact Oracle, 500 Oracle Parkway, Redwood Shores,\
          \ CA 94065 USA\n22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.spi.servicecontext;\n\
          27  \n28  import org.jboss.com.sun.corba.se.impl.encoding.EncapsOutputStream;\n\
          29  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n30  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n31  import org.omg.CORBA.SystemException;\n\
          32  import org.omg.CORBA_2_3.portable.InputStream;\n33  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          34  \n35  /**\n36   * Base class for all ServiceContext classes. There is\
          \ a derived ServiceContext class for each service context that the\n37 \
          \  * ORB supports. Each subclass encapsulates the representation of the\
          \ service context and provides any needed methods\n38   * for manipulating\
          \ the service context. Each subclass must provide the following members:\n\
          39   * <p>\n40   * <ul>\n41   * </li>a public static final int SERVICE_CONTEXT_ID\
          \ that gives the OMG (or other) defined id for the service context."
        lineNumber: 31
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContext.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContext.java
          kind: Class
          name: ServiceContext
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.spi.servicecontext;\n\
          27  \n28  import org.jboss.com.sun.corba.se.impl.encoding.EncapsOutputStream;\n\
          29  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n30  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n31  import org.omg.CORBA.SystemException;\n\
          32  import org.omg.CORBA_2_3.portable.InputStream;\n33  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          34  \n35  /**\n36   * Base class for all ServiceContext classes. There is\
          \ a derived ServiceContext class for each service context that the\n37 \
          \  * ORB supports. Each subclass encapsulates the representation of the\
          \ service context and provides any needed methods\n38   * for manipulating\
          \ the service context. Each subclass must provide the following members:\n\
          39   * <p>\n40   * <ul>\n41   * </li>a public static final int SERVICE_CONTEXT_ID\
          \ that gives the OMG (or other) defined id for the service context.\n42\
          \   * This is needed for the registration mechanism defined in ServiceContexts.\
          \ OMG defined service context ids are taken"
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContext.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContext.java
          kind: Class
          name: ServiceContext
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.spi.servicecontext;\n\
          27  \n28  import org.jboss.com.sun.corba.se.impl.encoding.EncapsOutputStream;\n\
          29  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n30  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n31  import org.omg.CORBA.SystemException;\n\
          32  import org.omg.CORBA_2_3.portable.InputStream;\n33  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          34  \n35  /**\n36   * Base class for all ServiceContext classes. There is\
          \ a derived ServiceContext class for each service context that the\n37 \
          \  * ORB supports. Each subclass encapsulates the representation of the\
          \ service context and provides any needed methods\n38   * for manipulating\
          \ the service context. Each subclass must provide the following members:\n\
          39   * <p>\n40   * <ul>\n41   * </li>a public static final int SERVICE_CONTEXT_ID\
          \ that gives the OMG (or other) defined id for the service context.\n42\
          \   * This is needed for the registration mechanism defined in ServiceContexts.\
          \ OMG defined service context ids are taken\n43   * from section 13.6.7\
          \ of ptc/98-12-04.</li>"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContext.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContext.java
          kind: Class
          name: ServiceContext
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "26  package org.jboss.com.sun.corba.se.spi.servicecontext;\n27\
          \  \n28  import java.lang.reflect.Constructor;\n29  import java.lang.reflect.Field;\n\
          30  import java.lang.reflect.InvocationTargetException;\n31  import java.lang.reflect.Modifier;\n\
          32  \n33  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n34\
          \  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n35  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n36  import org.omg.CORBA.BAD_PARAM;\n\
          37  import org.omg.CORBA_2_3.portable.InputStream;\n38  \n39  /** Internal\
          \ class used to hold data about a service context class. */\n40  public\
          \ class ServiceContextData\n41  {\n42      private void dprint(String msg)\n\
          43      {\n44          ORBUtility.dprint(this, msg);\n45      }\n46  "
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContextData.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContextData.java
          kind: Class
          name: ServiceContextData
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "27  \n28  import java.lang.reflect.Constructor;\n29  import java.lang.reflect.Field;\n\
          30  import java.lang.reflect.InvocationTargetException;\n31  import java.lang.reflect.Modifier;\n\
          32  \n33  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n34\
          \  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n35  import\
          \ org.jboss.com.sun.corba.se.spi.orb.ORB;\n36  import org.omg.CORBA.BAD_PARAM;\n\
          37  import org.omg.CORBA_2_3.portable.InputStream;\n38  \n39  /** Internal\
          \ class used to hold data about a service context class. */\n40  public\
          \ class ServiceContextData\n41  {\n42      private void dprint(String msg)\n\
          43      {\n44          ORBUtility.dprint(this, msg);\n45      }\n46  \n\
          47      private void throwBadParam(String msg, Throwable exc)"
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContextData.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContextData.java
          kind: Class
          name: ServiceContextData
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.spi.servicecontext;\n\
          27  \n28  import java.util.Enumeration;\n29  import java.util.Vector;\n\
          30  \n31  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n32\
          \  import org.jboss.com.sun.corba.se.spi.orb.ORB;\n33  import org.omg.CORBA.BAD_PARAM;\n\
          34  \n35  public class ServiceContextRegistry\n36  {\n37  \n38      private\
          \ Vector<ServiceContextData> scCollection;\n39  \n40      private void dprint(String\
          \ msg)\n41      {\n42          ORBUtility.dprint(this, msg);\n43      }"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContextRegistry.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContextRegistry.java
          kind: Class
          name: ServiceContextRegistry
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "31  \n32  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          33  import org.jboss.com.sun.corba.se.impl.encoding.EncapsInputStream;\n\
          34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n36  import\
          \ org.jboss.com.sun.corba.se.impl.util.Utility;\n37  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          38  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n39 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n\
          41  import org.omg.CORBA.CompletionStatus;\n42  import org.omg.CORBA.OctetSeqHelper;\n\
          43  import org.omg.CORBA_2_3.portable.InputStream;\n44  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          45  \n46  public class ServiceContexts\n47  {\n48      private static boolean\
          \ isDebugging(OutputStream os)\n49      {\n50          ORB orb = (ORB) (os.orb());\n\
          51          if (orb == null)"
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContexts.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContexts.java
          kind: Class
          name: ServiceContexts
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "32  import org.jboss.com.sun.corba.se.impl.encoding.CDRInputStream;\n\
          33  import org.jboss.com.sun.corba.se.impl.encoding.EncapsInputStream;\n\
          34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n36  import\
          \ org.jboss.com.sun.corba.se.impl.util.Utility;\n37  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          38  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n39 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n\
          41  import org.omg.CORBA.CompletionStatus;\n42  import org.omg.CORBA.OctetSeqHelper;\n\
          43  import org.omg.CORBA_2_3.portable.InputStream;\n44  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          45  \n46  public class ServiceContexts\n47  {\n48      private static boolean\
          \ isDebugging(OutputStream os)\n49      {\n50          ORB orb = (ORB) (os.orb());\n\
          51          if (orb == null)\n52              return false;"
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContexts.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContexts.java
          kind: Class
          name: ServiceContexts
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "33  import org.jboss.com.sun.corba.se.impl.encoding.EncapsInputStream;\n\
          34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n36  import\
          \ org.jboss.com.sun.corba.se.impl.util.Utility;\n37  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          38  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n39 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n\
          41  import org.omg.CORBA.CompletionStatus;\n42  import org.omg.CORBA.OctetSeqHelper;\n\
          43  import org.omg.CORBA_2_3.portable.InputStream;\n44  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          45  \n46  public class ServiceContexts\n47  {\n48      private static boolean\
          \ isDebugging(OutputStream os)\n49      {\n50          ORB orb = (ORB) (os.orb());\n\
          51          if (orb == null)\n52              return false;\n53        \
          \  return orb.serviceContextDebugFlag;"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContexts.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContexts.java
          kind: Class
          name: ServiceContexts
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "34  import org.jboss.com.sun.corba.se.impl.logging.ORBUtilSystemException;\n\
          35  import org.jboss.com.sun.corba.se.impl.orbutil.ORBUtility;\n36  import\
          \ org.jboss.com.sun.corba.se.impl.util.Utility;\n37  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          38  import org.jboss.com.sun.corba.se.spi.logging.CORBALogDomains;\n39 \
          \ import org.jboss.com.sun.corba.se.spi.orb.ORB;\n40  import org.jboss.com.sun.org.omg.SendingContext.CodeBase;\n\
          41  import org.omg.CORBA.CompletionStatus;\n42  import org.omg.CORBA.OctetSeqHelper;\n\
          43  import org.omg.CORBA_2_3.portable.InputStream;\n44  import org.omg.CORBA_2_3.portable.OutputStream;\n\
          45  \n46  public class ServiceContexts\n47  {\n48      private static boolean\
          \ isDebugging(OutputStream os)\n49      {\n50          ORB orb = (ORB) (os.orb());\n\
          51          if (orb == null)\n52              return false;\n53        \
          \  return orb.serviceContextDebugFlag;\n54      }"
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContexts.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/ServiceContexts.java
          kind: Class
          name: ServiceContexts
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.spi.servicecontext;\n27  \n28  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          29  import org.omg.CORBA.CompletionStatus;\n30  import org.omg.CORBA.SystemException;\n\
          31  import org.omg.CORBA.UNKNOWN;\n32  import org.omg.CORBA_2_3.portable.InputStream;\n\
          33  import org.omg.CORBA_2_3.portable.OutputStream;\n34  \n35  public class\
          \ UEInfoServiceContext extends ServiceContext\n36  {\n37      public UEInfoServiceContext(Throwable\
          \ ex)\n38      {\n39          unknown = ex;"
        lineNumber: 29
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/UEInfoServiceContext.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/UEInfoServiceContext.java
          kind: Class
          name: UEInfoServiceContext
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.spi.servicecontext;\n27  \n28  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          29  import org.omg.CORBA.CompletionStatus;\n30  import org.omg.CORBA.SystemException;\n\
          31  import org.omg.CORBA.UNKNOWN;\n32  import org.omg.CORBA_2_3.portable.InputStream;\n\
          33  import org.omg.CORBA_2_3.portable.OutputStream;\n34  \n35  public class\
          \ UEInfoServiceContext extends ServiceContext\n36  {\n37      public UEInfoServiceContext(Throwable\
          \ ex)\n38      {\n39          unknown = ex;\n40      }"
        lineNumber: 30
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/UEInfoServiceContext.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/UEInfoServiceContext.java
          kind: Class
          name: UEInfoServiceContext
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "21   * Please contact Oracle, 500 Oracle Parkway, Redwood Shores,\
          \ CA 94065 USA\n22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.spi.servicecontext;\n\
          27  \n28  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          29  import org.omg.CORBA.CompletionStatus;\n30  import org.omg.CORBA.SystemException;\n\
          31  import org.omg.CORBA.UNKNOWN;\n32  import org.omg.CORBA_2_3.portable.InputStream;\n\
          33  import org.omg.CORBA_2_3.portable.OutputStream;\n34  \n35  public class\
          \ UEInfoServiceContext extends ServiceContext\n36  {\n37      public UEInfoServiceContext(Throwable\
          \ ex)\n38      {\n39          unknown = ex;\n40      }\n41  "
        lineNumber: 31
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/UEInfoServiceContext.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/UEInfoServiceContext.java
          kind: Class
          name: UEInfoServiceContext
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.spi.servicecontext;\n\
          27  \n28  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          29  import org.omg.CORBA.CompletionStatus;\n30  import org.omg.CORBA.SystemException;\n\
          31  import org.omg.CORBA.UNKNOWN;\n32  import org.omg.CORBA_2_3.portable.InputStream;\n\
          33  import org.omg.CORBA_2_3.portable.OutputStream;\n34  \n35  public class\
          \ UEInfoServiceContext extends ServiceContext\n36  {\n37      public UEInfoServiceContext(Throwable\
          \ ex)\n38      {\n39          unknown = ex;\n40      }\n41  \n42      public\
          \ UEInfoServiceContext(InputStream is, GIOPVersion gv)"
        lineNumber: 32
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/UEInfoServiceContext.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/UEInfoServiceContext.java
          kind: Class
          name: UEInfoServiceContext
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.spi.servicecontext;\n\
          27  \n28  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          29  import org.omg.CORBA.CompletionStatus;\n30  import org.omg.CORBA.SystemException;\n\
          31  import org.omg.CORBA.UNKNOWN;\n32  import org.omg.CORBA_2_3.portable.InputStream;\n\
          33  import org.omg.CORBA_2_3.portable.OutputStream;\n34  \n35  public class\
          \ UEInfoServiceContext extends ServiceContext\n36  {\n37      public UEInfoServiceContext(Throwable\
          \ ex)\n38      {\n39          unknown = ex;\n40      }\n41  \n42      public\
          \ UEInfoServiceContext(InputStream is, GIOPVersion gv)\n43      {"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/UEInfoServiceContext.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/UEInfoServiceContext.java
          kind: Class
          name: UEInfoServiceContext
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.spi.servicecontext;\n27  \n28  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          29  import org.omg.CORBA.SystemException;\n30  import org.omg.CORBA_2_3.portable.InputStream;\n\
          31  import org.omg.CORBA_2_3.portable.OutputStream;\n32  \n33  public class\
          \ UnknownServiceContext extends ServiceContext\n34  {\n35      public UnknownServiceContext(int\
          \ id, byte[] data)\n36      {\n37          this.id = id;\n38          this.data\
          \ = data;\n39      }"
        lineNumber: 29
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/UnknownServiceContext.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/UnknownServiceContext.java
          kind: Class
          name: UnknownServiceContext
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.corba.se.spi.servicecontext;\n27  \n28  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          29  import org.omg.CORBA.SystemException;\n30  import org.omg.CORBA_2_3.portable.InputStream;\n\
          31  import org.omg.CORBA_2_3.portable.OutputStream;\n32  \n33  public class\
          \ UnknownServiceContext extends ServiceContext\n34  {\n35      public UnknownServiceContext(int\
          \ id, byte[] data)\n36      {\n37          this.id = id;\n38          this.data\
          \ = data;\n39      }\n40  "
        lineNumber: 30
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/UnknownServiceContext.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/UnknownServiceContext.java
          kind: Class
          name: UnknownServiceContext
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "21   * Please contact Oracle, 500 Oracle Parkway, Redwood Shores,\
          \ CA 94065 USA\n22   * or visit www.oracle.com if you need additional information\
          \ or have any\n23   * questions.\n24   */\n25  \n26  package org.jboss.com.sun.corba.se.spi.servicecontext;\n\
          27  \n28  import org.jboss.com.sun.corba.se.spi.ior.iiop.GIOPVersion;\n\
          29  import org.omg.CORBA.SystemException;\n30  import org.omg.CORBA_2_3.portable.InputStream;\n\
          31  import org.omg.CORBA_2_3.portable.OutputStream;\n32  \n33  public class\
          \ UnknownServiceContext extends ServiceContext\n34  {\n35      public UnknownServiceContext(int\
          \ id, byte[] data)\n36      {\n37          this.id = id;\n38          this.data\
          \ = data;\n39      }\n40  \n41      public UnknownServiceContext(int id,\
          \ InputStream is)"
        lineNumber: 31
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/UnknownServiceContext.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/spi/servicecontext/UnknownServiceContext.java
          kind: Class
          name: UnknownServiceContext
          package: org.jboss.com.sun.corba.se.spi.servicecontext
      - codeSnip: "30   */\n31  \n32  public final class AttrDescriptionSeqHelper\n\
          33  {\n34      private static String _id = \"IDL:omg.org/CORBA/AttrDescriptionSeq:1.0\"\
          ;\n35  \n36      public AttrDescriptionSeqHelper()\n37      {\n38      }\n\
          39  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.AttributeDescription[]\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.AttributeDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class AttrDescriptionSeqHelper\n33  {\n34    \
          \  private static String _id = \"IDL:omg.org/CORBA/AttrDescriptionSeq:1.0\"\
          ;\n35  \n36      public AttrDescriptionSeqHelper()\n37      {\n38      }\n\
          39  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.AttributeDescription[]\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.AttributeDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.AttributeDescription[] that)\n41  \
          \    {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static org.jboss.com.sun.org.omg.CORBA.AttributeDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static org.jboss.com.sun.org.omg.CORBA.AttributeDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.jboss.com.sun.org.omg.CORBA.AttributeDescriptionHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.AttrDescriptionSeqHelper.id(),\
          \ \"AttrDescriptionSeq\", __typeCode);\n63          }"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.AttributeDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.jboss.com.sun.org.omg.CORBA.AttributeDescriptionHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.AttrDescriptionSeqHelper.id(),\
          \ \"AttrDescriptionSeq\", __typeCode);\n63          }\n64          return\
          \ __typeCode;\n65      }"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "50          return read(a.create_input_stream());\n51      }\n\
          52  \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.jboss.com.sun.org.omg.CORBA.AttributeDescriptionHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.AttrDescriptionSeqHelper.id(),\
          \ \"AttrDescriptionSeq\", __typeCode);\n63          }\n64          return\
          \ __typeCode;\n65      }\n66  \n67      public static String id()\n68  \
          \    {\n69          return _id;\n70      }"
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51      }\n52  \n53      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.jboss.com.sun.org.omg.CORBA.AttributeDescriptionHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.AttrDescriptionSeqHelper.id(),\
          \ \"AttrDescriptionSeq\", __typeCode);\n63          }\n64          return\
          \ __typeCode;\n65      }\n66  \n67      public static String id()\n68  \
          \    {\n69          return _id;\n70      }\n71  "
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "62                      org.jboss.com.sun.org.omg.CORBA.AttrDescriptionSeqHelper.id(),\
          \ \"AttrDescriptionSeq\", __typeCode);\n63          }\n64          return\
          \ __typeCode;\n65      }\n66  \n67      public static String id()\n68  \
          \    {\n69          return _id;\n70      }\n71  \n72      public static\
          \ org.jboss.com.sun.org.omg.CORBA.AttributeDescription[] read(org.omg.CORBA.portable.InputStream\
          \ istream)\n73      {\n74          org.jboss.com.sun.org.omg.CORBA.AttributeDescription\
          \ value[] = null;\n75          int _len0 = istream.read_long();\n76    \
          \      value = new org.jboss.com.sun.org.omg.CORBA.AttributeDescription[_len0];\n\
          77          for (int _o1 = 0; _o1 < value.length; ++_o1)\n78           \
          \   value[_o1] = org.jboss.com.sun.org.omg.CORBA.AttributeDescriptionHelper.read(istream);\n\
          79          return value;\n80      }\n81  \n82      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,"
        lineNumber: 72
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "72      public static org.jboss.com.sun.org.omg.CORBA.AttributeDescription[]\
          \ read(org.omg.CORBA.portable.InputStream istream)\n73      {\n74      \
          \    org.jboss.com.sun.org.omg.CORBA.AttributeDescription value[] = null;\n\
          75          int _len0 = istream.read_long();\n76          value = new org.jboss.com.sun.org.omg.CORBA.AttributeDescription[_len0];\n\
          77          for (int _o1 = 0; _o1 < value.length; ++_o1)\n78           \
          \   value[_o1] = org.jboss.com.sun.org.omg.CORBA.AttributeDescriptionHelper.read(istream);\n\
          79          return value;\n80      }\n81  \n82      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n83              org.jboss.com.sun.org.omg.CORBA.AttributeDescription[]\
          \ value)\n84      {\n85          ostream.write_long(value.length);\n86 \
          \         for (int _i0 = 0; _i0 < value.length; ++_i0)\n87             \
          \ org.jboss.com.sun.org.omg.CORBA.AttributeDescriptionHelper.write(ostream,\
          \ value[_i0]);\n88      }\n89  \n90  }\n"
        lineNumber: 82
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttrDescriptionSeqHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "23   * questions.\n24   */\n25  package org.jboss.com.sun.org.omg.CORBA;\n\
          26  \n27  /**\n28   * org/jboss/com/sun/org/omg/CORBA/AttributeDescription.java\
          \ Generated by the IDL-to-Java compiler (portable), version\n29   * \"3.0\"\
          \ from ir.idl Thursday, May 6, 1999 1:51:50 AM PDT\n30   */\n31  \n32  @SuppressWarnings(\"\
          serial\")\n33  public final class AttributeDescription implements org.omg.CORBA.portable.IDLEntity\n\
          34  {\n35      public String name = null;\n36  \n37      public String id\
          \ = null;\n38  \n39      public String defined_in = null;\n40  \n41    \
          \  public String version = null;\n42  \n43      public org.omg.CORBA.TypeCode\
          \ type = null;"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescription.java
          kind: Class
          name: AttributeDescription
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "33  public final class AttributeDescription implements org.omg.CORBA.portable.IDLEntity\n\
          34  {\n35      public String name = null;\n36  \n37      public String id\
          \ = null;\n38  \n39      public String defined_in = null;\n40  \n41    \
          \  public String version = null;\n42  \n43      public org.omg.CORBA.TypeCode\
          \ type = null;\n44  \n45      public org.jboss.com.sun.org.omg.CORBA.AttributeMode\
          \ mode = null;\n46  \n47      public AttributeDescription()\n48      {\n\
          49      } // ctor\n50  \n51      public AttributeDescription(String _name,\
          \ String _id, String _defined_in, String _version,\n52              org.omg.CORBA.TypeCode\
          \ _type, org.jboss.com.sun.org.omg.CORBA.AttributeMode _mode)\n53      {"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescription.java
          kind: Field
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "42  \n43      public org.omg.CORBA.TypeCode type = null;\n44  \n\
          45      public org.jboss.com.sun.org.omg.CORBA.AttributeMode mode = null;\n\
          46  \n47      public AttributeDescription()\n48      {\n49      } // ctor\n\
          50  \n51      public AttributeDescription(String _name, String _id, String\
          \ _defined_in, String _version,\n52              org.omg.CORBA.TypeCode\
          \ _type, org.jboss.com.sun.org.omg.CORBA.AttributeMode _mode)\n53      {\n\
          54          name = _name;\n55          id = _id;\n56          defined_in\
          \ = _defined_in;\n57          version = _version;\n58          type = _type;\n\
          59          mode = _mode;\n60      } // ctor\n61  \n62  } // class AttributeDescription"
        lineNumber: 52
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescription.java
          kind: Constructor
          name: AttributeDescription
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 85
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 87
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 88
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 89
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 91
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 92
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 107
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 119
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class AttributeDescriptionHelper\n\
          33  {\n34      private static String _id = \"IDL:omg.org/CORBA/AttributeDescription:1.0\"\
          ;\n35  \n36      public AttributeDescriptionHelper()\n37      {\n38    \
          \  }\n39  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.AttributeDescription\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.AttributeDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class AttributeDescriptionHelper\n33  {\n34  \
          \    private static String _id = \"IDL:omg.org/CORBA/AttributeDescription:1.0\"\
          ;\n35  \n36      public AttributeDescriptionHelper()\n37      {\n38    \
          \  }\n39  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.AttributeDescription\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.AttributeDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.AttributeDescription that)\n41    \
          \  {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static org.jboss.com.sun.org.omg.CORBA.AttributeDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      private static boolean __active = false;\n56  \n\
          57      synchronized public static org.omg.CORBA.TypeCode type()\n58   \
          \   {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static org.jboss.com.sun.org.omg.CORBA.AttributeDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      private static boolean __active = false;\n56  \n\
          57      synchronized public static org.omg.CORBA.TypeCode type()\n58   \
          \   {\n59          if (__typeCode == null)\n60          {\n61          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n62              {\n63\
          \                  if (__typeCode == null)"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "47  \n48      public static org.jboss.com.sun.org.omg.CORBA.AttributeDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      private static boolean __active = false;\n56  \n\
          57      synchronized public static org.omg.CORBA.TypeCode type()\n58   \
          \   {\n59          if (__typeCode == null)\n60          {\n61          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n62              {\n63\
          \                  if (__typeCode == null)\n64                  {\n65  \
          \                    if (__active)\n66                      {\n67      \
          \                    return org.omg.CORBA.ORB.init().create_recursive_tc(_id);"
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51      }\n52  \n53      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n54  \n55      private static boolean __active = false;\n\
          56  \n57      synchronized public static org.omg.CORBA.TypeCode type()\n\
          58      {\n59          if (__typeCode == null)\n60          {\n61      \
          \        synchronized (org.omg.CORBA.TypeCode.class)\n62              {\n\
          63                  if (__typeCode == null)\n64                  {\n65 \
          \                     if (__active)\n66                      {\n67     \
          \                     return org.omg.CORBA.ORB.init().create_recursive_tc(_id);\n\
          68                      }\n69                      __active = true;\n70\
          \                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[6];\n\
          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;"
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '57      synchronized public static org.omg.CORBA.TypeCode type()

          58      {

          59          if (__typeCode == null)

          60          {

          61              synchronized (org.omg.CORBA.TypeCode.class)

          62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[6];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc('
        lineNumber: 67
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '60          {

          61              synchronized (org.omg.CORBA.TypeCode.class)

          62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[6];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);'
        lineNumber: 70
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '61              synchronized (org.omg.CORBA.TypeCode.class)

          62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[6];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc('
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[6];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);'
        lineNumber: 72
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[6];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);'
        lineNumber: 73
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[6];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc('
        lineNumber: 75
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[6];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);'
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[6];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);'
        lineNumber: 77
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[6];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          88                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          89                      _members0[4] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);'
        lineNumber: 79
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '70                      org.omg.CORBA.StructMember[] _members0
          = new org.omg.CORBA.StructMember[6];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          88                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          89                      _members0[4] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          90                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.AttributeModeHelper.type();'
        lineNumber: 80
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '71                      org.omg.CORBA.TypeCode _tcOf_members0 =
          null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          88                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          89                      _members0[4] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          90                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.AttributeModeHelper.type();

          91                      _members0[5] = new org.omg.CORBA.StructMember("mode",
          _tcOf_members0, null);'
        lineNumber: 81
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          88                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          89                      _members0[4] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          90                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.AttributeModeHelper.type();

          91                      _members0[5] = new org.omg.CORBA.StructMember("mode",
          _tcOf_members0, null);

          92                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          93                              org.jboss.com.sun.org.omg.CORBA.AttributeDescriptionHelper.id(),
          "AttributeDescription",'
        lineNumber: 83
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          88                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          89                      _members0[4] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          90                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.AttributeModeHelper.type();

          91                      _members0[5] = new org.omg.CORBA.StructMember("mode",
          _tcOf_members0, null);

          92                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          93                              org.jboss.com.sun.org.omg.CORBA.AttributeDescriptionHelper.id(),
          "AttributeDescription",

          94                              _members0);'
        lineNumber: 84
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "23   * questions.\n24   */\n25  package org.jboss.com.sun.org.omg.CORBA;\n\
          26  \n27  /**\n28   * org/jboss/om/sun/org/omg/CORBA/AttributeMode.java\
          \ Generated by the IDL-to-Java compiler (portable), version \"3.0\"\n29\
          \   * from ir.idl Thursday, May 6, 1999 1:51:50 AM PDT\n30   */\n31  \n\
          32  @SuppressWarnings(\"serial\")\n33  public class AttributeMode implements\
          \ org.omg.CORBA.portable.IDLEntity\n34  {\n35      private int __value;\n\
          36  \n37      private static int __size = 2;\n38  \n39      private static\
          \ org.jboss.com.sun.org.omg.CORBA.AttributeMode[] __array = new org.jboss.com.sun.org.omg.CORBA.AttributeMode[__size];\n\
          40  \n41      public static final int _ATTR_NORMAL = 0;\n42  \n43      public\
          \ static final org.jboss.com.sun.org.omg.CORBA.AttributeMode ATTR_NORMAL\
          \ = new org.jboss.com.sun.org.omg.CORBA.AttributeMode("
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeMode.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeMode.java
          kind: Class
          name: AttributeMode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51      public int value()\n52      {\n53          return __value;\n\
          54      }\n55  \n56      public static org.jboss.com.sun.org.omg.CORBA.AttributeMode\
          \ from_int(int value)\n57      {\n58          if (value >= 0 && value <\
          \ __size)\n59              return __array[value];\n60          else\n61\
          \              throw new org.omg.CORBA.BAD_PARAM();\n62      }\n63  \n64\
          \      protected AttributeMode(int value)\n65      {\n66          __value\
          \ = value;\n67          __array[__value] = this;\n68      }\n69  } // class\
          \ AttributeMode\n"
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeMode.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeMode.java
          kind: Method
          name: from_int
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class AttributeModeHelper\n33 \
          \ {\n34      private static String _id = \"IDL:omg.org/CORBA/AttributeMode:1.0\"\
          ;\n35  \n36      public AttributeModeHelper()\n37      {\n38      }\n39\
          \  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.AttributeMode\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.AttributeMode\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeModeHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class AttributeModeHelper\n33  {\n34      private\
          \ static String _id = \"IDL:omg.org/CORBA/AttributeMode:1.0\";\n35  \n36\
          \      public AttributeModeHelper()\n37      {\n38      }\n39  \n40    \
          \  public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.AttributeMode\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.AttributeMode\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeModeHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.AttributeMode that)\n41      {\n42\
          \          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static org.jboss.com.sun.org.omg.CORBA.AttributeMode extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeModeHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static org.jboss.com.sun.org.omg.CORBA.AttributeMode\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_enum_tc(\n\
          60                      org.jboss.com.sun.org.omg.CORBA.AttributeModeHelper.id(),\
          \ \"AttributeMode\",\n61                      new String[]{\"ATTR_NORMAL\"\
          , \"ATTR_READONLY\"});\n62          }\n63          return __typeCode;"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeModeHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.AttributeMode\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_enum_tc(\n\
          60                      org.jboss.com.sun.org.omg.CORBA.AttributeModeHelper.id(),\
          \ \"AttributeMode\",\n61                      new String[]{\"ATTR_NORMAL\"\
          , \"ATTR_READONLY\"});\n62          }\n63          return __typeCode;\n\
          64      }\n65  "
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeModeHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_enum_tc(\n\
          60                      org.jboss.com.sun.org.omg.CORBA.AttributeModeHelper.id(),\
          \ \"AttributeMode\",\n61                      new String[]{\"ATTR_NORMAL\"\
          , \"ATTR_READONLY\"});\n62          }\n63          return __typeCode;\n\
          64      }\n65  \n66      public static String id()\n67      {\n68      \
          \    return _id;\n69      }"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeModeHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "61                      new String[]{\"ATTR_NORMAL\", \"ATTR_READONLY\"\
          });\n62          }\n63          return __typeCode;\n64      }\n65  \n66\
          \      public static String id()\n67      {\n68          return _id;\n69\
          \      }\n70  \n71      public static org.jboss.com.sun.org.omg.CORBA.AttributeMode\
          \ read(org.omg.CORBA.portable.InputStream istream)\n72      {\n73      \
          \    return org.jboss.com.sun.org.omg.CORBA.AttributeMode.from_int(istream.read_long());\n\
          74      }\n75  \n76      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n77              org.jboss.com.sun.org.omg.CORBA.AttributeMode\
          \ value)\n78      {\n79          ostream.write_long(value.value());\n80\
          \      }\n81  "
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeModeHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "66      public static String id()\n67      {\n68          return\
          \ _id;\n69      }\n70  \n71      public static org.jboss.com.sun.org.omg.CORBA.AttributeMode\
          \ read(org.omg.CORBA.portable.InputStream istream)\n72      {\n73      \
          \    return org.jboss.com.sun.org.omg.CORBA.AttributeMode.from_int(istream.read_long());\n\
          74      }\n75  \n76      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n77              org.jboss.com.sun.org.omg.CORBA.AttributeMode\
          \ value)\n78      {\n79          ostream.write_long(value.value());\n80\
          \      }\n81  \n82  }\n"
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/AttributeModeHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class ContextIdSeqHelper\n33  {\n\
          34      private static String _id = \"IDL:omg.org/CORBA/ContextIdSeq:1.0\"\
          ;\n35  \n36      public ContextIdSeqHelper()\n37      {\n38      }\n39 \
          \ \n40      public static void insert(org.omg.CORBA.Any a, String[] that)\n\
          41      {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static String[] extract(org.omg.CORBA.Any a)\n49      {\n\
          50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class ContextIdSeqHelper\n33  {\n34      private\
          \ static String _id = \"IDL:omg.org/CORBA/ContextIdSeq:1.0\";\n35  \n36\
          \      public ContextIdSeqHelper()\n37      {\n38      }\n39  \n40     \
          \ public static void insert(org.omg.CORBA.Any a, String[] that)\n41    \
          \  {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static String[] extract(org.omg.CORBA.Any a)\n49      {\n\
          50          return read(a.create_input_stream());\n51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, String[] that)\n41      {\n42          org.omg.CORBA.portable.OutputStream\
          \ out = a.create_output_stream();\n43          a.type(type());\n44     \
          \     write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static String[] extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static String[] extract(org.omg.CORBA.Any a)\n49  \
          \    {\n50          return read(a.create_input_stream());\n51      }\n52\
          \  \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          63                      org.jboss.com.sun.org.omg.CORBA.ContextIdentifierHelper.id(),\
          \ \"ContextIdentifier\", __typeCode);"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static String[] extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          63                      org.jboss.com.sun.org.omg.CORBA.ContextIdentifierHelper.id(),\
          \ \"ContextIdentifier\", __typeCode);\n64              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n65              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc("
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          63                      org.jboss.com.sun.org.omg.CORBA.ContextIdentifierHelper.id(),\
          \ \"ContextIdentifier\", __typeCode);\n64              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n65              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          66                      org.jboss.com.sun.org.omg.CORBA.ContextIdSeqHelper.id(),\
          \ \"ContextIdSeq\", __typeCode);\n67          }\n68          return __typeCode;\n\
          69      }"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "50          return read(a.create_input_stream());\n51      }\n\
          52  \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          63                      org.jboss.com.sun.org.omg.CORBA.ContextIdentifierHelper.id(),\
          \ \"ContextIdentifier\", __typeCode);\n64              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n65              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          66                      org.jboss.com.sun.org.omg.CORBA.ContextIdSeqHelper.id(),\
          \ \"ContextIdSeq\", __typeCode);\n67          }\n68          return __typeCode;\n\
          69      }\n70  "
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          63                      org.jboss.com.sun.org.omg.CORBA.ContextIdentifierHelper.id(),\
          \ \"ContextIdentifier\", __typeCode);\n64              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n65              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          66                      org.jboss.com.sun.org.omg.CORBA.ContextIdSeqHelper.id(),\
          \ \"ContextIdSeq\", __typeCode);\n67          }\n68          return __typeCode;\n\
          69      }\n70  \n71      public static String id()\n72      {"
        lineNumber: 62
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          63                      org.jboss.com.sun.org.omg.CORBA.ContextIdentifierHelper.id(),\
          \ \"ContextIdentifier\", __typeCode);\n64              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n65              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          66                      org.jboss.com.sun.org.omg.CORBA.ContextIdSeqHelper.id(),\
          \ \"ContextIdSeq\", __typeCode);\n67          }\n68          return __typeCode;\n\
          69      }\n70  \n71      public static String id()\n72      {\n73      \
          \    return _id;\n74      }"
        lineNumber: 64
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          63                      org.jboss.com.sun.org.omg.CORBA.ContextIdentifierHelper.id(),\
          \ \"ContextIdentifier\", __typeCode);\n64              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n65              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          66                      org.jboss.com.sun.org.omg.CORBA.ContextIdSeqHelper.id(),\
          \ \"ContextIdSeq\", __typeCode);\n67          }\n68          return __typeCode;\n\
          69      }\n70  \n71      public static String id()\n72      {\n73      \
          \    return _id;\n74      }\n75  "
        lineNumber: 65
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "66                      org.jboss.com.sun.org.omg.CORBA.ContextIdSeqHelper.id(),\
          \ \"ContextIdSeq\", __typeCode);\n67          }\n68          return __typeCode;\n\
          69      }\n70  \n71      public static String id()\n72      {\n73      \
          \    return _id;\n74      }\n75  \n76      public static String[] read(org.omg.CORBA.portable.InputStream\
          \ istream)\n77      {\n78          String value[] = null;\n79          int\
          \ _len0 = istream.read_long();\n80          value = new String[_len0];\n\
          81          for (int _o1 = 0; _o1 < value.length; ++_o1)\n82           \
          \   value[_o1] = org.jboss.com.sun.org.omg.CORBA.ContextIdentifierHelper.read(istream);\n\
          83          return value;\n84      }\n85  \n86      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, String[] value)"
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "76      public static String[] read(org.omg.CORBA.portable.InputStream\
          \ istream)\n77      {\n78          String value[] = null;\n79          int\
          \ _len0 = istream.read_long();\n80          value = new String[_len0];\n\
          81          for (int _o1 = 0; _o1 < value.length; ++_o1)\n82           \
          \   value[_o1] = org.jboss.com.sun.org.omg.CORBA.ContextIdentifierHelper.read(istream);\n\
          83          return value;\n84      }\n85  \n86      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, String[] value)\n87      {\n88          ostream.write_long(value.length);\n\
          89          for (int _i0 = 0; _i0 < value.length; ++_i0)\n90           \
          \   org.jboss.com.sun.org.omg.CORBA.ContextIdentifierHelper.write(ostream,\
          \ value[_i0]);\n91      }\n92  \n93  }\n"
        lineNumber: 86
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdSeqHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class ContextIdentifierHelper\n\
          33  {\n34      private static String _id = \"IDL:omg.org/CORBA/ContextIdentifier:1.0\"\
          ;\n35  \n36      public ContextIdentifierHelper()\n37      {\n38      }\n\
          39  \n40      public static void insert(org.omg.CORBA.Any a, String that)\n\
          41      {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static String extract(org.omg.CORBA.Any a)\n49      {\n50\
          \          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class ContextIdentifierHelper\n33  {\n34     \
          \ private static String _id = \"IDL:omg.org/CORBA/ContextIdentifier:1.0\"\
          ;\n35  \n36      public ContextIdentifierHelper()\n37      {\n38      }\n\
          39  \n40      public static void insert(org.omg.CORBA.Any a, String that)\n\
          41      {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static String extract(org.omg.CORBA.Any a)\n49      {\n50\
          \          return read(a.create_input_stream());\n51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, String that)\n41      {\n42          org.omg.CORBA.portable.OutputStream\
          \ out = a.create_output_stream();\n43          a.type(type());\n44     \
          \     write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static String extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static String extract(org.omg.CORBA.Any a)\n49    \
          \  {\n50          return read(a.create_input_stream());\n51      }\n52 \
          \ \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n54\
          \  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          63                      org.jboss.com.sun.org.omg.CORBA.ContextIdentifierHelper.id(),\
          \ \"ContextIdentifier\", __typeCode);"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static String extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          63                      org.jboss.com.sun.org.omg.CORBA.ContextIdentifierHelper.id(),\
          \ \"ContextIdentifier\", __typeCode);\n64          }\n65          return\
          \ __typeCode;"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          63                      org.jboss.com.sun.org.omg.CORBA.ContextIdentifierHelper.id(),\
          \ \"ContextIdentifier\", __typeCode);\n64          }\n65          return\
          \ __typeCode;\n66      }\n67  \n68      public static String id()\n69  \
          \    {"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "50          return read(a.create_input_stream());\n51      }\n\
          52  \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          63                      org.jboss.com.sun.org.omg.CORBA.ContextIdentifierHelper.id(),\
          \ \"ContextIdentifier\", __typeCode);\n64          }\n65          return\
          \ __typeCode;\n66      }\n67  \n68      public static String id()\n69  \
          \    {\n70          return _id;"
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          63                      org.jboss.com.sun.org.omg.CORBA.ContextIdentifierHelper.id(),\
          \ \"ContextIdentifier\", __typeCode);\n64          }\n65          return\
          \ __typeCode;\n66      }\n67  \n68      public static String id()\n69  \
          \    {\n70          return _id;\n71      }\n72  "
        lineNumber: 62
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "63                      org.jboss.com.sun.org.omg.CORBA.ContextIdentifierHelper.id(),\
          \ \"ContextIdentifier\", __typeCode);\n64          }\n65          return\
          \ __typeCode;\n66      }\n67  \n68      public static String id()\n69  \
          \    {\n70          return _id;\n71      }\n72  \n73      public static\
          \ String read(org.omg.CORBA.portable.InputStream istream)\n74      {\n75\
          \          String value = null;\n76          value = istream.read_string();\n\
          77          return value;\n78      }\n79  \n80      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, String value)\n81      {\n82          ostream.write_string(value);\n\
          83      }"
        lineNumber: 73
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "70          return _id;\n71      }\n72  \n73      public static\
          \ String read(org.omg.CORBA.portable.InputStream istream)\n74      {\n75\
          \          String value = null;\n76          value = istream.read_string();\n\
          77          return value;\n78      }\n79  \n80      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, String value)\n81      {\n82          ostream.write_string(value);\n\
          83      }\n84  \n85  }\n"
        lineNumber: 80
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ContextIdentifierHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: " 83      public static org.omg.CORBA.DefinitionKind read(org.omg.CORBA.portable.InputStream\
          \ istream)\n 84      {\n 85          // _CHANGED_\n 86          // return\
          \ org.jboss.com.sun.org.omg.CORBA.DefinitionKind.from_int (istream.read_long\
          \ ());\n 87          return org.omg.CORBA.DefinitionKind.from_int(istream.read_long());\n\
          \ 88      }\n 89  \n 90      // _CHANGED_\n 91      // public static void\
          \ write (org.omg.CORBA.portable.OutputStream ostream,\n 92      // org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ value)\n 93      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, org.omg.CORBA.DefinitionKind value)\n 94      {\n 95        \
          \  ostream.write_long(value.value());\n 96      }\n 97  \n 98  }\n"
        lineNumber: 93
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "34  public final class DefinitionKindHelper\n35  {\n36      private\
          \ static String _id = \"IDL:omg.org/CORBA/DefinitionKind:1.0\";\n37  \n\
          38      public DefinitionKindHelper()\n39      {\n40      }\n41  \n42  \
          \    // _CHANGED_\n43      // public static void insert (org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.DefinitionKind that)\n44      public\
          \ static void insert(org.omg.CORBA.Any a, org.omg.CORBA.DefinitionKind that)\n\
          45      {\n46          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          47          a.type(type());\n48          write(out, that);\n49         \
          \ a.read_value(out.create_input_stream(), type());\n50      }\n51  \n52\
          \      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.DefinitionKind\
          \ extract(org.omg.CORBA.Any a)"
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "36      private static String _id = \"IDL:omg.org/CORBA/DefinitionKind:1.0\"\
          ;\n37  \n38      public DefinitionKindHelper()\n39      {\n40      }\n41\
          \  \n42      // _CHANGED_\n43      // public static void insert (org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.DefinitionKind that)\n44      public\
          \ static void insert(org.omg.CORBA.Any a, org.omg.CORBA.DefinitionKind that)\n\
          45      {\n46          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          47          a.type(type());\n48          write(out, that);\n49         \
          \ a.read_value(out.create_input_stream(), type());\n50      }\n51  \n52\
          \      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.DefinitionKind\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "44      public static void insert(org.omg.CORBA.Any a, org.omg.CORBA.DefinitionKind\
          \ that)\n45      {\n46          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n47          a.type(type());\n48         \
          \ write(out, that);\n49          a.read_value(out.create_input_stream(),\
          \ type());\n50      }\n51  \n52      // _CHANGED_\n53      // public static\
          \ org.jboss.com.sun.org.omg.CORBA.DefinitionKind extract (org.omg.CORBA.Any\
          \ a)\n54      public static org.omg.CORBA.DefinitionKind extract(org.omg.CORBA.Any\
          \ a)\n55      {\n56          return read(a.create_input_stream());\n57 \
          \     }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n62      {\n63          if (__typeCode == null)\n64          {"
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "49          a.read_value(out.create_input_stream(), type());\n\
          50      }\n51  \n52      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.DefinitionKind\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());\n\
          57      }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n62      {\n63          if (__typeCode == null)\n64          {\n\
          65              __typeCode = org.omg.CORBA.ORB.init().create_enum_tc(\n\
          66                      org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.id(),\n\
          67                      \"DefinitionKind\",\n68                      new\
          \ String[]{\"dk_none\", \"dk_all\", \"dk_Attribute\", \"dk_Constant\", \"\
          dk_Exception\", \"dk_Interface\",\n69                              \"dk_Module\"\
          , \"dk_Operation\", \"dk_Typedef\", \"dk_Alias\", \"dk_Struct\", \"dk_Union\"\
          , \"dk_Enum\","
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51  \n52      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.DefinitionKind\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());\n\
          57      }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n62      {\n63          if (__typeCode == null)\n64          {\n\
          65              __typeCode = org.omg.CORBA.ORB.init().create_enum_tc(\n\
          66                      org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.id(),\n\
          67                      \"DefinitionKind\",\n68                      new\
          \ String[]{\"dk_none\", \"dk_all\", \"dk_Attribute\", \"dk_Constant\", \"\
          dk_Exception\", \"dk_Interface\",\n69                              \"dk_Module\"\
          , \"dk_Operation\", \"dk_Typedef\", \"dk_Alias\", \"dk_Struct\", \"dk_Union\"\
          , \"dk_Enum\",\n70                              \"dk_Primitive\", \"dk_String\"\
          , \"dk_Sequence\", \"dk_Array\", \"dk_Repository\", \"dk_Wstring\",\n71\
          \                              \"dk_Fixed\", \"dk_Value\", \"dk_ValueBox\"\
          , \"dk_ValueMember\", \"dk_Native\"});"
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "55      {\n56          return read(a.create_input_stream());\n\
          57      }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n62      {\n63          if (__typeCode == null)\n64          {\n\
          65              __typeCode = org.omg.CORBA.ORB.init().create_enum_tc(\n\
          66                      org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.id(),\n\
          67                      \"DefinitionKind\",\n68                      new\
          \ String[]{\"dk_none\", \"dk_all\", \"dk_Attribute\", \"dk_Constant\", \"\
          dk_Exception\", \"dk_Interface\",\n69                              \"dk_Module\"\
          , \"dk_Operation\", \"dk_Typedef\", \"dk_Alias\", \"dk_Struct\", \"dk_Union\"\
          , \"dk_Enum\",\n70                              \"dk_Primitive\", \"dk_String\"\
          , \"dk_Sequence\", \"dk_Array\", \"dk_Repository\", \"dk_Wstring\",\n71\
          \                              \"dk_Fixed\", \"dk_Value\", \"dk_ValueBox\"\
          , \"dk_ValueMember\", \"dk_Native\"});\n72          }\n73          return\
          \ __typeCode;\n74      }\n75  "
        lineNumber: 65
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "73          return __typeCode;\n74      }\n75  \n76      public\
          \ static String id()\n77      {\n78          return _id;\n79      }\n80\
          \  \n81      // _CHANGED_\n82      // public static org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ read (org.omg.CORBA.portable.InputStream istream)\n83      public static\
          \ org.omg.CORBA.DefinitionKind read(org.omg.CORBA.portable.InputStream istream)\n\
          84      {\n85          // _CHANGED_\n86          // return org.jboss.com.sun.org.omg.CORBA.DefinitionKind.from_int\
          \ (istream.read_long ());\n87          return org.omg.CORBA.DefinitionKind.from_int(istream.read_long());\n\
          88      }\n89  \n90      // _CHANGED_\n91      // public static void write\
          \ (org.omg.CORBA.portable.OutputStream ostream,\n92      // org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ value)\n93      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, org.omg.CORBA.DefinitionKind value)"
        lineNumber: 83
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "77      {\n78          return _id;\n79      }\n80  \n81      //\
          \ _CHANGED_\n82      // public static org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ read (org.omg.CORBA.portable.InputStream istream)\n83      public static\
          \ org.omg.CORBA.DefinitionKind read(org.omg.CORBA.portable.InputStream istream)\n\
          84      {\n85          // _CHANGED_\n86          // return org.jboss.com.sun.org.omg.CORBA.DefinitionKind.from_int\
          \ (istream.read_long ());\n87          return org.omg.CORBA.DefinitionKind.from_int(istream.read_long());\n\
          88      }\n89  \n90      // _CHANGED_\n91      // public static void write\
          \ (org.omg.CORBA.portable.OutputStream ostream,\n92      // org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ value)\n93      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, org.omg.CORBA.DefinitionKind value)\n94      {\n95          ostream.write_long(value.value());\n\
          96      }\n97  "
        lineNumber: 87
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/DefinitionKindHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class ExcDescriptionSeqHelper\n\
          33  {\n34      private static String _id = \"IDL:omg.org/CORBA/ExcDescriptionSeq:1.0\"\
          ;\n35  \n36      public ExcDescriptionSeqHelper()\n37      {\n38      }\n\
          39  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.ExceptionDescription[]\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ExceptionDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class ExcDescriptionSeqHelper\n33  {\n34     \
          \ private static String _id = \"IDL:omg.org/CORBA/ExcDescriptionSeq:1.0\"\
          ;\n35  \n36      public ExcDescriptionSeqHelper()\n37      {\n38      }\n\
          39  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.ExceptionDescription[]\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ExceptionDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.ExceptionDescription[] that)\n41  \
          \    {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static org.jboss.com.sun.org.omg.CORBA.ExceptionDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ExceptionDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.jboss.com.sun.org.omg.CORBA.ExceptionDescriptionHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.ExcDescriptionSeqHelper.id(),\
          \ \"ExcDescriptionSeq\", __typeCode);\n63          }"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ExceptionDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.jboss.com.sun.org.omg.CORBA.ExceptionDescriptionHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.ExcDescriptionSeqHelper.id(),\
          \ \"ExcDescriptionSeq\", __typeCode);\n63          }\n64          return\
          \ __typeCode;\n65      }"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "50          return read(a.create_input_stream());\n51      }\n\
          52  \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.jboss.com.sun.org.omg.CORBA.ExceptionDescriptionHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.ExcDescriptionSeqHelper.id(),\
          \ \"ExcDescriptionSeq\", __typeCode);\n63          }\n64          return\
          \ __typeCode;\n65      }\n66  \n67      public static String id()\n68  \
          \    {\n69          return _id;\n70      }"
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51      }\n52  \n53      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.jboss.com.sun.org.omg.CORBA.ExceptionDescriptionHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.ExcDescriptionSeqHelper.id(),\
          \ \"ExcDescriptionSeq\", __typeCode);\n63          }\n64          return\
          \ __typeCode;\n65      }\n66  \n67      public static String id()\n68  \
          \    {\n69          return _id;\n70      }\n71  "
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "62                      org.jboss.com.sun.org.omg.CORBA.ExcDescriptionSeqHelper.id(),\
          \ \"ExcDescriptionSeq\", __typeCode);\n63          }\n64          return\
          \ __typeCode;\n65      }\n66  \n67      public static String id()\n68  \
          \    {\n69          return _id;\n70      }\n71  \n72      public static\
          \ org.jboss.com.sun.org.omg.CORBA.ExceptionDescription[] read(org.omg.CORBA.portable.InputStream\
          \ istream)\n73      {\n74          org.jboss.com.sun.org.omg.CORBA.ExceptionDescription\
          \ value[] = null;\n75          int _len0 = istream.read_long();\n76    \
          \      value = new org.jboss.com.sun.org.omg.CORBA.ExceptionDescription[_len0];\n\
          77          for (int _o1 = 0; _o1 < value.length; ++_o1)\n78           \
          \   value[_o1] = org.jboss.com.sun.org.omg.CORBA.ExceptionDescriptionHelper.read(istream);\n\
          79          return value;\n80      }\n81  \n82      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,"
        lineNumber: 72
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "72      public static org.jboss.com.sun.org.omg.CORBA.ExceptionDescription[]\
          \ read(org.omg.CORBA.portable.InputStream istream)\n73      {\n74      \
          \    org.jboss.com.sun.org.omg.CORBA.ExceptionDescription value[] = null;\n\
          75          int _len0 = istream.read_long();\n76          value = new org.jboss.com.sun.org.omg.CORBA.ExceptionDescription[_len0];\n\
          77          for (int _o1 = 0; _o1 < value.length; ++_o1)\n78           \
          \   value[_o1] = org.jboss.com.sun.org.omg.CORBA.ExceptionDescriptionHelper.read(istream);\n\
          79          return value;\n80      }\n81  \n82      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n83              org.jboss.com.sun.org.omg.CORBA.ExceptionDescription[]\
          \ value)\n84      {\n85          ostream.write_long(value.length);\n86 \
          \         for (int _i0 = 0; _i0 < value.length; ++_i0)\n87             \
          \ org.jboss.com.sun.org.omg.CORBA.ExceptionDescriptionHelper.write(ostream,\
          \ value[_i0]);\n88      }\n89  \n90  }\n"
        lineNumber: 82
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExcDescriptionSeqHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "23   * questions.\n24   */\n25  package org.jboss.com.sun.org.omg.CORBA;\n\
          26  \n27  /**\n28   * org/jboss/com/sun/org/omg/CORBA/ExceptionDescription.java\
          \ Generated by the IDL-to-Java compiler (portable), version\n29   * \"3.0\"\
          \ from ir.idl Thursday, May 6, 1999 1:51:50 AM PDT\n30   */\n31  \n32  @SuppressWarnings(\"\
          serial\")\n33  public final class ExceptionDescription implements org.omg.CORBA.portable.IDLEntity\n\
          34  {\n35      public String name = null;\n36  \n37      public String id\
          \ = null;\n38  \n39      public String defined_in = null;\n40  \n41    \
          \  public String version = null;\n42  \n43      public org.omg.CORBA.TypeCode\
          \ type = null;"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescription.java
          kind: Class
          name: ExceptionDescription
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "33  public final class ExceptionDescription implements org.omg.CORBA.portable.IDLEntity\n\
          34  {\n35      public String name = null;\n36  \n37      public String id\
          \ = null;\n38  \n39      public String defined_in = null;\n40  \n41    \
          \  public String version = null;\n42  \n43      public org.omg.CORBA.TypeCode\
          \ type = null;\n44  \n45      public ExceptionDescription()\n46      {\n\
          47      } // ctor\n48  \n49      public ExceptionDescription(String _name,\
          \ String _id, String _defined_in, String _version,\n50              org.omg.CORBA.TypeCode\
          \ _type)\n51      {\n52          name = _name;\n53          id = _id;"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescription.java
          kind: Field
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "40  \n41      public String version = null;\n42  \n43      public\
          \ org.omg.CORBA.TypeCode type = null;\n44  \n45      public ExceptionDescription()\n\
          46      {\n47      } // ctor\n48  \n49      public ExceptionDescription(String\
          \ _name, String _id, String _defined_in, String _version,\n50          \
          \    org.omg.CORBA.TypeCode _type)\n51      {\n52          name = _name;\n\
          53          id = _id;\n54          defined_in = _defined_in;\n55       \
          \   version = _version;\n56          type = _type;\n57      } // ctor\n\
          58  \n59  } // class ExceptionDescription\n"
        lineNumber: 50
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescription.java
          kind: Constructor
          name: ExceptionDescription
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 85
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 87
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 88
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 89
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 90
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 105
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 116
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class ExceptionDescriptionHelper\n\
          33  {\n34      private static String _id = \"IDL:omg.org/CORBA/ExceptionDescription:1.0\"\
          ;\n35  \n36      public ExceptionDescriptionHelper()\n37      {\n38    \
          \  }\n39  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.ExceptionDescription\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ExceptionDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class ExceptionDescriptionHelper\n33  {\n34  \
          \    private static String _id = \"IDL:omg.org/CORBA/ExceptionDescription:1.0\"\
          ;\n35  \n36      public ExceptionDescriptionHelper()\n37      {\n38    \
          \  }\n39  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.ExceptionDescription\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ExceptionDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.ExceptionDescription that)\n41    \
          \  {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static org.jboss.com.sun.org.omg.CORBA.ExceptionDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      private static boolean __active = false;\n56  \n\
          57      synchronized public static org.omg.CORBA.TypeCode type()\n58   \
          \   {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ExceptionDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      private static boolean __active = false;\n56  \n\
          57      synchronized public static org.omg.CORBA.TypeCode type()\n58   \
          \   {\n59          if (__typeCode == null)\n60          {\n61          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n62              {\n63\
          \                  if (__typeCode == null)"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ExceptionDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      private static boolean __active = false;\n56  \n\
          57      synchronized public static org.omg.CORBA.TypeCode type()\n58   \
          \   {\n59          if (__typeCode == null)\n60          {\n61          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n62              {\n63\
          \                  if (__typeCode == null)\n64                  {\n65  \
          \                    if (__active)\n66                      {\n67      \
          \                    return org.omg.CORBA.ORB.init().create_recursive_tc(_id);"
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51      }\n52  \n53      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n54  \n55      private static boolean __active = false;\n\
          56  \n57      synchronized public static org.omg.CORBA.TypeCode type()\n\
          58      {\n59          if (__typeCode == null)\n60          {\n61      \
          \        synchronized (org.omg.CORBA.TypeCode.class)\n62              {\n\
          63                  if (__typeCode == null)\n64                  {\n65 \
          \                     if (__active)\n66                      {\n67     \
          \                     return org.omg.CORBA.ORB.init().create_recursive_tc(_id);\n\
          68                      }\n69                      __active = true;\n70\
          \                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[5];\n\
          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;"
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '57      synchronized public static org.omg.CORBA.TypeCode type()

          58      {

          59          if (__typeCode == null)

          60          {

          61              synchronized (org.omg.CORBA.TypeCode.class)

          62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[5];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc('
        lineNumber: 67
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '60          {

          61              synchronized (org.omg.CORBA.TypeCode.class)

          62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[5];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);'
        lineNumber: 70
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '61              synchronized (org.omg.CORBA.TypeCode.class)

          62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[5];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc('
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[5];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);'
        lineNumber: 72
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[5];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);'
        lineNumber: 73
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[5];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc('
        lineNumber: 75
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[5];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);'
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[5];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);'
        lineNumber: 77
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[5];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          88                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          89                      _members0[4] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);'
        lineNumber: 79
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '70                      org.omg.CORBA.StructMember[] _members0
          = new org.omg.CORBA.StructMember[5];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          88                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          89                      _members0[4] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          90                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc('
        lineNumber: 80
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '71                      org.omg.CORBA.TypeCode _tcOf_members0 =
          null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          88                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          89                      _members0[4] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          90                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          91                              org.jboss.com.sun.org.omg.CORBA.ExceptionDescriptionHelper.id(),
          "ExceptionDescription",'
        lineNumber: 81
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          88                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          89                      _members0[4] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          90                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          91                              org.jboss.com.sun.org.omg.CORBA.ExceptionDescriptionHelper.id(),
          "ExceptionDescription",

          92                              _members0);

          93                      __active = false;'
        lineNumber: 83
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          88                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          89                      _members0[4] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          90                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          91                              org.jboss.com.sun.org.omg.CORBA.ExceptionDescriptionHelper.id(),
          "ExceptionDescription",

          92                              _members0);

          93                      __active = false;

          94                  }'
        lineNumber: 84
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ExceptionDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: " 83      // _CHANGED_\n 84      // public static void write (org.omg.CORBA.portable.OutputStream\
          \ ostream, org.jboss.com.sun.org.omg.CORBA.IDLType\n 85      // value)\n\
          \ 86      public static void write(org.omg.CORBA.portable.OutputStream ostream,\
          \ org.omg.CORBA.IDLType value)\n 87      {\n 88          ostream.write_Object(value);\n\
          \ 89      }\n 90  \n 91      // _CHANGED_\n 92      // public static org.jboss.com.sun.org.omg.CORBA.IDLType\
          \ narrow (org.omg.CORBA.Object obj)\n 93      public static org.omg.CORBA.IDLType\
          \ narrow(org.omg.CORBA.Object obj)\n 94      {\n 95          if (obj ==\
          \ null)\n 96              return null;\n 97          // _CHANGED_\n 98 \
          \         // else if (obj instanceof org.jboss.com.sun.org.omg.CORBA.IDLType)\n\
          \ 99          else if (obj instanceof org.omg.CORBA.IDLType)\n100      \
          \        // _CHANGED_\n101              // return (org.jboss.com.sun.org.omg.CORBA.IDLType)obj;\n\
          102              return (org.omg.CORBA.IDLType) obj;\n103          else\
          \ if (!obj._is_a(id()))"
        lineNumber: 93
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
          kind: Method
          name: narrow
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: " 89      }\n 90  \n 91      // _CHANGED_\n 92      // public static\
          \ org.jboss.com.sun.org.omg.CORBA.IDLType narrow (org.omg.CORBA.Object obj)\n\
          \ 93      public static org.omg.CORBA.IDLType narrow(org.omg.CORBA.Object\
          \ obj)\n 94      {\n 95          if (obj == null)\n 96              return\
          \ null;\n 97          // _CHANGED_\n 98          // else if (obj instanceof\
          \ org.jboss.com.sun.org.omg.CORBA.IDLType)\n 99          else if (obj instanceof\
          \ org.omg.CORBA.IDLType)\n100              // _CHANGED_\n101           \
          \   // return (org.jboss.com.sun.org.omg.CORBA.IDLType)obj;\n102       \
          \       return (org.omg.CORBA.IDLType) obj;\n103          else if (!obj._is_a(id()))\n\
          104              throw new org.omg.CORBA.BAD_PARAM();\n105          else\n\
          106          {\n107              org.omg.CORBA.portable.Delegate delegate\
          \ = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate();\n108    \
          \          return new org.jboss.com.sun.org.omg.CORBA._IDLTypeStub(delegate);\n\
          109          }"
        lineNumber: 99
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
          kind: Method
          name: narrow
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: " 92      // public static org.jboss.com.sun.org.omg.CORBA.IDLType\
          \ narrow (org.omg.CORBA.Object obj)\n 93      public static org.omg.CORBA.IDLType\
          \ narrow(org.omg.CORBA.Object obj)\n 94      {\n 95          if (obj ==\
          \ null)\n 96              return null;\n 97          // _CHANGED_\n 98 \
          \         // else if (obj instanceof org.jboss.com.sun.org.omg.CORBA.IDLType)\n\
          \ 99          else if (obj instanceof org.omg.CORBA.IDLType)\n100      \
          \        // _CHANGED_\n101              // return (org.jboss.com.sun.org.omg.CORBA.IDLType)obj;\n\
          102              return (org.omg.CORBA.IDLType) obj;\n103          else\
          \ if (!obj._is_a(id()))\n104              throw new org.omg.CORBA.BAD_PARAM();\n\
          105          else\n106          {\n107              org.omg.CORBA.portable.Delegate\
          \ delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate();\n\
          108              return new org.jboss.com.sun.org.omg.CORBA._IDLTypeStub(delegate);\n\
          109          }\n110      }\n111  \n112  }"
        lineNumber: 102
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
          kind: Method
          name: narrow
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: " 94      {\n 95          if (obj == null)\n 96              return\
          \ null;\n 97          // _CHANGED_\n 98          // else if (obj instanceof\
          \ org.jboss.com.sun.org.omg.CORBA.IDLType)\n 99          else if (obj instanceof\
          \ org.omg.CORBA.IDLType)\n100              // _CHANGED_\n101           \
          \   // return (org.jboss.com.sun.org.omg.CORBA.IDLType)obj;\n102       \
          \       return (org.omg.CORBA.IDLType) obj;\n103          else if (!obj._is_a(id()))\n\
          104              throw new org.omg.CORBA.BAD_PARAM();\n105          else\n\
          106          {\n107              org.omg.CORBA.portable.Delegate delegate\
          \ = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate();\n108    \
          \          return new org.jboss.com.sun.org.omg.CORBA._IDLTypeStub(delegate);\n\
          109          }\n110      }\n111  \n112  }\n"
        lineNumber: 104
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
          kind: Method
          name: narrow
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: " 97          // _CHANGED_\n 98          // else if (obj instanceof\
          \ org.jboss.com.sun.org.omg.CORBA.IDLType)\n 99          else if (obj instanceof\
          \ org.omg.CORBA.IDLType)\n100              // _CHANGED_\n101           \
          \   // return (org.jboss.com.sun.org.omg.CORBA.IDLType)obj;\n102       \
          \       return (org.omg.CORBA.IDLType) obj;\n103          else if (!obj._is_a(id()))\n\
          104              throw new org.omg.CORBA.BAD_PARAM();\n105          else\n\
          106          {\n107              org.omg.CORBA.portable.Delegate delegate\
          \ = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate();\n108    \
          \          return new org.jboss.com.sun.org.omg.CORBA._IDLTypeStub(delegate);\n\
          109          }\n110      }\n111  \n112  }\n"
        lineNumber: 107
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
          kind: Method
          name: narrow
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "34  public final class IDLTypeHelper\n35  {\n36      private static\
          \ String _id = \"IDL:omg.org/CORBA/IDLType:1.0\";\n37  \n38      public\
          \ IDLTypeHelper()\n39      {\n40      }\n41  \n42      // _CHANGED_\n43\
          \      // public static void insert (org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.IDLType\
          \ that)\n44      public static void insert(org.omg.CORBA.Any a, org.omg.CORBA.IDLType\
          \ that)\n45      {\n46          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n47          a.type(type());\n48         \
          \ write(out, that);\n49          a.read_value(out.create_input_stream(),\
          \ type());\n50      }\n51  \n52      // _CHANGED_\n53      // public static\
          \ org.jboss.com.sun.org.omg.CORBA.IDLType extract (org.omg.CORBA.Any a)\n\
          54      public static org.omg.CORBA.IDLType extract(org.omg.CORBA.Any a)"
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "36      private static String _id = \"IDL:omg.org/CORBA/IDLType:1.0\"\
          ;\n37  \n38      public IDLTypeHelper()\n39      {\n40      }\n41  \n42\
          \      // _CHANGED_\n43      // public static void insert (org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.IDLType that)\n44      public static\
          \ void insert(org.omg.CORBA.Any a, org.omg.CORBA.IDLType that)\n45     \
          \ {\n46          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          47          a.type(type());\n48          write(out, that);\n49         \
          \ a.read_value(out.create_input_stream(), type());\n50      }\n51  \n52\
          \      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.IDLType\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.IDLType\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "44      public static void insert(org.omg.CORBA.Any a, org.omg.CORBA.IDLType\
          \ that)\n45      {\n46          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n47          a.type(type());\n48         \
          \ write(out, that);\n49          a.read_value(out.create_input_stream(),\
          \ type());\n50      }\n51  \n52      // _CHANGED_\n53      // public static\
          \ org.jboss.com.sun.org.omg.CORBA.IDLType extract (org.omg.CORBA.Any a)\n\
          54      public static org.omg.CORBA.IDLType extract(org.omg.CORBA.Any a)\n\
          55      {\n56          return read(a.create_input_stream());\n57      }\n\
          58  \n59      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          60  \n61      synchronized public static org.omg.CORBA.TypeCode type()\n\
          62      {\n63          if (__typeCode == null)\n64          {"
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "49          a.read_value(out.create_input_stream(), type());\n\
          50      }\n51  \n52      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.IDLType\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.IDLType\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());\n\
          57      }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n62      {\n63          if (__typeCode == null)\n64          {\n\
          65              __typeCode = org.omg.CORBA.ORB.init().create_interface_tc(\n\
          66                      org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.id(),\
          \ \"IDLType\");\n67          }\n68          return __typeCode;\n69     \
          \ }"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51  \n52      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.IDLType\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.IDLType\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());\n\
          57      }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n62      {\n63          if (__typeCode == null)\n64          {\n\
          65              __typeCode = org.omg.CORBA.ORB.init().create_interface_tc(\n\
          66                      org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.id(),\
          \ \"IDLType\");\n67          }\n68          return __typeCode;\n69     \
          \ }\n70  \n71      public static String id()"
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "55      {\n56          return read(a.create_input_stream());\n\
          57      }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n62      {\n63          if (__typeCode == null)\n64          {\n\
          65              __typeCode = org.omg.CORBA.ORB.init().create_interface_tc(\n\
          66                      org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.id(),\
          \ \"IDLType\");\n67          }\n68          return __typeCode;\n69     \
          \ }\n70  \n71      public static String id()\n72      {\n73          return\
          \ _id;\n74      }\n75  "
        lineNumber: 65
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "68          return __typeCode;\n69      }\n70  \n71      public\
          \ static String id()\n72      {\n73          return _id;\n74      }\n75\
          \  \n76      // _CHANGED_\n77      // public static org.jboss.com.sun.org.omg.CORBA.IDLType\
          \ read (org.omg.CORBA.portable.InputStream istream)\n78      public static\
          \ org.omg.CORBA.IDLType read(org.omg.CORBA.portable.InputStream istream)\n\
          79      {\n80          return narrow(istream.read_Object(_IDLTypeStub.class));\n\
          81      }\n82  \n83      // _CHANGED_\n84      // public static void write\
          \ (org.omg.CORBA.portable.OutputStream ostream, org.jboss.com.sun.org.omg.CORBA.IDLType\n\
          85      // value)\n86      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, org.omg.CORBA.IDLType value)\n87      {\n88          ostream.write_Object(value);"
        lineNumber: 78
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "76      // _CHANGED_\n77      // public static org.jboss.com.sun.org.omg.CORBA.IDLType\
          \ read (org.omg.CORBA.portable.InputStream istream)\n78      public static\
          \ org.omg.CORBA.IDLType read(org.omg.CORBA.portable.InputStream istream)\n\
          79      {\n80          return narrow(istream.read_Object(_IDLTypeStub.class));\n\
          81      }\n82  \n83      // _CHANGED_\n84      // public static void write\
          \ (org.omg.CORBA.portable.OutputStream ostream, org.jboss.com.sun.org.omg.CORBA.IDLType\n\
          85      // value)\n86      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, org.omg.CORBA.IDLType value)\n87      {\n88          ostream.write_Object(value);\n\
          89      }\n90  \n91      // _CHANGED_\n92      // public static org.jboss.com.sun.org.omg.CORBA.IDLType\
          \ narrow (org.omg.CORBA.Object obj)\n93      public static org.omg.CORBA.IDLType\
          \ narrow(org.omg.CORBA.Object obj)\n94      {\n95          if (obj == null)\n\
          96              return null;"
        lineNumber: 86
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IDLTypeHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class IdentifierHelper\n33  {\n\
          34      private static String _id = \"IDL:omg.org/CORBA/Identifier:1.0\"\
          ;\n35  \n36      public IdentifierHelper()\n37      {\n38      }\n39  \n\
          40      public static void insert(org.omg.CORBA.Any a, String that)\n41\
          \      {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static String extract(org.omg.CORBA.Any a)\n49      {\n50\
          \          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class IdentifierHelper\n33  {\n34      private\
          \ static String _id = \"IDL:omg.org/CORBA/Identifier:1.0\";\n35  \n36  \
          \    public IdentifierHelper()\n37      {\n38      }\n39  \n40      public\
          \ static void insert(org.omg.CORBA.Any a, String that)\n41      {\n42  \
          \        org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static String extract(org.omg.CORBA.Any a)\n49      {\n50\
          \          return read(a.create_input_stream());\n51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, String that)\n41      {\n42          org.omg.CORBA.portable.OutputStream\
          \ out = a.create_output_stream();\n43          a.type(type());\n44     \
          \     write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static String extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static String extract(org.omg.CORBA.Any a)\n49    \
          \  {\n50          return read(a.create_input_stream());\n51      }\n52 \
          \ \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n54\
          \  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62          }\n63          return __typeCode;"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static String extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62          }\n63          return __typeCode;\n\
          64      }\n65  "
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62          }\n63          return __typeCode;\n\
          64      }\n65  \n66      public static String id()\n67      {\n68      \
          \    return _id;\n69      }"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "50          return read(a.create_input_stream());\n51      }\n\
          52  \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62          }\n63          return __typeCode;\n\
          64      }\n65  \n66      public static String id()\n67      {\n68      \
          \    return _id;\n69      }\n70  "
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "61                      org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", __typeCode);\n62          }\n63          return __typeCode;\n\
          64      }\n65  \n66      public static String id()\n67      {\n68      \
          \    return _id;\n69      }\n70  \n71      public static String read(org.omg.CORBA.portable.InputStream\
          \ istream)\n72      {\n73          String value = null;\n74          value\
          \ = istream.read_string();\n75          return value;\n76      }\n77  \n\
          78      public static void write(org.omg.CORBA.portable.OutputStream ostream,\
          \ String value)\n79      {\n80          ostream.write_string(value);\n81\
          \      }"
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "68          return _id;\n69      }\n70  \n71      public static\
          \ String read(org.omg.CORBA.portable.InputStream istream)\n72      {\n73\
          \          String value = null;\n74          value = istream.read_string();\n\
          75          return value;\n76      }\n77  \n78      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, String value)\n79      {\n80          ostream.write_string(value);\n\
          81      }\n82  \n83  }\n"
        lineNumber: 78
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/IdentifierHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "25  package org.jboss.com.sun.org.omg.CORBA;\n26  \n27  /**\n28\
          \   * org/jboss/com/sun/org/omg/CORBA/Initializer.java Generated by the\
          \ IDL-to-Java compiler (portable), version \"3.0\" from\n29   * ir.idl Thursday,\
          \ May 6, 1999 1:51:44 AM PDT\n30   */\n31  \n32  // This file has been _CHANGED_\n\
          33  \n34  @SuppressWarnings(\"serial\")\n35  public final class Initializer\
          \ implements org.omg.CORBA.portable.IDLEntity\n36  {\n37      // _CHANGED_\n\
          38      // public org.jboss.com.sun.org.omg.CORBA.StructMember members[]\
          \ = null;\n39      public org.omg.CORBA.StructMember members[] = null;\n\
          40  \n41      public String name = null;\n42  \n43      public Initializer()\n\
          44      {\n45      } // ctor"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/Initializer.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/Initializer.java
          kind: Class
          name: Initializer
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "29   * ir.idl Thursday, May 6, 1999 1:51:44 AM PDT\n30   */\n31\
          \  \n32  // This file has been _CHANGED_\n33  \n34  @SuppressWarnings(\"\
          serial\")\n35  public final class Initializer implements org.omg.CORBA.portable.IDLEntity\n\
          36  {\n37      // _CHANGED_\n38      // public org.jboss.com.sun.org.omg.CORBA.StructMember\
          \ members[] = null;\n39      public org.omg.CORBA.StructMember members[]\
          \ = null;\n40  \n41      public String name = null;\n42  \n43      public\
          \ Initializer()\n44      {\n45      } // ctor\n46  \n47      // _CHANGED_\n\
          48      // public Initializer (org.jboss.com.sun.org.omg.CORBA.StructMember[]\
          \ _members, String _name)\n49      public Initializer(org.omg.CORBA.StructMember[]\
          \ _members, String _name)"
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/Initializer.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/Initializer.java
          kind: Field
          name: members
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "39      public org.omg.CORBA.StructMember members[] = null;\n40\
          \  \n41      public String name = null;\n42  \n43      public Initializer()\n\
          44      {\n45      } // ctor\n46  \n47      // _CHANGED_\n48      // public\
          \ Initializer (org.jboss.com.sun.org.omg.CORBA.StructMember[] _members,\
          \ String _name)\n49      public Initializer(org.omg.CORBA.StructMember[]\
          \ _members, String _name)\n50      {\n51          members = _members;\n\
          52          name = _name;\n53      } // ctor\n54  \n55  } // class Initializer\n"
        lineNumber: 49
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/Initializer.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/Initializer.java
          kind: Constructor
          name: Initializer
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: " 86              }\n 87          }\n 88          return __typeCode;\n\
          \ 89      }\n 90  \n 91      public static String id()\n 92      {\n 93\
          \          return _id;\n 94      }\n 95  \n 96      public static org.jboss.com.sun.org.omg.CORBA.Initializer\
          \ read(org.omg.CORBA.portable.InputStream istream)\n 97      {\n 98    \
          \      org.jboss.com.sun.org.omg.CORBA.Initializer value = new org.jboss.com.sun.org.omg.CORBA.Initializer();\n\
          \ 99          value.members = org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.read(istream);\n\
          100          value.name = istream.read_string();\n101          return value;\n\
          102      }\n103  \n104      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n105              org.jboss.com.sun.org.omg.CORBA.Initializer\
          \ value)\n106      {"
        lineNumber: 96
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: " 94      }\n 95  \n 96      public static org.jboss.com.sun.org.omg.CORBA.Initializer\
          \ read(org.omg.CORBA.portable.InputStream istream)\n 97      {\n 98    \
          \      org.jboss.com.sun.org.omg.CORBA.Initializer value = new org.jboss.com.sun.org.omg.CORBA.Initializer();\n\
          \ 99          value.members = org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.read(istream);\n\
          100          value.name = istream.read_string();\n101          return value;\n\
          102      }\n103  \n104      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n105              org.jboss.com.sun.org.omg.CORBA.Initializer\
          \ value)\n106      {\n107          org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.write(ostream,\
          \ value.members);\n108          ostream.write_string(value.name);\n109 \
          \     }\n110  \n111  }\n"
        lineNumber: 104
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class InitializerHelper\n33  {\n\
          34      private static String _id = \"IDL:omg.org/CORBA/Initializer:1.0\"\
          ;\n35  \n36      public InitializerHelper()\n37      {\n38      }\n39  \n\
          40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.Initializer\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.Initializer\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class InitializerHelper\n33  {\n34      private\
          \ static String _id = \"IDL:omg.org/CORBA/Initializer:1.0\";\n35  \n36 \
          \     public InitializerHelper()\n37      {\n38      }\n39  \n40      public\
          \ static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.Initializer\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.Initializer\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.Initializer that)\n41      {\n42  \
          \        org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static org.jboss.com.sun.org.omg.CORBA.Initializer extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      private static boolean __active = false;\n56  \n\
          57      synchronized public static org.omg.CORBA.TypeCode type()\n58   \
          \   {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static org.jboss.com.sun.org.omg.CORBA.Initializer\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      private static boolean __active = false;\n56  \n\
          57      synchronized public static org.omg.CORBA.TypeCode type()\n58   \
          \   {\n59          if (__typeCode == null)\n60          {\n61          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n62              {\n63\
          \                  if (__typeCode == null)"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "47  \n48      public static org.jboss.com.sun.org.omg.CORBA.Initializer\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      private static boolean __active = false;\n56  \n\
          57      synchronized public static org.omg.CORBA.TypeCode type()\n58   \
          \   {\n59          if (__typeCode == null)\n60          {\n61          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n62              {\n63\
          \                  if (__typeCode == null)\n64                  {\n65  \
          \                    if (__active)\n66                      {\n67      \
          \                    return org.omg.CORBA.ORB.init().create_recursive_tc(_id);"
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51      }\n52  \n53      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n54  \n55      private static boolean __active = false;\n\
          56  \n57      synchronized public static org.omg.CORBA.TypeCode type()\n\
          58      {\n59          if (__typeCode == null)\n60          {\n61      \
          \        synchronized (org.omg.CORBA.TypeCode.class)\n62              {\n\
          63                  if (__typeCode == null)\n64                  {\n65 \
          \                     if (__active)\n66                      {\n67     \
          \                     return org.omg.CORBA.ORB.init().create_recursive_tc(_id);\n\
          68                      }\n69                      __active = true;\n70\
          \                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];\n\
          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;"
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '57      synchronized public static org.omg.CORBA.TypeCode type()

          58      {

          59          if (__typeCode == null)

          60          {

          61              synchronized (org.omg.CORBA.TypeCode.class)

          62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.type();

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,
          _tcOf_members0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.id(),
          "StructMemberSeq",

          76                              _tcOf_members0);

          77                      _members0[0] = new org.omg.CORBA.StructMember("members",
          _tcOf_members0, null);'
        lineNumber: 67
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '60          {

          61              synchronized (org.omg.CORBA.TypeCode.class)

          62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.type();

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,
          _tcOf_members0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.id(),
          "StructMemberSeq",

          76                              _tcOf_members0);

          77                      _members0[0] = new org.omg.CORBA.StructMember("members",
          _tcOf_members0, null);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);'
        lineNumber: 70
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '61              synchronized (org.omg.CORBA.TypeCode.class)

          62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.type();

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,
          _tcOf_members0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.id(),
          "StructMemberSeq",

          76                              _tcOf_members0);

          77                      _members0[0] = new org.omg.CORBA.StructMember("members",
          _tcOf_members0, null);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[1] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);'
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.type();

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,
          _tcOf_members0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.id(),
          "StructMemberSeq",

          76                              _tcOf_members0);

          77                      _members0[0] = new org.omg.CORBA.StructMember("members",
          _tcOf_members0, null);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[1] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          83                              org.jboss.com.sun.org.omg.CORBA.InitializerHelper.id(),
          "Initializer", _members0);'
        lineNumber: 73
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.type();

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,
          _tcOf_members0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.id(),
          "StructMemberSeq",

          76                              _tcOf_members0);

          77                      _members0[0] = new org.omg.CORBA.StructMember("members",
          _tcOf_members0, null);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[1] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          83                              org.jboss.com.sun.org.omg.CORBA.InitializerHelper.id(),
          "Initializer", _members0);

          84                      __active = false;'
        lineNumber: 74
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.type();

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,
          _tcOf_members0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.id(),
          "StructMemberSeq",

          76                              _tcOf_members0);

          77                      _members0[0] = new org.omg.CORBA.StructMember("members",
          _tcOf_members0, null);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[1] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          83                              org.jboss.com.sun.org.omg.CORBA.InitializerHelper.id(),
          "Initializer", _members0);

          84                      __active = false;

          85                  }

          86              }

          87          }'
        lineNumber: 77
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.type();

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,
          _tcOf_members0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.id(),
          "StructMemberSeq",

          76                              _tcOf_members0);

          77                      _members0[0] = new org.omg.CORBA.StructMember("members",
          _tcOf_members0, null);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[1] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          83                              org.jboss.com.sun.org.omg.CORBA.InitializerHelper.id(),
          "Initializer", _members0);

          84                      __active = false;

          85                  }

          86              }

          87          }

          88          return __typeCode;'
        lineNumber: 78
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[2];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.type();

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,
          _tcOf_members0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.id(),
          "StructMemberSeq",

          76                              _tcOf_members0);

          77                      _members0[0] = new org.omg.CORBA.StructMember("members",
          _tcOf_members0, null);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[1] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          83                              org.jboss.com.sun.org.omg.CORBA.InitializerHelper.id(),
          "Initializer", _members0);

          84                      __active = false;

          85                  }

          86              }

          87          }

          88          return __typeCode;

          89      }'
        lineNumber: 79
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "71                      org.omg.CORBA.TypeCode _tcOf_members0 =\
          \ null;\n72                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.type();\n\
          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ _tcOf_members0);\n74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          75                              org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.id(),\
          \ \"StructMemberSeq\",\n76                              _tcOf_members0);\n\
          77                      _members0[0] = new org.omg.CORBA.StructMember(\"\
          members\", _tcOf_members0, null);\n78                      _tcOf_members0\
          \ = org.omg.CORBA.ORB.init().create_string_tc(0);\n79                  \
          \    _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(\n80    \
          \                          org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", _tcOf_members0);\n81                      _members0[1]\
          \ = new org.omg.CORBA.StructMember(\"name\", _tcOf_members0, null);\n82\
          \                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(\n\
          83                              org.jboss.com.sun.org.omg.CORBA.InitializerHelper.id(),\
          \ \"Initializer\", _members0);\n84                      __active = false;\n\
          85                  }\n86              }\n87          }\n88          return\
          \ __typeCode;\n89      }\n90  \n91      public static String id()"
        lineNumber: 81
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "72                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.type();\n\
          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ _tcOf_members0);\n74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          75                              org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.id(),\
          \ \"StructMemberSeq\",\n76                              _tcOf_members0);\n\
          77                      _members0[0] = new org.omg.CORBA.StructMember(\"\
          members\", _tcOf_members0, null);\n78                      _tcOf_members0\
          \ = org.omg.CORBA.ORB.init().create_string_tc(0);\n79                  \
          \    _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(\n80    \
          \                          org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", _tcOf_members0);\n81                      _members0[1]\
          \ = new org.omg.CORBA.StructMember(\"name\", _tcOf_members0, null);\n82\
          \                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(\n\
          83                              org.jboss.com.sun.org.omg.CORBA.InitializerHelper.id(),\
          \ \"Initializer\", _members0);\n84                      __active = false;\n\
          85                  }\n86              }\n87          }\n88          return\
          \ __typeCode;\n89      }\n90  \n91      public static String id()\n92  \
          \    {"
        lineNumber: 82
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class InitializerSeqHelper\n33\
          \  {\n34      private static String _id = \"IDL:omg.org/CORBA/InitializerSeq:1.0\"\
          ;\n35  \n36      public InitializerSeqHelper()\n37      {\n38      }\n39\
          \  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.Initializer[]\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.Initializer[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class InitializerSeqHelper\n33  {\n34      private\
          \ static String _id = \"IDL:omg.org/CORBA/InitializerSeq:1.0\";\n35  \n\
          36      public InitializerSeqHelper()\n37      {\n38      }\n39  \n40  \
          \    public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.Initializer[]\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.Initializer[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.Initializer[] that)\n41      {\n42\
          \          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static org.jboss.com.sun.org.omg.CORBA.Initializer[] extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static org.jboss.com.sun.org.omg.CORBA.Initializer[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.jboss.com.sun.org.omg.CORBA.InitializerHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.InitializerSeqHelper.id(),\
          \ \"InitializerSeq\", __typeCode);\n63          }"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.Initializer[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.jboss.com.sun.org.omg.CORBA.InitializerHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.InitializerSeqHelper.id(),\
          \ \"InitializerSeq\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "50          return read(a.create_input_stream());\n51      }\n\
          52  \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.jboss.com.sun.org.omg.CORBA.InitializerHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.InitializerSeqHelper.id(),\
          \ \"InitializerSeq\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }\n66  \n67      public static String id()\n68      {\n69      \
          \    return _id;\n70      }"
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51      }\n52  \n53      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.jboss.com.sun.org.omg.CORBA.InitializerHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.InitializerSeqHelper.id(),\
          \ \"InitializerSeq\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }\n66  \n67      public static String id()\n68      {\n69      \
          \    return _id;\n70      }\n71  "
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "62                      org.jboss.com.sun.org.omg.CORBA.InitializerSeqHelper.id(),\
          \ \"InitializerSeq\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }\n66  \n67      public static String id()\n68      {\n69      \
          \    return _id;\n70      }\n71  \n72      public static org.jboss.com.sun.org.omg.CORBA.Initializer[]\
          \ read(org.omg.CORBA.portable.InputStream istream)\n73      {\n74      \
          \    org.jboss.com.sun.org.omg.CORBA.Initializer value[] = null;\n75   \
          \       int _len0 = istream.read_long();\n76          value = new org.jboss.com.sun.org.omg.CORBA.Initializer[_len0];\n\
          77          for (int _o1 = 0; _o1 < value.length; ++_o1)\n78           \
          \   value[_o1] = org.jboss.com.sun.org.omg.CORBA.InitializerHelper.read(istream);\n\
          79          return value;\n80      }\n81  \n82      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,"
        lineNumber: 72
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "72      public static org.jboss.com.sun.org.omg.CORBA.Initializer[]\
          \ read(org.omg.CORBA.portable.InputStream istream)\n73      {\n74      \
          \    org.jboss.com.sun.org.omg.CORBA.Initializer value[] = null;\n75   \
          \       int _len0 = istream.read_long();\n76          value = new org.jboss.com.sun.org.omg.CORBA.Initializer[_len0];\n\
          77          for (int _o1 = 0; _o1 < value.length; ++_o1)\n78           \
          \   value[_o1] = org.jboss.com.sun.org.omg.CORBA.InitializerHelper.read(istream);\n\
          79          return value;\n80      }\n81  \n82      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n83              org.jboss.com.sun.org.omg.CORBA.Initializer[]\
          \ value)\n84      {\n85          ostream.write_long(value.length);\n86 \
          \         for (int _i0 = 0; _i0 < value.length; ++_i0)\n87             \
          \ org.jboss.com.sun.org.omg.CORBA.InitializerHelper.write(ostream, value[_i0]);\n\
          88      }\n89  \n90  }\n"
        lineNumber: 82
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/InitializerSeqHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class OpDescriptionSeqHelper\n\
          33  {\n34      private static String _id = \"IDL:omg.org/CORBA/OpDescriptionSeq:1.0\"\
          ;\n35  \n36      public OpDescriptionSeqHelper()\n37      {\n38      }\n\
          39  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.OperationDescription[]\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.OperationDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class OpDescriptionSeqHelper\n33  {\n34      private\
          \ static String _id = \"IDL:omg.org/CORBA/OpDescriptionSeq:1.0\";\n35  \n\
          36      public OpDescriptionSeqHelper()\n37      {\n38      }\n39  \n40\
          \      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.OperationDescription[]\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.OperationDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.OperationDescription[] that)\n41  \
          \    {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static org.jboss.com.sun.org.omg.CORBA.OperationDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static org.jboss.com.sun.org.omg.CORBA.OperationDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.jboss.com.sun.org.omg.CORBA.OperationDescriptionHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.OpDescriptionSeqHelper.id(),\
          \ \"OpDescriptionSeq\", __typeCode);\n63          }"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.OperationDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.jboss.com.sun.org.omg.CORBA.OperationDescriptionHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.OpDescriptionSeqHelper.id(),\
          \ \"OpDescriptionSeq\", __typeCode);\n63          }\n64          return\
          \ __typeCode;\n65      }"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "50          return read(a.create_input_stream());\n51      }\n\
          52  \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.jboss.com.sun.org.omg.CORBA.OperationDescriptionHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.OpDescriptionSeqHelper.id(),\
          \ \"OpDescriptionSeq\", __typeCode);\n63          }\n64          return\
          \ __typeCode;\n65      }\n66  \n67      public static String id()\n68  \
          \    {\n69          return _id;\n70      }"
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51      }\n52  \n53      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.jboss.com.sun.org.omg.CORBA.OperationDescriptionHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.OpDescriptionSeqHelper.id(),\
          \ \"OpDescriptionSeq\", __typeCode);\n63          }\n64          return\
          \ __typeCode;\n65      }\n66  \n67      public static String id()\n68  \
          \    {\n69          return _id;\n70      }\n71  "
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "62                      org.jboss.com.sun.org.omg.CORBA.OpDescriptionSeqHelper.id(),\
          \ \"OpDescriptionSeq\", __typeCode);\n63          }\n64          return\
          \ __typeCode;\n65      }\n66  \n67      public static String id()\n68  \
          \    {\n69          return _id;\n70      }\n71  \n72      public static\
          \ org.jboss.com.sun.org.omg.CORBA.OperationDescription[] read(org.omg.CORBA.portable.InputStream\
          \ istream)\n73      {\n74          org.jboss.com.sun.org.omg.CORBA.OperationDescription\
          \ value[] = null;\n75          int _len0 = istream.read_long();\n76    \
          \      value = new org.jboss.com.sun.org.omg.CORBA.OperationDescription[_len0];\n\
          77          for (int _o1 = 0; _o1 < value.length; ++_o1)\n78           \
          \   value[_o1] = org.jboss.com.sun.org.omg.CORBA.OperationDescriptionHelper.read(istream);\n\
          79          return value;\n80      }\n81  \n82      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,"
        lineNumber: 72
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "72      public static org.jboss.com.sun.org.omg.CORBA.OperationDescription[]\
          \ read(org.omg.CORBA.portable.InputStream istream)\n73      {\n74      \
          \    org.jboss.com.sun.org.omg.CORBA.OperationDescription value[] = null;\n\
          75          int _len0 = istream.read_long();\n76          value = new org.jboss.com.sun.org.omg.CORBA.OperationDescription[_len0];\n\
          77          for (int _o1 = 0; _o1 < value.length; ++_o1)\n78           \
          \   value[_o1] = org.jboss.com.sun.org.omg.CORBA.OperationDescriptionHelper.read(istream);\n\
          79          return value;\n80      }\n81  \n82      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n83              org.jboss.com.sun.org.omg.CORBA.OperationDescription[]\
          \ value)\n84      {\n85          ostream.write_long(value.length);\n86 \
          \         for (int _i0 = 0; _i0 < value.length; ++_i0)\n87             \
          \ org.jboss.com.sun.org.omg.CORBA.OperationDescriptionHelper.write(ostream,\
          \ value[_i0]);\n88      }\n89  \n90  }\n"
        lineNumber: 82
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OpDescriptionSeqHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "23   * questions.\n24   */\n25  package org.jboss.com.sun.org.omg.CORBA;\n\
          26  \n27  /**\n28   * org/jboss/com/sun/org/omg/CORBA/OperationDescription.java\
          \ Generated by the IDL-to-Java compiler (portable), version\n29   * \"3.0\"\
          \ from ir.idl Thursday, May 6, 1999 1:51:51 AM PDT\n30   */\n31  \n32  @SuppressWarnings(\"\
          serial\")\n33  public final class OperationDescription implements org.omg.CORBA.portable.IDLEntity\n\
          34  {\n35      public String name = null;\n36  \n37      public String id\
          \ = null;\n38  \n39      public String defined_in = null;\n40  \n41    \
          \  public String version = null;\n42  \n43      public org.omg.CORBA.TypeCode\
          \ result = null;"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescription.java
          kind: Class
          name: OperationDescription
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "33  public final class OperationDescription implements org.omg.CORBA.portable.IDLEntity\n\
          34  {\n35      public String name = null;\n36  \n37      public String id\
          \ = null;\n38  \n39      public String defined_in = null;\n40  \n41    \
          \  public String version = null;\n42  \n43      public org.omg.CORBA.TypeCode\
          \ result = null;\n44  \n45      public org.jboss.com.sun.org.omg.CORBA.OperationMode\
          \ mode = null;\n46  \n47      public String contexts[] = null;\n48  \n49\
          \      public org.jboss.com.sun.org.omg.CORBA.ParameterDescription parameters[]\
          \ = null;\n50  \n51      public org.jboss.com.sun.org.omg.CORBA.ExceptionDescription\
          \ exceptions[] = null;\n52  \n53      public OperationDescription()"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescription.java
          kind: Field
          name: result
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "48  \n49      public org.jboss.com.sun.org.omg.CORBA.ParameterDescription\
          \ parameters[] = null;\n50  \n51      public org.jboss.com.sun.org.omg.CORBA.ExceptionDescription\
          \ exceptions[] = null;\n52  \n53      public OperationDescription()\n54\
          \      {\n55      } // ctor\n56  \n57      public OperationDescription(String\
          \ _name, String _id, String _defined_in, String _version,\n58          \
          \    org.omg.CORBA.TypeCode _result, org.jboss.com.sun.org.omg.CORBA.OperationMode\
          \ _mode, String[] _contexts,\n59              org.jboss.com.sun.org.omg.CORBA.ParameterDescription[]\
          \ _parameters,\n60              org.jboss.com.sun.org.omg.CORBA.ExceptionDescription[]\
          \ _exceptions)\n61      {\n62          name = _name;\n63          id = _id;\n\
          64          defined_in = _defined_in;\n65          version = _version;\n\
          66          result = _result;\n67          mode = _mode;\n68          contexts\
          \ = _contexts;"
        lineNumber: 58
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescription.java
          kind: Constructor
          name: OperationDescription
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 85
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 87
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 88
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 89
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 91
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 92
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 93
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 95
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 98
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 99
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 101
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 103
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 104
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 107
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 109
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 110
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 113
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 114
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 129
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 144
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class OperationDescriptionHelper\n\
          33  {\n34      private static String _id = \"IDL:omg.org/CORBA/OperationDescription:1.0\"\
          ;\n35  \n36      public OperationDescriptionHelper()\n37      {\n38    \
          \  }\n39  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.OperationDescription\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.OperationDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class OperationDescriptionHelper\n33  {\n34  \
          \    private static String _id = \"IDL:omg.org/CORBA/OperationDescription:1.0\"\
          ;\n35  \n36      public OperationDescriptionHelper()\n37      {\n38    \
          \  }\n39  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.OperationDescription\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.OperationDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.OperationDescription that)\n41    \
          \  {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static org.jboss.com.sun.org.omg.CORBA.OperationDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      private static boolean __active = false;\n56  \n\
          57      synchronized public static org.omg.CORBA.TypeCode type()\n58   \
          \   {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static org.jboss.com.sun.org.omg.CORBA.OperationDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      private static boolean __active = false;\n56  \n\
          57      synchronized public static org.omg.CORBA.TypeCode type()\n58   \
          \   {\n59          if (__typeCode == null)\n60          {\n61          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n62              {\n63\
          \                  if (__typeCode == null)"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "47  \n48      public static org.jboss.com.sun.org.omg.CORBA.OperationDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      private static boolean __active = false;\n56  \n\
          57      synchronized public static org.omg.CORBA.TypeCode type()\n58   \
          \   {\n59          if (__typeCode == null)\n60          {\n61          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n62              {\n63\
          \                  if (__typeCode == null)\n64                  {\n65  \
          \                    if (__active)\n66                      {\n67      \
          \                    return org.omg.CORBA.ORB.init().create_recursive_tc(_id);"
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51      }\n52  \n53      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n54  \n55      private static boolean __active = false;\n\
          56  \n57      synchronized public static org.omg.CORBA.TypeCode type()\n\
          58      {\n59          if (__typeCode == null)\n60          {\n61      \
          \        synchronized (org.omg.CORBA.TypeCode.class)\n62              {\n\
          63                  if (__typeCode == null)\n64                  {\n65 \
          \                     if (__active)\n66                      {\n67     \
          \                     return org.omg.CORBA.ORB.init().create_recursive_tc(_id);\n\
          68                      }\n69                      __active = true;\n70\
          \                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[9];\n\
          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;"
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '57      synchronized public static org.omg.CORBA.TypeCode type()

          58      {

          59          if (__typeCode == null)

          60          {

          61              synchronized (org.omg.CORBA.TypeCode.class)

          62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[9];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc('
        lineNumber: 67
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '60          {

          61              synchronized (org.omg.CORBA.TypeCode.class)

          62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[9];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);'
        lineNumber: 70
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '61              synchronized (org.omg.CORBA.TypeCode.class)

          62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[9];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc('
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[9];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);'
        lineNumber: 72
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[9];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);'
        lineNumber: 73
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[9];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc('
        lineNumber: 75
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[9];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);'
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[9];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);'
        lineNumber: 77
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[9];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          88                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          89                      _members0[4] = new org.omg.CORBA.StructMember("result",
          _tcOf_members0, null);'
        lineNumber: 79
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '70                      org.omg.CORBA.StructMember[] _members0
          = new org.omg.CORBA.StructMember[9];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          88                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          89                      _members0[4] = new org.omg.CORBA.StructMember("result",
          _tcOf_members0, null);

          90                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.OperationModeHelper.type();'
        lineNumber: 80
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '71                      org.omg.CORBA.TypeCode _tcOf_members0 =
          null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          88                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          89                      _members0[4] = new org.omg.CORBA.StructMember("result",
          _tcOf_members0, null);

          90                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.OperationModeHelper.type();

          91                      _members0[5] = new org.omg.CORBA.StructMember("mode",
          _tcOf_members0, null);'
        lineNumber: 81
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          88                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          89                      _members0[4] = new org.omg.CORBA.StructMember("result",
          _tcOf_members0, null);

          90                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.OperationModeHelper.type();

          91                      _members0[5] = new org.omg.CORBA.StructMember("mode",
          _tcOf_members0, null);

          92                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          93                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc('
        lineNumber: 83
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          78                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          79                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          82                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          83                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          86                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          87                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          88                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          89                      _members0[4] = new org.omg.CORBA.StructMember("result",
          _tcOf_members0, null);

          90                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.OperationModeHelper.type();

          91                      _members0[5] = new org.omg.CORBA.StructMember("mode",
          _tcOf_members0, null);

          92                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          93                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          94                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);'
        lineNumber: 84
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "23   * questions.\n24   */\n25  package org.jboss.com.sun.org.omg.CORBA;\n\
          26  \n27  /**\n28   * org/jboss/com/sun/org/omg/CORBA/OperationMode.java\
          \ Generated by the IDL-to-Java compiler (portable), version \"3.0\"\n29\
          \   * from ir.idl Thursday, May 6, 1999 1:51:50 AM PDT\n30   */\n31  \n\
          32  @SuppressWarnings(\"serial\")\n33  public class OperationMode implements\
          \ org.omg.CORBA.portable.IDLEntity\n34  {\n35      private int __value;\n\
          36  \n37      private static int __size = 2;\n38  \n39      private static\
          \ org.jboss.com.sun.org.omg.CORBA.OperationMode[] __array = new org.jboss.com.sun.org.omg.CORBA.OperationMode[__size];\n\
          40  \n41      public static final int _OP_NORMAL = 0;\n42  \n43      public\
          \ static final org.jboss.com.sun.org.omg.CORBA.OperationMode OP_NORMAL =\
          \ new org.jboss.com.sun.org.omg.CORBA.OperationMode("
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationMode.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationMode.java
          kind: Class
          name: OperationMode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51      public int value()\n52      {\n53          return __value;\n\
          54      }\n55  \n56      public static org.jboss.com.sun.org.omg.CORBA.OperationMode\
          \ from_int(int value)\n57      {\n58          if (value >= 0 && value <\
          \ __size)\n59              return __array[value];\n60          else\n61\
          \              throw new org.omg.CORBA.BAD_PARAM();\n62      }\n63  \n64\
          \      protected OperationMode(int value)\n65      {\n66          __value\
          \ = value;\n67          __array[__value] = this;\n68      }\n69  } // class\
          \ OperationMode\n"
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationMode.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationMode.java
          kind: Method
          name: from_int
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class OperationModeHelper\n33 \
          \ {\n34      private static String _id = \"IDL:omg.org/CORBA/OperationMode:1.0\"\
          ;\n35  \n36      public OperationModeHelper()\n37      {\n38      }\n39\
          \  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.OperationMode\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.OperationMode\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationModeHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class OperationModeHelper\n33  {\n34      private\
          \ static String _id = \"IDL:omg.org/CORBA/OperationMode:1.0\";\n35  \n36\
          \      public OperationModeHelper()\n37      {\n38      }\n39  \n40    \
          \  public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.OperationMode\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.OperationMode\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationModeHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.OperationMode that)\n41      {\n42\
          \          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static org.jboss.com.sun.org.omg.CORBA.OperationMode extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationModeHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static org.jboss.com.sun.org.omg.CORBA.OperationMode\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_enum_tc(\n\
          60                      org.jboss.com.sun.org.omg.CORBA.OperationModeHelper.id(),\
          \ \"OperationMode\",\n61                      new String[]{\"OP_NORMAL\"\
          , \"OP_ONEWAY\"});\n62          }\n63          return __typeCode;"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationModeHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.OperationMode\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_enum_tc(\n\
          60                      org.jboss.com.sun.org.omg.CORBA.OperationModeHelper.id(),\
          \ \"OperationMode\",\n61                      new String[]{\"OP_NORMAL\"\
          , \"OP_ONEWAY\"});\n62          }\n63          return __typeCode;\n64  \
          \    }\n65  "
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationModeHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_enum_tc(\n\
          60                      org.jboss.com.sun.org.omg.CORBA.OperationModeHelper.id(),\
          \ \"OperationMode\",\n61                      new String[]{\"OP_NORMAL\"\
          , \"OP_ONEWAY\"});\n62          }\n63          return __typeCode;\n64  \
          \    }\n65  \n66      public static String id()\n67      {\n68         \
          \ return _id;\n69      }"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationModeHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "61                      new String[]{\"OP_NORMAL\", \"OP_ONEWAY\"\
          });\n62          }\n63          return __typeCode;\n64      }\n65  \n66\
          \      public static String id()\n67      {\n68          return _id;\n69\
          \      }\n70  \n71      public static org.jboss.com.sun.org.omg.CORBA.OperationMode\
          \ read(org.omg.CORBA.portable.InputStream istream)\n72      {\n73      \
          \    return org.jboss.com.sun.org.omg.CORBA.OperationMode.from_int(istream.read_long());\n\
          74      }\n75  \n76      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n77              org.jboss.com.sun.org.omg.CORBA.OperationMode\
          \ value)\n78      {\n79          ostream.write_long(value.value());\n80\
          \      }\n81  "
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationModeHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "66      public static String id()\n67      {\n68          return\
          \ _id;\n69      }\n70  \n71      public static org.jboss.com.sun.org.omg.CORBA.OperationMode\
          \ read(org.omg.CORBA.portable.InputStream istream)\n72      {\n73      \
          \    return org.jboss.com.sun.org.omg.CORBA.OperationMode.from_int(istream.read_long());\n\
          74      }\n75  \n76      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n77              org.jboss.com.sun.org.omg.CORBA.OperationMode\
          \ value)\n78      {\n79          ostream.write_long(value.value());\n80\
          \      }\n81  \n82  }\n"
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/OperationModeHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class ParDescriptionSeqHelper\n\
          33  {\n34      private static String _id = \"IDL:omg.org/CORBA/ParDescriptionSeq:1.0\"\
          ;\n35  \n36      public ParDescriptionSeqHelper()\n37      {\n38      }\n\
          39  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.ParameterDescription[]\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ParameterDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class ParDescriptionSeqHelper\n33  {\n34     \
          \ private static String _id = \"IDL:omg.org/CORBA/ParDescriptionSeq:1.0\"\
          ;\n35  \n36      public ParDescriptionSeqHelper()\n37      {\n38      }\n\
          39  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.ParameterDescription[]\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ParameterDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.ParameterDescription[] that)\n41  \
          \    {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static org.jboss.com.sun.org.omg.CORBA.ParameterDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ParameterDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.jboss.com.sun.org.omg.CORBA.ParameterDescriptionHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.ParDescriptionSeqHelper.id(),\
          \ \"ParDescriptionSeq\", __typeCode);\n63          }"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ParameterDescription[]\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.jboss.com.sun.org.omg.CORBA.ParameterDescriptionHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.ParDescriptionSeqHelper.id(),\
          \ \"ParDescriptionSeq\", __typeCode);\n63          }\n64          return\
          \ __typeCode;\n65      }"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "50          return read(a.create_input_stream());\n51      }\n\
          52  \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.jboss.com.sun.org.omg.CORBA.ParameterDescriptionHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.ParDescriptionSeqHelper.id(),\
          \ \"ParDescriptionSeq\", __typeCode);\n63          }\n64          return\
          \ __typeCode;\n65      }\n66  \n67      public static String id()\n68  \
          \    {\n69          return _id;\n70      }"
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51      }\n52  \n53      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.jboss.com.sun.org.omg.CORBA.ParameterDescriptionHelper.type();\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.ParDescriptionSeqHelper.id(),\
          \ \"ParDescriptionSeq\", __typeCode);\n63          }\n64          return\
          \ __typeCode;\n65      }\n66  \n67      public static String id()\n68  \
          \    {\n69          return _id;\n70      }\n71  "
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "62                      org.jboss.com.sun.org.omg.CORBA.ParDescriptionSeqHelper.id(),\
          \ \"ParDescriptionSeq\", __typeCode);\n63          }\n64          return\
          \ __typeCode;\n65      }\n66  \n67      public static String id()\n68  \
          \    {\n69          return _id;\n70      }\n71  \n72      public static\
          \ org.jboss.com.sun.org.omg.CORBA.ParameterDescription[] read(org.omg.CORBA.portable.InputStream\
          \ istream)\n73      {\n74          org.jboss.com.sun.org.omg.CORBA.ParameterDescription\
          \ value[] = null;\n75          int _len0 = istream.read_long();\n76    \
          \      value = new org.jboss.com.sun.org.omg.CORBA.ParameterDescription[_len0];\n\
          77          for (int _o1 = 0; _o1 < value.length; ++_o1)\n78           \
          \   value[_o1] = org.jboss.com.sun.org.omg.CORBA.ParameterDescriptionHelper.read(istream);\n\
          79          return value;\n80      }\n81  \n82      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,"
        lineNumber: 72
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "72      public static org.jboss.com.sun.org.omg.CORBA.ParameterDescription[]\
          \ read(org.omg.CORBA.portable.InputStream istream)\n73      {\n74      \
          \    org.jboss.com.sun.org.omg.CORBA.ParameterDescription value[] = null;\n\
          75          int _len0 = istream.read_long();\n76          value = new org.jboss.com.sun.org.omg.CORBA.ParameterDescription[_len0];\n\
          77          for (int _o1 = 0; _o1 < value.length; ++_o1)\n78           \
          \   value[_o1] = org.jboss.com.sun.org.omg.CORBA.ParameterDescriptionHelper.read(istream);\n\
          79          return value;\n80      }\n81  \n82      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n83              org.jboss.com.sun.org.omg.CORBA.ParameterDescription[]\
          \ value)\n84      {\n85          ostream.write_long(value.length);\n86 \
          \         for (int _i0 = 0; _i0 < value.length; ++_i0)\n87             \
          \ org.jboss.com.sun.org.omg.CORBA.ParameterDescriptionHelper.write(ostream,\
          \ value[_i0]);\n88      }\n89  \n90  }\n"
        lineNumber: 82
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParDescriptionSeqHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "25  package org.jboss.com.sun.org.omg.CORBA;\n26  \n27  /**\n28\
          \   * org/jboss/com/sun/org/omg/CORBA/ParameterDescription.java Generated\
          \ by the IDL-to-Java compiler (portable), version\n29   * \"3.0\" from ir.idl\
          \ Thursday, May 6, 1999 1:51:50 AM PDT\n30   */\n31  \n32  // This file\
          \ has been _CHANGED_\n33  \n34  @SuppressWarnings(\"serial\")\n35  public\
          \ final class ParameterDescription implements org.omg.CORBA.portable.IDLEntity\n\
          36  {\n37      public String name = null;\n38  \n39      public org.omg.CORBA.TypeCode\
          \ type = null;\n40  \n41      // _CHANGED_\n42      // public org.jboss.com.sun.org.omg.CORBA.IDLType\
          \ type_def = null;\n43      public org.omg.CORBA.IDLType type_def = null;\n\
          44  \n45      public org.jboss.com.sun.org.omg.CORBA.ParameterMode mode\
          \ = null;"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescription.java
          kind: Class
          name: ParameterDescription
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "29   * \"3.0\" from ir.idl Thursday, May 6, 1999 1:51:50 AM PDT\n\
          30   */\n31  \n32  // This file has been _CHANGED_\n33  \n34  @SuppressWarnings(\"\
          serial\")\n35  public final class ParameterDescription implements org.omg.CORBA.portable.IDLEntity\n\
          36  {\n37      public String name = null;\n38  \n39      public org.omg.CORBA.TypeCode\
          \ type = null;\n40  \n41      // _CHANGED_\n42      // public org.jboss.com.sun.org.omg.CORBA.IDLType\
          \ type_def = null;\n43      public org.omg.CORBA.IDLType type_def = null;\n\
          44  \n45      public org.jboss.com.sun.org.omg.CORBA.ParameterMode mode\
          \ = null;\n46  \n47      public ParameterDescription()\n48      {\n49  \
          \    } // ctor"
        lineNumber: 39
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescription.java
          kind: Field
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "33  \n34  @SuppressWarnings(\"serial\")\n35  public final class\
          \ ParameterDescription implements org.omg.CORBA.portable.IDLEntity\n36 \
          \ {\n37      public String name = null;\n38  \n39      public org.omg.CORBA.TypeCode\
          \ type = null;\n40  \n41      // _CHANGED_\n42      // public org.jboss.com.sun.org.omg.CORBA.IDLType\
          \ type_def = null;\n43      public org.omg.CORBA.IDLType type_def = null;\n\
          44  \n45      public org.jboss.com.sun.org.omg.CORBA.ParameterMode mode\
          \ = null;\n46  \n47      public ParameterDescription()\n48      {\n49  \
          \    } // ctor\n50  \n51      // _CHANGED_\n52      // public ParameterDescription\
          \ (String _name, org.omg.CORBA.TypeCode _type, org.jboss.com.sun.org.omg.CORBA.IDLType\n\
          53      // _type_def, org.jboss.com.sun.org.omg.CORBA.ParameterMode _mode)"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescription.java
          kind: Field
          name: type_def
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "44  \n45      public org.jboss.com.sun.org.omg.CORBA.ParameterMode\
          \ mode = null;\n46  \n47      public ParameterDescription()\n48      {\n\
          49      } // ctor\n50  \n51      // _CHANGED_\n52      // public ParameterDescription\
          \ (String _name, org.omg.CORBA.TypeCode _type, org.jboss.com.sun.org.omg.CORBA.IDLType\n\
          53      // _type_def, org.jboss.com.sun.org.omg.CORBA.ParameterMode _mode)\n\
          54      public ParameterDescription(String _name, org.omg.CORBA.TypeCode\
          \ _type, org.omg.CORBA.IDLType _type_def,\n55              org.jboss.com.sun.org.omg.CORBA.ParameterMode\
          \ _mode)\n56      {\n57          name = _name;\n58          type = _type;\n\
          59          type_def = _type_def;\n60          mode = _mode;\n61      }\
          \ // ctor\n62  \n63  } // class ParameterDescription\n"
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescription.java
          kind: Constructor
          name: ParameterDescription
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 107
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: " 87              }\n 88          }\n 89          return __typeCode;\n\
          \ 90      }\n 91  \n 92      public static String id()\n 93      {\n 94\
          \          return _id;\n 95      }\n 96  \n 97      public static org.jboss.com.sun.org.omg.CORBA.ParameterDescription\
          \ read(org.omg.CORBA.portable.InputStream istream)\n 98      {\n 99    \
          \      org.jboss.com.sun.org.omg.CORBA.ParameterDescription value = new\
          \ org.jboss.com.sun.org.omg.CORBA.ParameterDescription();\n100         \
          \ value.name = istream.read_string();\n101          value.type = istream.read_TypeCode();\n\
          102          value.type_def = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.read(istream);\n\
          103          value.mode = org.jboss.com.sun.org.omg.CORBA.ParameterModeHelper.read(istream);\n\
          104          return value;\n105      }\n106  \n107      public static void\
          \ write(org.omg.CORBA.portable.OutputStream ostream,"
        lineNumber: 97
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class ParameterDescriptionHelper\n\
          33  {\n34      private static String _id = \"IDL:omg.org/CORBA/ParameterDescription:1.0\"\
          ;\n35  \n36      public ParameterDescriptionHelper()\n37      {\n38    \
          \  }\n39  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.ParameterDescription\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ParameterDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class ParameterDescriptionHelper\n33  {\n34  \
          \    private static String _id = \"IDL:omg.org/CORBA/ParameterDescription:1.0\"\
          ;\n35  \n36      public ParameterDescriptionHelper()\n37      {\n38    \
          \  }\n39  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.ParameterDescription\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ParameterDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.ParameterDescription that)\n41    \
          \  {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static org.jboss.com.sun.org.omg.CORBA.ParameterDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      private static boolean __active = false;\n56  \n\
          57      synchronized public static org.omg.CORBA.TypeCode type()\n58   \
          \   {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ParameterDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      private static boolean __active = false;\n56  \n\
          57      synchronized public static org.omg.CORBA.TypeCode type()\n58   \
          \   {\n59          if (__typeCode == null)\n60          {\n61          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n62              {\n63\
          \                  if (__typeCode == null)"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ParameterDescription\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      private static boolean __active = false;\n56  \n\
          57      synchronized public static org.omg.CORBA.TypeCode type()\n58   \
          \   {\n59          if (__typeCode == null)\n60          {\n61          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n62              {\n63\
          \                  if (__typeCode == null)\n64                  {\n65  \
          \                    if (__active)\n66                      {\n67      \
          \                    return org.omg.CORBA.ORB.init().create_recursive_tc(_id);"
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51      }\n52  \n53      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n54  \n55      private static boolean __active = false;\n\
          56  \n57      synchronized public static org.omg.CORBA.TypeCode type()\n\
          58      {\n59          if (__typeCode == null)\n60          {\n61      \
          \        synchronized (org.omg.CORBA.TypeCode.class)\n62              {\n\
          63                  if (__typeCode == null)\n64                  {\n65 \
          \                     if (__active)\n66                      {\n67     \
          \                     return org.omg.CORBA.ORB.init().create_recursive_tc(_id);\n\
          68                      }\n69                      __active = true;\n70\
          \                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[4];\n\
          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;"
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '57      synchronized public static org.omg.CORBA.TypeCode type()

          58      {

          59          if (__typeCode == null)

          60          {

          61              synchronized (org.omg.CORBA.TypeCode.class)

          62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[4];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          77                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);'
        lineNumber: 67
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '60          {

          61              synchronized (org.omg.CORBA.TypeCode.class)

          62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[4];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          77                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          78                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          79                      _members0[2] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.ParameterModeHelper.type();'
        lineNumber: 70
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '61              synchronized (org.omg.CORBA.TypeCode.class)

          62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[4];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          77                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          78                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          79                      _members0[2] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.ParameterModeHelper.type();

          81                      _members0[3] = new org.omg.CORBA.StructMember("mode",
          _tcOf_members0, null);'
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '62              {

          63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[4];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          77                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          78                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          79                      _members0[2] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.ParameterModeHelper.type();

          81                      _members0[3] = new org.omg.CORBA.StructMember("mode",
          _tcOf_members0, null);

          82                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc('
        lineNumber: 72
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '63                  if (__typeCode == null)

          64                  {

          65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[4];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          77                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          78                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          79                      _members0[2] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.ParameterModeHelper.type();

          81                      _members0[3] = new org.omg.CORBA.StructMember("mode",
          _tcOf_members0, null);

          82                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          83                              org.jboss.com.sun.org.omg.CORBA.ParameterDescriptionHelper.id(),
          "ParameterDescription",'
        lineNumber: 73
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '65                      if (__active)

          66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[4];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          77                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          78                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          79                      _members0[2] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.ParameterModeHelper.type();

          81                      _members0[3] = new org.omg.CORBA.StructMember("mode",
          _tcOf_members0, null);

          82                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          83                              org.jboss.com.sun.org.omg.CORBA.ParameterDescriptionHelper.id(),
          "ParameterDescription",

          84                              _members0);

          85                      __active = false;'
        lineNumber: 75
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '66                      {

          67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[4];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          77                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          78                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          79                      _members0[2] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.ParameterModeHelper.type();

          81                      _members0[3] = new org.omg.CORBA.StructMember("mode",
          _tcOf_members0, null);

          82                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          83                              org.jboss.com.sun.org.omg.CORBA.ParameterDescriptionHelper.id(),
          "ParameterDescription",

          84                              _members0);

          85                      __active = false;

          86                  }'
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '67                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          68                      }

          69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[4];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          77                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          78                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          79                      _members0[2] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.ParameterModeHelper.type();

          81                      _members0[3] = new org.omg.CORBA.StructMember("mode",
          _tcOf_members0, null);

          82                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          83                              org.jboss.com.sun.org.omg.CORBA.ParameterDescriptionHelper.id(),
          "ParameterDescription",

          84                              _members0);

          85                      __active = false;

          86                  }

          87              }'
        lineNumber: 77
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '69                      __active = true;

          70                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[4];

          71                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          77                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          78                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          79                      _members0[2] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.ParameterModeHelper.type();

          81                      _members0[3] = new org.omg.CORBA.StructMember("mode",
          _tcOf_members0, null);

          82                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          83                              org.jboss.com.sun.org.omg.CORBA.ParameterDescriptionHelper.id(),
          "ParameterDescription",

          84                              _members0);

          85                      __active = false;

          86                  }

          87              }

          88          }

          89          return __typeCode;'
        lineNumber: 79
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '71                      org.omg.CORBA.TypeCode _tcOf_members0 =
          null;

          72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          75                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          76                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          77                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          78                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          79                      _members0[2] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);

          80                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.ParameterModeHelper.type();

          81                      _members0[3] = new org.omg.CORBA.StructMember("mode",
          _tcOf_members0, null);

          82                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          83                              org.jboss.com.sun.org.omg.CORBA.ParameterDescriptionHelper.id(),
          "ParameterDescription",

          84                              _members0);

          85                      __active = false;

          86                  }

          87              }

          88          }

          89          return __typeCode;

          90      }

          91  '
        lineNumber: 81
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "72                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          74                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", _tcOf_members0);\n75                      _members0[0]\
          \ = new org.omg.CORBA.StructMember(\"name\", _tcOf_members0, null);\n76\
          \                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);\n\
          77                      _members0[1] = new org.omg.CORBA.StructMember(\"\
          type\", _tcOf_members0, null);\n78                      _tcOf_members0 =\
          \ org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();\n79            \
          \          _members0[2] = new org.omg.CORBA.StructMember(\"type_def\", _tcOf_members0,\
          \ null);\n80                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.ParameterModeHelper.type();\n\
          81                      _members0[3] = new org.omg.CORBA.StructMember(\"\
          mode\", _tcOf_members0, null);\n82                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(\n\
          83                              org.jboss.com.sun.org.omg.CORBA.ParameterDescriptionHelper.id(),\
          \ \"ParameterDescription\",\n84                              _members0);\n\
          85                      __active = false;\n86                  }\n87   \
          \           }\n88          }\n89          return __typeCode;\n90      }\n\
          91  \n92      public static String id()"
        lineNumber: 82
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "23   * questions.\n24   */\n25  package org.jboss.com.sun.org.omg.CORBA;\n\
          26  \n27  /**\n28   * org/jboss/com/sun/org/omg/CORBA/ParameterMode.java\
          \ Generated by the IDL-to-Java compiler (portable), version \"3.0\"\n29\
          \   * from ir.idl Thursday, May 6, 1999 1:51:50 AM PDT\n30   */\n31  \n\
          32  @SuppressWarnings(\"serial\")\n33  public class ParameterMode implements\
          \ org.omg.CORBA.portable.IDLEntity\n34  {\n35      private int __value;\n\
          36  \n37      private static int __size = 3;\n38  \n39      private static\
          \ org.jboss.com.sun.org.omg.CORBA.ParameterMode[] __array = new org.jboss.com.sun.org.omg.CORBA.ParameterMode[__size];\n\
          40  \n41      public static final int _PARAM_IN = 0;\n42  \n43      public\
          \ static final org.jboss.com.sun.org.omg.CORBA.ParameterMode PARAM_IN =\
          \ new org.jboss.com.sun.org.omg.CORBA.ParameterMode("
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterMode.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterMode.java
          kind: Class
          name: ParameterMode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "56      public int value()\n57      {\n58          return __value;\n\
          59      }\n60  \n61      public static org.jboss.com.sun.org.omg.CORBA.ParameterMode\
          \ from_int(int value)\n62      {\n63          if (value >= 0 && value <\
          \ __size)\n64              return __array[value];\n65          else\n66\
          \              throw new org.omg.CORBA.BAD_PARAM();\n67      }\n68  \n69\
          \      protected ParameterMode(int value)\n70      {\n71          __value\
          \ = value;\n72          __array[__value] = this;\n73      }\n74  } // class\
          \ ParameterMode\n"
        lineNumber: 66
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterMode.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterMode.java
          kind: Method
          name: from_int
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class ParameterModeHelper\n33 \
          \ {\n34      private static String _id = \"IDL:omg.org/CORBA/ParameterMode:1.0\"\
          ;\n35  \n36      public ParameterModeHelper()\n37      {\n38      }\n39\
          \  \n40      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.ParameterMode\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ParameterMode\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterModeHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class ParameterModeHelper\n33  {\n34      private\
          \ static String _id = \"IDL:omg.org/CORBA/ParameterMode:1.0\";\n35  \n36\
          \      public ParameterModeHelper()\n37      {\n38      }\n39  \n40    \
          \  public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.CORBA.ParameterMode\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ParameterMode\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterModeHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.ParameterMode that)\n41      {\n42\
          \          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static org.jboss.com.sun.org.omg.CORBA.ParameterMode extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterModeHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ParameterMode\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_enum_tc(\n\
          60                      org.jboss.com.sun.org.omg.CORBA.ParameterModeHelper.id(),\
          \ \"ParameterMode\",\n61                      new String[]{\"PARAM_IN\"\
          , \"PARAM_OUT\", \"PARAM_INOUT\"});\n62          }\n63          return __typeCode;"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterModeHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static org.jboss.com.sun.org.omg.CORBA.ParameterMode\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_enum_tc(\n\
          60                      org.jboss.com.sun.org.omg.CORBA.ParameterModeHelper.id(),\
          \ \"ParameterMode\",\n61                      new String[]{\"PARAM_IN\"\
          , \"PARAM_OUT\", \"PARAM_INOUT\"});\n62          }\n63          return __typeCode;\n\
          64      }\n65  "
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterModeHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_enum_tc(\n\
          60                      org.jboss.com.sun.org.omg.CORBA.ParameterModeHelper.id(),\
          \ \"ParameterMode\",\n61                      new String[]{\"PARAM_IN\"\
          , \"PARAM_OUT\", \"PARAM_INOUT\"});\n62          }\n63          return __typeCode;\n\
          64      }\n65  \n66      public static String id()\n67      {\n68      \
          \    return _id;\n69      }"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterModeHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "61                      new String[]{\"PARAM_IN\", \"PARAM_OUT\"\
          , \"PARAM_INOUT\"});\n62          }\n63          return __typeCode;\n64\
          \      }\n65  \n66      public static String id()\n67      {\n68       \
          \   return _id;\n69      }\n70  \n71      public static org.jboss.com.sun.org.omg.CORBA.ParameterMode\
          \ read(org.omg.CORBA.portable.InputStream istream)\n72      {\n73      \
          \    return org.jboss.com.sun.org.omg.CORBA.ParameterMode.from_int(istream.read_long());\n\
          74      }\n75  \n76      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n77              org.jboss.com.sun.org.omg.CORBA.ParameterMode\
          \ value)\n78      {\n79          ostream.write_long(value.value());\n80\
          \      }\n81  "
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterModeHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "66      public static String id()\n67      {\n68          return\
          \ _id;\n69      }\n70  \n71      public static org.jboss.com.sun.org.omg.CORBA.ParameterMode\
          \ read(org.omg.CORBA.portable.InputStream istream)\n72      {\n73      \
          \    return org.jboss.com.sun.org.omg.CORBA.ParameterMode.from_int(istream.read_long());\n\
          74      }\n75  \n76      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n77              org.jboss.com.sun.org.omg.CORBA.ParameterMode\
          \ value)\n78      {\n79          ostream.write_long(value.value());\n80\
          \      }\n81  \n82  }\n"
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterModeHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ParameterModeHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "17   * You should have received a copy of the GNU General Public\
          \ License version\n18   * 2 along with this work; if not, write to the Free\
          \ Software Foundation,\n19   * Inc., 51 Franklin St, Fifth Floor, Boston,\
          \ MA 02110-1301 USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway,\
          \ Redwood Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need\
          \ additional information or have any\n23   * questions.\n24   */\n25  package\
          \ org.jboss.com.sun.org.omg.CORBA;\n26  \n27  public interface Repository\
          \ extends org.omg.CORBA.IRObject, org.omg.CORBA.portable.IDLEntity\n28 \
          \ {\n29  } // interface Repository\n"
        lineNumber: 27
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/Repository.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/Repository.java
          kind: Interface
          name: Repository
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "25  package org.jboss.com.sun.org.omg.CORBA;\n26  \n27  public\
          \ final class RepositoryHelper\n28  {\n29      private static String _id\
          \ = \"IDL:org.jboss.com.sun.omg.org/CORBA/Repository:3.0\";\n30  \n31  \
          \    public RepositoryHelper()\n32      {\n33      }\n34  \n35      public\
          \ static void insert(org.omg.CORBA.Any a, Repository that)\n36      {\n\
          37          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          38          a.type(type());\n39          write(out, that);\n40         \
          \ a.read_value(out.create_input_stream(), type());\n41      }\n42  \n43\
          \      public static Repository extract(org.omg.CORBA.Any a)\n44      {\n\
          45          return read(a.create_input_stream());"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "27  public final class RepositoryHelper\n28  {\n29      private\
          \ static String _id = \"IDL:org.jboss.com.sun.omg.org/CORBA/Repository:3.0\"\
          ;\n30  \n31      public RepositoryHelper()\n32      {\n33      }\n34  \n\
          35      public static void insert(org.omg.CORBA.Any a, Repository that)\n\
          36      {\n37          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          38          a.type(type());\n39          write(out, that);\n40         \
          \ a.read_value(out.create_input_stream(), type());\n41      }\n42  \n43\
          \      public static Repository extract(org.omg.CORBA.Any a)\n44      {\n\
          45          return read(a.create_input_stream());\n46      }\n47  "
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "33      }\n34  \n35      public static void insert(org.omg.CORBA.Any\
          \ a, Repository that)\n36      {\n37          org.omg.CORBA.portable.OutputStream\
          \ out = a.create_output_stream();\n38          a.type(type());\n39     \
          \     write(out, that);\n40          a.read_value(out.create_input_stream(),\
          \ type());\n41      }\n42  \n43      public static Repository extract(org.omg.CORBA.Any\
          \ a)\n44      {\n45          return read(a.create_input_stream());\n46 \
          \     }\n47  \n48      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n49  \n50      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n51      {\n52          if (__typeCode == null)\n53          {"
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38          a.type(type());\n39          write(out, that);\n40\
          \          a.read_value(out.create_input_stream(), type());\n41      }\n\
          42  \n43      public static Repository extract(org.omg.CORBA.Any a)\n44\
          \      {\n45          return read(a.create_input_stream());\n46      }\n\
          47  \n48      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          49  \n50      synchronized public static org.omg.CORBA.TypeCode type()\n\
          51      {\n52          if (__typeCode == null)\n53          {\n54      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n55\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          56                      org.jboss.com.sun.org.omg.CORBA.RepositoryHelper.id(),\
          \ \"Repository\", __typeCode);\n57          }\n58          return __typeCode;"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "40          a.read_value(out.create_input_stream(), type());\n\
          41      }\n42  \n43      public static Repository extract(org.omg.CORBA.Any\
          \ a)\n44      {\n45          return read(a.create_input_stream());\n46 \
          \     }\n47  \n48      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n49  \n50      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n51      {\n52          if (__typeCode == null)\n53          {\n\
          54              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          55              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          56                      org.jboss.com.sun.org.omg.CORBA.RepositoryHelper.id(),\
          \ \"Repository\", __typeCode);\n57          }\n58          return __typeCode;\n\
          59      }\n60  "
        lineNumber: 50
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "44      {\n45          return read(a.create_input_stream());\n\
          46      }\n47  \n48      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n49  \n50      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n51      {\n52          if (__typeCode == null)\n53          {\n\
          54              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          55              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          56                      org.jboss.com.sun.org.omg.CORBA.RepositoryHelper.id(),\
          \ \"Repository\", __typeCode);\n57          }\n58          return __typeCode;\n\
          59      }\n60  \n61      public static String id()\n62      {\n63      \
          \    return _id;\n64      }"
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "45          return read(a.create_input_stream());\n46      }\n\
          47  \n48      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          49  \n50      synchronized public static org.omg.CORBA.TypeCode type()\n\
          51      {\n52          if (__typeCode == null)\n53          {\n54      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n55\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          56                      org.jboss.com.sun.org.omg.CORBA.RepositoryHelper.id(),\
          \ \"Repository\", __typeCode);\n57          }\n58          return __typeCode;\n\
          59      }\n60  \n61      public static String id()\n62      {\n63      \
          \    return _id;\n64      }\n65  "
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "56                      org.jboss.com.sun.org.omg.CORBA.RepositoryHelper.id(),\
          \ \"Repository\", __typeCode);\n57          }\n58          return __typeCode;\n\
          59      }\n60  \n61      public static String id()\n62      {\n63      \
          \    return _id;\n64      }\n65  \n66      public static Repository read(org.omg.CORBA.portable.InputStream\
          \ istream)\n67      {\n68          return null;\n69      }\n70  \n71   \
          \   public static void write(org.omg.CORBA.portable.OutputStream ostream,\
          \ Repository value)\n72      {\n73          ostream.write_string(null);\n\
          74      }\n75  \n76  }"
        lineNumber: 66
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "61      public static String id()\n62      {\n63          return\
          \ _id;\n64      }\n65  \n66      public static Repository read(org.omg.CORBA.portable.InputStream\
          \ istream)\n67      {\n68          return null;\n69      }\n70  \n71   \
          \   public static void write(org.omg.CORBA.portable.OutputStream ostream,\
          \ Repository value)\n72      {\n73          ostream.write_string(null);\n\
          74      }\n75  \n76  }\n"
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class RepositoryIdHelper\n33  {\n\
          34      private static String _id = \"IDL:omg.org/CORBA/RepositoryId:1.0\"\
          ;\n35  \n36      public RepositoryIdHelper()\n37      {\n38      }\n39 \
          \ \n40      public static void insert(org.omg.CORBA.Any a, String that)\n\
          41      {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static String extract(org.omg.CORBA.Any a)\n49      {\n50\
          \          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class RepositoryIdHelper\n33  {\n34      private\
          \ static String _id = \"IDL:omg.org/CORBA/RepositoryId:1.0\";\n35  \n36\
          \      public RepositoryIdHelper()\n37      {\n38      }\n39  \n40     \
          \ public static void insert(org.omg.CORBA.Any a, String that)\n41      {\n\
          42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static String extract(org.omg.CORBA.Any a)\n49      {\n50\
          \          return read(a.create_input_stream());\n51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, String that)\n41      {\n42          org.omg.CORBA.portable.OutputStream\
          \ out = a.create_output_stream();\n43          a.type(type());\n44     \
          \     write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static String extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static String extract(org.omg.CORBA.Any a)\n49    \
          \  {\n50          return read(a.create_input_stream());\n51      }\n52 \
          \ \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n54\
          \  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),\
          \ \"RepositoryId\", __typeCode);\n62          }\n63          return __typeCode;"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static String extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),\
          \ \"RepositoryId\", __typeCode);\n62          }\n63          return __typeCode;\n\
          64      }\n65  "
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),\
          \ \"RepositoryId\", __typeCode);\n62          }\n63          return __typeCode;\n\
          64      }\n65  \n66      public static String id()\n67      {\n68      \
          \    return _id;\n69      }"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "50          return read(a.create_input_stream());\n51      }\n\
          52  \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),\
          \ \"RepositoryId\", __typeCode);\n62          }\n63          return __typeCode;\n\
          64      }\n65  \n66      public static String id()\n67      {\n68      \
          \    return _id;\n69      }\n70  "
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "61                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),\
          \ \"RepositoryId\", __typeCode);\n62          }\n63          return __typeCode;\n\
          64      }\n65  \n66      public static String id()\n67      {\n68      \
          \    return _id;\n69      }\n70  \n71      public static String read(org.omg.CORBA.portable.InputStream\
          \ istream)\n72      {\n73          String value = null;\n74          value\
          \ = istream.read_string();\n75          return value;\n76      }\n77  \n\
          78      public static void write(org.omg.CORBA.portable.OutputStream ostream,\
          \ String value)\n79      {\n80          ostream.write_string(value);\n81\
          \      }"
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "68          return _id;\n69      }\n70  \n71      public static\
          \ String read(org.omg.CORBA.portable.InputStream istream)\n72      {\n73\
          \          String value = null;\n74          value = istream.read_string();\n\
          75          return value;\n76      }\n77  \n78      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, String value)\n79      {\n80          ostream.write_string(value);\n\
          81      }\n82  \n83  }\n"
        lineNumber: 78
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class RepositoryIdSeqHelper\n33\
          \  {\n34      private static String _id = \"IDL:omg.org/CORBA/RepositoryIdSeq:1.0\"\
          ;\n35  \n36      public RepositoryIdSeqHelper()\n37      {\n38      }\n\
          39  \n40      public static void insert(org.omg.CORBA.Any a, String[] that)\n\
          41      {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static String[] extract(org.omg.CORBA.Any a)\n49      {\n\
          50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class RepositoryIdSeqHelper\n33  {\n34      private\
          \ static String _id = \"IDL:omg.org/CORBA/RepositoryIdSeq:1.0\";\n35  \n\
          36      public RepositoryIdSeqHelper()\n37      {\n38      }\n39  \n40 \
          \     public static void insert(org.omg.CORBA.Any a, String[] that)\n41\
          \      {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static String[] extract(org.omg.CORBA.Any a)\n49      {\n\
          50          return read(a.create_input_stream());\n51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, String[] that)\n41      {\n42          org.omg.CORBA.portable.OutputStream\
          \ out = a.create_output_stream();\n43          a.type(type());\n44     \
          \     write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static String[] extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static String[] extract(org.omg.CORBA.Any a)\n49  \
          \    {\n50          return read(a.create_input_stream());\n51      }\n52\
          \  \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),\
          \ \"RepositoryId\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n63              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc("
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static String[] extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),\
          \ \"RepositoryId\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n63              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          64                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdSeqHelper.id(),\
          \ \"RepositoryIdSeq\", __typeCode);\n65          }"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),\
          \ \"RepositoryId\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n63              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          64                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdSeqHelper.id(),\
          \ \"RepositoryIdSeq\", __typeCode);\n65          }\n66          return __typeCode;\n\
          67      }\n68  \n69      public static String id()"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "50          return read(a.create_input_stream());\n51      }\n\
          52  \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),\
          \ \"RepositoryId\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n63              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          64                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdSeqHelper.id(),\
          \ \"RepositoryIdSeq\", __typeCode);\n65          }\n66          return __typeCode;\n\
          67      }\n68  \n69      public static String id()\n70      {"
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),\
          \ \"RepositoryId\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n63              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          64                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdSeqHelper.id(),\
          \ \"RepositoryIdSeq\", __typeCode);\n65          }\n66          return __typeCode;\n\
          67      }\n68  \n69      public static String id()\n70      {\n71      \
          \    return _id;\n72      }"
        lineNumber: 62
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),\
          \ \"RepositoryId\", __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n63              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          64                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdSeqHelper.id(),\
          \ \"RepositoryIdSeq\", __typeCode);\n65          }\n66          return __typeCode;\n\
          67      }\n68  \n69      public static String id()\n70      {\n71      \
          \    return _id;\n72      }\n73  "
        lineNumber: 63
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "64                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdSeqHelper.id(),\
          \ \"RepositoryIdSeq\", __typeCode);\n65          }\n66          return __typeCode;\n\
          67      }\n68  \n69      public static String id()\n70      {\n71      \
          \    return _id;\n72      }\n73  \n74      public static String[] read(org.omg.CORBA.portable.InputStream\
          \ istream)\n75      {\n76          String value[] = null;\n77          int\
          \ _len0 = istream.read_long();\n78          value = new String[_len0];\n\
          79          for (int _o1 = 0; _o1 < value.length; ++_o1)\n80           \
          \   value[_o1] = org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.read(istream);\n\
          81          return value;\n82      }\n83  \n84      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, String[] value)"
        lineNumber: 74
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "74      public static String[] read(org.omg.CORBA.portable.InputStream\
          \ istream)\n75      {\n76          String value[] = null;\n77          int\
          \ _len0 = istream.read_long();\n78          value = new String[_len0];\n\
          79          for (int _o1 = 0; _o1 < value.length; ++_o1)\n80           \
          \   value[_o1] = org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.read(istream);\n\
          81          return value;\n82      }\n83  \n84      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, String[] value)\n85      {\n86          ostream.write_long(value.length);\n\
          87          for (int _i0 = 0; _i0 < value.length; ++_i0)\n88           \
          \   org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.write(ostream, value[_i0]);\n\
          89      }\n90  \n91  }\n"
        lineNumber: 84
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/RepositoryIdSeqHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 102
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 106
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 116
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "34  public final class StructMemberHelper\n35  {\n36      private\
          \ static String _id = \"IDL:omg.org/CORBA/StructMember:1.0\";\n37  \n38\
          \      public StructMemberHelper()\n39      {\n40      }\n41  \n42     \
          \ // _CHANGED_\n43      // public static void insert (org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.StructMember that)\n44      public\
          \ static void insert(org.omg.CORBA.Any a, org.omg.CORBA.StructMember that)\n\
          45      {\n46          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          47          a.type(type());\n48          write(out, that);\n49         \
          \ a.read_value(out.create_input_stream(), type());\n50      }\n51  \n52\
          \      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.StructMember\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.StructMember\
          \ extract(org.omg.CORBA.Any a)"
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "36      private static String _id = \"IDL:omg.org/CORBA/StructMember:1.0\"\
          ;\n37  \n38      public StructMemberHelper()\n39      {\n40      }\n41 \
          \ \n42      // _CHANGED_\n43      // public static void insert (org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.StructMember that)\n44      public\
          \ static void insert(org.omg.CORBA.Any a, org.omg.CORBA.StructMember that)\n\
          45      {\n46          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          47          a.type(type());\n48          write(out, that);\n49         \
          \ a.read_value(out.create_input_stream(), type());\n50      }\n51  \n52\
          \      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.StructMember\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.StructMember\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "44      public static void insert(org.omg.CORBA.Any a, org.omg.CORBA.StructMember\
          \ that)\n45      {\n46          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n47          a.type(type());\n48         \
          \ write(out, that);\n49          a.read_value(out.create_input_stream(),\
          \ type());\n50      }\n51  \n52      // _CHANGED_\n53      // public static\
          \ org.jboss.com.sun.org.omg.CORBA.StructMember extract (org.omg.CORBA.Any\
          \ a)\n54      public static org.omg.CORBA.StructMember extract(org.omg.CORBA.Any\
          \ a)\n55      {\n56          return read(a.create_input_stream());\n57 \
          \     }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      private static boolean __active = false;\n62  \n\
          63      synchronized public static org.omg.CORBA.TypeCode type()\n64   \
          \   {"
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "49          a.read_value(out.create_input_stream(), type());\n\
          50      }\n51  \n52      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.StructMember\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.StructMember\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());\n\
          57      }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      private static boolean __active = false;\n62  \n\
          63      synchronized public static org.omg.CORBA.TypeCode type()\n64   \
          \   {\n65          if (__typeCode == null)\n66          {\n67          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n68              {\n69\
          \                  if (__typeCode == null)"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "53      // public static org.jboss.com.sun.org.omg.CORBA.StructMember\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.StructMember\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());\n\
          57      }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      private static boolean __active = false;\n62  \n\
          63      synchronized public static org.omg.CORBA.TypeCode type()\n64   \
          \   {\n65          if (__typeCode == null)\n66          {\n67          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n68              {\n69\
          \                  if (__typeCode == null)\n70                  {\n71  \
          \                    if (__active)\n72                      {\n73      \
          \                    return org.omg.CORBA.ORB.init().create_recursive_tc(_id);"
        lineNumber: 63
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "57      }\n58  \n59      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n60  \n61      private static boolean __active = false;\n\
          62  \n63      synchronized public static org.omg.CORBA.TypeCode type()\n\
          64      {\n65          if (__typeCode == null)\n66          {\n67      \
          \        synchronized (org.omg.CORBA.TypeCode.class)\n68              {\n\
          69                  if (__typeCode == null)\n70                  {\n71 \
          \                     if (__active)\n72                      {\n73     \
          \                     return org.omg.CORBA.ORB.init().create_recursive_tc(_id);\n\
          74                      }\n75                      __active = true;\n76\
          \                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[3];\n\
          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;"
        lineNumber: 67
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '63      synchronized public static org.omg.CORBA.TypeCode type()

          64      {

          65          if (__typeCode == null)

          66          {

          67              synchronized (org.omg.CORBA.TypeCode.class)

          68              {

          69                  if (__typeCode == null)

          70                  {

          71                      if (__active)

          72                      {

          73                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          74                      }

          75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[3];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          83                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);'
        lineNumber: 73
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '66          {

          67              synchronized (org.omg.CORBA.TypeCode.class)

          68              {

          69                  if (__typeCode == null)

          70                  {

          71                      if (__active)

          72                      {

          73                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          74                      }

          75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[3];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          83                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          85                      _members0[2] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);

          86                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc('
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '67              synchronized (org.omg.CORBA.TypeCode.class)

          68              {

          69                  if (__typeCode == null)

          70                  {

          71                      if (__active)

          72                      {

          73                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          74                      }

          75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[3];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          83                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          85                      _members0[2] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);

          86                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          87                              org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.id(),
          "StructMember", _members0);'
        lineNumber: 77
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '68              {

          69                  if (__typeCode == null)

          70                  {

          71                      if (__active)

          72                      {

          73                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          74                      }

          75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[3];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          83                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          85                      _members0[2] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);

          86                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          87                              org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.id(),
          "StructMember", _members0);

          88                      __active = false;'
        lineNumber: 78
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '69                  if (__typeCode == null)

          70                  {

          71                      if (__active)

          72                      {

          73                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          74                      }

          75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[3];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          83                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          85                      _members0[2] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);

          86                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          87                              org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.id(),
          "StructMember", _members0);

          88                      __active = false;

          89                  }'
        lineNumber: 79
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '71                      if (__active)

          72                      {

          73                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          74                      }

          75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[3];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          83                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          85                      _members0[2] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);

          86                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          87                              org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.id(),
          "StructMember", _members0);

          88                      __active = false;

          89                  }

          90              }

          91          }'
        lineNumber: 81
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '72                      {

          73                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          74                      }

          75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[3];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          83                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          85                      _members0[2] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);

          86                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          87                              org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.id(),
          "StructMember", _members0);

          88                      __active = false;

          89                  }

          90              }

          91          }

          92          return __typeCode;'
        lineNumber: 82
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '73                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          74                      }

          75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[3];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          83                      _members0[1] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          84                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          85                      _members0[2] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);

          86                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(

          87                              org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.id(),
          "StructMember", _members0);

          88                      __active = false;

          89                  }

          90              }

          91          }

          92          return __typeCode;

          93      }'
        lineNumber: 83
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "75                      __active = true;\n76                  \
          \    org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[3];\n\
          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;\n\
          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", _tcOf_members0);\n81                      _members0[0]\
          \ = new org.omg.CORBA.StructMember(\"name\", _tcOf_members0, null);\n82\
          \                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);\n\
          83                      _members0[1] = new org.omg.CORBA.StructMember(\"\
          type\", _tcOf_members0, null);\n84                      _tcOf_members0 =\
          \ org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();\n85            \
          \          _members0[2] = new org.omg.CORBA.StructMember(\"type_def\", _tcOf_members0,\
          \ null);\n86                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(\n\
          87                              org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.id(),\
          \ \"StructMember\", _members0);\n88                      __active = false;\n\
          89                  }\n90              }\n91          }\n92          return\
          \ __typeCode;\n93      }\n94  \n95      public static String id()"
        lineNumber: 85
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "76                      org.omg.CORBA.StructMember[] _members0\
          \ = new org.omg.CORBA.StructMember[3];\n77                      org.omg.CORBA.TypeCode\
          \ _tcOf_members0 = null;\n78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),\
          \ \"Identifier\", _tcOf_members0);\n81                      _members0[0]\
          \ = new org.omg.CORBA.StructMember(\"name\", _tcOf_members0, null);\n82\
          \                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);\n\
          83                      _members0[1] = new org.omg.CORBA.StructMember(\"\
          type\", _tcOf_members0, null);\n84                      _tcOf_members0 =\
          \ org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();\n85            \
          \          _members0[2] = new org.omg.CORBA.StructMember(\"type_def\", _tcOf_members0,\
          \ null);\n86                      __typeCode = org.omg.CORBA.ORB.init().create_struct_tc(\n\
          87                              org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.id(),\
          \ \"StructMember\", _members0);\n88                      __active = false;\n\
          89                  }\n90              }\n91          }\n92          return\
          \ __typeCode;\n93      }\n94  \n95      public static String id()\n96  \
          \    {"
        lineNumber: 86
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: " 87          // value = new org.jboss.com.sun.org.omg.CORBA.StructMember[_len0];\n\
          \ 88          value = new org.omg.CORBA.StructMember[_len0];\n 89      \
          \    for (int _o1 = 0; _o1 < value.length; ++_o1)\n 90              value[_o1]\
          \ = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.read(istream);\n\
          \ 91          return value;\n 92      }\n 93  \n 94      // _CHANGED_\n\
          \ 95      // public static void write (org.omg.CORBA.portable.OutputStream\
          \ ostream,\n 96      // org.jboss.com.sun.org.omg.CORBA.StructMember[] value)\n\
          \ 97      public static void write(org.omg.CORBA.portable.OutputStream ostream,\
          \ org.omg.CORBA.StructMember[] value)\n 98      {\n 99          ostream.write_long(value.length);\n\
          100          for (int _i0 = 0; _i0 < value.length; ++_i0)\n101         \
          \     org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.write(ostream,\
          \ value[_i0]);\n102      }\n103  \n104  }\n"
        lineNumber: 97
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "34  public final class StructMemberSeqHelper\n35  {\n36      private\
          \ static String _id = \"IDL:omg.org/CORBA/StructMemberSeq:1.0\";\n37  \n\
          38      public StructMemberSeqHelper()\n39      {\n40      }\n41  \n42 \
          \     // _CHANGED_\n43      // public static void insert (org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.StructMember[] that)\n44      public\
          \ static void insert(org.omg.CORBA.Any a, org.omg.CORBA.StructMember[] that)\n\
          45      {\n46          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          47          a.type(type());\n48          write(out, that);\n49         \
          \ a.read_value(out.create_input_stream(), type());\n50      }\n51  \n52\
          \      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.StructMember[]\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.StructMember[]\
          \ extract(org.omg.CORBA.Any a)"
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "36      private static String _id = \"IDL:omg.org/CORBA/StructMemberSeq:1.0\"\
          ;\n37  \n38      public StructMemberSeqHelper()\n39      {\n40      }\n\
          41  \n42      // _CHANGED_\n43      // public static void insert (org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.StructMember[] that)\n44      public\
          \ static void insert(org.omg.CORBA.Any a, org.omg.CORBA.StructMember[] that)\n\
          45      {\n46          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          47          a.type(type());\n48          write(out, that);\n49         \
          \ a.read_value(out.create_input_stream(), type());\n50      }\n51  \n52\
          \      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.StructMember[]\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.StructMember[]\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "44      public static void insert(org.omg.CORBA.Any a, org.omg.CORBA.StructMember[]\
          \ that)\n45      {\n46          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n47          a.type(type());\n48         \
          \ write(out, that);\n49          a.read_value(out.create_input_stream(),\
          \ type());\n50      }\n51  \n52      // _CHANGED_\n53      // public static\
          \ org.jboss.com.sun.org.omg.CORBA.StructMember[] extract (org.omg.CORBA.Any\
          \ a)\n54      public static org.omg.CORBA.StructMember[] extract(org.omg.CORBA.Any\
          \ a)\n55      {\n56          return read(a.create_input_stream());\n57 \
          \     }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n62      {\n63          if (__typeCode == null)\n64          {"
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "49          a.read_value(out.create_input_stream(), type());\n\
          50      }\n51  \n52      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.StructMember[]\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.StructMember[]\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());\n\
          57      }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n62      {\n63          if (__typeCode == null)\n64          {\n\
          65              __typeCode = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.type();\n\
          66              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n67              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          68                      org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.id(),\
          \ \"StructMemberSeq\", __typeCode);\n69          }"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51  \n52      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.StructMember[]\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.StructMember[]\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());\n\
          57      }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n62      {\n63          if (__typeCode == null)\n64          {\n\
          65              __typeCode = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.type();\n\
          66              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n67              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          68                      org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.id(),\
          \ \"StructMemberSeq\", __typeCode);\n69          }\n70          return __typeCode;\n\
          71      }"
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "56          return read(a.create_input_stream());\n57      }\n\
          58  \n59      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          60  \n61      synchronized public static org.omg.CORBA.TypeCode type()\n\
          62      {\n63          if (__typeCode == null)\n64          {\n65      \
          \        __typeCode = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.type();\n\
          66              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n67              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          68                      org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.id(),\
          \ \"StructMemberSeq\", __typeCode);\n69          }\n70          return __typeCode;\n\
          71      }\n72  \n73      public static String id()\n74      {\n75      \
          \    return _id;\n76      }"
        lineNumber: 66
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "57      }\n58  \n59      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n60  \n61      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n62      {\n63          if (__typeCode == null)\n64          {\n\
          65              __typeCode = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.type();\n\
          66              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n67              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          68                      org.jboss.com.sun.org.omg.CORBA.StructMemberSeqHelper.id(),\
          \ \"StructMemberSeq\", __typeCode);\n69          }\n70          return __typeCode;\n\
          71      }\n72  \n73      public static String id()\n74      {\n75      \
          \    return _id;\n76      }\n77  "
        lineNumber: 67
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "70          return __typeCode;\n71      }\n72  \n73      public\
          \ static String id()\n74      {\n75          return _id;\n76      }\n77\
          \  \n78      // _CHANGED_\n79      // public static org.jboss.com.sun.org.omg.CORBA.StructMember[]\
          \ read (org.omg.CORBA.portable.InputStream istream)\n80      public static\
          \ org.omg.CORBA.StructMember[] read(org.omg.CORBA.portable.InputStream istream)\n\
          81      {\n82          // _CHANGED_\n83          // org.jboss.com.sun.org.omg.CORBA.StructMember\
          \ value[] = null;\n84          org.omg.CORBA.StructMember value[] = null;\n\
          85          int _len0 = istream.read_long();\n86          // _CHANGED_\n\
          87          // value = new org.jboss.com.sun.org.omg.CORBA.StructMember[_len0];\n\
          88          value = new org.omg.CORBA.StructMember[_len0];\n89         \
          \ for (int _o1 = 0; _o1 < value.length; ++_o1)\n90              value[_o1]\
          \ = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.read(istream);"
        lineNumber: 80
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "74      {\n75          return _id;\n76      }\n77  \n78      //\
          \ _CHANGED_\n79      // public static org.jboss.com.sun.org.omg.CORBA.StructMember[]\
          \ read (org.omg.CORBA.portable.InputStream istream)\n80      public static\
          \ org.omg.CORBA.StructMember[] read(org.omg.CORBA.portable.InputStream istream)\n\
          81      {\n82          // _CHANGED_\n83          // org.jboss.com.sun.org.omg.CORBA.StructMember\
          \ value[] = null;\n84          org.omg.CORBA.StructMember value[] = null;\n\
          85          int _len0 = istream.read_long();\n86          // _CHANGED_\n\
          87          // value = new org.jboss.com.sun.org.omg.CORBA.StructMember[_len0];\n\
          88          value = new org.omg.CORBA.StructMember[_len0];\n89         \
          \ for (int _o1 = 0; _o1 < value.length; ++_o1)\n90              value[_o1]\
          \ = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.read(istream);\n\
          91          return value;\n92      }\n93  \n94      // _CHANGED_"
        lineNumber: 84
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "78      // _CHANGED_\n79      // public static org.jboss.com.sun.org.omg.CORBA.StructMember[]\
          \ read (org.omg.CORBA.portable.InputStream istream)\n80      public static\
          \ org.omg.CORBA.StructMember[] read(org.omg.CORBA.portable.InputStream istream)\n\
          81      {\n82          // _CHANGED_\n83          // org.jboss.com.sun.org.omg.CORBA.StructMember\
          \ value[] = null;\n84          org.omg.CORBA.StructMember value[] = null;\n\
          85          int _len0 = istream.read_long();\n86          // _CHANGED_\n\
          87          // value = new org.jboss.com.sun.org.omg.CORBA.StructMember[_len0];\n\
          88          value = new org.omg.CORBA.StructMember[_len0];\n89         \
          \ for (int _o1 = 0; _o1 < value.length; ++_o1)\n90              value[_o1]\
          \ = org.jboss.com.sun.org.omg.CORBA.StructMemberHelper.read(istream);\n\
          91          return value;\n92      }\n93  \n94      // _CHANGED_\n95   \
          \   // public static void write (org.omg.CORBA.portable.OutputStream ostream,\n\
          96      // org.jboss.com.sun.org.omg.CORBA.StructMember[] value)\n97   \
          \   public static void write(org.omg.CORBA.portable.OutputStream ostream,\
          \ org.omg.CORBA.StructMember[] value)\n98      {"
        lineNumber: 88
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/StructMemberSeqHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "25  package org.jboss.com.sun.org.omg.CORBA.ValueDefPackage;\n\
          26  \n27  /**\n28   * org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescription.java\
          \ Generated by the IDL-to-Java compiler\n29   * (portable), version \"3.0\"\
          \ from ir.idl Thursday, May 6, 1999 1:51:52 AM PDT\n30   */\n31  \n32  //\
          \ This file has been manually _CHANGED_\n33  \n34  @SuppressWarnings(\"\
          serial\")\n35  public final class FullValueDescription implements org.omg.CORBA.portable.IDLEntity\n\
          36  {\n37      public String name = null;\n38  \n39      public String id\
          \ = null;\n40  \n41      public boolean is_abstract = false;\n42  \n43 \
          \     public boolean is_custom = false;\n44  \n45      public String defined_in\
          \ = null;"
        lineNumber: 35
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescription.java
          kind: Class
          name: FullValueDescription
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: "45      public String defined_in = null;\n46  \n47      public\
          \ String version = null;\n48  \n49      public org.jboss.com.sun.org.omg.CORBA.OperationDescription\
          \ operations[] = null;\n50  \n51      public org.jboss.com.sun.org.omg.CORBA.AttributeDescription\
          \ attributes[] = null;\n52  \n53      // _CHANGED_\n54      // public org.jboss.com.sun.org.omg.CORBA.ValueMember\
          \ members[] = null;\n55      public org.omg.CORBA.ValueMember members[]\
          \ = null;\n56  \n57      public org.jboss.com.sun.org.omg.CORBA.Initializer\
          \ initializers[] = null;\n58  \n59      public String supported_interfaces[]\
          \ = null;\n60  \n61      public String abstract_base_values[] = null;\n\
          62  \n63      public boolean is_truncatable = false;\n64  \n65      public\
          \ String base_value = null;"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescription.java
          kind: Field
          name: members
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: "57      public org.jboss.com.sun.org.omg.CORBA.Initializer initializers[]\
          \ = null;\n58  \n59      public String supported_interfaces[] = null;\n\
          60  \n61      public String abstract_base_values[] = null;\n62  \n63   \
          \   public boolean is_truncatable = false;\n64  \n65      public String\
          \ base_value = null;\n66  \n67      public org.omg.CORBA.TypeCode type =\
          \ null;\n68  \n69      public FullValueDescription()\n70      {\n71    \
          \  } // ctor\n72  \n73      // _CHANGED_\n74      // public FullValueDescription\
          \ (String _name, String _id, boolean _is_abstract, boolean _is_custom, String\n\
          75      // _defined_in, String _version, org.jboss.com.sun.org.omg.CORBA.OperationDescription[]\
          \ _operations,\n76      // org.jboss.com.sun.org.omg.CORBA.AttributeDescription[]\
          \ _attributes, org.jboss.com.sun.org.omg.CORBA.ValueMember[]\n77      //\
          \ _members, org.jboss.com.sun.org.omg.CORBA.Initializer[] _initializers,\
          \ String[] _supported_interfaces, String[]"
        lineNumber: 67
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescription.java
          kind: Field
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: "71      } // ctor\n72  \n73      // _CHANGED_\n74      // public\
          \ FullValueDescription (String _name, String _id, boolean _is_abstract,\
          \ boolean _is_custom, String\n75      // _defined_in, String _version, org.jboss.com.sun.org.omg.CORBA.OperationDescription[]\
          \ _operations,\n76      // org.jboss.com.sun.org.omg.CORBA.AttributeDescription[]\
          \ _attributes, org.jboss.com.sun.org.omg.CORBA.ValueMember[]\n77      //\
          \ _members, org.jboss.com.sun.org.omg.CORBA.Initializer[] _initializers,\
          \ String[] _supported_interfaces, String[]\n78      // _abstract_base_values,\
          \ boolean _is_truncatable, String _base_value, org.omg.CORBA.TypeCode _type)\n\
          79      public FullValueDescription(String _name, String _id, boolean _is_abstract,\
          \ boolean _is_custom, String _defined_in,\n80              String _version,\
          \ org.jboss.com.sun.org.omg.CORBA.OperationDescription[] _operations,\n\
          81              org.jboss.com.sun.org.omg.CORBA.AttributeDescription[] _attributes,\
          \ org.omg.CORBA.ValueMember[] _members,\n82              org.jboss.com.sun.org.omg.CORBA.Initializer[]\
          \ _initializers, String[] _supported_interfaces,\n83              String[]\
          \ _abstract_base_values, boolean _is_truncatable, String _base_value, org.omg.CORBA.TypeCode\
          \ _type)\n84      {\n85          name = _name;\n86          id = _id;\n\
          87          is_abstract = _is_abstract;\n88          is_custom = _is_custom;\n\
          89          defined_in = _defined_in;\n90          version = _version;\n\
          91          operations = _operations;"
        lineNumber: 81
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescription.java
          kind: Constructor
          name: FullValueDescription
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: '73      // _CHANGED_

          74      // public FullValueDescription (String _name, String _id, boolean
          _is_abstract, boolean _is_custom, String

          75      // _defined_in, String _version, org.jboss.com.sun.org.omg.CORBA.OperationDescription[]
          _operations,

          76      // org.jboss.com.sun.org.omg.CORBA.AttributeDescription[] _attributes,
          org.jboss.com.sun.org.omg.CORBA.ValueMember[]

          77      // _members, org.jboss.com.sun.org.omg.CORBA.Initializer[] _initializers,
          String[] _supported_interfaces, String[]

          78      // _abstract_base_values, boolean _is_truncatable, String _base_value,
          org.omg.CORBA.TypeCode _type)

          79      public FullValueDescription(String _name, String _id, boolean _is_abstract,
          boolean _is_custom, String _defined_in,

          80              String _version, org.jboss.com.sun.org.omg.CORBA.OperationDescription[]
          _operations,

          81              org.jboss.com.sun.org.omg.CORBA.AttributeDescription[] _attributes,
          org.omg.CORBA.ValueMember[] _members,

          82              org.jboss.com.sun.org.omg.CORBA.Initializer[] _initializers,
          String[] _supported_interfaces,

          83              String[] _abstract_base_values, boolean _is_truncatable,
          String _base_value, org.omg.CORBA.TypeCode _type)

          84      {

          85          name = _name;

          86          id = _id;

          87          is_abstract = _is_abstract;

          88          is_custom = _is_custom;

          89          defined_in = _defined_in;

          90          version = _version;

          91          operations = _operations;

          92          attributes = _attributes;

          93          members = _members;'
        lineNumber: 83
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescription.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescription.java
          kind: Constructor
          name: FullValueDescription
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 84
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 85
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 86
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 88
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 89
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 90
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 92
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 94
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 95
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 98
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 100
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 101
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 104
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 106
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 107
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 110
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 112
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 113
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 116
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 117
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 118
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 120
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 121
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 124
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 125
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 126
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 128
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 129
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 132
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 133
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 134
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 135
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 136
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 138
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 139
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 140
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 141
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 157
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 178
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: "30   */\n31  \n32  public final class FullValueDescriptionHelper\n\
          33  {\n34      private static String _id = \"IDL:omg.org/CORBA/ValueDef/FullValueDescription:1.0\"\
          ;\n35  \n36      public FullValueDescriptionHelper()\n37      {\n38    \
          \  }\n39  \n40      public static void insert(org.omg.CORBA.Any a,\n41 \
          \             org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription\
          \ that)\n42      {\n43          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n44          a.type(type());\n45         \
          \ write(out, that);\n46          a.read_value(out.create_input_stream(),\
          \ type());\n47      }\n48  \n49      public static org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription\
          \ extract(org.omg.CORBA.Any a)\n50      {"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: "33  {\n34      private static String _id = \"IDL:omg.org/CORBA/ValueDef/FullValueDescription:1.0\"\
          ;\n35  \n36      public FullValueDescriptionHelper()\n37      {\n38    \
          \  }\n39  \n40      public static void insert(org.omg.CORBA.Any a,\n41 \
          \             org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription\
          \ that)\n42      {\n43          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n44          a.type(type());\n45         \
          \ write(out, that);\n46          a.read_value(out.create_input_stream(),\
          \ type());\n47      }\n48  \n49      public static org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription\
          \ extract(org.omg.CORBA.Any a)\n50      {\n51          return read(a.create_input_stream());\n\
          52      }\n53  "
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: "39  \n40      public static void insert(org.omg.CORBA.Any a,\n\
          41              org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription\
          \ that)\n42      {\n43          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n44          a.type(type());\n45         \
          \ write(out, that);\n46          a.read_value(out.create_input_stream(),\
          \ type());\n47      }\n48  \n49      public static org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription\
          \ extract(org.omg.CORBA.Any a)\n50      {\n51          return read(a.create_input_stream());\n\
          52      }\n53  \n54      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n55  \n56      private static boolean __active = false;\n57  \n\
          58      synchronized public static org.omg.CORBA.TypeCode type()\n59   \
          \   {"
        lineNumber: 49
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: "44          a.type(type());\n45          write(out, that);\n46\
          \          a.read_value(out.create_input_stream(), type());\n47      }\n\
          48  \n49      public static org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription\
          \ extract(org.omg.CORBA.Any a)\n50      {\n51          return read(a.create_input_stream());\n\
          52      }\n53  \n54      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n55  \n56      private static boolean __active = false;\n57  \n\
          58      synchronized public static org.omg.CORBA.TypeCode type()\n59   \
          \   {\n60          if (__typeCode == null)\n61          {\n62          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n63              {\n64\
          \                  if (__typeCode == null)"
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: "48  \n49      public static org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription\
          \ extract(org.omg.CORBA.Any a)\n50      {\n51          return read(a.create_input_stream());\n\
          52      }\n53  \n54      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n55  \n56      private static boolean __active = false;\n57  \n\
          58      synchronized public static org.omg.CORBA.TypeCode type()\n59   \
          \   {\n60          if (__typeCode == null)\n61          {\n62          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n63              {\n64\
          \                  if (__typeCode == null)\n65                  {\n66  \
          \                    if (__active)\n67                      {\n68      \
          \                    return org.omg.CORBA.ORB.init().create_recursive_tc(_id);"
        lineNumber: 58
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: "52      }\n53  \n54      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n55  \n56      private static boolean __active = false;\n\
          57  \n58      synchronized public static org.omg.CORBA.TypeCode type()\n\
          59      {\n60          if (__typeCode == null)\n61          {\n62      \
          \        synchronized (org.omg.CORBA.TypeCode.class)\n63              {\n\
          64                  if (__typeCode == null)\n65                  {\n66 \
          \                     if (__active)\n67                      {\n68     \
          \                     return org.omg.CORBA.ORB.init().create_recursive_tc(_id);\n\
          69                      }\n70                      __active = true;\n71\
          \                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[15];\n\
          72                      org.omg.CORBA.TypeCode _tcOf_members0 = null;"
        lineNumber: 62
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: '58      synchronized public static org.omg.CORBA.TypeCode type()

          59      {

          60          if (__typeCode == null)

          61          {

          62              synchronized (org.omg.CORBA.TypeCode.class)

          63              {

          64                  if (__typeCode == null)

          65                  {

          66                      if (__active)

          67                      {

          68                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          69                      }

          70                      __active = true;

          71                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[15];

          72                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          76                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc('
        lineNumber: 68
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: '61          {

          62              synchronized (org.omg.CORBA.TypeCode.class)

          63              {

          64                  if (__typeCode == null)

          65                  {

          66                      if (__active)

          67                      {

          68                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          69                      }

          70                      __active = true;

          71                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[15];

          72                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          76                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          79                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          80                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);'
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: '62              synchronized (org.omg.CORBA.TypeCode.class)

          63              {

          64                  if (__typeCode == null)

          65                  {

          66                      if (__active)

          67                      {

          68                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          69                      }

          70                      __active = true;

          71                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[15];

          72                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          76                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          79                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          80                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          82                      _members0[2] = new org.omg.CORBA.StructMember("is_abstract",
          _tcOf_members0, null);'
        lineNumber: 72
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: '63              {

          64                  if (__typeCode == null)

          65                  {

          66                      if (__active)

          67                      {

          68                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          69                      }

          70                      __active = true;

          71                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[15];

          72                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          76                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          79                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          80                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          82                      _members0[2] = new org.omg.CORBA.StructMember("is_abstract",
          _tcOf_members0, null);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);'
        lineNumber: 73
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: '64                  if (__typeCode == null)

          65                  {

          66                      if (__active)

          67                      {

          68                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          69                      }

          70                      __active = true;

          71                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[15];

          72                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          76                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          79                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          80                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          82                      _members0[2] = new org.omg.CORBA.StructMember("is_abstract",
          _tcOf_members0, null);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          84                      _members0[3] = new org.omg.CORBA.StructMember("is_custom",
          _tcOf_members0, null);'
        lineNumber: 74
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: '66                      if (__active)

          67                      {

          68                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          69                      }

          70                      __active = true;

          71                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[15];

          72                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          76                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          79                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          80                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          82                      _members0[2] = new org.omg.CORBA.StructMember("is_abstract",
          _tcOf_members0, null);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          84                      _members0[3] = new org.omg.CORBA.StructMember("is_custom",
          _tcOf_members0, null);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc('
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: '67                      {

          68                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          69                      }

          70                      __active = true;

          71                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[15];

          72                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          76                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          79                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          80                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          82                      _members0[2] = new org.omg.CORBA.StructMember("is_abstract",
          _tcOf_members0, null);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          84                      _members0[3] = new org.omg.CORBA.StructMember("is_custom",
          _tcOf_members0, null);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          87                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);'
        lineNumber: 77
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: '68                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          69                      }

          70                      __active = true;

          71                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[15];

          72                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          76                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          79                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          80                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          82                      _members0[2] = new org.omg.CORBA.StructMember("is_abstract",
          _tcOf_members0, null);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          84                      _members0[3] = new org.omg.CORBA.StructMember("is_custom",
          _tcOf_members0, null);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          87                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          88                      _members0[4] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);'
        lineNumber: 78
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: '70                      __active = true;

          71                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[15];

          72                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          76                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          79                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          80                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          82                      _members0[2] = new org.omg.CORBA.StructMember("is_abstract",
          _tcOf_members0, null);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          84                      _members0[3] = new org.omg.CORBA.StructMember("is_custom",
          _tcOf_members0, null);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          87                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          88                      _members0[4] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          89                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          90                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc('
        lineNumber: 80
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: '71                      org.omg.CORBA.StructMember[] _members0
          = new org.omg.CORBA.StructMember[15];

          72                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          76                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          79                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          80                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          82                      _members0[2] = new org.omg.CORBA.StructMember("is_abstract",
          _tcOf_members0, null);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          84                      _members0[3] = new org.omg.CORBA.StructMember("is_custom",
          _tcOf_members0, null);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          87                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          88                      _members0[4] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          89                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          90                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          91                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);'
        lineNumber: 81
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: '72                      org.omg.CORBA.TypeCode _tcOf_members0 =
          null;

          73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          76                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          79                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          80                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          82                      _members0[2] = new org.omg.CORBA.StructMember("is_abstract",
          _tcOf_members0, null);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          84                      _members0[3] = new org.omg.CORBA.StructMember("is_custom",
          _tcOf_members0, null);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          87                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          88                      _members0[4] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          89                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          90                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          91                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          92                      _members0[5] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);'
        lineNumber: 82
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - codeSnip: '73                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          74                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          75                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          76                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          77                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          79                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          80                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          81                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          82                      _members0[2] = new org.omg.CORBA.StructMember("is_abstract",
          _tcOf_members0, null);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

          84                      _members0[3] = new org.omg.CORBA.StructMember("is_custom",
          _tcOf_members0, null);

          85                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          87                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          88                      _members0[4] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          89                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          90                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          91                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          92                      _members0[5] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          93                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.OperationDescriptionHelper.type();'
        lineNumber: 83
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescriptionHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA.ValueDefPackage
      - lineNumber: 89
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 90
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 91
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 93
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 94
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 95
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 97
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 98
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 99
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 101
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 102
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 118
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 122
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 136
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "34  public final class ValueMemberHelper\n35  {\n36      private\
          \ static String _id = \"IDL:omg.org/CORBA/ValueMember:1.0\";\n37  \n38 \
          \     public ValueMemberHelper()\n39      {\n40      }\n41  \n42      //\
          \ _CHANGED_\n43      // public static void insert (org.omg.CORBA.Any a,\
          \ org.jboss.com.sun.org.omg.CORBA.ValueMember that)\n44      public static\
          \ void insert(org.omg.CORBA.Any a, org.omg.CORBA.ValueMember that)\n45 \
          \     {\n46          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          47          a.type(type());\n48          write(out, that);\n49         \
          \ a.read_value(out.create_input_stream(), type());\n50      }\n51  \n52\
          \      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.ValueMember\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.ValueMember\
          \ extract(org.omg.CORBA.Any a)"
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "36      private static String _id = \"IDL:omg.org/CORBA/ValueMember:1.0\"\
          ;\n37  \n38      public ValueMemberHelper()\n39      {\n40      }\n41  \n\
          42      // _CHANGED_\n43      // public static void insert (org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.ValueMember that)\n44      public static\
          \ void insert(org.omg.CORBA.Any a, org.omg.CORBA.ValueMember that)\n45 \
          \     {\n46          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          47          a.type(type());\n48          write(out, that);\n49         \
          \ a.read_value(out.create_input_stream(), type());\n50      }\n51  \n52\
          \      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.ValueMember\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.ValueMember\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "44      public static void insert(org.omg.CORBA.Any a, org.omg.CORBA.ValueMember\
          \ that)\n45      {\n46          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n47          a.type(type());\n48         \
          \ write(out, that);\n49          a.read_value(out.create_input_stream(),\
          \ type());\n50      }\n51  \n52      // _CHANGED_\n53      // public static\
          \ org.jboss.com.sun.org.omg.CORBA.ValueMember extract (org.omg.CORBA.Any\
          \ a)\n54      public static org.omg.CORBA.ValueMember extract(org.omg.CORBA.Any\
          \ a)\n55      {\n56          return read(a.create_input_stream());\n57 \
          \     }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      private static boolean __active = false;\n62  \n\
          63      synchronized public static org.omg.CORBA.TypeCode type()\n64   \
          \   {"
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "49          a.read_value(out.create_input_stream(), type());\n\
          50      }\n51  \n52      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.ValueMember\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.ValueMember\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());\n\
          57      }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      private static boolean __active = false;\n62  \n\
          63      synchronized public static org.omg.CORBA.TypeCode type()\n64   \
          \   {\n65          if (__typeCode == null)\n66          {\n67          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n68              {\n69\
          \                  if (__typeCode == null)"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "53      // public static org.jboss.com.sun.org.omg.CORBA.ValueMember\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.ValueMember\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());\n\
          57      }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      private static boolean __active = false;\n62  \n\
          63      synchronized public static org.omg.CORBA.TypeCode type()\n64   \
          \   {\n65          if (__typeCode == null)\n66          {\n67          \
          \    synchronized (org.omg.CORBA.TypeCode.class)\n68              {\n69\
          \                  if (__typeCode == null)\n70                  {\n71  \
          \                    if (__active)\n72                      {\n73      \
          \                    return org.omg.CORBA.ORB.init().create_recursive_tc(_id);"
        lineNumber: 63
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "57      }\n58  \n59      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n60  \n61      private static boolean __active = false;\n\
          62  \n63      synchronized public static org.omg.CORBA.TypeCode type()\n\
          64      {\n65          if (__typeCode == null)\n66          {\n67      \
          \        synchronized (org.omg.CORBA.TypeCode.class)\n68              {\n\
          69                  if (__typeCode == null)\n70                  {\n71 \
          \                     if (__active)\n72                      {\n73     \
          \                     return org.omg.CORBA.ORB.init().create_recursive_tc(_id);\n\
          74                      }\n75                      __active = true;\n76\
          \                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[7];\n\
          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;"
        lineNumber: 67
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '63      synchronized public static org.omg.CORBA.TypeCode type()

          64      {

          65          if (__typeCode == null)

          66          {

          67              synchronized (org.omg.CORBA.TypeCode.class)

          68              {

          69                  if (__typeCode == null)

          70                  {

          71                      if (__active)

          72                      {

          73                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          74                      }

          75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[7];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc('
        lineNumber: 73
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '66          {

          67              synchronized (org.omg.CORBA.TypeCode.class)

          68              {

          69                  if (__typeCode == null)

          70                  {

          71                      if (__active)

          72                      {

          73                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          74                      }

          75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[7];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          84                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          85                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);'
        lineNumber: 76
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '67              synchronized (org.omg.CORBA.TypeCode.class)

          68              {

          69                  if (__typeCode == null)

          70                  {

          71                      if (__active)

          72                      {

          73                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          74                      }

          75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[7];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          84                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          85                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          87                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc('
        lineNumber: 77
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '68              {

          69                  if (__typeCode == null)

          70                  {

          71                      if (__active)

          72                      {

          73                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          74                      }

          75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[7];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          84                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          85                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          87                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          88                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);'
        lineNumber: 78
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '69                  if (__typeCode == null)

          70                  {

          71                      if (__active)

          72                      {

          73                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          74                      }

          75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[7];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          84                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          85                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          87                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          88                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          89                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);'
        lineNumber: 79
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '71                      if (__active)

          72                      {

          73                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          74                      }

          75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[7];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          84                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          85                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          87                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          88                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          89                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          90                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          91                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc('
        lineNumber: 81
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '72                      {

          73                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          74                      }

          75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[7];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          84                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          85                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          87                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          88                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          89                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          90                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          91                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          92                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);'
        lineNumber: 82
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '73                          return org.omg.CORBA.ORB.init().create_recursive_tc(_id);

          74                      }

          75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[7];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          84                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          85                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          87                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          88                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          89                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          90                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          91                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          92                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          93                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);'
        lineNumber: 83
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '75                      __active = true;

          76                      org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember[7];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          84                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          85                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          87                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          88                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          89                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          90                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          91                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          92                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          93                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          94                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          95                      _members0[4] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);'
        lineNumber: 85
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '76                      org.omg.CORBA.StructMember[] _members0
          = new org.omg.CORBA.StructMember[7];

          77                      org.omg.CORBA.TypeCode _tcOf_members0 = null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          84                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          85                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          87                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          88                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          89                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          90                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          91                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          92                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          93                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          94                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          95                      _members0[4] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          96                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();'
        lineNumber: 86
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '77                      org.omg.CORBA.TypeCode _tcOf_members0 =
          null;

          78                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          79                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          80                              org.jboss.com.sun.org.omg.CORBA.IdentifierHelper.id(),
          "Identifier", _tcOf_members0);

          81                      _members0[0] = new org.omg.CORBA.StructMember("name",
          _tcOf_members0, null);

          82                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          83                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          84                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          85                      _members0[1] = new org.omg.CORBA.StructMember("id",
          _tcOf_members0, null);

          86                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          87                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          88                              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.id(),
          "RepositoryId", _tcOf_members0);

          89                      _members0[2] = new org.omg.CORBA.StructMember("defined_in",
          _tcOf_members0, null);

          90                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_string_tc(0);

          91                      _tcOf_members0 = org.omg.CORBA.ORB.init().create_alias_tc(

          92                              org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),
          "VersionSpec", _tcOf_members0);

          93                      _members0[3] = new org.omg.CORBA.StructMember("version",
          _tcOf_members0, null);

          94                      _tcOf_members0 = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_TypeCode);

          95                      _members0[4] = new org.omg.CORBA.StructMember("type",
          _tcOf_members0, null);

          96                      _tcOf_members0 = org.jboss.com.sun.org.omg.CORBA.IDLTypeHelper.type();

          97                      _members0[5] = new org.omg.CORBA.StructMember("type_def",
          _tcOf_members0, null);'
        lineNumber: 87
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: " 87          // value = new org.jboss.com.sun.org.omg.CORBA.ValueMember[_len0];\n\
          \ 88          value = new org.omg.CORBA.ValueMember[_len0];\n 89       \
          \   for (int _o1 = 0; _o1 < value.length; ++_o1)\n 90              value[_o1]\
          \ = org.jboss.com.sun.org.omg.CORBA.ValueMemberHelper.read(istream);\n 91\
          \          return value;\n 92      }\n 93  \n 94      // _CHANGED_\n 95\
          \      // public static void write (org.omg.CORBA.portable.OutputStream\
          \ ostream,\n 96      // org.jboss.com.sun.org.omg.CORBA.ValueMember[] value)\n\
          \ 97      public static void write(org.omg.CORBA.portable.OutputStream ostream,\
          \ org.omg.CORBA.ValueMember[] value)\n 98      {\n 99          ostream.write_long(value.length);\n\
          100          for (int _i0 = 0; _i0 < value.length; ++_i0)\n101         \
          \     org.jboss.com.sun.org.omg.CORBA.ValueMemberHelper.write(ostream, value[_i0]);\n\
          102      }\n103  \n104  }\n"
        lineNumber: 97
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "34  public final class ValueMemberSeqHelper\n35  {\n36      private\
          \ static String _id = \"IDL:omg.org/CORBA/ValueMemberSeq:1.0\";\n37  \n\
          38      public ValueMemberSeqHelper()\n39      {\n40      }\n41  \n42  \
          \    // _CHANGED_\n43      // public static void insert (org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.ValueMember[] that)\n44      public\
          \ static void insert(org.omg.CORBA.Any a, org.omg.CORBA.ValueMember[] that)\n\
          45      {\n46          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          47          a.type(type());\n48          write(out, that);\n49         \
          \ a.read_value(out.create_input_stream(), type());\n50      }\n51  \n52\
          \      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.ValueMember[]\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.ValueMember[]\
          \ extract(org.omg.CORBA.Any a)"
        lineNumber: 44
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "36      private static String _id = \"IDL:omg.org/CORBA/ValueMemberSeq:1.0\"\
          ;\n37  \n38      public ValueMemberSeqHelper()\n39      {\n40      }\n41\
          \  \n42      // _CHANGED_\n43      // public static void insert (org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.CORBA.ValueMember[] that)\n44      public\
          \ static void insert(org.omg.CORBA.Any a, org.omg.CORBA.ValueMember[] that)\n\
          45      {\n46          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          47          a.type(type());\n48          write(out, that);\n49         \
          \ a.read_value(out.create_input_stream(), type());\n50      }\n51  \n52\
          \      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.ValueMember[]\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.ValueMember[]\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "44      public static void insert(org.omg.CORBA.Any a, org.omg.CORBA.ValueMember[]\
          \ that)\n45      {\n46          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n47          a.type(type());\n48         \
          \ write(out, that);\n49          a.read_value(out.create_input_stream(),\
          \ type());\n50      }\n51  \n52      // _CHANGED_\n53      // public static\
          \ org.jboss.com.sun.org.omg.CORBA.ValueMember[] extract (org.omg.CORBA.Any\
          \ a)\n54      public static org.omg.CORBA.ValueMember[] extract(org.omg.CORBA.Any\
          \ a)\n55      {\n56          return read(a.create_input_stream());\n57 \
          \     }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n62      {\n63          if (__typeCode == null)\n64          {"
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "49          a.read_value(out.create_input_stream(), type());\n\
          50      }\n51  \n52      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.ValueMember[]\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.ValueMember[]\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());\n\
          57      }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n62      {\n63          if (__typeCode == null)\n64          {\n\
          65              __typeCode = org.jboss.com.sun.org.omg.CORBA.ValueMemberHelper.type();\n\
          66              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n67              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          68                      org.jboss.com.sun.org.omg.CORBA.ValueMemberSeqHelper.id(),\
          \ \"ValueMemberSeq\", __typeCode);\n69          }"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51  \n52      // _CHANGED_\n53      // public static org.jboss.com.sun.org.omg.CORBA.ValueMember[]\
          \ extract (org.omg.CORBA.Any a)\n54      public static org.omg.CORBA.ValueMember[]\
          \ extract(org.omg.CORBA.Any a)\n55      {\n56          return read(a.create_input_stream());\n\
          57      }\n58  \n59      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n60  \n61      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n62      {\n63          if (__typeCode == null)\n64          {\n\
          65              __typeCode = org.jboss.com.sun.org.omg.CORBA.ValueMemberHelper.type();\n\
          66              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n67              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          68                      org.jboss.com.sun.org.omg.CORBA.ValueMemberSeqHelper.id(),\
          \ \"ValueMemberSeq\", __typeCode);\n69          }\n70          return __typeCode;\n\
          71      }"
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "56          return read(a.create_input_stream());\n57      }\n\
          58  \n59      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          60  \n61      synchronized public static org.omg.CORBA.TypeCode type()\n\
          62      {\n63          if (__typeCode == null)\n64          {\n65      \
          \        __typeCode = org.jboss.com.sun.org.omg.CORBA.ValueMemberHelper.type();\n\
          66              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n67              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          68                      org.jboss.com.sun.org.omg.CORBA.ValueMemberSeqHelper.id(),\
          \ \"ValueMemberSeq\", __typeCode);\n69          }\n70          return __typeCode;\n\
          71      }\n72  \n73      public static String id()\n74      {\n75      \
          \    return _id;\n76      }"
        lineNumber: 66
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "57      }\n58  \n59      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n60  \n61      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n62      {\n63          if (__typeCode == null)\n64          {\n\
          65              __typeCode = org.jboss.com.sun.org.omg.CORBA.ValueMemberHelper.type();\n\
          66              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n67              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          68                      org.jboss.com.sun.org.omg.CORBA.ValueMemberSeqHelper.id(),\
          \ \"ValueMemberSeq\", __typeCode);\n69          }\n70          return __typeCode;\n\
          71      }\n72  \n73      public static String id()\n74      {\n75      \
          \    return _id;\n76      }\n77  "
        lineNumber: 67
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "70          return __typeCode;\n71      }\n72  \n73      public\
          \ static String id()\n74      {\n75          return _id;\n76      }\n77\
          \  \n78      // _CHANGED_\n79      // public static org.jboss.com.sun.org.omg.CORBA.ValueMember[]\
          \ read (org.omg.CORBA.portable.InputStream istream)\n80      public static\
          \ org.omg.CORBA.ValueMember[] read(org.omg.CORBA.portable.InputStream istream)\n\
          81      {\n82          // _CHANGED_\n83          // org.jboss.com.sun.org.omg.CORBA.ValueMember\
          \ value[] = null;\n84          org.omg.CORBA.ValueMember value[] = null;\n\
          85          int _len0 = istream.read_long();\n86          // _CHANGED_\n\
          87          // value = new org.jboss.com.sun.org.omg.CORBA.ValueMember[_len0];\n\
          88          value = new org.omg.CORBA.ValueMember[_len0];\n89          for\
          \ (int _o1 = 0; _o1 < value.length; ++_o1)\n90              value[_o1] =\
          \ org.jboss.com.sun.org.omg.CORBA.ValueMemberHelper.read(istream);"
        lineNumber: 80
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "74      {\n75          return _id;\n76      }\n77  \n78      //\
          \ _CHANGED_\n79      // public static org.jboss.com.sun.org.omg.CORBA.ValueMember[]\
          \ read (org.omg.CORBA.portable.InputStream istream)\n80      public static\
          \ org.omg.CORBA.ValueMember[] read(org.omg.CORBA.portable.InputStream istream)\n\
          81      {\n82          // _CHANGED_\n83          // org.jboss.com.sun.org.omg.CORBA.ValueMember\
          \ value[] = null;\n84          org.omg.CORBA.ValueMember value[] = null;\n\
          85          int _len0 = istream.read_long();\n86          // _CHANGED_\n\
          87          // value = new org.jboss.com.sun.org.omg.CORBA.ValueMember[_len0];\n\
          88          value = new org.omg.CORBA.ValueMember[_len0];\n89          for\
          \ (int _o1 = 0; _o1 < value.length; ++_o1)\n90              value[_o1] =\
          \ org.jboss.com.sun.org.omg.CORBA.ValueMemberHelper.read(istream);\n91 \
          \         return value;\n92      }\n93  \n94      // _CHANGED_"
        lineNumber: 84
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "78      // _CHANGED_\n79      // public static org.jboss.com.sun.org.omg.CORBA.ValueMember[]\
          \ read (org.omg.CORBA.portable.InputStream istream)\n80      public static\
          \ org.omg.CORBA.ValueMember[] read(org.omg.CORBA.portable.InputStream istream)\n\
          81      {\n82          // _CHANGED_\n83          // org.jboss.com.sun.org.omg.CORBA.ValueMember\
          \ value[] = null;\n84          org.omg.CORBA.ValueMember value[] = null;\n\
          85          int _len0 = istream.read_long();\n86          // _CHANGED_\n\
          87          // value = new org.jboss.com.sun.org.omg.CORBA.ValueMember[_len0];\n\
          88          value = new org.omg.CORBA.ValueMember[_len0];\n89          for\
          \ (int _o1 = 0; _o1 < value.length; ++_o1)\n90              value[_o1] =\
          \ org.jboss.com.sun.org.omg.CORBA.ValueMemberHelper.read(istream);\n91 \
          \         return value;\n92      }\n93  \n94      // _CHANGED_\n95     \
          \ // public static void write (org.omg.CORBA.portable.OutputStream ostream,\n\
          96      // org.jboss.com.sun.org.omg.CORBA.ValueMember[] value)\n97    \
          \  public static void write(org.omg.CORBA.portable.OutputStream ostream,\
          \ org.omg.CORBA.ValueMember[] value)\n98      {"
        lineNumber: 88
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/ValueMemberSeqHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "30   */\n31  \n32  public final class VersionSpecHelper\n33  {\n\
          34      private static String _id = \"IDL:omg.org/CORBA/VersionSpec:1.0\"\
          ;\n35  \n36      public VersionSpecHelper()\n37      {\n38      }\n39  \n\
          40      public static void insert(org.omg.CORBA.Any a, String that)\n41\
          \      {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static String extract(org.omg.CORBA.Any a)\n49      {\n50\
          \          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "32  public final class VersionSpecHelper\n33  {\n34      private\
          \ static String _id = \"IDL:omg.org/CORBA/VersionSpec:1.0\";\n35  \n36 \
          \     public VersionSpecHelper()\n37      {\n38      }\n39  \n40      public\
          \ static void insert(org.omg.CORBA.Any a, String that)\n41      {\n42  \
          \        org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static String extract(org.omg.CORBA.Any a)\n49      {\n50\
          \          return read(a.create_input_stream());\n51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, String that)\n41      {\n42          org.omg.CORBA.portable.OutputStream\
          \ out = a.create_output_stream();\n43          a.type(type());\n44     \
          \     write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static String extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static String extract(org.omg.CORBA.Any a)\n49    \
          \  {\n50          return read(a.create_input_stream());\n51      }\n52 \
          \ \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n54\
          \  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),\
          \ \"VersionSpec\", __typeCode);\n62          }\n63          return __typeCode;"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static String extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),\
          \ \"VersionSpec\", __typeCode);\n62          }\n63          return __typeCode;\n\
          64      }\n65  "
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),\
          \ \"VersionSpec\", __typeCode);\n62          }\n63          return __typeCode;\n\
          64      }\n65  \n66      public static String id()\n67      {\n68      \
          \    return _id;\n69      }"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "50          return read(a.create_input_stream());\n51      }\n\
          52  \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          61                      org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),\
          \ \"VersionSpec\", __typeCode);\n62          }\n63          return __typeCode;\n\
          64      }\n65  \n66      public static String id()\n67      {\n68      \
          \    return _id;\n69      }\n70  "
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "61                      org.jboss.com.sun.org.omg.CORBA.VersionSpecHelper.id(),\
          \ \"VersionSpec\", __typeCode);\n62          }\n63          return __typeCode;\n\
          64      }\n65  \n66      public static String id()\n67      {\n68      \
          \    return _id;\n69      }\n70  \n71      public static String read(org.omg.CORBA.portable.InputStream\
          \ istream)\n72      {\n73          String value = null;\n74          value\
          \ = istream.read_string();\n75          return value;\n76      }\n77  \n\
          78      public static void write(org.omg.CORBA.portable.OutputStream ostream,\
          \ String value)\n79      {\n80          ostream.write_string(value);\n81\
          \      }"
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "68          return _id;\n69      }\n70  \n71      public static\
          \ String read(org.omg.CORBA.portable.InputStream istream)\n72      {\n73\
          \          String value = null;\n74          value = istream.read_string();\n\
          75          return value;\n76      }\n77  \n78      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, String value)\n79      {\n80          ostream.write_string(value);\n\
          81      }\n82  \n83  }\n"
        lineNumber: 78
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VersionSpecHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "31  \n32  // orbos 98-01-18: Objects By Value -- begin\n33  public\
          \ final class VisibilityHelper\n34  {\n35      private static String _id\
          \ = \"IDL:omg.org/CORBA/Visibility:1.0\";\n36  \n37      public VisibilityHelper()\n\
          38      {\n39      }\n40  \n41      public static void insert(org.omg.CORBA.Any\
          \ a, short that)\n42      {\n43          org.omg.CORBA.portable.OutputStream\
          \ out = a.create_output_stream();\n44          a.type(type());\n45     \
          \     write(out, that);\n46          a.read_value(out.create_input_stream(),\
          \ type());\n47      }\n48  \n49      public static short extract(org.omg.CORBA.Any\
          \ a)\n50      {\n51          return read(a.create_input_stream());"
        lineNumber: 41
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "33  public final class VisibilityHelper\n34  {\n35      private\
          \ static String _id = \"IDL:omg.org/CORBA/Visibility:1.0\";\n36  \n37  \
          \    public VisibilityHelper()\n38      {\n39      }\n40  \n41      public\
          \ static void insert(org.omg.CORBA.Any a, short that)\n42      {\n43   \
          \       org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          44          a.type(type());\n45          write(out, that);\n46         \
          \ a.read_value(out.create_input_stream(), type());\n47      }\n48  \n49\
          \      public static short extract(org.omg.CORBA.Any a)\n50      {\n51 \
          \         return read(a.create_input_stream());\n52      }\n53  "
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "39      }\n40  \n41      public static void insert(org.omg.CORBA.Any\
          \ a, short that)\n42      {\n43          org.omg.CORBA.portable.OutputStream\
          \ out = a.create_output_stream();\n44          a.type(type());\n45     \
          \     write(out, that);\n46          a.read_value(out.create_input_stream(),\
          \ type());\n47      }\n48  \n49      public static short extract(org.omg.CORBA.Any\
          \ a)\n50      {\n51          return read(a.create_input_stream());\n52 \
          \     }\n53  \n54      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n55  \n56      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n57      {\n58          if (__typeCode == null)\n59          {"
        lineNumber: 49
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "44          a.type(type());\n45          write(out, that);\n46\
          \          a.read_value(out.create_input_stream(), type());\n47      }\n\
          48  \n49      public static short extract(org.omg.CORBA.Any a)\n50     \
          \ {\n51          return read(a.create_input_stream());\n52      }\n53  \n\
          54      private static org.omg.CORBA.TypeCode __typeCode = null;\n55  \n\
          56      synchronized public static org.omg.CORBA.TypeCode type()\n57   \
          \   {\n58          if (__typeCode == null)\n59          {\n60          \
          \    __typeCode = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.VisibilityHelper.id(),\
          \ \"Visibility\", __typeCode);\n63          }\n64          return __typeCode;"
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "46          a.read_value(out.create_input_stream(), type());\n\
          47      }\n48  \n49      public static short extract(org.omg.CORBA.Any a)\n\
          50      {\n51          return read(a.create_input_stream());\n52      }\n\
          53  \n54      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          55  \n56      synchronized public static org.omg.CORBA.TypeCode type()\n\
          57      {\n58          if (__typeCode == null)\n59          {\n60      \
          \        __typeCode = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.VisibilityHelper.id(),\
          \ \"Visibility\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }\n66  "
        lineNumber: 56
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "50      {\n51          return read(a.create_input_stream());\n\
          52      }\n53  \n54      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n55  \n56      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n57      {\n58          if (__typeCode == null)\n59          {\n\
          60              __typeCode = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.VisibilityHelper.id(),\
          \ \"Visibility\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }\n66  \n67      public static String id()\n68      {\n69      \
          \    return _id;\n70      }"
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "51          return read(a.create_input_stream());\n52      }\n\
          53  \n54      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          55  \n56      synchronized public static org.omg.CORBA.TypeCode type()\n\
          57      {\n58          if (__typeCode == null)\n59          {\n60      \
          \        __typeCode = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_short);\n\
          61              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(\n\
          62                      org.jboss.com.sun.org.omg.CORBA.VisibilityHelper.id(),\
          \ \"Visibility\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }\n66  \n67      public static String id()\n68      {\n69      \
          \    return _id;\n70      }\n71  "
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "62                      org.jboss.com.sun.org.omg.CORBA.VisibilityHelper.id(),\
          \ \"Visibility\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }\n66  \n67      public static String id()\n68      {\n69      \
          \    return _id;\n70      }\n71  \n72      public static short read(org.omg.CORBA.portable.InputStream\
          \ istream)\n73      {\n74          short value = (short) 0;\n75        \
          \  value = istream.read_short();\n76          return value;\n77      }\n\
          78  \n79      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, short value)\n80      {\n81          ostream.write_short(value);\n\
          82      }"
        lineNumber: 72
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "69          return _id;\n70      }\n71  \n72      public static\
          \ short read(org.omg.CORBA.portable.InputStream istream)\n73      {\n74\
          \          short value = (short) 0;\n75          value = istream.read_short();\n\
          76          return value;\n77      }\n78  \n79      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, short value)\n80      {\n81          ostream.write_short(value);\n\
          82      }\n83  \n84  }\n"
        lineNumber: 79
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/VisibilityHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 126
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: destroy
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 128
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: destroy
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 151
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: readObject
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 152
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: readObject
          package: org.jboss.com.sun.org.omg.CORBA
      - lineNumber: 164
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: writeObject
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: " 84      public org.omg.CORBA.DefinitionKind def_kind()\n 85  \
          \    {\n 86          org.omg.CORBA.portable.InputStream _in = null;\n 87\
          \          try\n 88          {\n 89              org.omg.CORBA.portable.OutputStream\
          \ _out = _request(\"_get_def_kind\", true);\n 90              _in = _invoke(_out);\n\
          \ 91              // _CHANGED_\n 92              // org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ __result =\n 93              // org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.read\
          \ (_in);\n 94              org.omg.CORBA.DefinitionKind __result = org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.read(_in);\n\
          \ 95              return __result;\n 96          }\n 97          catch (org.omg.CORBA.portable.ApplicationException\
          \ _ex)\n 98          {\n 99              _in = _ex.getInputStream();\n100\
          \              String _id = _ex.getId();\n101              throw new org.omg.CORBA.MARSHAL(_id);\n\
          102          }\n103          catch (org.omg.CORBA.portable.RemarshalException\
          \ _rm)\n104          {"
        lineNumber: 94
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: def_kind
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: " 87          try\n 88          {\n 89              org.omg.CORBA.portable.OutputStream\
          \ _out = _request(\"_get_def_kind\", true);\n 90              _in = _invoke(_out);\n\
          \ 91              // _CHANGED_\n 92              // org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ __result =\n 93              // org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.read\
          \ (_in);\n 94              org.omg.CORBA.DefinitionKind __result = org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.read(_in);\n\
          \ 95              return __result;\n 96          }\n 97          catch (org.omg.CORBA.portable.ApplicationException\
          \ _ex)\n 98          {\n 99              _in = _ex.getInputStream();\n100\
          \              String _id = _ex.getId();\n101              throw new org.omg.CORBA.MARSHAL(_id);\n\
          102          }\n103          catch (org.omg.CORBA.portable.RemarshalException\
          \ _rm)\n104          {\n105              return def_kind();\n106       \
          \   }\n107          finally"
        lineNumber: 97
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: def_kind
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: " 91              // _CHANGED_\n 92              // org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ __result =\n 93              // org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.read\
          \ (_in);\n 94              org.omg.CORBA.DefinitionKind __result = org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.read(_in);\n\
          \ 95              return __result;\n 96          }\n 97          catch (org.omg.CORBA.portable.ApplicationException\
          \ _ex)\n 98          {\n 99              _in = _ex.getInputStream();\n100\
          \              String _id = _ex.getId();\n101              throw new org.omg.CORBA.MARSHAL(_id);\n\
          102          }\n103          catch (org.omg.CORBA.portable.RemarshalException\
          \ _rm)\n104          {\n105              return def_kind();\n106       \
          \   }\n107          finally\n108          {\n109              _releaseReply(_in);\n\
          110          }\n111      } // def_kind"
        lineNumber: 101
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: def_kind
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: " 93              // org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.read\
          \ (_in);\n 94              org.omg.CORBA.DefinitionKind __result = org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.read(_in);\n\
          \ 95              return __result;\n 96          }\n 97          catch (org.omg.CORBA.portable.ApplicationException\
          \ _ex)\n 98          {\n 99              _in = _ex.getInputStream();\n100\
          \              String _id = _ex.getId();\n101              throw new org.omg.CORBA.MARSHAL(_id);\n\
          102          }\n103          catch (org.omg.CORBA.portable.RemarshalException\
          \ _rm)\n104          {\n105              return def_kind();\n106       \
          \   }\n107          finally\n108          {\n109              _releaseReply(_in);\n\
          110          }\n111      } // def_kind\n112  \n113      // write interface"
        lineNumber: 103
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: def_kind
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "106          }\n107          finally\n108          {\n109     \
          \         _releaseReply(_in);\n110          }\n111      } // def_kind\n\
          112  \n113      // write interface\n114      public void destroy()\n115\
          \      {\n116          org.omg.CORBA.portable.InputStream _in = null;\n\
          117          try\n118          {\n119              org.omg.CORBA.portable.OutputStream\
          \ _out = _request(\"destroy\", true);\n120              _in = _invoke(_out);\n\
          121          }\n122          catch (org.omg.CORBA.portable.ApplicationException\
          \ _ex)\n123          {\n124              _in = _ex.getInputStream();\n125\
          \              String _id = _ex.getId();\n126              throw new org.omg.CORBA.MARSHAL(_id);"
        lineNumber: 116
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: destroy
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "109              _releaseReply(_in);\n110          }\n111     \
          \ } // def_kind\n112  \n113      // write interface\n114      public void\
          \ destroy()\n115      {\n116          org.omg.CORBA.portable.InputStream\
          \ _in = null;\n117          try\n118          {\n119              org.omg.CORBA.portable.OutputStream\
          \ _out = _request(\"destroy\", true);\n120              _in = _invoke(_out);\n\
          121          }\n122          catch (org.omg.CORBA.portable.ApplicationException\
          \ _ex)\n123          {\n124              _in = _ex.getInputStream();\n125\
          \              String _id = _ex.getId();\n126              throw new org.omg.CORBA.MARSHAL(_id);\n\
          127          }\n128          catch (org.omg.CORBA.portable.RemarshalException\
          \ _rm)\n129          {"
        lineNumber: 119
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: destroy
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "112  \n113      // write interface\n114      public void destroy()\n\
          115      {\n116          org.omg.CORBA.portable.InputStream _in = null;\n\
          117          try\n118          {\n119              org.omg.CORBA.portable.OutputStream\
          \ _out = _request(\"destroy\", true);\n120              _in = _invoke(_out);\n\
          121          }\n122          catch (org.omg.CORBA.portable.ApplicationException\
          \ _ex)\n123          {\n124              _in = _ex.getInputStream();\n125\
          \              String _id = _ex.getId();\n126              throw new org.omg.CORBA.MARSHAL(_id);\n\
          127          }\n128          catch (org.omg.CORBA.portable.RemarshalException\
          \ _rm)\n129          {\n130              destroy();\n131          }\n132\
          \          finally"
        lineNumber: 122
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: destroy
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "28   * org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java Generated\
          \ by the IDL-to-Java compiler (portable), version \"3.0\"\n29   * from ir.idl\
          \ Thursday, May 6, 1999 1:51:45 AM PDT\n30   */\n31  \n32  // This file\
          \ has been manually _CHANGED_\n33  \n34  // _CHANGED_\n35  // public class\
          \ _IDLTypeStub extends org.omg.CORBA.portable.ObjectImpl implements\n36\
          \  // org.jboss.com.sun.org.omg.CORBA.IDLType\n37  @SuppressWarnings(\"\
          serial\")\n38  public class _IDLTypeStub extends org.omg.CORBA.portable.ObjectImpl\
          \ implements org.omg.CORBA.IDLType\n39  {\n40      // Constructors\n41 \
          \     // NOTE: If the default constructor is used, the\n42      // object\
          \ is useless until _set_delegate (...)\n43      // is called.\n44      public\
          \ _IDLTypeStub()\n45      {\n46          super();\n47      }\n48  "
        lineNumber: 38
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Class
          name: _IDLTypeStub
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "39  {\n40      // Constructors\n41      // NOTE: If the default\
          \ constructor is used, the\n42      // object is useless until _set_delegate\
          \ (...)\n43      // is called.\n44      public _IDLTypeStub()\n45      {\n\
          46          super();\n47      }\n48  \n49      public _IDLTypeStub(org.omg.CORBA.portable.Delegate\
          \ delegate)\n50      {\n51          super();\n52          _set_delegate(delegate);\n\
          53      }\n54  \n55      public org.omg.CORBA.TypeCode type()\n56      {\n\
          57          org.omg.CORBA.portable.InputStream _in = null;\n58         \
          \ try\n59          {"
        lineNumber: 49
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Constructor
          name: _IDLTypeStub
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "45      {\n46          super();\n47      }\n48  \n49      public\
          \ _IDLTypeStub(org.omg.CORBA.portable.Delegate delegate)\n50      {\n51\
          \          super();\n52          _set_delegate(delegate);\n53      }\n54\
          \  \n55      public org.omg.CORBA.TypeCode type()\n56      {\n57       \
          \   org.omg.CORBA.portable.InputStream _in = null;\n58          try\n59\
          \          {\n60              org.omg.CORBA.portable.OutputStream _out =\
          \ _request(\"_get_type\", true);\n61              _in = _invoke(_out);\n\
          62              org.omg.CORBA.TypeCode __result = _in.read_TypeCode();\n\
          63              return __result;\n64          }\n65          catch (org.omg.CORBA.portable.ApplicationException\
          \ _ex)"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "47      }\n48  \n49      public _IDLTypeStub(org.omg.CORBA.portable.Delegate\
          \ delegate)\n50      {\n51          super();\n52          _set_delegate(delegate);\n\
          53      }\n54  \n55      public org.omg.CORBA.TypeCode type()\n56      {\n\
          57          org.omg.CORBA.portable.InputStream _in = null;\n58         \
          \ try\n59          {\n60              org.omg.CORBA.portable.OutputStream\
          \ _out = _request(\"_get_type\", true);\n61              _in = _invoke(_out);\n\
          62              org.omg.CORBA.TypeCode __result = _in.read_TypeCode();\n\
          63              return __result;\n64          }\n65          catch (org.omg.CORBA.portable.ApplicationException\
          \ _ex)\n66          {\n67              _in = _ex.getInputStream();"
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "50      {\n51          super();\n52          _set_delegate(delegate);\n\
          53      }\n54  \n55      public org.omg.CORBA.TypeCode type()\n56      {\n\
          57          org.omg.CORBA.portable.InputStream _in = null;\n58         \
          \ try\n59          {\n60              org.omg.CORBA.portable.OutputStream\
          \ _out = _request(\"_get_type\", true);\n61              _in = _invoke(_out);\n\
          62              org.omg.CORBA.TypeCode __result = _in.read_TypeCode();\n\
          63              return __result;\n64          }\n65          catch (org.omg.CORBA.portable.ApplicationException\
          \ _ex)\n66          {\n67              _in = _ex.getInputStream();\n68 \
          \             String _id = _ex.getId();\n69              throw new org.omg.CORBA.MARSHAL(_id);\n\
          70          }"
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "52          _set_delegate(delegate);\n53      }\n54  \n55     \
          \ public org.omg.CORBA.TypeCode type()\n56      {\n57          org.omg.CORBA.portable.InputStream\
          \ _in = null;\n58          try\n59          {\n60              org.omg.CORBA.portable.OutputStream\
          \ _out = _request(\"_get_type\", true);\n61              _in = _invoke(_out);\n\
          62              org.omg.CORBA.TypeCode __result = _in.read_TypeCode();\n\
          63              return __result;\n64          }\n65          catch (org.omg.CORBA.portable.ApplicationException\
          \ _ex)\n66          {\n67              _in = _ex.getInputStream();\n68 \
          \             String _id = _ex.getId();\n69              throw new org.omg.CORBA.MARSHAL(_id);\n\
          70          }\n71          catch (org.omg.CORBA.portable.RemarshalException\
          \ _rm)\n72          {"
        lineNumber: 62
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '55      public org.omg.CORBA.TypeCode type()

          56      {

          57          org.omg.CORBA.portable.InputStream _in = null;

          58          try

          59          {

          60              org.omg.CORBA.portable.OutputStream _out = _request("_get_type",
          true);

          61              _in = _invoke(_out);

          62              org.omg.CORBA.TypeCode __result = _in.read_TypeCode();

          63              return __result;

          64          }

          65          catch (org.omg.CORBA.portable.ApplicationException _ex)

          66          {

          67              _in = _ex.getInputStream();

          68              String _id = _ex.getId();

          69              throw new org.omg.CORBA.MARSHAL(_id);

          70          }

          71          catch (org.omg.CORBA.portable.RemarshalException _rm)

          72          {

          73              return type();

          74          }

          75          finally'
        lineNumber: 65
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: '59          {

          60              org.omg.CORBA.portable.OutputStream _out = _request("_get_type",
          true);

          61              _in = _invoke(_out);

          62              org.omg.CORBA.TypeCode __result = _in.read_TypeCode();

          63              return __result;

          64          }

          65          catch (org.omg.CORBA.portable.ApplicationException _ex)

          66          {

          67              _in = _ex.getInputStream();

          68              String _id = _ex.getId();

          69              throw new org.omg.CORBA.MARSHAL(_id);

          70          }

          71          catch (org.omg.CORBA.portable.RemarshalException _rm)

          72          {

          73              return type();

          74          }

          75          finally

          76          {

          77              _releaseReply(_in);

          78          }

          79      } // type'
        lineNumber: 69
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "61              _in = _invoke(_out);\n62              org.omg.CORBA.TypeCode\
          \ __result = _in.read_TypeCode();\n63              return __result;\n64\
          \          }\n65          catch (org.omg.CORBA.portable.ApplicationException\
          \ _ex)\n66          {\n67              _in = _ex.getInputStream();\n68 \
          \             String _id = _ex.getId();\n69              throw new org.omg.CORBA.MARSHAL(_id);\n\
          70          }\n71          catch (org.omg.CORBA.portable.RemarshalException\
          \ _rm)\n72          {\n73              return type();\n74          }\n75\
          \          finally\n76          {\n77              _releaseReply(_in);\n\
          78          }\n79      } // type\n80  \n81      // read interface"
        lineNumber: 71
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "74          }\n75          finally\n76          {\n77         \
          \     _releaseReply(_in);\n78          }\n79      } // type\n80  \n81  \
          \    // read interface\n82      // _CHANGED_\n83      // public org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ def_kind ()\n84      public org.omg.CORBA.DefinitionKind def_kind()\n\
          85      {\n86          org.omg.CORBA.portable.InputStream _in = null;\n\
          87          try\n88          {\n89              org.omg.CORBA.portable.OutputStream\
          \ _out = _request(\"_get_def_kind\", true);\n90              _in = _invoke(_out);\n\
          91              // _CHANGED_\n92              // org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ __result =\n93              // org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.read\
          \ (_in);\n94              org.omg.CORBA.DefinitionKind __result = org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.read(_in);"
        lineNumber: 84
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: def_kind
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "76          {\n77              _releaseReply(_in);\n78        \
          \  }\n79      } // type\n80  \n81      // read interface\n82      // _CHANGED_\n\
          83      // public org.jboss.com.sun.org.omg.CORBA.DefinitionKind def_kind\
          \ ()\n84      public org.omg.CORBA.DefinitionKind def_kind()\n85      {\n\
          86          org.omg.CORBA.portable.InputStream _in = null;\n87         \
          \ try\n88          {\n89              org.omg.CORBA.portable.OutputStream\
          \ _out = _request(\"_get_def_kind\", true);\n90              _in = _invoke(_out);\n\
          91              // _CHANGED_\n92              // org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ __result =\n93              // org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.read\
          \ (_in);\n94              org.omg.CORBA.DefinitionKind __result = org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.read(_in);\n\
          95              return __result;\n96          }"
        lineNumber: 86
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: def_kind
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "79      } // type\n80  \n81      // read interface\n82      //\
          \ _CHANGED_\n83      // public org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ def_kind ()\n84      public org.omg.CORBA.DefinitionKind def_kind()\n\
          85      {\n86          org.omg.CORBA.portable.InputStream _in = null;\n\
          87          try\n88          {\n89              org.omg.CORBA.portable.OutputStream\
          \ _out = _request(\"_get_def_kind\", true);\n90              _in = _invoke(_out);\n\
          91              // _CHANGED_\n92              // org.jboss.com.sun.org.omg.CORBA.DefinitionKind\
          \ __result =\n93              // org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.read\
          \ (_in);\n94              org.omg.CORBA.DefinitionKind __result = org.jboss.com.sun.org.omg.CORBA.DefinitionKindHelper.read(_in);\n\
          95              return __result;\n96          }\n97          catch (org.omg.CORBA.portable.ApplicationException\
          \ _ex)\n98          {\n99              _in = _ex.getInputStream();"
        lineNumber: 89
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/_IDLTypeStub.java
          kind: Method
          name: def_kind
          package: org.jboss.com.sun.org.omg.CORBA
      - codeSnip: "18   * 2 along with this work; if not, write to the Free Software\
          \ Foundation,\n19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.org.omg.CORBA.portable;\n27  \n28  import org.omg.CORBA.TypeCode;\n\
          29  import org.omg.CORBA.portable.BoxedValueHelper;\n30  \n31  /**\n32 \
          \  * An interface that is implemented by valuetype helper classes. This\
          \ interface appeared in CORBA 2.3 drafts but was\n33   * removed from the\
          \ published CORBA 2.3 specification.\n34   * <P>\n35   * \n36   * @deprecated\
          \ Deprecated by CORBA 2.3.\n37   */\n38  @Deprecated"
        lineNumber: 28
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/portable/ValueHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/portable/ValueHelper.java
          kind: Interface
          name: ValueHelper
          package: org.jboss.com.sun.org.omg.CORBA.portable
      - codeSnip: "19   * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\
          \ USA.\n20   *\n21   * Please contact Oracle, 500 Oracle Parkway, Redwood\
          \ Shores, CA 94065 USA\n22   * or visit www.oracle.com if you need additional\
          \ information or have any\n23   * questions.\n24   */\n25  \n26  package\
          \ org.jboss.com.sun.org.omg.CORBA.portable;\n27  \n28  import org.omg.CORBA.TypeCode;\n\
          29  import org.omg.CORBA.portable.BoxedValueHelper;\n30  \n31  /**\n32 \
          \  * An interface that is implemented by valuetype helper classes. This\
          \ interface appeared in CORBA 2.3 drafts but was\n33   * removed from the\
          \ published CORBA 2.3 specification.\n34   * <P>\n35   * \n36   * @deprecated\
          \ Deprecated by CORBA 2.3.\n37   */\n38  @Deprecated\n39  public interface\
          \ ValueHelper extends BoxedValueHelper"
        lineNumber: 29
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/portable/ValueHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/CORBA/portable/ValueHelper.java
          kind: Interface
          name: ValueHelper
          package: org.jboss.com.sun.org.omg.CORBA.portable
      - codeSnip: "24   */\n25  package org.jboss.com.sun.org.omg.SendingContext;\n\
          26  \n27  /**\n28   * org/jboss/com/sun/org/omg/SendingContext/CodeBase.java\
          \ Generated by the IDL-to-Java compiler (portable), version\n29   * \"3.0\"\
          \ from rt.idl Thursday, May 6, 1999 1:52:08 AM PDT\n30   */\n31  \n32  //\
          \ Edited to leave RunTime in org.omg.CORBA\n33  \n34  public interface CodeBase\
          \ extends CodeBaseOperations, org.omg.SendingContext.RunTime, org.omg.CORBA.portable.IDLEntity\n\
          35  {\n36  } // interface CodeBase\n"
        lineNumber: 34
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBase.java
          kind: Interface
          name: CodeBase
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: " 81      public static org.jboss.com.sun.org.omg.SendingContext.CodeBase\
          \ narrow(org.omg.CORBA.Object obj)\n 82      {\n 83          if (obj ==\
          \ null)\n 84              return null;\n 85          else if (obj instanceof\
          \ org.jboss.com.sun.org.omg.SendingContext.CodeBase)\n 86              return\
          \ (org.jboss.com.sun.org.omg.SendingContext.CodeBase) obj;\n 87        \
          \  else if (!obj._is_a(id()))\n 88              throw new org.omg.CORBA.BAD_PARAM();\n\
          \ 89          else\n 90          {\n 91              org.omg.CORBA.portable.Delegate\
          \ delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate();\n\
          \ 92              return new org.jboss.com.sun.org.omg.SendingContext._CodeBaseStub(delegate);\n\
          \ 93          }\n 94      }\n 95  \n 96  }\n"
        lineNumber: 91
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
          kind: Method
          name: narrow
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "30   */\n31  \n32  public final class CodeBaseHelper\n33  {\n34\
          \      private static String _id = \"IDL:omg.org/SendingContext/CodeBase:1.0\"\
          ;\n35  \n36      public CodeBaseHelper()\n37      {\n38      }\n39  \n40\
          \      public static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.SendingContext.CodeBase\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.SendingContext.CodeBase\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "32  public final class CodeBaseHelper\n33  {\n34      private static\
          \ String _id = \"IDL:omg.org/SendingContext/CodeBase:1.0\";\n35  \n36  \
          \    public CodeBaseHelper()\n37      {\n38      }\n39  \n40      public\
          \ static void insert(org.omg.CORBA.Any a, org.jboss.com.sun.org.omg.SendingContext.CodeBase\
          \ that)\n41      {\n42          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n43          a.type(type());\n44         \
          \ write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static org.jboss.com.sun.org.omg.SendingContext.CodeBase\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, org.jboss.com.sun.org.omg.SendingContext.CodeBase that)\n41      {\n\
          42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static org.jboss.com.sun.org.omg.SendingContext.CodeBase extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static org.jboss.com.sun.org.omg.SendingContext.CodeBase\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_interface_tc(\n\
          60                      org.jboss.com.sun.org.omg.SendingContext.CodeBaseHelper.id(),\
          \ \"CodeBase\");\n61          }\n62          return __typeCode;\n63    \
          \  }"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static org.jboss.com.sun.org.omg.SendingContext.CodeBase\
          \ extract(org.omg.CORBA.Any a)\n49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_interface_tc(\n\
          60                      org.jboss.com.sun.org.omg.SendingContext.CodeBaseHelper.id(),\
          \ \"CodeBase\");\n61          }\n62          return __typeCode;\n63    \
          \  }\n64  \n65      public static String id()"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_interface_tc(\n\
          60                      org.jboss.com.sun.org.omg.SendingContext.CodeBaseHelper.id(),\
          \ \"CodeBase\");\n61          }\n62          return __typeCode;\n63    \
          \  }\n64  \n65      public static String id()\n66      {\n67          return\
          \ _id;\n68      }\n69  "
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "60                      org.jboss.com.sun.org.omg.SendingContext.CodeBaseHelper.id(),\
          \ \"CodeBase\");\n61          }\n62          return __typeCode;\n63    \
          \  }\n64  \n65      public static String id()\n66      {\n67          return\
          \ _id;\n68      }\n69  \n70      public static org.jboss.com.sun.org.omg.SendingContext.CodeBase\
          \ read(org.omg.CORBA.portable.InputStream istream)\n71      {\n72      \
          \    return narrow(istream.read_Object(_CodeBaseStub.class));\n73      }\n\
          74  \n75      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n76              org.jboss.com.sun.org.omg.SendingContext.CodeBase\
          \ value)\n77      {\n78          ostream.write_Object(value);\n79      }\n\
          80  "
        lineNumber: 70
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "65      public static String id()\n66      {\n67          return\
          \ _id;\n68      }\n69  \n70      public static org.jboss.com.sun.org.omg.SendingContext.CodeBase\
          \ read(org.omg.CORBA.portable.InputStream istream)\n71      {\n72      \
          \    return narrow(istream.read_Object(_CodeBaseStub.class));\n73      }\n\
          74  \n75      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n76              org.jboss.com.sun.org.omg.SendingContext.CodeBase\
          \ value)\n77      {\n78          ostream.write_Object(value);\n79      }\n\
          80  \n81      public static org.jboss.com.sun.org.omg.SendingContext.CodeBase\
          \ narrow(org.omg.CORBA.Object obj)\n82      {\n83          if (obj == null)\n\
          84              return null;\n85          else if (obj instanceof org.jboss.com.sun.org.omg.SendingContext.CodeBase)"
        lineNumber: 75
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "71      {\n72          return narrow(istream.read_Object(_CodeBaseStub.class));\n\
          73      }\n74  \n75      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n76              org.jboss.com.sun.org.omg.SendingContext.CodeBase\
          \ value)\n77      {\n78          ostream.write_Object(value);\n79      }\n\
          80  \n81      public static org.jboss.com.sun.org.omg.SendingContext.CodeBase\
          \ narrow(org.omg.CORBA.Object obj)\n82      {\n83          if (obj == null)\n\
          84              return null;\n85          else if (obj instanceof org.jboss.com.sun.org.omg.SendingContext.CodeBase)\n\
          86              return (org.jboss.com.sun.org.omg.SendingContext.CodeBase)\
          \ obj;\n87          else if (!obj._is_a(id()))\n88              throw new\
          \ org.omg.CORBA.BAD_PARAM();\n89          else\n90          {\n91      \
          \        org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl)\
          \ obj)._get_delegate();"
        lineNumber: 81
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
          kind: Method
          name: narrow
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "78          ostream.write_Object(value);\n79      }\n80  \n81 \
          \     public static org.jboss.com.sun.org.omg.SendingContext.CodeBase narrow(org.omg.CORBA.Object\
          \ obj)\n82      {\n83          if (obj == null)\n84              return\
          \ null;\n85          else if (obj instanceof org.jboss.com.sun.org.omg.SendingContext.CodeBase)\n\
          86              return (org.jboss.com.sun.org.omg.SendingContext.CodeBase)\
          \ obj;\n87          else if (!obj._is_a(id()))\n88              throw new\
          \ org.omg.CORBA.BAD_PARAM();\n89          else\n90          {\n91      \
          \        org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl)\
          \ obj)._get_delegate();\n92              return new org.jboss.com.sun.org.omg.SendingContext._CodeBaseStub(delegate);\n\
          93          }\n94      }\n95  \n96  }\n"
        lineNumber: 88
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBaseHelper.java
          kind: Method
          name: narrow
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "30   */\n31  \n32  public final class URLHelper\n33  {\n34    \
          \  private static String _id = \"IDL:omg.org/SendingContext/CodeBase/URL:1.0\"\
          ;\n35  \n36      public URLHelper()\n37      {\n38      }\n39  \n40    \
          \  public static void insert(org.omg.CORBA.Any a, String that)\n41     \
          \ {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static String extract(org.omg.CORBA.Any a)\n49      {\n50\
          \          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "32  public final class URLHelper\n33  {\n34      private static\
          \ String _id = \"IDL:omg.org/SendingContext/CodeBase/URL:1.0\";\n35  \n\
          36      public URLHelper()\n37      {\n38      }\n39  \n40      public static\
          \ void insert(org.omg.CORBA.Any a, String that)\n41      {\n42         \
          \ org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static String extract(org.omg.CORBA.Any a)\n49      {\n50\
          \          return read(a.create_input_stream());\n51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, String that)\n41      {\n42          org.omg.CORBA.portable.OutputStream\
          \ out = a.create_output_stream();\n43          a.type(type());\n44     \
          \     write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static String extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static String extract(org.omg.CORBA.Any a)\n49    \
          \  {\n50          return read(a.create_input_stream());\n51      }\n52 \
          \ \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n54\
          \  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLHelper.id(),\
          \ \"URL\", __typeCode);\n61          }\n62          return __typeCode;\n\
          63      }"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static String extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLHelper.id(),\
          \ \"URL\", __typeCode);\n61          }\n62          return __typeCode;\n\
          63      }\n64  \n65      public static String id()"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLHelper.id(),\
          \ \"URL\", __typeCode);\n61          }\n62          return __typeCode;\n\
          63      }\n64  \n65      public static String id()\n66      {\n67      \
          \    return _id;\n68      }\n69  "
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "50          return read(a.create_input_stream());\n51      }\n\
          52  \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLHelper.id(),\
          \ \"URL\", __typeCode);\n61          }\n62          return __typeCode;\n\
          63      }\n64  \n65      public static String id()\n66      {\n67      \
          \    return _id;\n68      }\n69  \n70      public static String read(org.omg.CORBA.portable.InputStream\
          \ istream)"
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLHelper.id(),\
          \ \"URL\", __typeCode);\n61          }\n62          return __typeCode;\n\
          63      }\n64  \n65      public static String id()\n66      {\n67      \
          \    return _id;\n68      }\n69  \n70      public static String read(org.omg.CORBA.portable.InputStream\
          \ istream)\n71      {\n72          String value = null;\n73          value\
          \ = istream.read_string();\n74          return value;\n75      }\n76  \n\
          77      public static void write(org.omg.CORBA.portable.OutputStream ostream,\
          \ String value)\n78      {\n79          ostream.write_string(value);\n80\
          \      }"
        lineNumber: 70
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "67          return _id;\n68      }\n69  \n70      public static\
          \ String read(org.omg.CORBA.portable.InputStream istream)\n71      {\n72\
          \          String value = null;\n73          value = istream.read_string();\n\
          74          return value;\n75      }\n76  \n77      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, String value)\n78      {\n79          ostream.write_string(value);\n\
          80      }\n81  \n82  }\n"
        lineNumber: 77
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "30   */\n31  \n32  public final class URLSeqHelper\n33  {\n34 \
          \     private static String _id = \"IDL:omg.org/SendingContext/CodeBase/URLSeq:1.0\"\
          ;\n35  \n36      public URLSeqHelper()\n37      {\n38      }\n39  \n40 \
          \     public static void insert(org.omg.CORBA.Any a, String[] that)\n41\
          \      {\n42          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static String[] extract(org.omg.CORBA.Any a)\n49      {\n\
          50          return read(a.create_input_stream());"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "32  public final class URLSeqHelper\n33  {\n34      private static\
          \ String _id = \"IDL:omg.org/SendingContext/CodeBase/URLSeq:1.0\";\n35 \
          \ \n36      public URLSeqHelper()\n37      {\n38      }\n39  \n40      public\
          \ static void insert(org.omg.CORBA.Any a, String[] that)\n41      {\n42\
          \          org.omg.CORBA.portable.OutputStream out = a.create_output_stream();\n\
          43          a.type(type());\n44          write(out, that);\n45         \
          \ a.read_value(out.create_input_stream(), type());\n46      }\n47  \n48\
          \      public static String[] extract(org.omg.CORBA.Any a)\n49      {\n\
          50          return read(a.create_input_stream());\n51      }\n52  "
        lineNumber: 42
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "38      }\n39  \n40      public static void insert(org.omg.CORBA.Any\
          \ a, String[] that)\n41      {\n42          org.omg.CORBA.portable.OutputStream\
          \ out = a.create_output_stream();\n43          a.type(type());\n44     \
          \     write(out, that);\n45          a.read_value(out.create_input_stream(),\
          \ type());\n46      }\n47  \n48      public static String[] extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {"
        lineNumber: 48
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "43          a.type(type());\n44          write(out, that);\n45\
          \          a.read_value(out.create_input_stream(), type());\n46      }\n\
          47  \n48      public static String[] extract(org.omg.CORBA.Any a)\n49  \
          \    {\n50          return read(a.create_input_stream());\n51      }\n52\
          \  \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLHelper.id(),\
          \ \"URL\", __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLSeqHelper.id(),\
          \ \"URLSeq\", __typeCode);\n63          }"
        lineNumber: 53
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "45          a.read_value(out.create_input_stream(), type());\n\
          46      }\n47  \n48      public static String[] extract(org.omg.CORBA.Any\
          \ a)\n49      {\n50          return read(a.create_input_stream());\n51 \
          \     }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLHelper.id(),\
          \ \"URL\", __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLSeqHelper.id(),\
          \ \"URLSeq\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "49      {\n50          return read(a.create_input_stream());\n\
          51      }\n52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLHelper.id(),\
          \ \"URL\", __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLSeqHelper.id(),\
          \ \"URLSeq\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }\n66  \n67      public static String id()\n68      {\n69      \
          \    return _id;"
        lineNumber: 59
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "50          return read(a.create_input_stream());\n51      }\n\
          52  \n53      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          54  \n55      synchronized public static org.omg.CORBA.TypeCode type()\n\
          56      {\n57          if (__typeCode == null)\n58          {\n59      \
          \        __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n60\
          \              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLHelper.id(),\
          \ \"URL\", __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLSeqHelper.id(),\
          \ \"URLSeq\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }\n66  \n67      public static String id()\n68      {\n69      \
          \    return _id;\n70      }"
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "51      }\n52  \n53      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLHelper.id(),\
          \ \"URL\", __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLSeqHelper.id(),\
          \ \"URLSeq\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }\n66  \n67      public static String id()\n68      {\n69      \
          \    return _id;\n70      }\n71  "
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "52  \n53      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n54  \n55      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n56      {\n57          if (__typeCode == null)\n58          {\n\
          59              __typeCode = org.omg.CORBA.ORB.init().create_string_tc(0);\n\
          60              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLHelper.id(),\
          \ \"URL\", __typeCode);\n61              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLSeqHelper.id(),\
          \ \"URLSeq\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }\n66  \n67      public static String id()\n68      {\n69      \
          \    return _id;\n70      }\n71  \n72      public static String[] read(org.omg.CORBA.portable.InputStream\
          \ istream)"
        lineNumber: 62
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(URLSeqHelper.id(),\
          \ \"URLSeq\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }\n66  \n67      public static String id()\n68      {\n69      \
          \    return _id;\n70      }\n71  \n72      public static String[] read(org.omg.CORBA.portable.InputStream\
          \ istream)\n73      {\n74          String value[] = null;\n75          int\
          \ _len0 = istream.read_long();\n76          value = new String[_len0];\n\
          77          for (int _o1 = 0; _o1 < value.length; ++_o1)\n78           \
          \   value[_o1] = URLHelper.read(istream);\n79          return value;\n80\
          \      }\n81  \n82      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, String[] value)"
        lineNumber: 72
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "72      public static String[] read(org.omg.CORBA.portable.InputStream\
          \ istream)\n73      {\n74          String value[] = null;\n75          int\
          \ _len0 = istream.read_long();\n76          value = new String[_len0];\n\
          77          for (int _o1 = 0; _o1 < value.length; ++_o1)\n78           \
          \   value[_o1] = URLHelper.read(istream);\n79          return value;\n80\
          \      }\n81  \n82      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream, String[] value)\n83      {\n84          ostream.write_long(value.length);\n\
          85          for (int _i0 = 0; _i0 < value.length; ++_i0)\n86           \
          \   URLHelper.write(ostream, value[_i0]);\n87      }\n88  \n89  }\n"
        lineNumber: 82
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/URLSeqHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "30   */\n31  \n32  public final class ValueDescSeqHelper\n33  {\n\
          34      private static String _id = \"IDL:omg.org/SendingContext/CodeBase/ValueDescSeq:1.0\"\
          ;\n35  \n36      public ValueDescSeqHelper()\n37      {\n38      }\n39 \
          \ \n40      public static void insert(org.omg.CORBA.Any a,\n41         \
          \     org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription[]\
          \ that)\n42      {\n43          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n44          a.type(type());\n45         \
          \ write(out, that);\n46          a.read_value(out.create_input_stream(),\
          \ type());\n47      }\n48  \n49      public static org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription[]\
          \ extract(org.omg.CORBA.Any a)\n50      {"
        lineNumber: 40
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "33  {\n34      private static String _id = \"IDL:omg.org/SendingContext/CodeBase/ValueDescSeq:1.0\"\
          ;\n35  \n36      public ValueDescSeqHelper()\n37      {\n38      }\n39 \
          \ \n40      public static void insert(org.omg.CORBA.Any a,\n41         \
          \     org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription[]\
          \ that)\n42      {\n43          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n44          a.type(type());\n45         \
          \ write(out, that);\n46          a.read_value(out.create_input_stream(),\
          \ type());\n47      }\n48  \n49      public static org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription[]\
          \ extract(org.omg.CORBA.Any a)\n50      {\n51          return read(a.create_input_stream());\n\
          52      }\n53  "
        lineNumber: 43
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
          kind: Method
          name: insert
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "39  \n40      public static void insert(org.omg.CORBA.Any a,\n\
          41              org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription[]\
          \ that)\n42      {\n43          org.omg.CORBA.portable.OutputStream out\
          \ = a.create_output_stream();\n44          a.type(type());\n45         \
          \ write(out, that);\n46          a.read_value(out.create_input_stream(),\
          \ type());\n47      }\n48  \n49      public static org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription[]\
          \ extract(org.omg.CORBA.Any a)\n50      {\n51          return read(a.create_input_stream());\n\
          52      }\n53  \n54      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n55  \n56      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n57      {\n58          if (__typeCode == null)\n59          {"
        lineNumber: 49
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
          kind: Method
          name: extract
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "44          a.type(type());\n45          write(out, that);\n46\
          \          a.read_value(out.create_input_stream(), type());\n47      }\n\
          48  \n49      public static org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription[]\
          \ extract(org.omg.CORBA.Any a)\n50      {\n51          return read(a.create_input_stream());\n\
          52      }\n53  \n54      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n55  \n56      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n57      {\n58          if (__typeCode == null)\n59          {\n\
          60              __typeCode = org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescriptionHelper.type();\n\
          61              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(ValueDescSeqHelper.id(),\
          \ \"ValueDescSeq\", __typeCode);\n63          }\n64          return __typeCode;"
        lineNumber: 54
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
          kind: Field
          name: __typeCode
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "46          a.read_value(out.create_input_stream(), type());\n\
          47      }\n48  \n49      public static org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription[]\
          \ extract(org.omg.CORBA.Any a)\n50      {\n51          return read(a.create_input_stream());\n\
          52      }\n53  \n54      private static org.omg.CORBA.TypeCode __typeCode\
          \ = null;\n55  \n56      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n57      {\n58          if (__typeCode == null)\n59          {\n\
          60              __typeCode = org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescriptionHelper.type();\n\
          61              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(ValueDescSeqHelper.id(),\
          \ \"ValueDescSeq\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }\n66  "
        lineNumber: 56
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "51          return read(a.create_input_stream());\n52      }\n\
          53  \n54      private static org.omg.CORBA.TypeCode __typeCode = null;\n\
          55  \n56      synchronized public static org.omg.CORBA.TypeCode type()\n\
          57      {\n58          if (__typeCode == null)\n59          {\n60      \
          \        __typeCode = org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescriptionHelper.type();\n\
          61              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(ValueDescSeqHelper.id(),\
          \ \"ValueDescSeq\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }\n66  \n67      public static String id()\n68      {\n69      \
          \    return _id;\n70      }\n71  "
        lineNumber: 61
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "52      }\n53  \n54      private static org.omg.CORBA.TypeCode\
          \ __typeCode = null;\n55  \n56      synchronized public static org.omg.CORBA.TypeCode\
          \ type()\n57      {\n58          if (__typeCode == null)\n59          {\n\
          60              __typeCode = org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescriptionHelper.type();\n\
          61              __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0,\
          \ __typeCode);\n62              __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(ValueDescSeqHelper.id(),\
          \ \"ValueDescSeq\", __typeCode);\n63          }\n64          return __typeCode;\n\
          65      }\n66  \n67      public static String id()\n68      {\n69      \
          \    return _id;\n70      }\n71  \n72      public static org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription[]\
          \ read("
        lineNumber: 62
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
          kind: Method
          name: type
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "63          }\n64          return __typeCode;\n65      }\n66  \n\
          67      public static String id()\n68      {\n69          return _id;\n\
          70      }\n71  \n72      public static org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription[]\
          \ read(\n73              org.omg.CORBA.portable.InputStream istream)\n74\
          \      {\n75          org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription\
          \ value[] = null;\n76          int _len0 = istream.read_long();\n77    \
          \      value = new org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription[_len0];\n\
          78          for (int _o1 = 0; _o1 < value.length; ++_o1)\n79           \
          \   value[_o1] = org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescriptionHelper.read(istream);\n\
          80          return value;\n81      }\n82  \n83      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,"
        lineNumber: 73
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
          kind: Method
          name: read
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "73              org.omg.CORBA.portable.InputStream istream)\n74\
          \      {\n75          org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription\
          \ value[] = null;\n76          int _len0 = istream.read_long();\n77    \
          \      value = new org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription[_len0];\n\
          78          for (int _o1 = 0; _o1 < value.length; ++_o1)\n79           \
          \   value[_o1] = org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescriptionHelper.read(istream);\n\
          80          return value;\n81      }\n82  \n83      public static void write(org.omg.CORBA.portable.OutputStream\
          \ ostream,\n84              org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription[]\
          \ value)\n85      {\n86          ostream.write_long(value.length);\n87 \
          \         for (int _i0 = 0; _i0 < value.length; ++_i0)\n88             \
          \ org.jboss.com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescriptionHelper.write(ostream,\
          \ value[_i0]);\n89      }\n90  \n91  }\n"
        lineNumber: 83
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/CodeBasePackage/ValueDescSeqHelper.java
          kind: Method
          name: write
          package: org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage
      - codeSnip: "119              case 5:  // SendingContext/CodeBase/bases\n120\
          \                  {\n121                      String x = org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.read\
          \ (in);\n122                      String __result[] = null;\n123       \
          \               __result = this.bases (x);\n124                      org.jboss.com.sun.org.omg.CORBA.RepositoryIdSeqHelper.write\
          \ (out, __result);\n125                      break;\n126               \
          \   }\n127  \n128              default:\n129                  throw new\
          \ org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);\n\
          130              }\n131  \n132          return out;\n133      } // _invoke\n\
          134  \n135      // Type-specific CORBA::Object operations\n136      private\
          \ static String[] __ids = {\n137          \"IDL:omg.org/SendingContext/CodeBase:1.0\"\
          ,\n138          \"IDL:omg.org/SendingContext/RunTime:1.0\"};\n139  "
        lineNumber: 129
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java
          kind: Method
          name: _invoke
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "26  \n27  \n28  /**\n29  * org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java\n\
          30  * Generated by the IDL-to-Java compiler (portable), version \"3.0\"\n\
          31  * from rt.idl\n32  * Thursday, May 6, 1999 1:52:08 AM PDT\n33  */\n\
          34  \n35  @SuppressWarnings(\"serial\")\n36  public abstract class _CodeBaseImplBase\
          \ extends org.omg.CORBA.portable.ObjectImpl\n37      implements org.jboss.com.sun.org.omg.SendingContext.CodeBase,\
          \ org.omg.CORBA.portable.InvokeHandler\n38  {\n39  \n40      // Constructors\n\
          41      public _CodeBaseImplBase ()\n42      {\n43      }\n44  \n45    \
          \  private static java.util.Hashtable<String, Integer> _methods = new java.util.Hashtable<String,\
          \ Integer> ();\n46      static"
        lineNumber: 36
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java
          kind: Class
          name: _CodeBaseImplBase
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "27  \n28  /**\n29  * org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java\n\
          30  * Generated by the IDL-to-Java compiler (portable), version \"3.0\"\n\
          31  * from rt.idl\n32  * Thursday, May 6, 1999 1:52:08 AM PDT\n33  */\n\
          34  \n35  @SuppressWarnings(\"serial\")\n36  public abstract class _CodeBaseImplBase\
          \ extends org.omg.CORBA.portable.ObjectImpl\n37      implements org.jboss.com.sun.org.omg.SendingContext.CodeBase,\
          \ org.omg.CORBA.portable.InvokeHandler\n38  {\n39  \n40      // Constructors\n\
          41      public _CodeBaseImplBase ()\n42      {\n43      }\n44  \n45    \
          \  private static java.util.Hashtable<String, Integer> _methods = new java.util.Hashtable<String,\
          \ Integer> ();\n46      static\n47      {"
        lineNumber: 37
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java
          kind: Class
          name: _CodeBaseImplBase
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "46      static\n47      {\n48          _methods.put (\"get_ir\"\
          , new java.lang.Integer (0));\n49          _methods.put (\"implementation\"\
          , new java.lang.Integer (1));\n50          _methods.put (\"implementations\"\
          , new java.lang.Integer (2));\n51          _methods.put (\"meta\", new java.lang.Integer\
          \ (3));\n52          _methods.put (\"metas\", new java.lang.Integer (4));\n\
          53          _methods.put (\"bases\", new java.lang.Integer (5));\n54   \
          \   }\n55  \n56      public org.omg.CORBA.portable.OutputStream _invoke\
          \ (String method,\n57                                                  \
          \        org.omg.CORBA.portable.InputStream in,\n58                    \
          \                                      org.omg.CORBA.portable.ResponseHandler\
          \ rh)\n59      {\n60          org.omg.CORBA.portable.OutputStream out =\
          \ rh.createReply();\n61          java.lang.Integer __method = _methods.get\
          \ (method);\n62          if (__method == null)\n63              throw new\
          \ org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);\n\
          64  \n65          switch (__method.intValue ())\n66              {"
        lineNumber: 56
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java
          kind: Method
          name: _invoke
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "47      {\n48          _methods.put (\"get_ir\", new java.lang.Integer\
          \ (0));\n49          _methods.put (\"implementation\", new java.lang.Integer\
          \ (1));\n50          _methods.put (\"implementations\", new java.lang.Integer\
          \ (2));\n51          _methods.put (\"meta\", new java.lang.Integer (3));\n\
          52          _methods.put (\"metas\", new java.lang.Integer (4));\n53   \
          \       _methods.put (\"bases\", new java.lang.Integer (5));\n54      }\n\
          55  \n56      public org.omg.CORBA.portable.OutputStream _invoke (String\
          \ method,\n57                                                          org.omg.CORBA.portable.InputStream\
          \ in,\n58                                                          org.omg.CORBA.portable.ResponseHandler\
          \ rh)\n59      {\n60          org.omg.CORBA.portable.OutputStream out =\
          \ rh.createReply();\n61          java.lang.Integer __method = _methods.get\
          \ (method);\n62          if (__method == null)\n63              throw new\
          \ org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);\n\
          64  \n65          switch (__method.intValue ())\n66              {\n67  "
        lineNumber: 57
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java
          kind: Method
          name: _invoke
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "48          _methods.put (\"get_ir\", new java.lang.Integer (0));\n\
          49          _methods.put (\"implementation\", new java.lang.Integer (1));\n\
          50          _methods.put (\"implementations\", new java.lang.Integer (2));\n\
          51          _methods.put (\"meta\", new java.lang.Integer (3));\n52    \
          \      _methods.put (\"metas\", new java.lang.Integer (4));\n53        \
          \  _methods.put (\"bases\", new java.lang.Integer (5));\n54      }\n55 \
          \ \n56      public org.omg.CORBA.portable.OutputStream _invoke (String method,\n\
          57                                                          org.omg.CORBA.portable.InputStream\
          \ in,\n58                                                          org.omg.CORBA.portable.ResponseHandler\
          \ rh)\n59      {\n60          org.omg.CORBA.portable.OutputStream out =\
          \ rh.createReply();\n61          java.lang.Integer __method = _methods.get\
          \ (method);\n62          if (__method == null)\n63              throw new\
          \ org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);\n\
          64  \n65          switch (__method.intValue ())\n66              {\n67 \
          \ \n68                  // Operation to obtain the IR from the sending context"
        lineNumber: 58
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java
          kind: Method
          name: _invoke
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "50          _methods.put (\"implementations\", new java.lang.Integer\
          \ (2));\n51          _methods.put (\"meta\", new java.lang.Integer (3));\n\
          52          _methods.put (\"metas\", new java.lang.Integer (4));\n53   \
          \       _methods.put (\"bases\", new java.lang.Integer (5));\n54      }\n\
          55  \n56      public org.omg.CORBA.portable.OutputStream _invoke (String\
          \ method,\n57                                                          org.omg.CORBA.portable.InputStream\
          \ in,\n58                                                          org.omg.CORBA.portable.ResponseHandler\
          \ rh)\n59      {\n60          org.omg.CORBA.portable.OutputStream out =\
          \ rh.createReply();\n61          java.lang.Integer __method = _methods.get\
          \ (method);\n62          if (__method == null)\n63              throw new\
          \ org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);\n\
          64  \n65          switch (__method.intValue ())\n66              {\n67 \
          \ \n68                  // Operation to obtain the IR from the sending context\n\
          69              case 0:  // SendingContext/CodeBase/get_ir\n70         \
          \         {"
        lineNumber: 60
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java
          kind: Method
          name: _invoke
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "53          _methods.put (\"bases\", new java.lang.Integer (5));\n\
          54      }\n55  \n56      public org.omg.CORBA.portable.OutputStream _invoke\
          \ (String method,\n57                                                  \
          \        org.omg.CORBA.portable.InputStream in,\n58                    \
          \                                      org.omg.CORBA.portable.ResponseHandler\
          \ rh)\n59      {\n60          org.omg.CORBA.portable.OutputStream out =\
          \ rh.createReply();\n61          java.lang.Integer __method = _methods.get\
          \ (method);\n62          if (__method == null)\n63              throw new\
          \ org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);\n\
          64  \n65          switch (__method.intValue ())\n66              {\n67 \
          \ \n68                  // Operation to obtain the IR from the sending context\n\
          69              case 0:  // SendingContext/CodeBase/get_ir\n70         \
          \         {\n71                  \torg.jboss.com.sun.org.omg.CORBA.Repository\
          \ __result = null;\n72                      __result = this.get_ir ();\n\
          73                      org.jboss.com.sun.org.omg.CORBA.RepositoryHelper.write\
          \ (out, __result);"
        lineNumber: 63
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseImplBase.java
          kind: Method
          name: _invoke
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "23   * questions.\n24   */\n25  package org.jboss.com.sun.org.omg.SendingContext;\n\
          26  \n27  /**\n28   * org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java\
          \ Generated by the IDL-to-Java compiler (portable), version\n29   * \"3.0\"\
          \ from rt.idl Thursday, May 6, 1999 1:52:08 AM PDT\n30   */\n31  \n32  @SuppressWarnings(\"\
          serial\")\n33  public class _CodeBaseStub extends org.omg.CORBA.portable.ObjectImpl\n\
          34          implements\n35              org.jboss.com.sun.org.omg.SendingContext.CodeBase\n\
          36  {\n37      // Constructors\n38      // NOTE: If the default constructor\
          \ is used, the\n39      // object is useless until _set_delegate (...)\n\
          40      // is called.\n41      public _CodeBaseStub()\n42      {\n43   \
          \       super();"
        lineNumber: 33
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java
          kind: Class
          name: _CodeBaseStub
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "36  {\n37      // Constructors\n38      // NOTE: If the default\
          \ constructor is used, the\n39      // object is useless until _set_delegate\
          \ (...)\n40      // is called.\n41      public _CodeBaseStub()\n42     \
          \ {\n43          super();\n44      }\n45  \n46      public _CodeBaseStub(org.omg.CORBA.portable.Delegate\
          \ delegate)\n47      {\n48          super();\n49          _set_delegate(delegate);\n\
          50      }\n51  \n52      // Operation to obtain the IR from the sending\
          \ context\n53      public org.jboss.com.sun.org.omg.CORBA.Repository get_ir()\n\
          54      {\n55          org.omg.CORBA.portable.InputStream _in = null;\n\
          56          try"
        lineNumber: 46
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java
          kind: Constructor
          name: _CodeBaseStub
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "45  \n46      public _CodeBaseStub(org.omg.CORBA.portable.Delegate\
          \ delegate)\n47      {\n48          super();\n49          _set_delegate(delegate);\n\
          50      }\n51  \n52      // Operation to obtain the IR from the sending\
          \ context\n53      public org.jboss.com.sun.org.omg.CORBA.Repository get_ir()\n\
          54      {\n55          org.omg.CORBA.portable.InputStream _in = null;\n\
          56          try\n57          {\n58              org.omg.CORBA.portable.OutputStream\
          \ _out = _request(\"get_ir\", true);\n59              _in = _invoke(_out);\n\
          60              org.jboss.com.sun.org.omg.CORBA.Repository __result = org.jboss.com.sun.org.omg.CORBA.RepositoryHelper\n\
          61                      .read(_in);\n62              return __result;\n\
          63          }\n64          catch (org.omg.CORBA.portable.ApplicationException\
          \ _ex)\n65          {"
        lineNumber: 55
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java
          kind: Method
          name: get_ir
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "48          super();\n49          _set_delegate(delegate);\n50\
          \      }\n51  \n52      // Operation to obtain the IR from the sending context\n\
          53      public org.jboss.com.sun.org.omg.CORBA.Repository get_ir()\n54 \
          \     {\n55          org.omg.CORBA.portable.InputStream _in = null;\n56\
          \          try\n57          {\n58              org.omg.CORBA.portable.OutputStream\
          \ _out = _request(\"get_ir\", true);\n59              _in = _invoke(_out);\n\
          60              org.jboss.com.sun.org.omg.CORBA.Repository __result = org.jboss.com.sun.org.omg.CORBA.RepositoryHelper\n\
          61                      .read(_in);\n62              return __result;\n\
          63          }\n64          catch (org.omg.CORBA.portable.ApplicationException\
          \ _ex)\n65          {\n66              _in = _ex.getInputStream();\n67 \
          \             String _id = _ex.getId();\n68              throw new org.omg.CORBA.MARSHAL(_id);"
        lineNumber: 58
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java
          kind: Method
          name: get_ir
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: '54      {

          55          org.omg.CORBA.portable.InputStream _in = null;

          56          try

          57          {

          58              org.omg.CORBA.portable.OutputStream _out = _request("get_ir",
          true);

          59              _in = _invoke(_out);

          60              org.jboss.com.sun.org.omg.CORBA.Repository __result = org.jboss.com.sun.org.omg.CORBA.RepositoryHelper

          61                      .read(_in);

          62              return __result;

          63          }

          64          catch (org.omg.CORBA.portable.ApplicationException _ex)

          65          {

          66              _in = _ex.getInputStream();

          67              String _id = _ex.getId();

          68              throw new org.omg.CORBA.MARSHAL(_id);

          69          }

          70          catch (org.omg.CORBA.portable.RemarshalException _rm)

          71          {

          72              return get_ir();

          73          }

          74          finally'
        lineNumber: 64
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java
          kind: Method
          name: get_ir
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: '58              org.omg.CORBA.portable.OutputStream _out = _request("get_ir",
          true);

          59              _in = _invoke(_out);

          60              org.jboss.com.sun.org.omg.CORBA.Repository __result = org.jboss.com.sun.org.omg.CORBA.RepositoryHelper

          61                      .read(_in);

          62              return __result;

          63          }

          64          catch (org.omg.CORBA.portable.ApplicationException _ex)

          65          {

          66              _in = _ex.getInputStream();

          67              String _id = _ex.getId();

          68              throw new org.omg.CORBA.MARSHAL(_id);

          69          }

          70          catch (org.omg.CORBA.portable.RemarshalException _rm)

          71          {

          72              return get_ir();

          73          }

          74          finally

          75          {

          76              _releaseReply(_in);

          77          }

          78      } // get_ir'
        lineNumber: 68
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java
          kind: Method
          name: get_ir
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "60              org.jboss.com.sun.org.omg.CORBA.Repository __result\
          \ = org.jboss.com.sun.org.omg.CORBA.RepositoryHelper\n61               \
          \       .read(_in);\n62              return __result;\n63          }\n64\
          \          catch (org.omg.CORBA.portable.ApplicationException _ex)\n65 \
          \         {\n66              _in = _ex.getInputStream();\n67           \
          \   String _id = _ex.getId();\n68              throw new org.omg.CORBA.MARSHAL(_id);\n\
          69          }\n70          catch (org.omg.CORBA.portable.RemarshalException\
          \ _rm)\n71          {\n72              return get_ir();\n73          }\n\
          74          finally\n75          {\n76              _releaseReply(_in);\n\
          77          }\n78      } // get_ir\n79  \n80      // Operations to obtain\
          \ a URL to the implementation code"
        lineNumber: 70
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java
          kind: Method
          name: get_ir
          package: org.jboss.com.sun.org.omg.SendingContext
      - codeSnip: "73          }\n74          finally\n75          {\n76         \
          \     _releaseReply(_in);\n77          }\n78      } // get_ir\n79  \n80\
          \      // Operations to obtain a URL to the implementation code\n81    \
          \  public String implementation(String x)\n82      {\n83          org.omg.CORBA.portable.InputStream\
          \ _in = null;\n84          try\n85          {\n86              org.omg.CORBA.portable.OutputStream\
          \ _out = _request(\"implementation\", true);\n87              org.jboss.com.sun.org.omg.CORBA.RepositoryIdHelper.write(_out,\
          \ x);\n88              _in = _invoke(_out);\n89              String __result\
          \ = org.jboss.com.sun.org.omg.SendingContext.CodeBasePackage.URLHelper.read(_in);\n\
          90              return __result;\n91          }\n92          catch (org.omg.CORBA.portable.ApplicationException\
          \ _ex)\n93          {"
        lineNumber: 83
        message: Common Object Request Broker Architecture (CORBA) found in the application.
          CORBA is not recommended in cloud environments. Try to replace it with a
          more modern technology.
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/org/omg/SendingContext/_CodeBaseStub.java
          kind: Method
          name: implementation
          package: org.jboss.com.sun.org.omg.SendingContext
      labels:
      - corba
      - konveyor.io/source=java
      - konveyor.io/target=cloud-readiness
    java-rmi-00000:
      category: mandatory
      description: Java Remote Method Invocation (RMI) service
      effort: 1
      incidents:
      - codeSnip: "49   * remove EJB objects.\n50   *\n51   * <p> The remote home\
          \ interface is defined by the enterprise bean provider and \n52   * implemented\
          \ by the enterprise bean container.\n53   * <p>\n54   * Enterprise beans\
          \ written to the EJB 3.0 and later APIs do not require\n55   * a home interface.\n\
          56   *\n57   * @since EJB 1.0\n58   */\n59  public interface EJBHome extends\
          \ java.rmi.Remote {\n60  \n61      /**\n62       * Remove an EJB object\
          \ identified by its handle.\n63       *\n64       * @param handle the handle\
          \ of the EJB object to be removed\n65       *\n66       * @exception RemoveException\
          \ Thrown if the enterprise bean or\n67       *    the container does not\
          \ allow the client to remove the object.\n68       *\n69       * @exception\
          \ RemoteException Thrown when the method failed due to a"
        lineNumber: 59
        message: "Java RMI is a tightly coupled service. Tight coupling is not suitable\
          \ in a cloud environment because of scalability problems.\n\n Recommendations\n\
          \n Use Java EE standard or loosely coupled protocols for backing service\
          \ interactions:\n\n ** Message-based communication (JMS) for asynchronous\
          \ use cases\n ** HTTP-based protocol or API (JAX-RS and JAX-WS) for synchronous\
          \ use cases\n\n When used with load-balancing, both options ensure scalability\
          \ and high availability."
        uri: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/ejb/EJBHome.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/ejb/EJBHome.java
          kind: Interface
          name: EJBHome
          package: javax.ejb
      - codeSnip: "55   * <p> The enterprise bean's remote interface is defined by\
          \ the enterprise\n56   * bean provider and implemented by the enterprise\
          \ bean container.\n57   *\n58   * <p>\n59   * Enterprise beans written to\
          \ the EJB 3.0 and later APIs do not require\n60   * a remote interface that\
          \ extends the EJBObject interface.  A remote\n61   * business interface\
          \ can be used instead.\n62   *\n63   * @since EJB 1.0\n64   */\n65  public\
          \ interface EJBObject extends java.rmi.Remote {\n66      /**\n67       *\
          \ Obtain the enterprise bean's remote home interface. The remote home \n\
          68       * interface defines the enterprise bean's create, finder, remove,\n\
          69       * and home business methods.\n70       * \n71       * @return A\
          \ reference to the enterprise bean's home interface.\n72       *\n73   \
          \    * @exception RemoteException Thrown when the method failed due to a\n\
          74       *    system-level failure.\n75       */"
        lineNumber: 65
        message: "Java RMI is a tightly coupled service. Tight coupling is not suitable\
          \ in a cloud environment because of scalability problems.\n\n Recommendations\n\
          \n Use Java EE standard or loosely coupled protocols for backing service\
          \ interactions:\n\n ** Message-based communication (JMS) for asynchronous\
          \ use cases\n ** HTTP-based protocol or API (JAX-RS and JAX-WS) for synchronous\
          \ use cases\n\n When used with load-balancing, both options ensure scalability\
          \ and high availability."
        uri: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/ejb/EJBObject.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/ejb/EJBObject.java
          kind: Interface
          name: EJBObject
          package: javax.ejb
      labels:
      - cloud-readiness
      - konveyor.io/source=java
      - konveyor.io/source=rmi
      - konveyor.io/target=cloud-readiness
      - rmi
      links:
      - title: Twelve-factor app - Backing services
        url: https://12factor.net/backing-services
    java-rpc-00000:
      category: optional
      description: Java API for XML-based RPC (JAX-RPC)
      effort: 5
      incidents:
      - codeSnip: " 1  /*\n 2   * Copyright 2003 Sun Microsystems, Inc. All rights\
          \ reserved.\n 3   * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license\
          \ terms.\n 4   */\n 5  \n 6  package javax.xml.rpc;\n 7  \n 8  import javax.xml.namespace.QName;\n\
          \ 9  import java.net.URL;\n10  import java.util.Iterator;\n11  import javax.xml.rpc.encoding.TypeMappingRegistry;\n\
          12  import javax.xml.rpc.handler.HandlerRegistry;\n13  \n14  /** <code>Service</code>\
          \ class acts as a factory of the following:\n15   *  <UL>\n16   *  <LI>Dynamic\
          \ proxy for the target service endpoint.\n17   *  <LI>Instance of the type\
          \ <code>javax.xml.rpc.Call</code> for \n18   *      the dynamic invocation\
          \ of a remote operation on the \n19   *      target service endpoint. \n\
          20   *  <LI>Instance of a generated stub class\n21   *  </UL>"
        lineNumber: 11
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/Service.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/Service.java
          kind: Interface
          name: Service
          package: javax.xml.rpc
      - codeSnip: " 2   * Copyright 2003 Sun Microsystems, Inc. All rights reserved.\n\
          \ 3   * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n\
          \ 4   */\n 5  \n 6  package javax.xml.rpc;\n 7  \n 8  import javax.xml.namespace.QName;\n\
          \ 9  import java.net.URL;\n10  import java.util.Iterator;\n11  import javax.xml.rpc.encoding.TypeMappingRegistry;\n\
          12  import javax.xml.rpc.handler.HandlerRegistry;\n13  \n14  /** <code>Service</code>\
          \ class acts as a factory of the following:\n15   *  <UL>\n16   *  <LI>Dynamic\
          \ proxy for the target service endpoint.\n17   *  <LI>Instance of the type\
          \ <code>javax.xml.rpc.Call</code> for \n18   *      the dynamic invocation\
          \ of a remote operation on the \n19   *      target service endpoint. \n\
          20   *  <LI>Instance of a generated stub class\n21   *  </UL>\n22   * "
        lineNumber: 12
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/Service.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/Service.java
          kind: Interface
          name: Service
          package: javax.xml.rpc
      - codeSnip: " 1  /*\n 2   * Copyright 2003 Sun Microsystems, Inc. All rights\
          \ reserved.\n 3   * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license\
          \ terms.\n 4   */\n 5  \n 6  package javax.xml.rpc;\n 7  \n 8  import javax.xml.rpc.Service;\n\
          \ 9  import javax.xml.rpc.ServiceException;\n10  import javax.xml.namespace.QName;\n\
          11  \n12  /** The <code>javax.xml.rpc.ServiceFactory</code> is an abstract\
          \ class\n13   *  that provides a factory for the creation of instances of\
          \ the type \n14   *  <code>javax.xml.rpc.Service</code>. This abstract class\
          \ follows the\n15   *  abstract static factory design pattern. This enables\
          \ a J2SE based \n16   *  client to create a <code>Service instance</code>\
          \ in a portable manner\n17   *  without using the constructor of the <code>Service</code>\n\
          18   *  implementation class."
        lineNumber: 8
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/ServiceFactory.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/ServiceFactory.java
          kind: Class
          name: ServiceFactory
          package: javax.xml.rpc
      - codeSnip: " 1  /*\n 2   * Copyright 2003 Sun Microsystems, Inc. All rights\
          \ reserved.\n 3   * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license\
          \ terms.\n 4   */\n 5  \n 6  package javax.xml.rpc;\n 7  \n 8  import javax.xml.rpc.Service;\n\
          \ 9  import javax.xml.rpc.ServiceException;\n10  import javax.xml.namespace.QName;\n\
          11  \n12  /** The <code>javax.xml.rpc.ServiceFactory</code> is an abstract\
          \ class\n13   *  that provides a factory for the creation of instances of\
          \ the type \n14   *  <code>javax.xml.rpc.Service</code>. This abstract class\
          \ follows the\n15   *  abstract static factory design pattern. This enables\
          \ a J2SE based \n16   *  client to create a <code>Service instance</code>\
          \ in a portable manner\n17   *  without using the constructor of the <code>Service</code>\n\
          18   *  implementation class.\n19   *"
        lineNumber: 9
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/ServiceFactory.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/ServiceFactory.java
          kind: Class
          name: ServiceFactory
          package: javax.xml.rpc
      - codeSnip: " 1  /*\n 2   * Copyright 2003 Sun Microsystems, Inc. All rights\
          \ reserved.\n 3   * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license\
          \ terms.\n 4   */\n 5  \n 6  package javax.xml.rpc.encoding;\n 7  \n 8 \
          \ import java.util.Iterator;\n 9  import javax.xml.rpc.JAXRPCException;\n\
          10  \n11  /** The javax.xml.rpc.encoding.DeserializerFactory is a factory\
          \ of \n12   *  deserializers. A DeserializerFactory is registered with a\
          \ \n13   *  TypeMapping instance as part of the TypeMappingRegistry.\n14\
          \   *\n15   *  @version   1.0\n16   *  @author    Rahul Sharma\n17   * \
          \ @see javax.xml.rpc.encoding.Serializer\n18  **/\n19  public interface\
          \ DeserializerFactory extends java.io.Serializable {"
        lineNumber: 9
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/encoding/DeserializerFactory.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/encoding/DeserializerFactory.java
          kind: Interface
          name: DeserializerFactory
          package: javax.xml.rpc.encoding
      - codeSnip: " 1  /*\n 2   * Copyright 2003 Sun Microsystems, Inc. All rights\
          \ reserved.\n 3   * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license\
          \ terms.\n 4   */\n 5  \n 6  package javax.xml.rpc.encoding;\n 7  \n 8 \
          \ import java.util.Iterator;\n 9  import javax.xml.rpc.JAXRPCException;\n\
          10  \n11  /** The javax.xml.rpc.encoding.SerializerFactory is a factory\
          \ of \n12   *  the serializers. A SerializerFactory is registered with a\
          \ \n13   *  TypeMapping object as part of the TypeMappingRegistry.\n14 \
          \  *\n15   *  @version   1.0\n16   *  @author    Rahul Sharma\n17   *  @see\
          \ javax.xml.rpc.encoding.Serializer\n18  **/\n19  public interface SerializerFactory\
          \ extends java.io.Serializable {"
        lineNumber: 9
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/encoding/SerializerFactory.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/encoding/SerializerFactory.java
          kind: Interface
          name: SerializerFactory
          package: javax.xml.rpc.encoding
      - codeSnip: " 1  /*\n 2   * Copyright 2003 Sun Microsystems, Inc. All rights\
          \ reserved.\n 3   * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license\
          \ terms.\n 4   */\n 5  \n 6  package javax.xml.rpc.encoding;\n 7  \n 8 \
          \ import javax.xml.rpc.JAXRPCException;\n 9  import java.util.Iterator;\n\
          10  import javax.xml.namespace.QName;\n11  \n12  /** The <code>javax.xml.rpc.encoding.TypeMapping</code>\
          \ is the base \n13   *  interface for the representation of a type mapping.\
          \ A TypeMapping \n14   *  implementation class may support one or more encoding\
          \ styles.\n15   *\n16   *  <p>For its supported encoding styles, a TypeMapping\
          \ instance \n17   *  maintains a set of tuples of the type {Java type, \n\
          18   *  <code>SerializerFactory</code>, "
        lineNumber: 8
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/encoding/TypeMapping.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/encoding/TypeMapping.java
          kind: Interface
          name: TypeMapping
          package: javax.xml.rpc.encoding
      - codeSnip: " 1  /*\n 2   * Copyright 2003 Sun Microsystems, Inc. All rights\
          \ reserved.\n 3   * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license\
          \ terms.\n 4   */\n 5  \n 6  package javax.xml.rpc.encoding;\n 7  \n 8 \
          \ import java.io.Serializable;\n 9  import javax.xml.rpc.JAXRPCException;\n\
          10  import java.util.Iterator;\n11  \n12  /** The interface <code>javax.xml.rpc.encoding.TypeMappingRegistry</code>\n\
          13   *  defines a registry of TypeMapping instances for various encoding\n\
          14   *  styles.\n15   *\n16   *  @version   1.0\n17   *  @author    Rahul\
          \ Sharma\n18  **/\n19  "
        lineNumber: 9
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/encoding/TypeMappingRegistry.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/encoding/TypeMappingRegistry.java
          kind: Interface
          name: TypeMappingRegistry
          package: javax.xml.rpc.encoding
      - codeSnip: " 5  \n 6  package javax.xml.rpc.encoding;\n 7  \n 8  /** QNames\
          \ for XML Types\n 9   *\n10   *  @version   1.0\n11   *  @author    Rahul\
          \ Sharma\n12  **/\n13  \n14  import javax.xml.namespace.QName;\n15  import\
          \ javax.xml.rpc.NamespaceConstants;\n16  \n17  /** Constants for common\
          \ XML Schema and SOAP 1.1 types.\n18   *  @version 1.0\n19   *  @author\
          \  Rahul Sharma\n20  **/\n21  \n22  public class XMLType {\n23    \n24 \
          \   /** The name of the <code>xsd:string</code> type.\n25    **/"
        lineNumber: 15
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/encoding/XMLType.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/encoding/XMLType.java
          kind: Class
          name: XMLType
          package: javax.xml.rpc.encoding
      - codeSnip: " 1  /*\n 2   * Copyright 2003 Sun Microsystems, Inc. All rights\
          \ reserved.\n 3   * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license\
          \ terms.\n 4   */\n 5  \n 6  package javax.xml.rpc.handler;\n 7  \n 8  import\
          \ javax.xml.rpc.JAXRPCException;\n 9  import javax.xml.namespace.QName;\n\
          10  \n11  /** The <code>javax.xml.rpc.handler.GenericHandler</code> class\n\
          12   *  implements the <code>Handler</code> interface. SOAP Message\n13\
          \   *  Handler developers should typically subclass \n14   *  <code>GenericHandler</code>\
          \ class unless the Handler class \n15   *  needs another class as a superclass.\n\
          16   *\n17   *  <p>The <code>GenericHandler</code> class is a convenience\
          \ abstract\n18   *  class that makes writing Handlers easy. This class provides "
        lineNumber: 8
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/handler/GenericHandler.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/handler/GenericHandler.java
          kind: Class
          name: GenericHandler
          package: javax.xml.rpc.handler
      - codeSnip: " 1  /*\n 2   * Copyright 2003 Sun Microsystems, Inc. All rights\
          \ reserved.\n 3   * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license\
          \ terms.\n 4   */\n 5  \n 6  package javax.xml.rpc.handler;\n 7  \n 8  import\
          \ javax.xml.rpc.JAXRPCException;\n 9  import javax.xml.rpc.soap.SOAPFaultException;\n\
          10  import javax.xml.namespace.QName;\n11  \n12  /** The <code>javax.xml.rpc.handler.Handler</code>\
          \ interface is \n13   *  required to be implemented by a SOAP message handler.\
          \ The \n14   *  <code>handleRequest</code>, <code>handleResponse</code>\
          \ \n15   *  and <code>handleFault</code> methods for a SOAP message \n16\
          \   *  handler get access to the <code>SOAPMessage</code> from the\n17 \
          \  *  <code>SOAPMessageContext</code>. The implementation of these\n18 \
          \  *  methods can modify the <code>SOAPMessage</code> including the"
        lineNumber: 8
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/handler/Handler.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/handler/Handler.java
          kind: Interface
          name: Handler
          package: javax.xml.rpc.handler
      - codeSnip: " 1  /*\n 2   * Copyright 2003 Sun Microsystems, Inc. All rights\
          \ reserved.\n 3   * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license\
          \ terms.\n 4   */\n 5  \n 6  package javax.xml.rpc.handler;\n 7  \n 8  import\
          \ javax.xml.rpc.JAXRPCException;\n 9  import javax.xml.rpc.soap.SOAPFaultException;\n\
          10  import javax.xml.namespace.QName;\n11  \n12  /** The <code>javax.xml.rpc.handler.Handler</code>\
          \ interface is \n13   *  required to be implemented by a SOAP message handler.\
          \ The \n14   *  <code>handleRequest</code>, <code>handleResponse</code>\
          \ \n15   *  and <code>handleFault</code> methods for a SOAP message \n16\
          \   *  handler get access to the <code>SOAPMessage</code> from the\n17 \
          \  *  <code>SOAPMessageContext</code>. The implementation of these\n18 \
          \  *  methods can modify the <code>SOAPMessage</code> including the\n19\
          \   *  headers and body elements."
        lineNumber: 9
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/handler/Handler.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/handler/Handler.java
          kind: Interface
          name: Handler
          package: javax.xml.rpc.handler
      - codeSnip: " 1  /*\n 2   * Copyright 2003 Sun Microsystems, Inc. All rights\
          \ reserved.\n 3   * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license\
          \ terms.\n 4   */\n 5  \n 6  package javax.xml.rpc.handler;\n 7  \n 8  import\
          \ java.util.List;\n 9  import javax.xml.rpc.JAXRPCException;\n10  import\
          \ javax.xml.namespace.QName;\n11  \n12  /** The <code>javax.xml.rpc.handler.HandlerRegistry</code>\
          \ \n13   *  provides support for the programmatic configuration of \n14\
          \   *  handlers in a <code>HandlerRegistry</code>.\n15   *\n16   *  <p>A\
          \ handler chain is registered per service endpoint, as \n17   *  indicated\
          \ by the qualified name of a port. The getHandlerChain\n18   *  returns\
          \ the handler chain (as a java.util.List) for the \n19   *  specified service\
          \ endpoint. The returned handler chain is "
        lineNumber: 9
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/handler/HandlerRegistry.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/handler/HandlerRegistry.java
          kind: Interface
          name: HandlerRegistry
          package: javax.xml.rpc.handler
      - codeSnip: " 1  /*\n 2   * Copyright 2003 Sun Microsystems, Inc. All rights\
          \ reserved.\n 3   * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license\
          \ terms.\n 4   */\n 5  \n 6  package javax.xml.rpc.handler.soap;\n 7  \n\
          \ 8  import javax.xml.rpc.JAXRPCException;\n 9  import javax.xml.soap.SOAPMessage;\n\
          10  \n11  /** The interface <code>javax.xml.rpc.soap.SOAPMessageContext</code>\
          \ \n12   *  provides access to the SOAP message for either RPC request or\
          \ \n13   *  response. The <code>javax.xml.soap.SOAPMessage</code> specifies\n\
          14   *  the standard Java API for the representation of a SOAP 1.1 message\n\
          15   *  with attachments.\n16   *\n17   *  @version 1.0\n18   *  @author\
          \  Rahul Sharma"
        lineNumber: 8
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/handler/soap/SOAPMessageContext.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/handler/soap/SOAPMessageContext.java
          kind: Interface
          name: SOAPMessageContext
          package: javax.xml.rpc.handler.soap
      - codeSnip: "13   *  response. The <code>javax.xml.soap.SOAPMessage</code> specifies\n\
          14   *  the standard Java API for the representation of a SOAP 1.1 message\n\
          15   *  with attachments.\n16   *\n17   *  @version 1.0\n18   *  @author\
          \  Rahul Sharma\n19   *  @see javax.xml.soap.SOAPMessage\n20  **/\n21  \n\
          22  public interface SOAPMessageContext \n23                      extends\
          \ javax.xml.rpc.handler.MessageContext {\n24  \n25    /** Gets the SOAPMessage\
          \ from this message context\n26     *\n27     *  @return Returns the SOAPMessage;\
          \ returns null if no \n28     *          SOAPMessage is present in this\
          \ message context\n29    **/\n30    public SOAPMessage getMessage();\n31\
          \    \n32    /** Sets the SOAPMessage in this message context\n33     *"
        lineNumber: 23
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/handler/soap/SOAPMessageContext.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/handler/soap/SOAPMessageContext.java
          kind: Interface
          name: SOAPMessageContext
          package: javax.xml.rpc.handler.soap
      - codeSnip: " 1  /*\n 2   * Copyright 2003 Sun Microsystems, Inc. All rights\
          \ reserved.\n 3   * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license\
          \ terms.\n 4   */\n 5  \n 6  package javax.xml.rpc.server;\n 7  \n 8  import\
          \ javax.xml.rpc.ServiceException;\n 9  \n10  /** The <code>javax.xml.rpc.server.ServiceLifecycle</code>\
          \ defines\n11   *  a lifecycle interface for a JAX-RPC service endpoint.\
          \ If the \n12   *  service endpoint class implements the <code>ServiceLifeycle</code>\n\
          13   *  interface, the servlet container based JAX-RPC runtime system \n\
          14   *  is required to manage the lifecycle of the corresponding service\n\
          15   *  endpoint objects.\n16   *\n17   *  @version 1.0\n18   *  @author\
          \  Rahul Sharma"
        lineNumber: 8
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/server/ServiceLifecycle.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/server/ServiceLifecycle.java
          kind: Interface
          name: ServiceLifecycle
          package: javax.xml.rpc.server
      - codeSnip: " 1  /*\n 2   * Copyright 2003 Sun Microsystems, Inc. All rights\
          \ reserved.\n 3   * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license\
          \ terms.\n 4   */\n 5  \n 6  package javax.xml.rpc.server;\n 7  \n 8  import\
          \ javax.xml.rpc.ServiceException;\n 9  import javax.servlet.ServletContext;\n\
          10  import javax.xml.rpc.handler.MessageContext;\n11  import javax.servlet.http.HttpSession;\n\
          12  \n13  \n14  /** The <code>ServletEndpointContext</code> provides an\
          \ endpoint \n15   *  context maintained by the underlying servlet container\
          \ based\n16   *  JAX-RPC runtime system. For service endpoints deployed\
          \ on a \n17   *  servlet container based JAX-RPC runtime system, the context\
          \ \n18   *  parameter in the <code>ServiceLifecycle.init</code> method is"
        lineNumber: 8
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/server/ServletEndpointContext.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/server/ServletEndpointContext.java
          kind: Interface
          name: ServletEndpointContext
          package: javax.xml.rpc.server
      - codeSnip: " 1  /*\n 2   * Copyright 2003 Sun Microsystems, Inc. All rights\
          \ reserved.\n 3   * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license\
          \ terms.\n 4   */\n 5  \n 6  package javax.xml.rpc.server;\n 7  \n 8  import\
          \ javax.xml.rpc.ServiceException;\n 9  import javax.servlet.ServletContext;\n\
          10  import javax.xml.rpc.handler.MessageContext;\n11  import javax.servlet.http.HttpSession;\n\
          12  \n13  \n14  /** The <code>ServletEndpointContext</code> provides an\
          \ endpoint \n15   *  context maintained by the underlying servlet container\
          \ based\n16   *  JAX-RPC runtime system. For service endpoints deployed\
          \ on a \n17   *  servlet container based JAX-RPC runtime system, the context\
          \ \n18   *  parameter in the <code>ServiceLifecycle.init</code> method is\n\
          19   *  required to be of the Java type \n20   *  <code>javax.xml.rpc.server.ServletEndpointContext</code>."
        lineNumber: 10
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/server/ServletEndpointContext.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/server/ServletEndpointContext.java
          kind: Interface
          name: ServletEndpointContext
          package: javax.xml.rpc.server
      - codeSnip: "46     *  @return MessageContext; If there is no associated \n\
          47     *          <code>MessageContext</code>, this method returns\n48 \
          \    *          <code>null</code>.\n49     *  @throws  java.lang.IllegalStateException\
          \ if this method is \n50     *           invoked outside a remote method\
          \ implementation by \n51     *           a service endpoint instance.\n\
          52     *  @see javax.xml.rpc.handler.MessageContext\n53     *  @see javax.xml.rpc.handler.HandlerChain\n\
          54     *  @see javax.xml.rpc.handler.Handler\n55    **/\n56    public javax.xml.rpc.handler.MessageContext\
          \ getMessageContext();\n57  \n58    /** Returns a <code>java.security.Principal</code>\
          \ instance that \n59     *  contains the name of the authenticated user\
          \ for the current\n60     *  method invocation on the endpoint instance.\
          \ This method returns\n61     *  <code>null</code> if there is no associated\
          \ principal yet. \n62     *  The underlying JAX-RPC runtime system takes\
          \ the responsibility\n63     *  of providing the appropriate authenticated\
          \ principal for a \n64     *  remote method invocation on the service endpoint\
          \ instance.\n65     *\n66     *  @return A <code>java.security.Principal</code>\
          \ for the "
        lineNumber: 56
        message: "The Java API for XML-based RPC (JAX-RPC) was deprecated in Java\
          \ EE 6 and is optional in Java EE 7. It is no longer available or supported\
          \ in JBoss EAP 7.\n\n Recommendation: Use JAX-WS, which is the current Java\
          \ EE standard web services framework."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/server/ServletEndpointContext.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/server/ServletEndpointContext.java
          kind: Method
          name: getMessageContext
          package: javax.xml.rpc.server
      labels:
      - konveyor.io/source=java
      - konveyor.io/source=rpc
      - konveyor.io/target=cloud-readiness
      - rpc
      links:
      - title: JAX-RPC not supported in JBoss EAP 7
        url: https://access.redhat.com/solutions/4030521
    local-storage-00001:
      category: mandatory
      description: File system - Java IO
      effort: 1
      incidents:
      - codeSnip: "120  \n121  \trsetBeforeQuit = getBoolProp(\"rsetbeforequit\");\n\
          122  \tdisableTop = getBoolProp(\"disabletop\");\n123  \tforgetTopHeaders\
          \ = getBoolProp(\"forgettopheaders\");\n124  \tcacheWriteTo = getBoolProp(\"\
          cachewriteto\");\n125  \tuseFileCache = getBoolProp(\"filecache.enable\"\
          );\n126  \tString dir = session.getProperty(\"mail.\" + name + \".filecache.dir\"\
          );\n127  \tif (dir != null && logger.isLoggable(Level.CONFIG))\n128  \t\
          \    logger.config(\"mail.\" + name + \".filecache.dir: \" + dir);\n129\
          \  \tif (dir != null)\n130  \t    fileCacheDir = new File(dir);\n131  \t\
          keepMessageContent = getBoolProp(\"keepmessagecontent\");\n132  \n133  \t\
          // mail.pop3.starttls.enable enables use of STLS command\n134  \tuseStartTLS\
          \ = getBoolProp(\"starttls.enable\");\n135  \n136  \t// mail.pop3.starttls.required\
          \ requires use of STLS command\n137  \trequireStartTLS = getBoolProp(\"\
          starttls.required\");\n138  \n139  \tString s = session.getProperty(\"mail.\"\
          \ + name + \".message.class\");\n140  \tif (s != null) {"
        lineNumber: 130
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Store.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Store.java
          kind: Constructor
          name: POP3Store
          package: com.sun.mail.pop3
      - codeSnip: "162  \t\t\t\t\t\"mail.debug.quote\", false);\n163  \ttraceInput\
          \ =\n164  \t    new TraceInputStream(socket.getInputStream(), traceLogger);\n\
          165  \ttraceInput.setQuote(quote);\n166  \n167  \ttraceOutput =\n168  \t\
          \    new TraceOutputStream(socket.getOutputStream(), traceLogger);\n169\
          \  \ttraceOutput.setQuote(quote);\n170  \n171  \tinput = new DataInputStream(new\
          \ BufferedInputStream(traceInput));\n172  \toutput = new PrintWriter(\n\
          173  \t\t    new BufferedWriter(\n174  \t\t\tnew OutputStreamWriter(traceOutput,\
          \ \"iso-8859-1\")));\n175  \t\t\t    // should be US-ASCII, but not all\
          \ JDK's support\n176      }\n177  \n178      protected void finalize() throws\
          \ Throwable {\n179  \tsuper.finalize();\n180  \tif (socket != null) { //\
          \ Forgot to logout ?!\n181  \t    quit();\n182  \t}\n183      }\n184  "
        lineNumber: 172
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/Protocol.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/Protocol.java
          kind: Constructor
          name: initStreams
          package: com.sun.mail.pop3
      - lineNumber: 105
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/WritableSharedFile.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/WritableSharedFile.java
          kind: Constructor
          name: WritableSharedFile
          package: ''
      - codeSnip: "134  \tflush();\n135  \tout.close();\n136      }\n137  \n138  \
          \    /**\n139       * Write out the prefix: \"begin <mode> <name>\"\n140\
          \       */\n141      private void writePrefix() throws IOException {\n142\
          \  \tif (!wrotePrefix) {\n143  \t    // name should be ASCII, but who knows...\n\
          144  \t    PrintStream ps = new PrintStream(out, false, \"utf-8\");\n145\
          \  \t    ps.println(\"begin \" + mode + \" \" + name);\n146  \t    ps.flush();\n\
          147  \t    wrotePrefix = true;\n148  \t}\n149      }\n150  \n151      /**\n\
          152       * Write a single line containing space and the suffix line\n153\
          \       * containing the single word \"end\" (terminated by a newline)\n\
          154       */"
        lineNumber: 144
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/UUEncoderStream.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/UUEncoderStream.java
          kind: Constructor
          name: writePrefix
          package: com.sun.mail.util
      - codeSnip: "146  \t    ps.flush();\n147  \t    wrotePrefix = true;\n148  \t\
          }\n149      }\n150  \n151      /**\n152       * Write a single line containing\
          \ space and the suffix line\n153       * containing the single word \"end\"\
          \ (terminated by a newline)\n154       */\n155      private void writeSuffix()\
          \ throws IOException {\n156  \tPrintStream ps = new PrintStream(out, false,\
          \ \"us-ascii\");\n157  \tps.println(\" \\nend\");\n158  \tps.flush();\n\
          159      }\n160  \n161      /**\n162       * Encode a line. \n163      \
          \ * Start off with the character count, followed by the encoded atoms\n\
          164       * and terminate with LF. (or is it CRLF or the local line-terminator\
          \ ?)\n165       * Take three bytes and encodes them into 4 characters\n\
          166       * If bufsize if not a multiple of 3, the remaining bytes are filled "
        lineNumber: 156
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/UUEncoderStream.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/UUEncoderStream.java
          kind: Constructor
          name: writeSuffix
          package: com.sun.mail.util
      - codeSnip: "3280             return \"null\";\n3281          }\n3282  \n3283\
          \          final String encoding = getEncodingName();\n3284          try\
          \ {\n3285              final ByteArrayOutputStream out =\n3286         \
          \             new ByteArrayOutputStream(MIN_HEADER_SIZE);\n3287  \n3288\
          \              //Create an output stream writer so streams are not double\
          \ buffered.\n3289              final PrintWriter pw =\n3290            \
          \          new PrintWriter(new OutputStreamWriter(out, encoding));\n3291\
          \              pw.println(t.getMessage());\n3292              t.printStackTrace(pw);\n\
          3293              pw.flush();\n3294              pw.close(); //BUG ID 6995537\n\
          3295              return out.toString(encoding);\n3296          } catch\
          \ (IOException badMimeCharset) {\n3297              return t.toString()\
          \ + ' ' + badMimeCharset.toString();\n3298          }\n3299      }\n3300\
          \  "
        lineNumber: 3290
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/logging/MailHandler.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/logging/MailHandler.java
          kind: Constructor
          name: toMsgString
          package: com.sun.mail.util.logging
      - lineNumber: 74
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/activation/activation/1.1/com/sun/activation/registries/MailcapFile.java
        variables:
          file: file:///root/.m2/repository/javax/activation/activation/1.1/com/sun/activation/registries/MailcapFile.java
          kind: Constructor
          name: MailcapFile
          package: ''
      - lineNumber: 48
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/activation/activation/1.1/com/sun/activation/registries/MimeTypeFile.java
        variables:
          file: file:///root/.m2/repository/javax/activation/activation/1.1/com/sun/activation/registries/MimeTypeFile.java
          kind: Constructor
          name: MimeTypeFile
          package: ''
      - lineNumber: 50
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/activation/activation/1.1/com/sun/activation/registries/MimeTypeFile.java
        variables:
          file: file:///root/.m2/repository/javax/activation/activation/1.1/com/sun/activation/registries/MimeTypeFile.java
          kind: Constructor
          name: MimeTypeFile
          package: ''
      - lineNumber: 85
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/activation/activation/1.1/javax/activation/FileDataSource.java
        variables:
          file: file:///root/.m2/repository/javax/activation/activation/1.1/javax/activation/FileDataSource.java
          kind: Constructor
          name: FileDataSource
          package: ''
      - lineNumber: 97
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/activation/activation/1.1/javax/activation/FileDataSource.java
        variables:
          file: file:///root/.m2/repository/javax/activation/activation/1.1/javax/activation/FileDataSource.java
          kind: Constructor
          name: getInputStream
          package: ''
      - lineNumber: 109
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/activation/activation/1.1/javax/activation/FileDataSource.java
        variables:
          file: file:///root/.m2/repository/javax/activation/activation/1.1/javax/activation/FileDataSource.java
          kind: Constructor
          name: getOutputStream
          package: ''
      - codeSnip: "1063  \telse\n1064  \t    addressMap.put(addresstype, protocol);\n\
          1065      }\n1066  \n1067      /**\n1068       * Load from the named file.\n\
          1069       */\n1070      private void loadFile(String name, StreamLoader\
          \ loader) {\n1071  \tInputStream clis = null;\n1072  \ttry {\n1073  \t \
          \   clis = new BufferedInputStream(new FileInputStream(name));\n1074  \t\
          \    loader.load(clis);\n1075  \t    logger.log(Level.CONFIG, \"successfully\
          \ loaded file: {0}\", name);\n1076  \t} catch (FileNotFoundException fex)\
          \ {\n1077  \t    // ignore it\n1078  \t} catch (IOException e) {\n1079 \
          \ \t    if (logger.isLoggable(Level.CONFIG))\n1080  \t\tlogger.log(Level.CONFIG,\
          \ \"not loading file: \" + name, e);\n1081  \t} catch (SecurityException\
          \ sex) {\n1082  \t    if (logger.isLoggable(Level.CONFIG))\n1083  \t\tlogger.log(Level.CONFIG,\
          \ \"not loading file: \" + name, sex);"
        lineNumber: 1073
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Session.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Session.java
          kind: Constructor
          name: loadFile
          package: javax.mail
      - codeSnip: "803       * part and the data in the file is used as the data for\
          \ this\n804       * part.  The encoding will be chosen appropriately for\
          \ the\n805       * file data.\n806       *\n807       * @param\t\tfile\t\
          \tthe name of the file to attach\n808       * @exception\tIOException\t\
          errors related to accessing the file\n809       * @exception\tMessagingException\t\
          message related errors\n810       * @since\t\tJavaMail 1.4\n811       */\n\
          812      public void attachFile(String file) throws IOException, MessagingException\
          \ {\n813      \tFile f = new File(file);\n814      \tattachFile(f);\n815\
          \      }\n816  \n817      /**\n818       * Use the specified file with the\
          \ specified Content-Type and\n819       * Content-Transfer-Encoding to provide\
          \ the data for this part.\n820       * If contentType or encoding are null,\
          \ appropriate values will\n821       * be chosen.\n822       * The simple\
          \ file name is used as the file name for this\n823       * part and the\
          \ data in the file is used as the data for this"
        lineNumber: 813
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeBodyPart.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeBodyPart.java
          kind: Constructor
          name: attachFile
          package: javax.mail.internet
      - codeSnip: "851       *\n852       * @param\t\tfile\t\tthe name of the file\n\
          853       * @param\t\tcontentType\tthe Content-Type, or null\n854      \
          \ * @param\t\tencoding\tthe Content-Transfer-Encoding, or null\n855    \
          \   * @exception\tIOException\terrors related to accessing the file\n856\
          \       * @exception\tMessagingException\tmessage related errors\n857  \
          \     * @since\t\tJavaMail 1.5\n858       */\n859      public void attachFile(String\
          \ file, String contentType, String encoding)\n860  \t\t\t\tthrows IOException,\
          \ MessagingException {\n861  \tattachFile(new File(file), contentType, encoding);\n\
          862      }\n863  \n864      /**\n865       * A FileDataSource class that\
          \ allows us to specify the\n866       * Content-Type and Content-Transfer-Encoding.\n\
          867       */\n868      private static class EncodedFileDataSource extends\
          \ FileDataSource\n869  \t\t\t\t\timplements EncodingAware {\n870  \tprivate\
          \ String contentType;\n871  \tprivate String encoding;"
        lineNumber: 861
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeBodyPart.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeBodyPart.java
          kind: Constructor
          name: attachFile
          package: javax.mail.internet
      - codeSnip: "894       *\n895       * @param\t\tfile\t\tthe File object to write\
          \ to\n896       * @exception\tIOException\terrors related to accessing the\
          \ file\n897       * @exception\tMessagingException\tmessage related errors\n\
          898       * @since\t\tJavaMail 1.4\n899       */\n900      public void saveFile(File\
          \ file) throws IOException, MessagingException {\n901      \tOutputStream\
          \ out = null;\n902          InputStream in = null;\n903          try {\n\
          904  \t    out = new BufferedOutputStream(new FileOutputStream(file));\n\
          905  \t    in = this.getInputStream();\n906  \t    byte[] buf = new byte[8192];\n\
          907  \t    int len;\n908  \t    while ((len = in.read(buf)) > 0)\n909  \t\
          \tout.write(buf, 0, len); \n910          } finally {\n911  \t    // close\
          \ streams, but don't mask original exception, if any\n912  \t    try {\n\
          913  \t\tif (in != null)\n914  \t\t    in.close();"
        lineNumber: 904
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeBodyPart.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeBodyPart.java
          kind: Constructor
          name: saveFile
          package: javax.mail.internet
      - codeSnip: "923      /**\n924       * Save the contents of this part in the\
          \ specified file.  The content\n925       * is decoded and saved, without\
          \ any of the MIME headers.\n926       *\n927       * @param\t\tfile\t\t\
          the name of the file to write to\n928       * @exception\tIOException\t\
          errors related to accessing the file\n929       * @exception\tMessagingException\t\
          message related errors\n930       * @since\t\tJavaMail 1.4\n931       */\n\
          932      public void saveFile(String file) throws IOException, MessagingException\
          \ {\n933      \tFile f = new File(file);\n934      \tsaveFile(f);\n935 \
          \     }\n936  \n937      /**\n938       * Output the body part as an RFC\
          \ 822 format stream.\n939       *\n940       * @exception MessagingException\n\
          941       * @exception IOException\tif an error occurs writing to the\n\
          942       *\t\t\t\tstream or if an error is generated\n943       *\t\t\t\
          \tby the javax.activation layer."
        lineNumber: 933
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeBodyPart.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeBodyPart.java
          kind: Constructor
          name: saveFile
          package: javax.mail.internet
      - codeSnip: "106      /**\n107       * A shared class that keeps track of the\
          \ references\n108       * to a particular file so it can be closed when\
          \ the\n109       * last reference is gone.\n110       */\n111      static\
          \ class SharedFile {\n112  \tprivate int cnt;\n113  \tprivate RandomAccessFile\
          \ in;\n114  \n115  \tSharedFile(String file) throws IOException {\n116 \
          \ \t    this.in = new RandomAccessFile(file, \"r\");\n117  \t}\n118  \n\
          119  \tSharedFile(File file) throws IOException {\n120  \t    this.in =\
          \ new RandomAccessFile(file, \"r\");\n121  \t}\n122  \n123  \tpublic synchronized\
          \ RandomAccessFile open() {\n124  \t    cnt++;\n125  \t    return in;\n\
          126  \t}"
        lineNumber: 116
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/util/SharedFileInputStream.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/util/SharedFileInputStream.java
          kind: Constructor
          name: SharedFile
          package: javax.mail.util
      - codeSnip: "110       */\n111      static class SharedFile {\n112  \tprivate\
          \ int cnt;\n113  \tprivate RandomAccessFile in;\n114  \n115  \tSharedFile(String\
          \ file) throws IOException {\n116  \t    this.in = new RandomAccessFile(file,\
          \ \"r\");\n117  \t}\n118  \n119  \tSharedFile(File file) throws IOException\
          \ {\n120  \t    this.in = new RandomAccessFile(file, \"r\");\n121  \t}\n\
          122  \n123  \tpublic synchronized RandomAccessFile open() {\n124  \t   \
          \ cnt++;\n125  \t    return in;\n126  \t}\n127  \n128  \tpublic synchronized\
          \ void close() throws IOException {\n129  \t    if (cnt > 0 && --cnt <=\
          \ 0)\n130  \t\tin.close();"
        lineNumber: 120
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/util/SharedFileInputStream.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/util/SharedFileInputStream.java
          kind: Constructor
          name: SharedFile
          package: javax.mail.util
      - codeSnip: "287       * See {@link #unmarshal} for the conversion rules.\n\
          288       */\n289      private static Source toSource(Object xml) throws\
          \ IOException {\n290          if(xml==null)\n291              throw new\
          \ IllegalArgumentException(\"no XML is given\");\n292  \n293          if\
          \ (xml instanceof String) {\n294              try {\n295               \
          \   xml=new URI((String)xml);\n296              } catch (URISyntaxException\
          \ e) {\n297                  xml=new File((String)xml);\n298           \
          \   }\n299          }\n300          if (xml instanceof File) {\n301    \
          \          File file = (File) xml;\n302              return new StreamSource(file);\n\
          303          }\n304          if (xml instanceof URI) {\n305            \
          \  URI uri = (URI) xml;\n306              xml=uri.toURL();\n307        \
          \  }"
        lineNumber: 297
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/bind/JAXB.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/bind/JAXB.java
          kind: Constructor
          name: toSource
          package: javax.xml.bind
      - codeSnip: "601       * See {@link #_marshal(Object,Object)} for the conversion\
          \ rules.\n602       */\n603      private static Result toResult(Object xml)\
          \ throws IOException {\n604          if(xml==null)\n605              throw\
          \ new IllegalArgumentException(\"no XML is given\");\n606  \n607       \
          \   if (xml instanceof String) {\n608              try {\n609          \
          \        xml=new URI((String)xml);\n610              } catch (URISyntaxException\
          \ e) {\n611                  xml=new File((String)xml);\n612           \
          \   }\n613          }\n614          if (xml instanceof File) {\n615    \
          \          File file = (File) xml;\n616              return new StreamResult(file);\n\
          617          }\n618          if (xml instanceof URI) {\n619            \
          \  URI uri = (URI) xml;\n620              xml=uri.toURL();\n621        \
          \  }"
        lineNumber: 611
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/bind/JAXB.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/bind/JAXB.java
          kind: Constructor
          name: toResult
          package: javax.xml.bind
      - codeSnip: 11   * https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
        lineNumber: 116
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/bind/helpers/AbstractMarshallerImpl.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/bind/helpers/AbstractMarshallerImpl.java
          kind: Constructor
          name: marshal
          package: javax.xml.bind.helpers
      - codeSnip: "190                  return newInstance(systemProp, classLoader);\n\
          191              }\n192          } catch (SecurityException se) {\n193 \
          \         }\n194          \n195          // try to read from $java.home/lib/jaxr.properties\n\
          196          try {\n197              String javah=System.getProperty( \"\
          java.home\" );\n198              String configFile = javah + File.separator\
          \ +\n199              \"lib\" + File.separator + \"jaxr.properties\";\n\
          200              File f=new File( configFile );\n201              if( f.exists())\
          \ {\n202                  Properties props=new Properties();\n203      \
          \            props.load( new FileInputStream(f));\n204                 \
          \ String factoryClassName = props.getProperty(factoryId);\n205         \
          \         return newInstance(factoryClassName, classLoader);\n206      \
          \        }\n207          } catch(Exception ex ) {\n208          }\n209 \
          \         \n210          String serviceId = \"META-INF/services/\" + factoryId;"
        lineNumber: 200
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/registry/ConnectionFactory.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/registry/ConnectionFactory.java
          kind: Constructor
          name: find
          package: javax.xml.registry
      - codeSnip: "193          }\n194          \n195          // try to read from\
          \ $java.home/lib/jaxr.properties\n196          try {\n197              String\
          \ javah=System.getProperty( \"java.home\" );\n198              String configFile\
          \ = javah + File.separator +\n199              \"lib\" + File.separator\
          \ + \"jaxr.properties\";\n200              File f=new File( configFile );\n\
          201              if( f.exists()) {\n202                  Properties props=new\
          \ Properties();\n203                  props.load( new FileInputStream(f));\n\
          204                  String factoryClassName = props.getProperty(factoryId);\n\
          205                  return newInstance(factoryClassName, classLoader);\n\
          206              }\n207          } catch(Exception ex ) {\n208         \
          \ }\n209          \n210          String serviceId = \"META-INF/services/\"\
          \ + factoryId;\n211          // try to find services in CLASSPATH\n212 \
          \         try {\n213              InputStream is=null;"
        lineNumber: 203
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/registry/ConnectionFactory.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/registry/ConnectionFactory.java
          kind: Constructor
          name: find
          package: javax.xml.registry
      - codeSnip: " 87                  return newInstance(systemProp, classLoader);\n\
          \ 88              }\n 89          } catch (SecurityException se) {\n 90\
          \          }\n 91  \n 92          // try to read from $java.home/lib/jaxrpc.properties\n\
          \ 93          try {\n 94              String javah=System.getProperty( \"\
          java.home\" );\n 95              String configFile = javah + File.separator\
          \ +\n 96                  \"lib\" + File.separator + \"jaxrpc.properties\"\
          ;\n 97              File f=new File( configFile );\n 98              if(\
          \ f.exists()) {\n 99                  Properties props=new Properties();\n\
          100                  props.load( new FileInputStream(f));\n101         \
          \         String factoryClassName = props.getProperty(factoryId);\n102 \
          \                 return newInstance(factoryClassName, classLoader);\n103\
          \              }\n104          } catch(Exception ex ) {\n105          }\n\
          106  \n107          String serviceId = \"META-INF/services/\" + factoryId;"
        lineNumber: 97
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/FactoryFinder.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/FactoryFinder.java
          kind: Constructor
          name: find
          package: javax.xml.rpc
      - codeSnip: " 90          }\n 91  \n 92          // try to read from $java.home/lib/jaxrpc.properties\n\
          \ 93          try {\n 94              String javah=System.getProperty( \"\
          java.home\" );\n 95              String configFile = javah + File.separator\
          \ +\n 96                  \"lib\" + File.separator + \"jaxrpc.properties\"\
          ;\n 97              File f=new File( configFile );\n 98              if(\
          \ f.exists()) {\n 99                  Properties props=new Properties();\n\
          100                  props.load( new FileInputStream(f));\n101         \
          \         String factoryClassName = props.getProperty(factoryId);\n102 \
          \                 return newInstance(factoryClassName, classLoader);\n103\
          \              }\n104          } catch(Exception ex ) {\n105          }\n\
          106  \n107          String serviceId = \"META-INF/services/\" + factoryId;\n\
          108          // try to find services in CLASSPATH\n109          try {\n\
          110              InputStream is=null;"
        lineNumber: 100
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/FactoryFinder.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/rpc/FactoryFinder.java
          kind: Constructor
          name: find
          package: javax.xml.rpc
      - codeSnip: "139                  return newInstance(systemProp, classLoader,\
          \ defaultClassName);\n140              }\n141          } catch (SecurityException\
          \ se) {\n142          }\n143  \n144          // try to read from $java.home/lib/jaxm.properties\n\
          145          try {\n146              String javah=System.getProperty( \"\
          java.home\" );\n147              String configFile = javah + File.separator\
          \ +\n148                  \"lib\" + File.separator + \"jaxm.properties\"\
          ;\n149              File f=new File( configFile );\n150              if(\
          \ f.exists()) {\n151                  Properties props=new Properties();\n\
          152                  props.load( new FileInputStream(f));\n153         \
          \         String factoryClassName = props.getProperty(factoryId);\n154 \
          \                 return newInstance(factoryClassName, classLoader, defaultClassName);\n\
          155              }\n156          } catch(Exception ex ) {\n157         \
          \ }\n158  \n159          String serviceId = \"META-INF/services/\" + factoryId;"
        lineNumber: 149
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/soap/FactoryFinder.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/soap/FactoryFinder.java
          kind: Constructor
          name: find
          package: javax.xml.soap
      - codeSnip: "142          }\n143  \n144          // try to read from $java.home/lib/jaxm.properties\n\
          145          try {\n146              String javah=System.getProperty( \"\
          java.home\" );\n147              String configFile = javah + File.separator\
          \ +\n148                  \"lib\" + File.separator + \"jaxm.properties\"\
          ;\n149              File f=new File( configFile );\n150              if(\
          \ f.exists()) {\n151                  Properties props=new Properties();\n\
          152                  props.load( new FileInputStream(f));\n153         \
          \         String factoryClassName = props.getProperty(factoryId);\n154 \
          \                 return newInstance(factoryClassName, classLoader, defaultClassName);\n\
          155              }\n156          } catch(Exception ex ) {\n157         \
          \ }\n158  \n159          String serviceId = \"META-INF/services/\" + factoryId;\n\
          160          // try to find services in CLASSPATH\n161          try {\n\
          162              InputStream is=null;"
        lineNumber: 152
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/soap/FactoryFinder.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/soap/FactoryFinder.java
          kind: Constructor
          name: find
          package: javax.xml.soap
      - codeSnip: "130              }\n131          } catch( Exception ex ) {\n132\
          \          }\n133          \n134  \n135          // try to read from $java.home/lib/jaxws.properties\n\
          136          try {\n137              String javah=System.getProperty( \"\
          java.home\" );\n138              String configFile = javah + File.separator\
          \ +\n139                  \"lib\" + File.separator + \"jaxws.properties\"\
          ;\n140              File f=new File( configFile );\n141              if(\
          \ f.exists()) {\n142                  Properties props=new Properties();\n\
          143                  props.load( new FileInputStream(f));\n144         \
          \         String factoryClassName = props.getProperty(factoryId);\n145 \
          \                 return newInstance(factoryClassName, classLoader);\n146\
          \              }\n147          } catch(Exception ex ) {\n148          }\n\
          149  \n150  "
        lineNumber: 140
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/ws/spi/FactoryFinder.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/ws/spi/FactoryFinder.java
          kind: Constructor
          name: find
          package: javax.xml.ws.spi
      - codeSnip: "133          \n134  \n135          // try to read from $java.home/lib/jaxws.properties\n\
          136          try {\n137              String javah=System.getProperty( \"\
          java.home\" );\n138              String configFile = javah + File.separator\
          \ +\n139                  \"lib\" + File.separator + \"jaxws.properties\"\
          ;\n140              File f=new File( configFile );\n141              if(\
          \ f.exists()) {\n142                  Properties props=new Properties();\n\
          143                  props.load( new FileInputStream(f));\n144         \
          \         String factoryClassName = props.getProperty(factoryId);\n145 \
          \                 return newInstance(factoryClassName, classLoader);\n146\
          \              }\n147          } catch(Exception ex ) {\n148          }\n\
          149  \n150  \n151          // Use the system property\n152          try\
          \ {\n153              String systemProp ="
        lineNumber: 143
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/ws/spi/FactoryFinder.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/ws/spi/FactoryFinder.java
          kind: Constructor
          name: find
          package: javax.xml.ws.spi
      - codeSnip: "212                  message.append(n).append(\"\\n\");\n213  \
          \            }\n214              message.append(\"Returned null from createEJBContainer\
          \ call.\\n\");\n215          }\n216          throw new EJBException(message.toString());\n\
          217      }\n218  \n219      private static String createErrorMessage(Throwable\
          \ t) {\n220          StringWriter errorMessage = new StringWriter();\n221\
          \          errorMessage.append(t.getClass().getName()).append(newLine);\n\
          222          t.printStackTrace(new PrintWriter(errorMessage));\n223    \
          \      errorMessage.append(newLine);\n224          return errorMessage.toString();\n\
          225      }\n226  \n227  }\n228  \n"
        lineNumber: 222
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/ejb/embeddable/EJBContainer.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/ejb/embeddable/EJBContainer.java
          kind: Constructor
          name: createErrorMessage
          package: javax.ejb.embeddable
      - codeSnip: "161              }\n162          } catch( Exception ex ) {\n163\
          \          }\n164          \n165  \n166          // try to read from $java.home/lib/el.properties\n\
          167          try {\n168              String javah=System.getProperty( \"\
          java.home\" );\n169              String configFile = javah + File.separator\
          \ +\n170                  \"lib\" + File.separator + \"el.properties\";\n\
          171              File f=new File( configFile );\n172              if( f.exists())\
          \ {\n173                  Properties props=new Properties();\n174      \
          \            props.load( new FileInputStream(f));\n175                 \
          \ String factoryClassName = props.getProperty(factoryId);\n176         \
          \         return newInstance(factoryClassName, classLoader, properties);\n\
          177              }\n178          } catch(Exception ex ) {\n179         \
          \ }\n180  \n181  "
        lineNumber: 171
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/el/FactoryFinder.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/el/FactoryFinder.java
          kind: Constructor
          name: find
          package: javax.el
      - codeSnip: "164          \n165  \n166          // try to read from $java.home/lib/el.properties\n\
          167          try {\n168              String javah=System.getProperty( \"\
          java.home\" );\n169              String configFile = javah + File.separator\
          \ +\n170                  \"lib\" + File.separator + \"el.properties\";\n\
          171              File f=new File( configFile );\n172              if( f.exists())\
          \ {\n173                  Properties props=new Properties();\n174      \
          \            props.load( new FileInputStream(f));\n175                 \
          \ String factoryClassName = props.getProperty(factoryId);\n176         \
          \         return newInstance(factoryClassName, classLoader, properties);\n\
          177              }\n178          } catch(Exception ex ) {\n179         \
          \ }\n180  \n181  \n182          // Use the system property\n183        \
          \  try {\n184              String systemProp ="
        lineNumber: 174
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/el/FactoryFinder.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/el/FactoryFinder.java
          kind: Constructor
          name: find
          package: javax.el
      - lineNumber: 893
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/servlet/http/NoBodyResponse.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/servlet/http/NoBodyResponse.java
          kind: Constructor
          name: getWriter
          package: ''
      - codeSnip: "167          } catch (Exception ex) {\n168              LOGGER.log(Level.FINER,\
          \ \"Failed to load service \" + factoryId + \" from \" + serviceId, ex);\n\
          169          }\n170  \n171  \n172          // try to read from $java.home/lib/jaxrs.properties\n\
          173          try {\n174              String javah = System.getProperty(\"\
          java.home\");\n175              String configFile = javah + File.separator\n\
          176                      + \"lib\" + File.separator + \"jaxrs.properties\"\
          ;\n177              File f = new File(configFile);\n178              if\
          \ (f.exists()) {\n179                  Properties props = new Properties();\n\
          180                  props.load(new FileInputStream(f));\n181          \
          \        String factoryClassName = props.getProperty(factoryId);\n182  \
          \                return newInstance(factoryClassName, classLoader);\n183\
          \              }\n184          } catch (Exception ex) {\n185           \
          \   LOGGER.log(Level.FINER, \"Failed to load service \" + factoryId\n186\
          \                      + \" from $java.home/lib/jaxrs.properties\", ex);\n\
          187          }"
        lineNumber: 177
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/ws/rs/client/FactoryFinder.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/ws/rs/client/FactoryFinder.java
          kind: Constructor
          name: find
          package: javax.ws.rs.client
      - codeSnip: "170  \n171  \n172          // try to read from $java.home/lib/jaxrs.properties\n\
          173          try {\n174              String javah = System.getProperty(\"\
          java.home\");\n175              String configFile = javah + File.separator\n\
          176                      + \"lib\" + File.separator + \"jaxrs.properties\"\
          ;\n177              File f = new File(configFile);\n178              if\
          \ (f.exists()) {\n179                  Properties props = new Properties();\n\
          180                  props.load(new FileInputStream(f));\n181          \
          \        String factoryClassName = props.getProperty(factoryId);\n182  \
          \                return newInstance(factoryClassName, classLoader);\n183\
          \              }\n184          } catch (Exception ex) {\n185           \
          \   LOGGER.log(Level.FINER, \"Failed to load service \" + factoryId\n186\
          \                      + \" from $java.home/lib/jaxrs.properties\", ex);\n\
          187          }\n188  \n189  \n190          // Use the system property"
        lineNumber: 180
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/ws/rs/client/FactoryFinder.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/ws/rs/client/FactoryFinder.java
          kind: Constructor
          name: find
          package: javax.ws.rs.client
      - codeSnip: "168          } catch (Exception ex) {\n169              LOGGER.log(Level.FINER,\
          \ \"Failed to load service \" + factoryId + \" from \" + serviceId, ex);\n\
          170          }\n171  \n172  \n173          // try to read from $java.home/lib/jaxrs.properties\n\
          174          try {\n175              String javah = System.getProperty(\"\
          java.home\");\n176              String configFile = javah + File.separator\n\
          177                      + \"lib\" + File.separator + \"jaxrs.properties\"\
          ;\n178              File f = new File(configFile);\n179              if\
          \ (f.exists()) {\n180                  Properties props = new Properties();\n\
          181                  props.load(new FileInputStream(f));\n182          \
          \        String factoryClassName = props.getProperty(factoryId);\n183  \
          \                return newInstance(factoryClassName, classLoader);\n184\
          \              }\n185          } catch (Exception ex) {\n186           \
          \   LOGGER.log(Level.FINER, \"Failed to load service \" + factoryId\n187\
          \                      + \" from $java.home/lib/jaxrs.properties\", ex);\n\
          188          }"
        lineNumber: 178
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/ws/rs/ext/FactoryFinder.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/ws/rs/ext/FactoryFinder.java
          kind: Constructor
          name: find
          package: javax.ws.rs.ext
      - codeSnip: "171  \n172  \n173          // try to read from $java.home/lib/jaxrs.properties\n\
          174          try {\n175              String javah = System.getProperty(\"\
          java.home\");\n176              String configFile = javah + File.separator\n\
          177                      + \"lib\" + File.separator + \"jaxrs.properties\"\
          ;\n178              File f = new File(configFile);\n179              if\
          \ (f.exists()) {\n180                  Properties props = new Properties();\n\
          181                  props.load(new FileInputStream(f));\n182          \
          \        String factoryClassName = props.getProperty(factoryId);\n183  \
          \                return newInstance(factoryClassName, classLoader);\n184\
          \              }\n185          } catch (Exception ex) {\n186           \
          \   LOGGER.log(Level.FINER, \"Failed to load service \" + factoryId\n187\
          \                      + \" from $java.home/lib/jaxrs.properties\", ex);\n\
          188          }\n189  \n190  \n191          // Use the system property"
        lineNumber: 181
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/ws/rs/ext/FactoryFinder.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/ws/rs/ext/FactoryFinder.java
          kind: Constructor
          name: find
          package: javax.ws.rs.ext
      - codeSnip: "140      /**\n141       * Adds a jar or a directory with this name\
          \ to the classpath.\n142       *\n143       * @param name The name of the\
          \ jar or directory to add.\n144       * @throws IOException when the jar\
          \ or directory could not be found.\n145       */\n146      public static\
          \ void addJarOrDirectoryToClasspath(String name) throws IOException {\n\
          147          LOG.debug(\"Adding location to classpath: \" + name);\n148\
          \  \n149          try {\n150              URL url = new File(name).toURI().toURL();\n\
          151              URLClassLoader sysloader = (URLClassLoader) ClassLoader.getSystemClassLoader();\n\
          152              Method method = URLClassLoader.class.getDeclaredMethod(\"\
          addURL\", URL.class);\n153              method.setAccessible(true);\n154\
          \              method.invoke(sysloader, url);\n155          } catch (Exception\
          \ e) {\n156              throw new FlywayException(\"Unable to load \" +\
          \ name, e);\n157          }\n158      }\n159  }\n"
        lineNumber: 150
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/ClassUtils.java
        variables:
          file: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/ClassUtils.java
          kind: Constructor
          name: addJarOrDirectoryToClasspath
          package: org.flywaydb.core.internal.util
      - codeSnip: "32      }\n33  \n34      /**\n35       * Retrieves the file path\
          \ of this URL, with any trailing slashes removed.\n36       *\n37      \
          \ * @param url The URL to get the file path for.\n38       * @return The\
          \ file path.\n39       */\n40      public static String toFilePath(URL url)\
          \ {\n41          try {\n42              String filePath = new File(URLDecoder.decode(url.getPath().replace(\"\
          +\", \"%2b\"), \"UTF-8\")).getAbsolutePath();\n43              if (filePath.endsWith(\"\
          /\")) {\n44                  return filePath.substring(0, filePath.length()\
          \ - 1);\n45              }\n46              return filePath;\n47       \
          \   } catch (UnsupportedEncodingException e) {\n48              throw new\
          \ IllegalStateException(\"Can never happen\", e);\n49          }\n50   \
          \   }\n51  }\n"
        lineNumber: 42
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/UrlUtils.java
        variables:
          file: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/UrlUtils.java
          kind: Constructor
          name: toFilePath
          package: org.flywaydb.core.internal.util
      - codeSnip: "57      public String getLocation() {\n58          return location;\n\
          59      }\n60  \n61      public String getLocationOnDisk() {\n62       \
          \   URL url = getUrl();\n63          if (url == null) {\n64            \
          \  throw new FlywayException(\"Unable to location resource on disk: \" +\
          \ location);\n65          }\n66          try {\n67              return new\
          \ File(URLDecoder.decode(url.getPath(), \"UTF-8\")).getAbsolutePath();\n\
          68          } catch (UnsupportedEncodingException e) {\n69             \
          \ throw new FlywayException(\"Unknown encoding: UTF-8\", e);\n70       \
          \   }\n71      }\n72  \n73      /**\n74       * @return The url of this\
          \ resource.\n75       */\n76      private URL getUrl() {\n77          return\
          \ classLoader.getResource(location);"
        lineNumber: 67
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/classpath/ClassPathResource.java
        variables:
          file: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/classpath/ClassPathResource.java
          kind: Constructor
          name: getLocationOnDisk
          package: org.flywaydb.core.internal.util.scanner.classpath
      - codeSnip: "27  import java.util.TreeSet;\n28  \n29  /**\n30   * ClassPathLocationScanner\
          \ for the file system.\n31   */\n32  public class FileSystemClassPathLocationScanner\
          \ implements ClassPathLocationScanner {\n33      private static final Log\
          \ LOG = LogFactory.getLog(FileSystemClassPathLocationScanner.class);\n34\
          \  \n35      public Set<String> findResourceNames(String location, URL locationUrl)\
          \ throws IOException {\n36          String filePath = UrlUtils.toFilePath(locationUrl);\n\
          37          File folder = new File(filePath);\n38          if (!folder.isDirectory())\
          \ {\n39              LOG.debug(\"Skipping path as it is not a directory:\
          \ \" + filePath);\n40              return new TreeSet<String>();\n41   \
          \       }\n42  \n43          String classPathRootOnDisk = filePath.substring(0,\
          \ filePath.length() - location.length());\n44          if (!classPathRootOnDisk.endsWith(File.separator))\
          \ {\n45              classPathRootOnDisk = classPathRootOnDisk + File.separator;\n\
          46          }\n47          LOG.debug(\"Scanning starting at classpath root\
          \ in filesystem: \" + classPathRootOnDisk);"
        lineNumber: 37
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/classpath/FileSystemClassPathLocationScanner.java
        variables:
          file: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/classpath/FileSystemClassPathLocationScanner.java
          kind: Constructor
          name: findResourceNames
          package: org.flywaydb.core.internal.util.scanner.classpath
      - codeSnip: "36       * The location of the resource on the filesystem.\n37\
          \       */\n38      private File location;\n39  \n40      /**\n41      \
          \ * Creates a new ClassPathResource.\n42       *\n43       * @param location\
          \ The location of the resource on the filesystem.\n44       */\n45     \
          \ public FileSystemResource(String location) {\n46          this.location\
          \ = new File(location);\n47      }\n48  \n49      /**\n50       * @return\
          \ The location of the resource on the classpath.\n51       */\n52      public\
          \ String getLocation() {\n53          return StringUtils.replaceAll(location.getPath(),\
          \ \"\\\\\", \"/\");\n54      }\n55  \n56      /**"
        lineNumber: 46
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/filesystem/FileSystemResource.java
        variables:
          file: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/filesystem/FileSystemResource.java
          kind: Constructor
          name: FileSystemResource
          package: org.flywaydb.core.internal.util.scanner.filesystem
      - codeSnip: "63      }\n64  \n65      /**\n66       * Loads this resource as\
          \ a string.\n67       *\n68       * @param encoding The encoding to use.\n\
          69       * @return The string contents of the resource.\n70       */\n71\
          \      public String loadAsString(String encoding) {\n72          try {\n\
          73              InputStream inputStream = new FileInputStream(location);\n\
          74              Reader reader = new InputStreamReader(inputStream, Charset.forName(encoding));\n\
          75  \n76              return FileCopyUtils.copyToString(reader);\n77   \
          \       } catch (IOException e) {\n78              throw new FlywayException(\"\
          Unable to load filesystem resource: \" + location.getPath() + \" (encoding:\
          \ \" + encoding + \")\", e);\n79          }\n80      }\n81  \n82      /**\n\
          83       * Loads this resource as a byte array."
        lineNumber: 73
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/filesystem/FileSystemResource.java
        variables:
          file: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/filesystem/FileSystemResource.java
          kind: Constructor
          name: loadAsString
          package: org.flywaydb.core.internal.util.scanner.filesystem
      - codeSnip: "79          }\n80      }\n81  \n82      /**\n83       * Loads this\
          \ resource as a byte array.\n84       *\n85       * @return The contents\
          \ of the resource.\n86       */\n87      public byte[] loadAsBytes() {\n\
          88          try {\n89              InputStream inputStream = new FileInputStream(location);\n\
          90              return FileCopyUtils.copyToByteArray(inputStream);\n91 \
          \         } catch (IOException e) {\n92              throw new FlywayException(\"\
          Unable to load filesystem resource: \" + location.getPath(), e);\n93   \
          \       }\n94      }\n95  \n96      /**\n97       * @return The filename\
          \ of this resource, without the path.\n98       */\n99      public String\
          \ getFilename() {"
        lineNumber: 89
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/filesystem/FileSystemResource.java
        variables:
          file: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/filesystem/FileSystemResource.java
          kind: Constructor
          name: loadAsBytes
          package: org.flywaydb.core.internal.util.scanner.filesystem
      - codeSnip: "38       * @param location The location in the filesystem to start\
          \ searching. Subdirectories are also searched.\n39       * @param prefix\
          \   The prefix of the resource names to match.\n40       * @param suffix\
          \   The suffix of the resource names to match.\n41       * @return The resources\
          \ that were found.\n42       * @throws java.io.IOException when the location\
          \ could not be scanned.\n43       */\n44      public Resource[] scanForResources(Location\
          \ location, String prefix, String suffix) throws IOException {\n45     \
          \     String path = location.getPath();\n46          LOG.debug(\"Scanning\
          \ for filesystem resources at '\" + path + \"' (Prefix: '\" + prefix + \"\
          ', Suffix: '\" + suffix + \"')\");\n47  \n48          File dir = new File(path);\n\
          49          if (!dir.isDirectory() || !dir.canRead()) {\n50            \
          \  LOG.warn(\"Unable to resolve location filesystem:\" + path);\n51    \
          \          return new Resource[0];\n52          }\n53  \n54          Set<Resource>\
          \ resources = new TreeSet<Resource>();\n55  \n56          Set<String> resourceNames\
          \ = findResourceNames(path, prefix, suffix);\n57          for (String resourceName\
          \ : resourceNames) {\n58              resources.add(new FileSystemResource(resourceName));"
        lineNumber: 48
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/filesystem/FileSystemScanner.java
        variables:
          file: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/filesystem/FileSystemScanner.java
          kind: Constructor
          name: scanForResources
          package: org.flywaydb.core.internal.util.scanner.filesystem
      - codeSnip: "66       * Finds the resources names present at this location and\
          \ below on the classpath starting with this prefix and\n67       * ending\
          \ with this suffix.\n68       *\n69       * @param path   The path on the\
          \ classpath to scan.\n70       * @param prefix The filename prefix to match.\n\
          71       * @param suffix The filename suffix to match.\n72       * @return\
          \ The resource names.\n73       * @throws java.io.IOException when scanning\
          \ this location failed.\n74       */\n75      private Set<String> findResourceNames(String\
          \ path, String prefix, String suffix) throws IOException {\n76         \
          \ Set<String> resourceNames = findResourceNamesFromFileSystem(path, new\
          \ File(path));\n77          return filterResourceNames(resourceNames, prefix,\
          \ suffix);\n78      }\n79  \n80      /**\n81       * Finds all the resource\
          \ names contained in this file system folder.\n82       *\n83       * @param\
          \ scanRootLocation The root location of the scan on disk.\n84       * @param\
          \ folder           The folder to look for resources under on disk.\n85 \
          \      * @return The resource names;\n86       * @throws IOException when\
          \ the folder could not be read."
        lineNumber: 76
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/filesystem/FileSystemScanner.java
        variables:
          file: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/filesystem/FileSystemScanner.java
          kind: Constructor
          name: findResourceNames
          package: org.flywaydb.core.internal.util.scanner.filesystem
      - codeSnip: "62              }\n63          });\n64  \n65          return propValue;\n\
          66      }\n67  \n68      private void getPropertiesFromFile(Properties props,\
          \ String fileName)\n69      {\n70          try\n71          {\n72      \
          \        File file = new File(fileName);\n73              if (!file.exists())\n\
          74                  return;\n75  \n76              FileInputStream in =\
          \ new FileInputStream(file);\n77  \n78              try\n79            \
          \  {\n80                  props.load(in);\n81              }\n82       \
          \       finally"
        lineNumber: 72
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/GetORBPropertiesFileAction.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/GetORBPropertiesFileAction.java
          kind: Constructor
          name: getPropertiesFromFile
          package: javax.rmi.CORBA
      - codeSnip: "66      }\n67  \n68      private void getPropertiesFromFile(Properties\
          \ props, String fileName)\n69      {\n70          try\n71          {\n72\
          \              File file = new File(fileName);\n73              if (!file.exists())\n\
          74                  return;\n75  \n76              FileInputStream in =\
          \ new FileInputStream(file);\n77  \n78              try\n79            \
          \  {\n80                  props.load(in);\n81              }\n82       \
          \       finally\n83              {\n84                  in.close();\n85\
          \              }\n86          }"
        lineNumber: 76
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/GetORBPropertiesFileAction.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/CORBA/GetORBPropertiesFileAction.java
          kind: Constructor
          name: getPropertiesFromFile
          package: javax.rmi.CORBA
      - lineNumber: 284
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/GetORBPropertiesFileAction.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/GetORBPropertiesFileAction.java
          kind: Constructor
          name: getPropertiesFromFile
          package: ''
      - lineNumber: 288
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/GetORBPropertiesFileAction.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/javax/rmi/GetORBPropertiesFileAction.java
          kind: Constructor
          name: getPropertiesFromFile
          package: ''
      - codeSnip: "2282      }\n2283  \n2284      public String description()\n2285\
          \      {\n2286          return \"TypeCodeImpl with kind \" + _kind + \"\
          \ and id \" + _id;\n2287      }\n2288  \n2289      public String toString()\n\
          2290      {\n2291          ByteArrayOutputStream byteOut = new ByteArrayOutputStream(1024);\n\
          2292          PrintStream printOut = new PrintStream(byteOut, true);\n2293\
          \          printStream(printOut);\n2294          return super.toString()\
          \ + \" =\\n\" + byteOut.toString();\n2295      }\n2296  \n2297      public\
          \ void printStream(PrintStream s)\n2298      {\n2299          printStream(s,\
          \ 0);\n2300      }\n2301  \n2302      private void printStream(PrintStream\
          \ s, int level)"
        lineNumber: 2292
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
        variables:
          file: file:///root/.m2/repository/org/jboss/spec/javax/rmi/jboss-rmi-api_1.0_spec/1.0.2.Final/org/jboss/com/sun/corba/se/impl/corba/TypeCodeImpl.java
          kind: Constructor
          name: toString
          package: org.jboss.com.sun.corba.se.impl.corba
      labels:
      - konveyor.io/source
      - konveyor.io/target=cloud-readiness
      - storage
      links:
      - title: 'OpenShift Container Platform: Input secrets and ConfigMaps'
        url: https://docs.openshift.com/container-platform/4.5/builds/creating-build-inputs.html#builds-input-secrets-configmaps_creating-build-inputs
      - title: 'OpenShift Container Platform: Understanding cluster logging'
        url: https://docs.openshift.com/container-platform/4.5/logging/cluster-logging.html
      - title: 'OpenShift Container Platform: Understanding persistent storage'
        url: https://docs.openshift.com/container-platform/4.5/storage/understanding-persistent-storage.html
      - title: 'Twelve-Factor App: Backing services'
        url: https://12factor.net/backing-services
      - title: 'Twelve-Factor App: Config'
        url: https://12factor.net/config
      - title: 'Twelve-Factor App: Logs'
        url: https://12factor.net/logs
    local-storage-00002:
      category: mandatory
      description: File system - java.net.URL/URI
      effort: 1
      incidents:
      - codeSnip: "372       * Returns null if this URLName has no password.\n373\
          \       */\n374      public String getPassword() {\n375  \treturn doEncode\
          \ ? decode(password) : password;\n376      }\n377  \n378      /**\n379 \
          \      * Constructs a URL from the URLName.\n380       */\n381      public\
          \ URL getURL() throws MalformedURLException {\n382          return new URL(getProtocol(),\
          \ getHost(), getPort(), getFile());\n383      }\n384  \n385      /**\n386\
          \       * Compares two URLNames. The result is true if and only if the\n\
          387       * argument is not null and is a URLName object that represents\
          \ the\n388       * same URLName as this object. Two URLName objects are\
          \ equal if\n389       * they have the same protocol and the same host,\n\
          390       * the same port number on the host, the same username,\n391  \
          \     * and the same file on the host. The fields (host, username,\n392\
          \       * file) are also considered the same if they are both"
        lineNumber: 382
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/URLName.java
        variables:
          class: ''
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/URLName.java
          kind: Constructor
          name: getURL
          package: javax.mail
      - codeSnip: "285      /**\n286       * Creates {@link Source} from various XML\
          \ representation.\n287       * See {@link #unmarshal} for the conversion\
          \ rules.\n288       */\n289      private static Source toSource(Object xml)\
          \ throws IOException {\n290          if(xml==null)\n291              throw\
          \ new IllegalArgumentException(\"no XML is given\");\n292  \n293       \
          \   if (xml instanceof String) {\n294              try {\n295          \
          \        xml=new URI((String)xml);\n296              } catch (URISyntaxException\
          \ e) {\n297                  xml=new File((String)xml);\n298           \
          \   }\n299          }\n300          if (xml instanceof File) {\n301    \
          \          File file = (File) xml;\n302              return new StreamSource(file);\n\
          303          }\n304          if (xml instanceof URI) {\n305            \
          \  URI uri = (URI) xml;"
        lineNumber: 295
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/bind/JAXB.java
        variables:
          class: ''
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/bind/JAXB.java
          kind: Constructor
          name: toSource
          package: javax.xml.bind
      - codeSnip: "599      /**\n600       * Creates {@link Result} from various XML\
          \ representation.\n601       * See {@link #_marshal(Object,Object)} for\
          \ the conversion rules.\n602       */\n603      private static Result toResult(Object\
          \ xml) throws IOException {\n604          if(xml==null)\n605           \
          \   throw new IllegalArgumentException(\"no XML is given\");\n606  \n607\
          \          if (xml instanceof String) {\n608              try {\n609   \
          \               xml=new URI((String)xml);\n610              } catch (URISyntaxException\
          \ e) {\n611                  xml=new File((String)xml);\n612           \
          \   }\n613          }\n614          if (xml instanceof File) {\n615    \
          \          File file = (File) xml;\n616              return new StreamResult(file);\n\
          617          }\n618          if (xml instanceof URI) {\n619            \
          \  URI uri = (URI) xml;"
        lineNumber: 609
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/bind/JAXB.java
        variables:
          class: ''
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/bind/JAXB.java
          kind: Constructor
          name: toResult
          package: javax.xml.bind
      - codeSnip: "194  \n195          try {\n196              // copied from JAXP\n\
          197  \t    String path = f.getAbsolutePath();\n198  \t    if (File.separatorChar\
          \ != '/')\n199  \t    \tpath = path.replace(File.separatorChar, '/');\n\
          200  \t    if (!path.startsWith(\"/\"))\n201  \t    \tpath = \"/\" + path;\n\
          202  \t    if (!path.endsWith(\"/\") && f.isDirectory())\n203  \t    \t\
          path = path + \"/\";\n204  \t    return unmarshal(new URL(\"file\", \"\"\
          , path));\n205          } catch( MalformedURLException e ) {\n206      \
          \        throw new IllegalArgumentException(e.getMessage());\n207      \
          \    }\n208      }\n209      \n210      public final Object unmarshal( java.io.InputStream\
          \ is ) \n211          throws JAXBException {\n212              \n213   \
          \       if( is == null ) {\n214              throw new IllegalArgumentException("
        lineNumber: 204
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/bind/helpers/AbstractUnmarshallerImpl.java
        variables:
          class: ''
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/bind/helpers/AbstractUnmarshallerImpl.java
          kind: Constructor
          name: unmarshal
          package: javax.xml.bind.helpers
      - codeSnip: "152              throw new IllegalArgumentException(\n153     \
          \             Messages.format( Messages.MUST_NOT_BE_NULL, \"_object\" )\
          \ );\n154          }\n155  \n156          this.object = _object;\n157  \
          \    }\n158      \n159      /** Converts a system ID to an URL object. */\n\
          160      private static URL toURL( String systemId ) {\n161          try\
          \ {\n162              return new URL(systemId);\n163          } catch( MalformedURLException\
          \ e ) {\n164              // TODO: how should we handle system id here?\n\
          165              return null;    // for now\n166          }\n167      }\n\
          168      \n169      private URL url = null;\n170      private int offset\
          \ = -1;\n171      private int lineNumber = -1;\n172      private int columnNumber\
          \ = -1;"
        lineNumber: 162
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/bind/helpers/ValidationEventLocatorImpl.java
        variables:
          class: ''
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/xml/bind/helpers/ValidationEventLocatorImpl.java
          kind: Constructor
          name: toURL
          package: javax.xml.bind.helpers
      - codeSnip: "166       * portion of the url.</p>\n167       *\n168       * @param\
          \ context the {@link FacesContext} for the current request\n169       *\n\
          170       * @throws MalformedURLException if the process of constructing\
          \ the\n171       * URL causes this exception to be thrown.\n172       */\n\
          173      public URL getActionURL(FacesContext context) throws MalformedURLException\
          \ {\n174  \n175          ExternalContext extContext = context.getExternalContext();\n\
          176          return new URL(extContext.getRequestScheme(),\n177        \
          \          extContext.getRequestServerName(),\n178                  extContext.getRequestServerPort(),\n\
          179                  context.getApplication().getViewHandler().getActionURL(context,\
          \ getToViewId(context)));\n180          \n181      }\n182  \n183  \n184\
          \      /**\n185       * <p class=\"changed_added_2_0\">Construct an absolute\
          \ URL to this\n186       * <code>NavigationCase</code> instance using {@link\n\
          187       * javax.faces.application.ViewHandler#getResourceURL} on the path\n\
          188       * portion of the url.</p>\n189       *"
        lineNumber: 176
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/faces/application/NavigationCase.java
        variables:
          class: ''
          file: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/faces/application/NavigationCase.java
          kind: Constructor
          name: getActionURL
          package: javax.faces.application
      - codeSnip: "189       *\n190       * @param context the {@link FacesContext}\
          \ for the current request\n191       *\n192       * @throws MalformedURLException\
          \ if the process of constructing the\n193       * URL causes this exception\
          \ to be thrown.\n194       */\n195      public URL getResourceURL(FacesContext\
          \ context) throws MalformedURLException {\n196          \n197          ExternalContext\
          \ extContext = context.getExternalContext();\n198  \n199          return\
          \ new URL(extContext.getRequestScheme(),\n200                  extContext.getRequestServerName(),\n\
          201                  extContext.getRequestServerPort(),\n202           \
          \       context.getApplication().getViewHandler().getResourceURL(context,\
          \ getToViewId(context)));\n203  \n204      }\n205  \n206  \n207      /**\n\
          208       * <p class=\"changed_added_2_0\">Construct an absolute URL suitable\
          \ for a\n209       * \"redirect\" to this <code>NavigationCase</code> instance\
          \ using {@link\n210       * javax.faces.application.ViewHandler#getRedirectURL}\
          \ on the path\n211       * portion of the url.</p>\n212       *"
        lineNumber: 199
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/faces/application/NavigationCase.java
        variables:
          class: ''
          file: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/faces/application/NavigationCase.java
          kind: Constructor
          name: getResourceURL
          package: javax.faces.application
      - codeSnip: "212       *\n213       * @param context the {@link FacesContext}\
          \ for the current request\n214       *\n215       * @throws MalformedURLException\
          \ if the process of constructing the\n216       * URL causes this exception\
          \ to be thrown.\n217       */\n218      public URL getRedirectURL(FacesContext\
          \ context) throws MalformedURLException {\n219  \n220          ExternalContext\
          \ extContext = context.getExternalContext();\n221  \n222          return\
          \ new URL(extContext.getRequestScheme(),\n223                  extContext.getRequestServerName(),\n\
          224                  extContext.getRequestServerPort(),\n225           \
          \       context.getApplication().getViewHandler().getRedirectURL(context,\n\
          226                                                                    \
          \       getToViewId(context),\n227                                     \
          \                                      SharedUtils.evaluateExpressions(context,\
          \ getParameters()),\n228                                               \
          \                            isIncludeViewParams()));\n229  \n230      }\n\
          231  \n232  \n233      /**\n234       * <p class=\"changed_added_2_0\">Construct\
          \ an absolute URL suitable for a\n235       * bookmarkable link to this\
          \ <code>NavigationCase</code> instance using {@link\n236       * javax.faces.application.ViewHandler#getBookmarkableURL}\
          \ on the path\n237       * portion of the url.  This URL may include view\
          \ parameters specified\n238       * as metadata within the view.</p>"
        lineNumber: 222
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/faces/application/NavigationCase.java
        variables:
          class: ''
          file: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/faces/application/NavigationCase.java
          kind: Constructor
          name: getRedirectURL
          package: javax.faces.application
      - codeSnip: "238       * as metadata within the view.</p>\n239       *\n240\
          \       * @param context the {@link FacesContext} for the current request\n\
          241       *\n242       * @throws MalformedURLException if the process of\
          \ constructing the\n243       * URL causes this exception to be thrown.\n\
          244       */\n245      public URL getBookmarkableURL(FacesContext context)\
          \ throws MalformedURLException {\n246  \n247          ExternalContext extContext\
          \ = context.getExternalContext();\n248          return new URL(extContext.getRequestScheme(),\n\
          249                  extContext.getRequestServerName(),\n250           \
          \       extContext.getRequestServerPort(),\n251                  context.getApplication().getViewHandler().getBookmarkableURL(context,\n\
          252                                                                    \
          \           getToViewId(context),\n253                                 \
          \                                              getParameters(),\n254   \
          \                                                                      \
          \      isIncludeViewParams()));\n255      }\n256  \n257      \n258     \
          \ /**\n259       * <p class=\"changed_added_2_0\">Return the\n260      \
          \ * <code>&lt;from-view-id&gt;</code> of the\n261       * <code>&lt;navigation-rule&gt;</code>\
          \ inside which this\n262       * <code>&lt;navigation-case&gt;</code> is\
          \ nested.</p>\n263       */\n264      public String getFromViewId() {"
        lineNumber: 248
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/faces/application/NavigationCase.java
        variables:
          class: ''
          file: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/faces/application/NavigationCase.java
          kind: Constructor
          name: getBookmarkableURL
          package: javax.faces.application
      - codeSnip: "254  \n255          if (classLoader.getClass().getName().startsWith(\"\
          com.ibm\")) {\n256              // WebSphere\n257              Enumeration<URL>\
          \ urls = classLoader.getResources(location.getPath() + \"/flyway.location\"\
          );\n258              if (!urls.hasMoreElements()) {\n259               \
          \   LOG.warn(\"Unable to resolve location \" + location + \" (ClassLoader:\
          \ \" + classLoader + \")\"\n260                          + \" On WebSphere\
          \ an empty file named flyway.location must be present on the classpath location\
          \ for WebSphere to find it!\");\n261              }\n262              while\
          \ (urls.hasMoreElements()) {\n263                  URL url = urls.nextElement();\n\
          264                  locationUrls.add(new URL(URLDecoder.decode(url.toExternalForm(),\
          \ \"UTF-8\").replace(\"/flyway.location\", \"\")));\n265              }\n\
          266          } else {\n267              Enumeration<URL> urls = classLoader.getResources(location.getPath());\n\
          268              while (urls.hasMoreElements()) {\n269                 \
          \ locationUrls.add(urls.nextElement());\n270              }\n271       \
          \   }\n272  \n273          locationUrlCache.put(location, locationUrls);\n\
          274  "
        lineNumber: 264
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/classpath/ClassPathScanner.java
        variables:
          class: ''
          file: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/classpath/ClassPathScanner.java
          kind: Constructor
          name: getLocationUrlsForPath
          package: org.flywaydb.core.internal.util.scanner.classpath
      - codeSnip: "62          // We'll assume URLs of the format \"jar:path!/entry\"\
          , with the protocol\n63          // being arbitrary as long as following\
          \ the entry format.\n64          // We'll also handle paths with and without\
          \ leading \"file:\" prefix.\n65          String urlFile = locationUrl.getFile();\n\
          66  \n67          int separatorIndex = urlFile.indexOf(\"!/\");\n68    \
          \      if (separatorIndex != -1) {\n69              String jarFileUrl =\
          \ urlFile.substring(0, separatorIndex);\n70              if (jarFileUrl.startsWith(\"\
          file:\")) {\n71                  try {\n72                      return new\
          \ JarFile(new URL(jarFileUrl).toURI().getSchemeSpecificPart());\n73    \
          \              } catch (URISyntaxException ex) {\n74                   \
          \   // Fallback for URLs that are not valid URIs (should hardly ever happen).\n\
          75                      return new JarFile(jarFileUrl.substring(\"file:\"\
          .length()));\n76                  }\n77              }\n78             \
          \ return new JarFile(jarFileUrl);\n79          }\n80  \n81          return\
          \ new JarFile(urlFile);\n82      }"
        lineNumber: 72
        message: "An application running inside a container could lose access to a\
          \ file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache."
        uri: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/classpath/JarFileClassPathLocationScanner.java
        variables:
          class: ''
          file: file:///root/.m2/repository/org/flywaydb/flyway-core/4.1.2/org/flywaydb/core/internal/util/scanner/classpath/JarFileClassPathLocationScanner.java
          kind: Constructor
          name: getJarFromUrl
          package: org.flywaydb.core.internal.util.scanner.classpath
      labels:
      - konveyor.io/source
      - konveyor.io/target=cloud-readiness
      - storage
      links:
      - title: 'OpenShift Container Platform: Input secrets and ConfigMaps'
        url: https://docs.openshift.com/container-platform/4.5/builds/creating-build-inputs.html#builds-input-secrets-configmaps_creating-build-inputs
      - title: 'OpenShift Container Platform: Understanding cluster logging'
        url: https://docs.openshift.com/container-platform/4.5/logging/cluster-logging.html
      - title: 'OpenShift Container Platform: Understanding persistent storage'
        url: https://docs.openshift.com/container-platform/4.5/storage/understanding-persistent-storage.html
      - title: 'Twelve-Factor App: Backing services'
        url: https://12factor.net/backing-services
      - title: 'Twelve-Factor App: Config'
        url: https://12factor.net/config
      - title: 'Twelve-Factor App: Logs'
        url: https://12factor.net/logs
    mail-00000:
      category: optional
      description: Java Mail API
      effort: 3
      incidents:
      - codeSnip: 11   * https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
        lineNumber: 61
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/auth/Ntlm.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/auth/Ntlm.java
          kind: Class
          name: Ntlm
          package: com.sun.mail.auth
      - codeSnip: "50  import java.security.GeneralSecurityException;\n51  import\
          \ java.security.NoSuchAlgorithmException;\n52  import java.util.Locale;\n\
          53  import java.util.logging.Level;\n54  import javax.crypto.Cipher;\n55\
          \  import javax.crypto.NoSuchPaddingException;\n56  import javax.crypto.SecretKey;\n\
          57  import javax.crypto.SecretKeyFactory;\n58  import javax.crypto.spec.DESKeySpec;\n\
          59  \n60  import com.sun.mail.util.BASE64DecoderStream;\n61  import com.sun.mail.util.BASE64EncoderStream;\n\
          62  import com.sun.mail.util.MailLogger;\n63  \n64  \n65  /**\n66   * NTLMAuthentication:\n\
          67   *\n68   * @author Michael McMahon\n69   * @author Bill Shannon (adapted\
          \ for JavaMail)\n70   */"
        lineNumber: 60
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/auth/Ntlm.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/auth/Ntlm.java
          kind: Class
          name: Ntlm
          package: com.sun.mail.auth
      - codeSnip: "52  import java.util.Locale;\n53  import java.util.logging.Level;\n\
          54  import javax.crypto.Cipher;\n55  import javax.crypto.NoSuchPaddingException;\n\
          56  import javax.crypto.SecretKey;\n57  import javax.crypto.SecretKeyFactory;\n\
          58  import javax.crypto.spec.DESKeySpec;\n59  \n60  import com.sun.mail.util.BASE64DecoderStream;\n\
          61  import com.sun.mail.util.BASE64EncoderStream;\n62  import com.sun.mail.util.MailLogger;\n\
          63  \n64  \n65  /**\n66   * NTLMAuthentication:\n67   *\n68   * @author\
          \ Michael McMahon\n69   * @author Bill Shannon (adapted for JavaMail)\n\
          70   */\n71  public class Ntlm {\n72  "
        lineNumber: 62
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/auth/Ntlm.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/auth/Ntlm.java
          kind: Class
          name: Ntlm
          package: com.sun.mail.auth
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.handlers;\n\
          42  \n43  import java.io.*;\n44  import java.awt.*;\n45  import java.awt.datatransfer.DataFlavor;\n\
          46  import javax.activation.*;\n47  import javax.mail.internet.*;\n48  \n\
          49  /**\n50   * DataContentHandler for image/gif.\n51   */\n52  public class\
          \ image_gif implements DataContentHandler {\n53      private static ActivationDataFlavor\
          \ myDF = new ActivationDataFlavor(\n54  \tjava.awt.Image.class,\n55  \t\"\
          image/gif\",\n56  \t\"GIF Image\");\n57  "
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/image_gif.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/image_gif.java
          kind: Class
          name: image_gif
          package: com.sun.mail.handlers
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.handlers;\n\
          42  \n43  import java.io.*;\n44  import java.util.Properties;\n45  import\
          \ java.awt.datatransfer.DataFlavor;\n46  import javax.activation.*;\n47\
          \  import javax.mail.*;\n48  import javax.mail.internet.*;\n49  \n50  \n\
          51  /**\n52   * @author\tChristopher Cotton\n53   */\n54  \n55  \n56  public\
          \ class message_rfc822 implements DataContentHandler {\n57  "
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/message_rfc822.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/message_rfc822.java
          kind: Class
          name: message_rfc822
          package: com.sun.mail.handlers
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package com.sun.mail.handlers;\n\
          42  \n43  import java.io.*;\n44  import java.util.Properties;\n45  import\
          \ java.awt.datatransfer.DataFlavor;\n46  import javax.activation.*;\n47\
          \  import javax.mail.*;\n48  import javax.mail.internet.*;\n49  \n50  \n\
          51  /**\n52   * @author\tChristopher Cotton\n53   */\n54  \n55  \n56  public\
          \ class message_rfc822 implements DataContentHandler {\n57  \n58      ActivationDataFlavor\
          \ ourDataFlavor = new ActivationDataFlavor("
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/message_rfc822.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/message_rfc822.java
          kind: Class
          name: message_rfc822
          package: com.sun.mail.handlers
      - codeSnip: "49  \n50  \n51  /**\n52   * @author\tChristopher Cotton\n53   */\n\
          54  \n55  \n56  public class message_rfc822 implements DataContentHandler\
          \ {\n57  \n58      ActivationDataFlavor ourDataFlavor = new ActivationDataFlavor(\n\
          59  \tjavax.mail.Message.class,\n60  \t\"message/rfc822\", \n61  \t\"Message\"\
          );\n62  \n63      /**\n64       * return the DataFlavors for this <code>DataContentHandler</code>\n\
          65       * @return The DataFlavors.\n66       */\n67      public DataFlavor[]\
          \ getTransferDataFlavors() {\n68  \treturn new DataFlavor[] { ourDataFlavor\
          \ };\n69      }"
        lineNumber: 59
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/message_rfc822.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/message_rfc822.java
          kind: Field
          name: ourDataFlavor
          package: com.sun.mail.handlers
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.handlers;\n\
          42  \n43  import java.io.*;\n44  import java.awt.datatransfer.DataFlavor;\n\
          45  import javax.activation.*;\n46  import javax.mail.MessagingException;\n\
          47  import javax.mail.internet.*;\n48  \n49  \n50  public class multipart_mixed\
          \ implements DataContentHandler {\n51      private ActivationDataFlavor\
          \ myDF = new ActivationDataFlavor(\n52  \t    javax.mail.internet.MimeMultipart.class,\n\
          53  \t    \"multipart/mixed\", \n54  \t    \"Multipart\");\n55  \n56   \
          \   /**"
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/multipart_mixed.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/multipart_mixed.java
          kind: Class
          name: multipart_mixed
          package: com.sun.mail.handlers
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.handlers;\n\
          42  \n43  import java.io.*;\n44  import java.awt.datatransfer.DataFlavor;\n\
          45  import javax.activation.*;\n46  import javax.mail.MessagingException;\n\
          47  import javax.mail.internet.*;\n48  \n49  \n50  public class multipart_mixed\
          \ implements DataContentHandler {\n51      private ActivationDataFlavor\
          \ myDF = new ActivationDataFlavor(\n52  \t    javax.mail.internet.MimeMultipart.class,\n\
          53  \t    \"multipart/mixed\", \n54  \t    \"Multipart\");\n55  \n56   \
          \   /**\n57       * Return the DataFlavors for this <code>DataContentHandler</code>."
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/multipart_mixed.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/multipart_mixed.java
          kind: Class
          name: multipart_mixed
          package: com.sun.mail.handlers
      - codeSnip: "42  \n43  import java.io.*;\n44  import java.awt.datatransfer.DataFlavor;\n\
          45  import javax.activation.*;\n46  import javax.mail.MessagingException;\n\
          47  import javax.mail.internet.*;\n48  \n49  \n50  public class multipart_mixed\
          \ implements DataContentHandler {\n51      private ActivationDataFlavor\
          \ myDF = new ActivationDataFlavor(\n52  \t    javax.mail.internet.MimeMultipart.class,\n\
          53  \t    \"multipart/mixed\", \n54  \t    \"Multipart\");\n55  \n56   \
          \   /**\n57       * Return the DataFlavors for this <code>DataContentHandler</code>.\n\
          58       *\n59       * @return The DataFlavors\n60       */\n61      public\
          \ DataFlavor[] getTransferDataFlavors() { // throws Exception;\n62  \treturn\
          \ new DataFlavor[] { myDF };"
        lineNumber: 52
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/multipart_mixed.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/multipart_mixed.java
          kind: Field
          name: myDF
          package: com.sun.mail.handlers
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.handlers;\n\
          42  \n43  import java.io.*;\n44  import java.awt.datatransfer.DataFlavor;\n\
          45  import javax.activation.*;\n46  import javax.mail.internet.*;\n47  \n\
          48  /**\n49   * DataContentHandler for text/plain.\n50   *\n51   */\n52\
          \  public class text_plain implements DataContentHandler {\n53      private\
          \ static ActivationDataFlavor myDF = new ActivationDataFlavor(\n54  \tjava.lang.String.class,\n\
          55  \t\"text/plain\",\n56  \t\"Text String\");"
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/text_plain.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/text_plain.java
          kind: Class
          name: text_plain
          package: com.sun.mail.handlers
      - codeSnip: "40  \n41  package com.sun.mail.handlers;\n42  \n43  import java.awt.datatransfer.DataFlavor;\n\
          44  import java.io.IOException;\n45  import java.io.OutputStream;\n46  \n\
          47  import javax.activation.ActivationDataFlavor;\n48  import javax.activation.DataContentHandler;\n\
          49  import javax.activation.DataSource;\n50  import javax.mail.internet.ContentType;\n\
          51  import javax.xml.transform.Source;\n52  import javax.xml.transform.Transformer;\n\
          53  import javax.xml.transform.TransformerFactory;\n54  import javax.xml.transform.stream.StreamResult;\n\
          55  import javax.xml.transform.stream.StreamSource;\n56  \n57  /**\n58 \
          \  * DataContentHandler for text/xml.\n59   *\n60   * @author Anil Vijendran"
        lineNumber: 50
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/text_xml.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/handlers/text_xml.java
          kind: Class
          name: text_xml
          package: com.sun.mail.handlers
      - lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/iap/AString.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/iap/AString.java
          kind: Class
          name: AString
          package: ''
      - codeSnip: "39   */\n40  \n41  package com.sun.mail.iap;\n42  \n43  import\
          \ java.util.Vector;\n44  import java.util.Properties;\n45  import java.io.*;\n\
          46  import java.net.*;\n47  import java.util.logging.Level;\n48  import\
          \ javax.net.ssl.SSLSocket;\n49  import com.sun.mail.util.*;\n50  \n51  /**\n\
          52   * General protocol handling code for IMAP-like protocols. <p>\n53 \
          \  *\n54   * The Protocol object is multithread safe.\n55   *\n56   * @author\
          \  John Mani\n57   * @author  Max Spivak\n58   * @author  Bill Shannon\n\
          59   */"
        lineNumber: 49
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/iap/Protocol.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/iap/Protocol.java
          kind: Class
          name: Protocol
          package: com.sun.mail.iap
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ com.sun.mail.iap;\n42  \n43  import java.io.*;\n44  import java.util.*;\n\
          45  import com.sun.mail.util.*;\n46  \n47  /**\n48   * This class represents\
          \ a response obtained from the input stream\n49   * of an IMAP server.\n\
          50   *\n51   * @author  John Mani\n52   */\n53  \n54  public class Response\
          \ {\n55      protected int index;  // internal index (updated during the\
          \ parse)"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/iap/Response.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/iap/Response.java
          kind: Class
          name: Response
          package: com.sun.mail.iap
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.iap;\n42  \n43  import java.io.*;\n44  import\
          \ com.sun.mail.iap.ByteArray;\n45  import com.sun.mail.util.ASCIIUtility;\n\
          46  \n47  /**\n48   *\n49   * Inputstream that is used to read a Response.\n\
          50   *\n51   * @author  Arun Krishnan\n52   * @author  Bill Shannon\n53\
          \   */\n54  "
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/iap/ResponseInputStream.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/iap/ResponseInputStream.java
          kind: Class
          name: ResponseInputStream
          package: com.sun.mail.iap
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ com.sun.mail.iap;\n42  \n43  import java.io.*;\n44  import com.sun.mail.iap.ByteArray;\n\
          45  import com.sun.mail.util.ASCIIUtility;\n46  \n47  /**\n48   *\n49  \
          \ * Inputstream that is used to read a Response.\n50   *\n51   * @author\
          \  Arun Krishnan\n52   * @author  Bill Shannon\n53   */\n54  \n55  public\
          \ class ResponseInputStream {"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/iap/ResponseInputStream.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/iap/ResponseInputStream.java
          kind: Class
          name: ResponseInputStream
          package: com.sun.mail.iap
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.imap;\n42  \n43  import com.sun.mail.iap.*;\n\
          44  \n45  /**\n46   * Information from the APPENDUID response code\n47 \
          \  * defined by the UIDPLUS extension -\n48   * <A HREF=\"http://www.ietf.org/rfc/rfc2359.txt\"\
          >RFC 2359</A>.\n49   *\n50   * @author  Bill Shannon\n51   */\n52  \n53\
          \  public class AppendUID { "
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/AppendUID.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/AppendUID.java
          kind: Class
          name: AppendUID
          package: com.sun.mail.imap
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.imap;\n42  \n43  import javax.mail.*;\n44 \
          \ import javax.mail.internet.*;\n45  import com.sun.mail.util.*;\n46  import\
          \ com.sun.mail.iap.*;\n47  import com.sun.mail.imap.protocol.*;\n48  \n\
          49  /**\n50   * The default IMAP folder (root of the naming hierarchy).\n\
          51   *\n52   * @author  John Mani\n53   */"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/DefaultFolder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/DefaultFolder.java
          kind: Class
          name: DefaultFolder
          package: com.sun.mail.imap
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.imap;\n42  \n43  import javax.mail.*;\n44 \
          \ import javax.mail.internet.*;\n45  import com.sun.mail.util.*;\n46  import\
          \ com.sun.mail.iap.*;\n47  import com.sun.mail.imap.protocol.*;\n48  \n\
          49  /**\n50   * The default IMAP folder (root of the naming hierarchy).\n\
          51   *\n52   * @author  John Mani\n53   */\n54  "
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/DefaultFolder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/DefaultFolder.java
          kind: Class
          name: DefaultFolder
          package: com.sun.mail.imap
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ com.sun.mail.imap;\n42  \n43  import javax.mail.*;\n44  import javax.mail.internet.*;\n\
          45  import com.sun.mail.util.*;\n46  import com.sun.mail.iap.*;\n47  import\
          \ com.sun.mail.imap.protocol.*;\n48  \n49  /**\n50   * The default IMAP\
          \ folder (root of the naming hierarchy).\n51   *\n52   * @author  John Mani\n\
          53   */\n54  \n55  public class DefaultFolder extends IMAPFolder {"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/DefaultFolder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/DefaultFolder.java
          kind: Class
          name: ''
          package: com.sun.mail.imap
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap;\n\
          42  \n43  import javax.mail.*;\n44  import javax.mail.internet.*;\n45  import\
          \ com.sun.mail.util.*;\n46  import com.sun.mail.iap.*;\n47  import com.sun.mail.imap.protocol.*;\n\
          48  \n49  /**\n50   * The default IMAP folder (root of the naming hierarchy).\n\
          51   *\n52   * @author  John Mani\n53   */\n54  \n55  public class DefaultFolder\
          \ extends IMAPFolder {\n56      "
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/DefaultFolder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/DefaultFolder.java
          kind: Class
          name: ''
          package: com.sun.mail.imap
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap;\n\
          42  \n43  import javax.mail.*;\n44  import javax.mail.internet.*;\n45  import\
          \ com.sun.mail.util.*;\n46  import com.sun.mail.iap.*;\n47  import com.sun.mail.imap.protocol.*;\n\
          48  \n49  /**\n50   * The default IMAP folder (root of the naming hierarchy).\n\
          51   *\n52   * @author  John Mani\n53   */\n54  \n55  public class DefaultFolder\
          \ extends IMAPFolder {\n56      \n57      protected DefaultFolder(IMAPStore\
          \ store) {"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/DefaultFolder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/DefaultFolder.java
          kind: Class
          name: ''
          package: com.sun.mail.imap
      - codeSnip: 11   * https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
        lineNumber: 51
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPBodyPart.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPBodyPart.java
          kind: Class
          name: IMAPBodyPart
          package: com.sun.mail.imap
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap;\n\
          42  \n43  import java.io.*;\n44  \n45  import java.util.Enumeration;\n46\
          \  import javax.mail.*;\n47  import javax.mail.internet.*;\n48  import javax.activation.*;\n\
          49  \n50  import com.sun.mail.util.*;\n51  import com.sun.mail.iap.*;\n\
          52  import com.sun.mail.imap.protocol.*;\n53  \n54  /**\n55   * An IMAP\
          \ body part.\n56   *"
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPBodyPart.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPBodyPart.java
          kind: Class
          name: IMAPBodyPart
          package: com.sun.mail.imap
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap;\n\
          42  \n43  import java.io.*;\n44  \n45  import java.util.Enumeration;\n46\
          \  import javax.mail.*;\n47  import javax.mail.internet.*;\n48  import javax.activation.*;\n\
          49  \n50  import com.sun.mail.util.*;\n51  import com.sun.mail.iap.*;\n\
          52  import com.sun.mail.imap.protocol.*;\n53  \n54  /**\n55   * An IMAP\
          \ body part.\n56   *\n57   * @author  John Mani"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPBodyPart.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPBodyPart.java
          kind: Class
          name: IMAPBodyPart
          package: com.sun.mail.imap
      - codeSnip: "40  \n41  package com.sun.mail.imap;\n42  \n43  import java.io.*;\n\
          44  \n45  import java.util.Enumeration;\n46  import javax.mail.*;\n47  import\
          \ javax.mail.internet.*;\n48  import javax.activation.*;\n49  \n50  import\
          \ com.sun.mail.util.*;\n51  import com.sun.mail.iap.*;\n52  import com.sun.mail.imap.protocol.*;\n\
          53  \n54  /**\n55   * An IMAP body part.\n56   *\n57   * @author  John Mani\n\
          58   * @author  Bill Shannon\n59   */\n60  "
        lineNumber: 50
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPBodyPart.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPBodyPart.java
          kind: Class
          name: IMAPBodyPart
          package: com.sun.mail.imap
      - codeSnip: "42  \n43  import java.io.*;\n44  \n45  import java.util.Enumeration;\n\
          46  import javax.mail.*;\n47  import javax.mail.internet.*;\n48  import\
          \ javax.activation.*;\n49  \n50  import com.sun.mail.util.*;\n51  import\
          \ com.sun.mail.iap.*;\n52  import com.sun.mail.imap.protocol.*;\n53  \n\
          54  /**\n55   * An IMAP body part.\n56   *\n57   * @author  John Mani\n\
          58   * @author  Bill Shannon\n59   */\n60  \n61  public class IMAPBodyPart\
          \ extends MimeBodyPart implements ReadableMime {\n62      private IMAPMessage\
          \ message;"
        lineNumber: 52
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPBodyPart.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPBodyPart.java
          kind: Class
          name: IMAPBodyPart
          package: com.sun.mail.imap
      - codeSnip: 11   * https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
        lineNumber: 57
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPFolder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPFolder.java
          kind: Class
          name: ''
          package: com.sun.mail.imap
      - codeSnip: "40  \n41  package com.sun.mail.imap;\n42  \n43  import java.util.Date;\n\
          44  import java.util.Vector;\n45  import java.util.Hashtable;\n46  import\
          \ java.util.NoSuchElementException;\n47  import java.util.logging.Level;\n\
          48  import java.io.*;\n49  \n50  import javax.mail.*;\n51  import javax.mail.event.*;\n\
          52  import javax.mail.internet.*;\n53  import javax.mail.search.*;\n54 \
          \ \n55  import com.sun.mail.util.*;\n56  import com.sun.mail.iap.*;\n57\
          \  import com.sun.mail.imap.protocol.*;\n58  \n59  /**\n60   * This class\
          \ implements an IMAP folder. <p>"
        lineNumber: 50
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPFolder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPFolder.java
          kind: Class
          name: ''
          package: com.sun.mail.imap
      - codeSnip: "41  package com.sun.mail.imap;\n42  \n43  import java.util.Date;\n\
          44  import java.util.Vector;\n45  import java.util.Hashtable;\n46  import\
          \ java.util.NoSuchElementException;\n47  import java.util.logging.Level;\n\
          48  import java.io.*;\n49  \n50  import javax.mail.*;\n51  import javax.mail.event.*;\n\
          52  import javax.mail.internet.*;\n53  import javax.mail.search.*;\n54 \
          \ \n55  import com.sun.mail.util.*;\n56  import com.sun.mail.iap.*;\n57\
          \  import com.sun.mail.imap.protocol.*;\n58  \n59  /**\n60   * This class\
          \ implements an IMAP folder. <p>\n61   *"
        lineNumber: 51
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPFolder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPFolder.java
          kind: Class
          name: ''
          package: com.sun.mail.imap
      - codeSnip: "42  \n43  import java.util.Date;\n44  import java.util.Vector;\n\
          45  import java.util.Hashtable;\n46  import java.util.NoSuchElementException;\n\
          47  import java.util.logging.Level;\n48  import java.io.*;\n49  \n50  import\
          \ javax.mail.*;\n51  import javax.mail.event.*;\n52  import javax.mail.internet.*;\n\
          53  import javax.mail.search.*;\n54  \n55  import com.sun.mail.util.*;\n\
          56  import com.sun.mail.iap.*;\n57  import com.sun.mail.imap.protocol.*;\n\
          58  \n59  /**\n60   * This class implements an IMAP folder. <p>\n61   *\n\
          62   * A closed IMAPFolder object shares a protocol connection with its\
          \ IMAPStore"
        lineNumber: 52
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPFolder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPFolder.java
          kind: Class
          name: ''
          package: com.sun.mail.imap
      - codeSnip: "43  import java.util.Date;\n44  import java.util.Vector;\n45  import\
          \ java.util.Hashtable;\n46  import java.util.NoSuchElementException;\n47\
          \  import java.util.logging.Level;\n48  import java.io.*;\n49  \n50  import\
          \ javax.mail.*;\n51  import javax.mail.event.*;\n52  import javax.mail.internet.*;\n\
          53  import javax.mail.search.*;\n54  \n55  import com.sun.mail.util.*;\n\
          56  import com.sun.mail.iap.*;\n57  import com.sun.mail.imap.protocol.*;\n\
          58  \n59  /**\n60   * This class implements an IMAP folder. <p>\n61   *\n\
          62   * A closed IMAPFolder object shares a protocol connection with its\
          \ IMAPStore\n63   * object. When the folder is opened, it gets its own protocol\
          \ connection. <p>"
        lineNumber: 53
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPFolder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPFolder.java
          kind: Class
          name: ''
          package: com.sun.mail.imap
      - codeSnip: "45  import java.util.Hashtable;\n46  import java.util.NoSuchElementException;\n\
          47  import java.util.logging.Level;\n48  import java.io.*;\n49  \n50  import\
          \ javax.mail.*;\n51  import javax.mail.event.*;\n52  import javax.mail.internet.*;\n\
          53  import javax.mail.search.*;\n54  \n55  import com.sun.mail.util.*;\n\
          56  import com.sun.mail.iap.*;\n57  import com.sun.mail.imap.protocol.*;\n\
          58  \n59  /**\n60   * This class implements an IMAP folder. <p>\n61   *\n\
          62   * A closed IMAPFolder object shares a protocol connection with its\
          \ IMAPStore\n63   * object. When the folder is opened, it gets its own protocol\
          \ connection. <p>\n64   *\n65   * Applications that need to make use of\
          \ IMAP-specific features may cast"
        lineNumber: 55
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPFolder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPFolder.java
          kind: Class
          name: ''
          package: com.sun.mail.imap
      - codeSnip: "46  import java.util.NoSuchElementException;\n47  import java.util.logging.Level;\n\
          48  import java.io.*;\n49  \n50  import javax.mail.*;\n51  import javax.mail.event.*;\n\
          52  import javax.mail.internet.*;\n53  import javax.mail.search.*;\n54 \
          \ \n55  import com.sun.mail.util.*;\n56  import com.sun.mail.iap.*;\n57\
          \  import com.sun.mail.imap.protocol.*;\n58  \n59  /**\n60   * This class\
          \ implements an IMAP folder. <p>\n61   *\n62   * A closed IMAPFolder object\
          \ shares a protocol connection with its IMAPStore\n63   * object. When the\
          \ folder is opened, it gets its own protocol connection. <p>\n64   *\n65\
          \   * Applications that need to make use of IMAP-specific features may cast\n\
          66   * a <code>Folder</code> object to an <code>IMAPFolder</code> object\
          \ and"
        lineNumber: 56
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPFolder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPFolder.java
          kind: Class
          name: ''
          package: com.sun.mail.imap
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.imap;\n42  \n43  import java.io.*;\n44  import\
          \ javax.mail.*;\n45  import com.sun.mail.imap.protocol.*;\n46  import com.sun.mail.iap.*;\n\
          47  import com.sun.mail.util.*;\n48  \n49  /**\n50   * This class implements\
          \ an IMAP data stream.\n51   *\n52   * @author  John Mani\n53   */\n54  "
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPInputStream.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPInputStream.java
          kind: Class
          name: IMAPInputStream
          package: com.sun.mail.imap
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ com.sun.mail.imap;\n42  \n43  import java.io.*;\n44  import javax.mail.*;\n\
          45  import com.sun.mail.imap.protocol.*;\n46  import com.sun.mail.iap.*;\n\
          47  import com.sun.mail.util.*;\n48  \n49  /**\n50   * This class implements\
          \ an IMAP data stream.\n51   *\n52   * @author  John Mani\n53   */\n54 \
          \ \n55  public class IMAPInputStream extends InputStream {"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPInputStream.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPInputStream.java
          kind: Class
          name: IMAPInputStream
          package: com.sun.mail.imap
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap;\n\
          42  \n43  import java.io.*;\n44  import javax.mail.*;\n45  import com.sun.mail.imap.protocol.*;\n\
          46  import com.sun.mail.iap.*;\n47  import com.sun.mail.util.*;\n48  \n\
          49  /**\n50   * This class implements an IMAP data stream.\n51   *\n52 \
          \  * @author  John Mani\n53   */\n54  \n55  public class IMAPInputStream\
          \ extends InputStream {\n56      private IMAPMessage msg; // this message"
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPInputStream.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPInputStream.java
          kind: Class
          name: IMAPInputStream
          package: com.sun.mail.imap
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap;\n\
          42  \n43  import java.io.*;\n44  import javax.mail.*;\n45  import com.sun.mail.imap.protocol.*;\n\
          46  import com.sun.mail.iap.*;\n47  import com.sun.mail.util.*;\n48  \n\
          49  /**\n50   * This class implements an IMAP data stream.\n51   *\n52 \
          \  * @author  John Mani\n53   */\n54  \n55  public class IMAPInputStream\
          \ extends InputStream {\n56      private IMAPMessage msg; // this message\n\
          57      private String section;  // section-id"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPInputStream.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPInputStream.java
          kind: Class
          name: IMAPInputStream
          package: com.sun.mail.imap
      - codeSnip: 11   * https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
        lineNumber: 51
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMessage.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMessage.java
          kind: Class
          name: FetchProfileCondition
          package: com.sun.mail.imap
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap;\n\
          42  \n43  import java.util.Date;\n44  import java.io.*;\n45  import java.util.*;\n\
          46  \n47  import javax.mail.*;\n48  import javax.mail.internet.*;\n49  import\
          \ javax.activation.*;\n50  \n51  import com.sun.mail.util.*;\n52  import\
          \ com.sun.mail.iap.*;\n53  import com.sun.mail.imap.protocol.*;\n54  \n\
          55  /**\n56   * This class implements an IMAPMessage object. <p>\n57   *"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMessage.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMessage.java
          kind: Class
          name: FetchProfileCondition
          package: com.sun.mail.imap
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap;\n\
          42  \n43  import java.util.Date;\n44  import java.io.*;\n45  import java.util.*;\n\
          46  \n47  import javax.mail.*;\n48  import javax.mail.internet.*;\n49  import\
          \ javax.activation.*;\n50  \n51  import com.sun.mail.util.*;\n52  import\
          \ com.sun.mail.iap.*;\n53  import com.sun.mail.imap.protocol.*;\n54  \n\
          55  /**\n56   * This class implements an IMAPMessage object. <p>\n57   *\n\
          58   * An IMAPMessage object starts out as a light-weight object. It gets"
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMessage.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMessage.java
          kind: Class
          name: FetchProfileCondition
          package: com.sun.mail.imap
      - codeSnip: "42  \n43  import java.util.Date;\n44  import java.io.*;\n45  import\
          \ java.util.*;\n46  \n47  import javax.mail.*;\n48  import javax.mail.internet.*;\n\
          49  import javax.activation.*;\n50  \n51  import com.sun.mail.util.*;\n\
          52  import com.sun.mail.iap.*;\n53  import com.sun.mail.imap.protocol.*;\n\
          54  \n55  /**\n56   * This class implements an IMAPMessage object. <p>\n\
          57   *\n58   * An IMAPMessage object starts out as a light-weight object.\
          \ It gets\n59   * filled-in incrementally when a request is made for some\
          \ item. Or\n60   * when a prefetch is done using the FetchProfile. <p>\n\
          61   *\n62   * An IMAPMessage has a messageNumber and a sequenceNumber.\
          \ The "
        lineNumber: 52
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMessage.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMessage.java
          kind: Class
          name: FetchProfileCondition
          package: com.sun.mail.imap
      - codeSnip: "43  import java.util.Date;\n44  import java.io.*;\n45  import java.util.*;\n\
          46  \n47  import javax.mail.*;\n48  import javax.mail.internet.*;\n49  import\
          \ javax.activation.*;\n50  \n51  import com.sun.mail.util.*;\n52  import\
          \ com.sun.mail.iap.*;\n53  import com.sun.mail.imap.protocol.*;\n54  \n\
          55  /**\n56   * This class implements an IMAPMessage object. <p>\n57   *\n\
          58   * An IMAPMessage object starts out as a light-weight object. It gets\n\
          59   * filled-in incrementally when a request is made for some item. Or\n\
          60   * when a prefetch is done using the FetchProfile. <p>\n61   *\n62 \
          \  * An IMAPMessage has a messageNumber and a sequenceNumber. The \n63 \
          \  * messageNumber is its index into its containing folder's messageCache."
        lineNumber: 53
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMessage.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMessage.java
          kind: Class
          name: FetchProfileCondition
          package: com.sun.mail.imap
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap;\n\
          42  \n43  import java.io.InputStream;\n44  import java.io.IOException;\n\
          45  import java.util.Vector;\n46  \n47  import javax.mail.*;\n48  import\
          \ javax.mail.internet.*;\n49  \n50  import com.sun.mail.util.*;\n51  import\
          \ com.sun.mail.iap.*;\n52  import com.sun.mail.imap.protocol.*;\n53  \n\
          54  /**\n55   * This class \n56   *\n57   * @author  John Mani"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMultipartDataSource.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMultipartDataSource.java
          kind: Class
          name: IMAPMultipartDataSource
          package: com.sun.mail.imap
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap;\n\
          42  \n43  import java.io.InputStream;\n44  import java.io.IOException;\n\
          45  import java.util.Vector;\n46  \n47  import javax.mail.*;\n48  import\
          \ javax.mail.internet.*;\n49  \n50  import com.sun.mail.util.*;\n51  import\
          \ com.sun.mail.iap.*;\n52  import com.sun.mail.imap.protocol.*;\n53  \n\
          54  /**\n55   * This class \n56   *\n57   * @author  John Mani\n58   */"
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMultipartDataSource.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMultipartDataSource.java
          kind: Class
          name: IMAPMultipartDataSource
          package: com.sun.mail.imap
      - codeSnip: "40  \n41  package com.sun.mail.imap;\n42  \n43  import java.io.InputStream;\n\
          44  import java.io.IOException;\n45  import java.util.Vector;\n46  \n47\
          \  import javax.mail.*;\n48  import javax.mail.internet.*;\n49  \n50  import\
          \ com.sun.mail.util.*;\n51  import com.sun.mail.iap.*;\n52  import com.sun.mail.imap.protocol.*;\n\
          53  \n54  /**\n55   * This class \n56   *\n57   * @author  John Mani\n58\
          \   */\n59  \n60  public class IMAPMultipartDataSource extends MimePartDataSource"
        lineNumber: 50
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMultipartDataSource.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMultipartDataSource.java
          kind: Class
          name: IMAPMultipartDataSource
          package: com.sun.mail.imap
      - codeSnip: "41  package com.sun.mail.imap;\n42  \n43  import java.io.InputStream;\n\
          44  import java.io.IOException;\n45  import java.util.Vector;\n46  \n47\
          \  import javax.mail.*;\n48  import javax.mail.internet.*;\n49  \n50  import\
          \ com.sun.mail.util.*;\n51  import com.sun.mail.iap.*;\n52  import com.sun.mail.imap.protocol.*;\n\
          53  \n54  /**\n55   * This class \n56   *\n57   * @author  John Mani\n58\
          \   */\n59  \n60  public class IMAPMultipartDataSource extends MimePartDataSource\n\
          61  \t\t\t\t     implements MultipartDataSource {"
        lineNumber: 51
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMultipartDataSource.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMultipartDataSource.java
          kind: Class
          name: IMAPMultipartDataSource
          package: com.sun.mail.imap
      - codeSnip: "42  \n43  import java.io.InputStream;\n44  import java.io.IOException;\n\
          45  import java.util.Vector;\n46  \n47  import javax.mail.*;\n48  import\
          \ javax.mail.internet.*;\n49  \n50  import com.sun.mail.util.*;\n51  import\
          \ com.sun.mail.iap.*;\n52  import com.sun.mail.imap.protocol.*;\n53  \n\
          54  /**\n55   * This class \n56   *\n57   * @author  John Mani\n58   */\n\
          59  \n60  public class IMAPMultipartDataSource extends MimePartDataSource\n\
          61  \t\t\t\t     implements MultipartDataSource {\n62      private Vector\
          \ parts;"
        lineNumber: 52
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMultipartDataSource.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPMultipartDataSource.java
          kind: Class
          name: IMAPMultipartDataSource
          package: com.sun.mail.imap
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.imap;\n42  \n43  import java.io.*;\n44  import\
          \ javax.mail.*;\n45  import com.sun.mail.imap.protocol.*;\n46  import com.sun.mail.iap.ProtocolException;\n\
          47  \n48  /**\n49   * This class implements a nested IMAP message\n50  \
          \ *\n51   * @author  John Mani\n52   */\n53  \n54  public class IMAPNestedMessage\
          \ extends IMAPMessage {"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPNestedMessage.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPNestedMessage.java
          kind: Class
          name: IMAPNestedMessage
          package: com.sun.mail.imap
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ com.sun.mail.imap;\n42  \n43  import java.io.*;\n44  import javax.mail.*;\n\
          45  import com.sun.mail.imap.protocol.*;\n46  import com.sun.mail.iap.ProtocolException;\n\
          47  \n48  /**\n49   * This class implements a nested IMAP message\n50  \
          \ *\n51   * @author  John Mani\n52   */\n53  \n54  public class IMAPNestedMessage\
          \ extends IMAPMessage {\n55      private IMAPMessage msg; // the enclosure\
          \ of this nested message"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPNestedMessage.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPNestedMessage.java
          kind: Class
          name: IMAPNestedMessage
          package: com.sun.mail.imap
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap;\n\
          42  \n43  import java.io.*;\n44  import javax.mail.*;\n45  import com.sun.mail.imap.protocol.*;\n\
          46  import com.sun.mail.iap.ProtocolException;\n47  \n48  /**\n49   * This\
          \ class implements a nested IMAP message\n50   *\n51   * @author  John Mani\n\
          52   */\n53  \n54  public class IMAPNestedMessage extends IMAPMessage {\n\
          55      private IMAPMessage msg; // the enclosure of this nested message\n\
          56  "
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPNestedMessage.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPNestedMessage.java
          kind: Class
          name: IMAPNestedMessage
          package: com.sun.mail.imap
      - codeSnip: "42  \n43  import java.lang.reflect.*;\n44  import java.util.Vector;\n\
          45  import java.util.StringTokenizer;\n46  import java.io.PrintStream;\n\
          47  import java.io.IOException;\n48  import java.net.InetAddress;\n49  import\
          \ java.net.UnknownHostException;\n50  import java.util.logging.Level;\n\
          51  \n52  import javax.mail.*;\n53  import javax.mail.event.*;\n54  \n55\
          \  import com.sun.mail.iap.*;\n56  import com.sun.mail.imap.protocol.*;\n\
          57  import com.sun.mail.util.PropUtil;\n58  import com.sun.mail.util.MailLogger;\n\
          59  import com.sun.mail.util.SocketConnectException;\n60  import com.sun.mail.util.MailConnectException;\n\
          61  \n62  /**"
        lineNumber: 52
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPStore.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPStore.java
          kind: Class
          name: IMAPStore
          package: com.sun.mail.imap
      - codeSnip: "43  import java.lang.reflect.*;\n44  import java.util.Vector;\n\
          45  import java.util.StringTokenizer;\n46  import java.io.PrintStream;\n\
          47  import java.io.IOException;\n48  import java.net.InetAddress;\n49  import\
          \ java.net.UnknownHostException;\n50  import java.util.logging.Level;\n\
          51  \n52  import javax.mail.*;\n53  import javax.mail.event.*;\n54  \n55\
          \  import com.sun.mail.iap.*;\n56  import com.sun.mail.imap.protocol.*;\n\
          57  import com.sun.mail.util.PropUtil;\n58  import com.sun.mail.util.MailLogger;\n\
          59  import com.sun.mail.util.SocketConnectException;\n60  import com.sun.mail.util.MailConnectException;\n\
          61  \n62  /**\n63   * This class provides access to an IMAP message store.\
          \ <p>"
        lineNumber: 53
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPStore.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPStore.java
          kind: Class
          name: IMAPStore
          package: com.sun.mail.imap
      - codeSnip: "45  import java.util.StringTokenizer;\n46  import java.io.PrintStream;\n\
          47  import java.io.IOException;\n48  import java.net.InetAddress;\n49  import\
          \ java.net.UnknownHostException;\n50  import java.util.logging.Level;\n\
          51  \n52  import javax.mail.*;\n53  import javax.mail.event.*;\n54  \n55\
          \  import com.sun.mail.iap.*;\n56  import com.sun.mail.imap.protocol.*;\n\
          57  import com.sun.mail.util.PropUtil;\n58  import com.sun.mail.util.MailLogger;\n\
          59  import com.sun.mail.util.SocketConnectException;\n60  import com.sun.mail.util.MailConnectException;\n\
          61  \n62  /**\n63   * This class provides access to an IMAP message store.\
          \ <p>\n64   *\n65   * Applications that need to make use of IMAP-specific\
          \ features may cast"
        lineNumber: 55
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPStore.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPStore.java
          kind: Class
          name: ''
          package: com.sun.mail.imap
      - codeSnip: "46  import java.io.PrintStream;\n47  import java.io.IOException;\n\
          48  import java.net.InetAddress;\n49  import java.net.UnknownHostException;\n\
          50  import java.util.logging.Level;\n51  \n52  import javax.mail.*;\n53\
          \  import javax.mail.event.*;\n54  \n55  import com.sun.mail.iap.*;\n56\
          \  import com.sun.mail.imap.protocol.*;\n57  import com.sun.mail.util.PropUtil;\n\
          58  import com.sun.mail.util.MailLogger;\n59  import com.sun.mail.util.SocketConnectException;\n\
          60  import com.sun.mail.util.MailConnectException;\n61  \n62  /**\n63  \
          \ * This class provides access to an IMAP message store. <p>\n64   *\n65\
          \   * Applications that need to make use of IMAP-specific features may cast\n\
          66   * a <code>Store</code> object to an <code>IMAPStore</code> object and"
        lineNumber: 56
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPStore.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPStore.java
          kind: Class
          name: ''
          package: com.sun.mail.imap
      - codeSnip: "47  import java.io.IOException;\n48  import java.net.InetAddress;\n\
          49  import java.net.UnknownHostException;\n50  import java.util.logging.Level;\n\
          51  \n52  import javax.mail.*;\n53  import javax.mail.event.*;\n54  \n55\
          \  import com.sun.mail.iap.*;\n56  import com.sun.mail.imap.protocol.*;\n\
          57  import com.sun.mail.util.PropUtil;\n58  import com.sun.mail.util.MailLogger;\n\
          59  import com.sun.mail.util.SocketConnectException;\n60  import com.sun.mail.util.MailConnectException;\n\
          61  \n62  /**\n63   * This class provides access to an IMAP message store.\
          \ <p>\n64   *\n65   * Applications that need to make use of IMAP-specific\
          \ features may cast\n66   * a <code>Store</code> object to an <code>IMAPStore</code>\
          \ object and\n67   * use the methods on this class. The {@link #getQuota\
          \ getQuota} and"
        lineNumber: 57
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPStore.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPStore.java
          kind: Class
          name: ''
          package: com.sun.mail.imap
      - codeSnip: "48  import java.net.InetAddress;\n49  import java.net.UnknownHostException;\n\
          50  import java.util.logging.Level;\n51  \n52  import javax.mail.*;\n53\
          \  import javax.mail.event.*;\n54  \n55  import com.sun.mail.iap.*;\n56\
          \  import com.sun.mail.imap.protocol.*;\n57  import com.sun.mail.util.PropUtil;\n\
          58  import com.sun.mail.util.MailLogger;\n59  import com.sun.mail.util.SocketConnectException;\n\
          60  import com.sun.mail.util.MailConnectException;\n61  \n62  /**\n63  \
          \ * This class provides access to an IMAP message store. <p>\n64   *\n65\
          \   * Applications that need to make use of IMAP-specific features may cast\n\
          66   * a <code>Store</code> object to an <code>IMAPStore</code> object and\n\
          67   * use the methods on this class. The {@link #getQuota getQuota} and\n\
          68   * {@link #setQuota setQuota} methods support the IMAP QUOTA extension."
        lineNumber: 58
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPStore.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPStore.java
          kind: Class
          name: ''
          package: com.sun.mail.imap
      - codeSnip: "49  import java.net.UnknownHostException;\n50  import java.util.logging.Level;\n\
          51  \n52  import javax.mail.*;\n53  import javax.mail.event.*;\n54  \n55\
          \  import com.sun.mail.iap.*;\n56  import com.sun.mail.imap.protocol.*;\n\
          57  import com.sun.mail.util.PropUtil;\n58  import com.sun.mail.util.MailLogger;\n\
          59  import com.sun.mail.util.SocketConnectException;\n60  import com.sun.mail.util.MailConnectException;\n\
          61  \n62  /**\n63   * This class provides access to an IMAP message store.\
          \ <p>\n64   *\n65   * Applications that need to make use of IMAP-specific\
          \ features may cast\n66   * a <code>Store</code> object to an <code>IMAPStore</code>\
          \ object and\n67   * use the methods on this class. The {@link #getQuota\
          \ getQuota} and\n68   * {@link #setQuota setQuota} methods support the IMAP\
          \ QUOTA extension.\n69   * Refer to <A HREF=\"http://www.ietf.org/rfc/rfc2087.txt\"\
          >RFC 2087</A>"
        lineNumber: 59
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPStore.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPStore.java
          kind: Class
          name: ''
          package: com.sun.mail.imap
      - codeSnip: "50  import java.util.logging.Level;\n51  \n52  import javax.mail.*;\n\
          53  import javax.mail.event.*;\n54  \n55  import com.sun.mail.iap.*;\n56\
          \  import com.sun.mail.imap.protocol.*;\n57  import com.sun.mail.util.PropUtil;\n\
          58  import com.sun.mail.util.MailLogger;\n59  import com.sun.mail.util.SocketConnectException;\n\
          60  import com.sun.mail.util.MailConnectException;\n61  \n62  /**\n63  \
          \ * This class provides access to an IMAP message store. <p>\n64   *\n65\
          \   * Applications that need to make use of IMAP-specific features may cast\n\
          66   * a <code>Store</code> object to an <code>IMAPStore</code> object and\n\
          67   * use the methods on this class. The {@link #getQuota getQuota} and\n\
          68   * {@link #setQuota setQuota} methods support the IMAP QUOTA extension.\n\
          69   * Refer to <A HREF=\"http://www.ietf.org/rfc/rfc2087.txt\">RFC 2087</A>\n\
          70   * for more information. <p>"
        lineNumber: 60
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPStore.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/IMAPStore.java
          kind: Class
          name: ''
          package: com.sun.mail.imap
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap;\n\
          42  \n43  import java.io.PrintStream;\n44  import java.util.*;\n45  import\
          \ java.util.logging.Level;\n46  \n47  import javax.mail.*;\n48  import com.sun.mail.util.PropUtil;\n\
          49  import com.sun.mail.util.MailLogger;\n50  \n51  /**\n52   * A cache\
          \ of IMAPMessage objects along with the\n53   * mapping from message number\
          \ to IMAP sequence number.\n54   *\n55   * All operations on this object\
          \ are protected by the messageCacheLock\n56   * in IMAPFolder.\n57   */"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/MessageCache.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/MessageCache.java
          kind: Class
          name: MessageCache
          package: com.sun.mail.imap
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap;\n\
          42  \n43  import java.io.PrintStream;\n44  import java.util.*;\n45  import\
          \ java.util.logging.Level;\n46  \n47  import javax.mail.*;\n48  import com.sun.mail.util.PropUtil;\n\
          49  import com.sun.mail.util.MailLogger;\n50  \n51  /**\n52   * A cache\
          \ of IMAPMessage objects along with the\n53   * mapping from message number\
          \ to IMAP sequence number.\n54   *\n55   * All operations on this object\
          \ are protected by the messageCacheLock\n56   * in IMAPFolder.\n57   */\n\
          58  public class MessageCache {"
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/MessageCache.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/MessageCache.java
          kind: Class
          name: MessageCache
          package: com.sun.mail.imap
      - codeSnip: "39   */\n40  \n41  package com.sun.mail.imap;\n42  \n43  import\
          \ java.io.PrintStream;\n44  import java.util.*;\n45  import java.util.logging.Level;\n\
          46  \n47  import javax.mail.*;\n48  import com.sun.mail.util.PropUtil;\n\
          49  import com.sun.mail.util.MailLogger;\n50  \n51  /**\n52   * A cache\
          \ of IMAPMessage objects along with the\n53   * mapping from message number\
          \ to IMAP sequence number.\n54   *\n55   * All operations on this object\
          \ are protected by the messageCacheLock\n56   * in IMAPFolder.\n57   */\n\
          58  public class MessageCache {\n59      /*"
        lineNumber: 49
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/MessageCache.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/MessageCache.java
          kind: Class
          name: MessageCache
          package: com.sun.mail.imap
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap;\n\
          42  \n43  import java.util.Vector;\n44  \n45  import javax.mail.*;\n46 \
          \ \n47  import com.sun.mail.util.*;\n48  import com.sun.mail.imap.protocol.MessageSet;\n\
          49  import com.sun.mail.imap.protocol.UIDSet;\n50  \n51  /**\n52   * Holder\
          \ for some static utility methods.\n53   *\n54   * @author  John Mani\n\
          55   * @author  Bill Shannon\n56   */\n57  "
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/Utility.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/Utility.java
          kind: Interface
          name: Condition
          package: com.sun.mail.imap
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap;\n\
          42  \n43  import java.util.Vector;\n44  \n45  import javax.mail.*;\n46 \
          \ \n47  import com.sun.mail.util.*;\n48  import com.sun.mail.imap.protocol.MessageSet;\n\
          49  import com.sun.mail.imap.protocol.UIDSet;\n50  \n51  /**\n52   * Holder\
          \ for some static utility methods.\n53   *\n54   * @author  John Mani\n\
          55   * @author  Bill Shannon\n56   */\n57  \n58  public final class Utility\
          \ {"
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/Utility.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/Utility.java
          kind: Interface
          name: Condition
          package: com.sun.mail.imap
      - codeSnip: "39   */\n40  \n41  package com.sun.mail.imap;\n42  \n43  import\
          \ java.util.Vector;\n44  \n45  import javax.mail.*;\n46  \n47  import com.sun.mail.util.*;\n\
          48  import com.sun.mail.imap.protocol.MessageSet;\n49  import com.sun.mail.imap.protocol.UIDSet;\n\
          50  \n51  /**\n52   * Holder for some static utility methods.\n53   *\n\
          54   * @author  John Mani\n55   * @author  Bill Shannon\n56   */\n57  \n\
          58  public final class Utility {\n59  "
        lineNumber: 49
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/Utility.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/Utility.java
          kind: Interface
          name: Condition
          package: com.sun.mail.imap
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.imap.protocol;\n42  \n43  import java.io.ByteArrayInputStream;\n\
          44  import com.sun.mail.iap.*;\n45  import com.sun.mail.util.ASCIIUtility;\n\
          46  \n47  /**\n48   * The BODY fetch response item.\n49   *\n50   * @author\
          \  John Mani\n51   */\n52  \n53  public class BODY implements Item {\n54\
          \      "
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/BODY.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/BODY.java
          kind: Class
          name: BODY
          package: com.sun.mail.imap.protocol
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ com.sun.mail.imap.protocol;\n42  \n43  import java.io.ByteArrayInputStream;\n\
          44  import com.sun.mail.iap.*;\n45  import com.sun.mail.util.ASCIIUtility;\n\
          46  \n47  /**\n48   * The BODY fetch response item.\n49   *\n50   * @author\
          \  John Mani\n51   */\n52  \n53  public class BODY implements Item {\n54\
          \      \n55      static final char[] name = {'B','O','D','Y'};"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/BODY.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/BODY.java
          kind: Class
          name: BODY
          package: com.sun.mail.imap.protocol
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.imap.protocol;\n42  \n43  import java.util.Vector;\n\
          44  import javax.mail.internet.ParameterList;\n45  import com.sun.mail.iap.*;\
          \ \n46  import com.sun.mail.util.PropUtil;\n47  \n48  /**\n49   * A BODYSTRUCTURE\
          \ response.\n50   *\n51   * @author  John Mani\n52   * @author  Bill Shannon\n\
          53   */\n54  "
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/BODYSTRUCTURE.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/BODYSTRUCTURE.java
          kind: Class
          name: BODYSTRUCTURE
          package: com.sun.mail.imap.protocol
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ com.sun.mail.imap.protocol;\n42  \n43  import java.util.Vector;\n44  import\
          \ javax.mail.internet.ParameterList;\n45  import com.sun.mail.iap.*; \n\
          46  import com.sun.mail.util.PropUtil;\n47  \n48  /**\n49   * A BODYSTRUCTURE\
          \ response.\n50   *\n51   * @author  John Mani\n52   * @author  Bill Shannon\n\
          53   */\n54  \n55  public class BODYSTRUCTURE implements Item {"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/BODYSTRUCTURE.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/BODYSTRUCTURE.java
          kind: Class
          name: BODYSTRUCTURE
          package: com.sun.mail.imap.protocol
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap.protocol;\n\
          42  \n43  import java.util.Vector;\n44  import javax.mail.internet.ParameterList;\n\
          45  import com.sun.mail.iap.*; \n46  import com.sun.mail.util.PropUtil;\n\
          47  \n48  /**\n49   * A BODYSTRUCTURE response.\n50   *\n51   * @author\
          \  John Mani\n52   * @author  Bill Shannon\n53   */\n54  \n55  public class\
          \ BODYSTRUCTURE implements Item {\n56      "
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/BODYSTRUCTURE.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/BODYSTRUCTURE.java
          kind: Class
          name: BODYSTRUCTURE
          package: com.sun.mail.imap.protocol
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap.protocol;\n\
          42  \n43  import java.util.Vector;\n44  import java.util.Date;\n45  import\
          \ java.io.UnsupportedEncodingException;\n46  import java.text.ParseException;\n\
          47  import javax.mail.internet.InternetAddress;\n48  import javax.mail.internet.AddressException;\n\
          49  import javax.mail.internet.MailDateFormat;\n50  import javax.mail.internet.MimeUtility;\n\
          51  import com.sun.mail.iap.*;\n52  \n53  /**\n54   * The ENEVELOPE item\
          \ of an IMAP FETCH response.\n55   *\n56   * @author  John Mani\n57   *\
          \ @author  Bill Shannon"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/ENVELOPE.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/ENVELOPE.java
          kind: Class
          name: ENVELOPE
          package: com.sun.mail.imap.protocol
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap.protocol;\n\
          42  \n43  import java.util.Vector;\n44  import java.util.Date;\n45  import\
          \ java.io.UnsupportedEncodingException;\n46  import java.text.ParseException;\n\
          47  import javax.mail.internet.InternetAddress;\n48  import javax.mail.internet.AddressException;\n\
          49  import javax.mail.internet.MailDateFormat;\n50  import javax.mail.internet.MimeUtility;\n\
          51  import com.sun.mail.iap.*;\n52  \n53  /**\n54   * The ENEVELOPE item\
          \ of an IMAP FETCH response.\n55   *\n56   * @author  John Mani\n57   *\
          \ @author  Bill Shannon\n58   */"
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/ENVELOPE.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/ENVELOPE.java
          kind: Class
          name: ENVELOPE
          package: com.sun.mail.imap.protocol
      - codeSnip: "39   */\n40  \n41  package com.sun.mail.imap.protocol;\n42  \n\
          43  import java.util.Vector;\n44  import java.util.Date;\n45  import java.io.UnsupportedEncodingException;\n\
          46  import java.text.ParseException;\n47  import javax.mail.internet.InternetAddress;\n\
          48  import javax.mail.internet.AddressException;\n49  import javax.mail.internet.MailDateFormat;\n\
          50  import javax.mail.internet.MimeUtility;\n51  import com.sun.mail.iap.*;\n\
          52  \n53  /**\n54   * The ENEVELOPE item of an IMAP FETCH response.\n55\
          \   *\n56   * @author  John Mani\n57   * @author  Bill Shannon\n58   */\n\
          59  "
        lineNumber: 49
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/ENVELOPE.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/ENVELOPE.java
          kind: Class
          name: ENVELOPE
          package: com.sun.mail.imap.protocol
      - codeSnip: "40  \n41  package com.sun.mail.imap.protocol;\n42  \n43  import\
          \ java.util.Vector;\n44  import java.util.Date;\n45  import java.io.UnsupportedEncodingException;\n\
          46  import java.text.ParseException;\n47  import javax.mail.internet.InternetAddress;\n\
          48  import javax.mail.internet.AddressException;\n49  import javax.mail.internet.MailDateFormat;\n\
          50  import javax.mail.internet.MimeUtility;\n51  import com.sun.mail.iap.*;\n\
          52  \n53  /**\n54   * The ENEVELOPE item of an IMAP FETCH response.\n55\
          \   *\n56   * @author  John Mani\n57   * @author  Bill Shannon\n58   */\n\
          59  \n60  public class ENVELOPE implements Item {"
        lineNumber: 50
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/ENVELOPE.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/ENVELOPE.java
          kind: Class
          name: ENVELOPE
          package: com.sun.mail.imap.protocol
      - codeSnip: "41  package com.sun.mail.imap.protocol;\n42  \n43  import java.util.Vector;\n\
          44  import java.util.Date;\n45  import java.io.UnsupportedEncodingException;\n\
          46  import java.text.ParseException;\n47  import javax.mail.internet.InternetAddress;\n\
          48  import javax.mail.internet.AddressException;\n49  import javax.mail.internet.MailDateFormat;\n\
          50  import javax.mail.internet.MimeUtility;\n51  import com.sun.mail.iap.*;\n\
          52  \n53  /**\n54   * The ENEVELOPE item of an IMAP FETCH response.\n55\
          \   *\n56   * @author  John Mani\n57   * @author  Bill Shannon\n58   */\n\
          59  \n60  public class ENVELOPE implements Item {\n61      "
        lineNumber: 51
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/ENVELOPE.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/ENVELOPE.java
          kind: Class
          name: ENVELOPE
          package: com.sun.mail.imap.protocol
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.imap.protocol;\n42  \n43  import javax.mail.Flags;\n\
          44  import com.sun.mail.iap.*; \n45  \n46  /**\n47   * This class \n48 \
          \  *\n49   * @author  John Mani\n50   */\n51  \n52  public class FLAGS extends\
          \ Flags implements Item {\n53  "
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/FLAGS.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/FLAGS.java
          kind: Class
          name: FLAGS
          package: com.sun.mail.imap.protocol
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.imap.protocol;\n42  \n43  import javax.mail.Flags;\n\
          44  import com.sun.mail.iap.*; \n45  \n46  /**\n47   * This class \n48 \
          \  *\n49   * @author  John Mani\n50   */\n51  \n52  public class FLAGS extends\
          \ Flags implements Item {\n53  \n54      // IMAP item name"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/FLAGS.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/FLAGS.java
          kind: Class
          name: FLAGS
          package: com.sun.mail.imap.protocol
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ com.sun.mail.imap.protocol;\n42  \n43  import java.lang.reflect.*;\n44\
          \  \n45  import javax.mail.FetchProfile;\n46  import com.sun.mail.iap.ParsingException;\n\
          47  \n48  /**\n49   * Metadata describing a FETCH item.\n50   * Note that\
          \ the \"name\" field MUST be in uppercase. <p>\n51   *\n52   * @author \
          \ Bill Shannon\n53   * @since JavaMail 1.4.6\n54   */\n55  "
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/FetchItem.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/FetchItem.java
          kind: Class
          name: FetchItem
          package: com.sun.mail.imap.protocol
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap.protocol;\n\
          42  \n43  import java.lang.reflect.*;\n44  \n45  import javax.mail.FetchProfile;\n\
          46  import com.sun.mail.iap.ParsingException;\n47  \n48  /**\n49   * Metadata\
          \ describing a FETCH item.\n50   * Note that the \"name\" field MUST be\
          \ in uppercase. <p>\n51   *\n52   * @author  Bill Shannon\n53   * @since\
          \ JavaMail 1.4.6\n54   */\n55  \n56  public abstract class FetchItem { "
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/FetchItem.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/FetchItem.java
          kind: Class
          name: FetchItem
          package: com.sun.mail.imap.protocol
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ com.sun.mail.imap.protocol;\n42  \n43  import java.io.*;\n44  import java.util.*;\n\
          45  import com.sun.mail.util.*;\n46  import com.sun.mail.iap.*;\n47  \n\
          48  /**\n49   * This class represents a FETCH response obtained from the\
          \ input stream\n50   * of an IMAP server.\n51   *\n52   * @author  John\
          \ Mani\n53   * @author  Bill Shannon\n54   */\n55  "
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/FetchResponse.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/FetchResponse.java
          kind: Class
          name: FetchResponse
          package: com.sun.mail.imap.protocol
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap.protocol;\n\
          42  \n43  import java.io.*;\n44  import java.util.*;\n45  import com.sun.mail.util.*;\n\
          46  import com.sun.mail.iap.*;\n47  \n48  /**\n49   * This class represents\
          \ a FETCH response obtained from the input stream\n50   * of an IMAP server.\n\
          51   *\n52   * @author  John Mani\n53   * @author  Bill Shannon\n54   */\n\
          55  \n56  public class FetchResponse extends IMAPResponse {"
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/FetchResponse.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/FetchResponse.java
          kind: Class
          name: FetchResponse
          package: com.sun.mail.imap.protocol
      - codeSnip: 11   * https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
        lineNumber: 54
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
          kind: Class
          name: IMAPProtocol
          package: com.sun.mail.imap.protocol
      - codeSnip: 11   * https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
        lineNumber: 57
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
          kind: Class
          name: IMAPProtocol
          package: com.sun.mail.imap.protocol
      - codeSnip: "39   */\n40  \n41  package com.sun.mail.imap.protocol;\n42  \n\
          43  import java.io.*;\n44  import java.util.*;\n45  import java.text.*;\n\
          46  import java.lang.reflect.*;\n47  import java.util.logging.Level;\n48\
          \  \n49  import javax.mail.*;\n50  import javax.mail.internet.*;\n51  import\
          \ javax.mail.search.*;\n52  \n53  import com.sun.mail.util.*;\n54  import\
          \ com.sun.mail.iap.*;\n55  import com.sun.mail.auth.Ntlm;\n56  \n57  import\
          \ com.sun.mail.imap.ACL;\n58  import com.sun.mail.imap.Rights;\n59  import\
          \ com.sun.mail.imap.AppendUID;"
        lineNumber: 49
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
          kind: Class
          name: IMAPProtocol
          package: com.sun.mail.imap.protocol
      - codeSnip: "40  \n41  package com.sun.mail.imap.protocol;\n42  \n43  import\
          \ java.io.*;\n44  import java.util.*;\n45  import java.text.*;\n46  import\
          \ java.lang.reflect.*;\n47  import java.util.logging.Level;\n48  \n49  import\
          \ javax.mail.*;\n50  import javax.mail.internet.*;\n51  import javax.mail.search.*;\n\
          52  \n53  import com.sun.mail.util.*;\n54  import com.sun.mail.iap.*;\n\
          55  import com.sun.mail.auth.Ntlm;\n56  \n57  import com.sun.mail.imap.ACL;\n\
          58  import com.sun.mail.imap.Rights;\n59  import com.sun.mail.imap.AppendUID;\n\
          60  import com.sun.mail.imap.SortTerm;"
        lineNumber: 50
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
          kind: Class
          name: IMAPProtocol
          package: com.sun.mail.imap.protocol
      - codeSnip: "41  package com.sun.mail.imap.protocol;\n42  \n43  import java.io.*;\n\
          44  import java.util.*;\n45  import java.text.*;\n46  import java.lang.reflect.*;\n\
          47  import java.util.logging.Level;\n48  \n49  import javax.mail.*;\n50\
          \  import javax.mail.internet.*;\n51  import javax.mail.search.*;\n52  \n\
          53  import com.sun.mail.util.*;\n54  import com.sun.mail.iap.*;\n55  import\
          \ com.sun.mail.auth.Ntlm;\n56  \n57  import com.sun.mail.imap.ACL;\n58 \
          \ import com.sun.mail.imap.Rights;\n59  import com.sun.mail.imap.AppendUID;\n\
          60  import com.sun.mail.imap.SortTerm;\n61  "
        lineNumber: 51
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
          kind: Class
          name: IMAPProtocol
          package: com.sun.mail.imap.protocol
      - codeSnip: "43  import java.io.*;\n44  import java.util.*;\n45  import java.text.*;\n\
          46  import java.lang.reflect.*;\n47  import java.util.logging.Level;\n48\
          \  \n49  import javax.mail.*;\n50  import javax.mail.internet.*;\n51  import\
          \ javax.mail.search.*;\n52  \n53  import com.sun.mail.util.*;\n54  import\
          \ com.sun.mail.iap.*;\n55  import com.sun.mail.auth.Ntlm;\n56  \n57  import\
          \ com.sun.mail.imap.ACL;\n58  import com.sun.mail.imap.Rights;\n59  import\
          \ com.sun.mail.imap.AppendUID;\n60  import com.sun.mail.imap.SortTerm;\n\
          61  \n62  /**\n63   * This class extends the iap.Protocol object and implements\
          \ IMAP"
        lineNumber: 53
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
          kind: Class
          name: IMAPProtocol
          package: com.sun.mail.imap.protocol
      - codeSnip: "45  import java.text.*;\n46  import java.lang.reflect.*;\n47  import\
          \ java.util.logging.Level;\n48  \n49  import javax.mail.*;\n50  import javax.mail.internet.*;\n\
          51  import javax.mail.search.*;\n52  \n53  import com.sun.mail.util.*;\n\
          54  import com.sun.mail.iap.*;\n55  import com.sun.mail.auth.Ntlm;\n56 \
          \ \n57  import com.sun.mail.imap.ACL;\n58  import com.sun.mail.imap.Rights;\n\
          59  import com.sun.mail.imap.AppendUID;\n60  import com.sun.mail.imap.SortTerm;\n\
          61  \n62  /**\n63   * This class extends the iap.Protocol object and implements\
          \ IMAP\n64   * semantics. In general, there is a method corresponding to\
          \ each\n65   * IMAP protocol command. The typical implementation issues\
          \ the"
        lineNumber: 55
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
          kind: Class
          name: IMAPProtocol
          package: com.sun.mail.imap.protocol
      - codeSnip: "48  \n49  import javax.mail.*;\n50  import javax.mail.internet.*;\n\
          51  import javax.mail.search.*;\n52  \n53  import com.sun.mail.util.*;\n\
          54  import com.sun.mail.iap.*;\n55  import com.sun.mail.auth.Ntlm;\n56 \
          \ \n57  import com.sun.mail.imap.ACL;\n58  import com.sun.mail.imap.Rights;\n\
          59  import com.sun.mail.imap.AppendUID;\n60  import com.sun.mail.imap.SortTerm;\n\
          61  \n62  /**\n63   * This class extends the iap.Protocol object and implements\
          \ IMAP\n64   * semantics. In general, there is a method corresponding to\
          \ each\n65   * IMAP protocol command. The typical implementation issues\
          \ the\n66   * appropriate protocol command, collects all responses, processes\n\
          67   * those responses that are specific to this command and then\n68  \
          \ * dispatches the rest (the unsolicited ones) to the dispatcher"
        lineNumber: 58
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
          kind: Class
          name: IMAPProtocol
          package: com.sun.mail.imap.protocol
      - codeSnip: "49  import javax.mail.*;\n50  import javax.mail.internet.*;\n51\
          \  import javax.mail.search.*;\n52  \n53  import com.sun.mail.util.*;\n\
          54  import com.sun.mail.iap.*;\n55  import com.sun.mail.auth.Ntlm;\n56 \
          \ \n57  import com.sun.mail.imap.ACL;\n58  import com.sun.mail.imap.Rights;\n\
          59  import com.sun.mail.imap.AppendUID;\n60  import com.sun.mail.imap.SortTerm;\n\
          61  \n62  /**\n63   * This class extends the iap.Protocol object and implements\
          \ IMAP\n64   * semantics. In general, there is a method corresponding to\
          \ each\n65   * IMAP protocol command. The typical implementation issues\
          \ the\n66   * appropriate protocol command, collects all responses, processes\n\
          67   * those responses that are specific to this command and then\n68  \
          \ * dispatches the rest (the unsolicited ones) to the dispatcher\n69   *\
          \ using the <code>notifyResponseHandlers(r)</code>."
        lineNumber: 59
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
          kind: Class
          name: IMAPProtocol
          package: com.sun.mail.imap.protocol
      - codeSnip: "50  import javax.mail.internet.*;\n51  import javax.mail.search.*;\n\
          52  \n53  import com.sun.mail.util.*;\n54  import com.sun.mail.iap.*;\n\
          55  import com.sun.mail.auth.Ntlm;\n56  \n57  import com.sun.mail.imap.ACL;\n\
          58  import com.sun.mail.imap.Rights;\n59  import com.sun.mail.imap.AppendUID;\n\
          60  import com.sun.mail.imap.SortTerm;\n61  \n62  /**\n63   * This class\
          \ extends the iap.Protocol object and implements IMAP\n64   * semantics.\
          \ In general, there is a method corresponding to each\n65   * IMAP protocol\
          \ command. The typical implementation issues the\n66   * appropriate protocol\
          \ command, collects all responses, processes\n67   * those responses that\
          \ are specific to this command and then\n68   * dispatches the rest (the\
          \ unsolicited ones) to the dispatcher\n69   * using the <code>notifyResponseHandlers(r)</code>.\n\
          70   *"
        lineNumber: 60
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPProtocol.java
          kind: Class
          name: IMAPProtocol
          package: com.sun.mail.imap.protocol
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ com.sun.mail.imap.protocol;\n42  \n43  import java.io.*;\n44  import java.util.*;\n\
          45  import com.sun.mail.util.*;\n46  import com.sun.mail.iap.*;\n47  \n\
          48  /**\n49   * This class represents a response obtained from the input\
          \ stream\n50   * of an IMAP server.\n51   *\n52   * @author  John Mani\n\
          53   */\n54  \n55  public class IMAPResponse extends Response {"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPResponse.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPResponse.java
          kind: Class
          name: IMAPResponse
          package: com.sun.mail.imap.protocol
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap.protocol;\n\
          42  \n43  import java.io.*;\n44  import java.util.*;\n45  import com.sun.mail.util.*;\n\
          46  import com.sun.mail.iap.*;\n47  \n48  /**\n49   * This class represents\
          \ a response obtained from the input stream\n50   * of an IMAP server.\n\
          51   *\n52   * @author  John Mani\n53   */\n54  \n55  public class IMAPResponse\
          \ extends Response {\n56      private String key;"
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPResponse.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPResponse.java
          kind: Class
          name: IMAPResponse
          package: com.sun.mail.imap.protocol
      - codeSnip: "39   */\n40  \n41  package com.sun.mail.imap.protocol;\n42  \n\
          43  import java.io.*;\n44  import java.util.*;\n45  import java.util.logging.Level;\n\
          46  import javax.security.sasl.*;\n47  import javax.security.auth.callback.*;\n\
          48  \n49  import com.sun.mail.iap.*;\n50  import com.sun.mail.imap.*;\n\
          51  import com.sun.mail.util.*;\n52  \n53  /**\n54   * This class contains\
          \ a single method that does authentication using\n55   * SASL.  This is\
          \ in a separate class so that it can be compiled with\n56   * J2SE 1.5.\
          \  Eventually it should be merged into IMAPProtocol.java.\n57   */\n58 \
          \ \n59  public class IMAPSaslAuthenticator implements SaslAuthenticator\
          \ {"
        lineNumber: 49
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPSaslAuthenticator.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPSaslAuthenticator.java
          kind: Class
          name: ''
          package: com.sun.mail.imap.protocol
      - codeSnip: "40  \n41  package com.sun.mail.imap.protocol;\n42  \n43  import\
          \ java.io.*;\n44  import java.util.*;\n45  import java.util.logging.Level;\n\
          46  import javax.security.sasl.*;\n47  import javax.security.auth.callback.*;\n\
          48  \n49  import com.sun.mail.iap.*;\n50  import com.sun.mail.imap.*;\n\
          51  import com.sun.mail.util.*;\n52  \n53  /**\n54   * This class contains\
          \ a single method that does authentication using\n55   * SASL.  This is\
          \ in a separate class so that it can be compiled with\n56   * J2SE 1.5.\
          \  Eventually it should be merged into IMAPProtocol.java.\n57   */\n58 \
          \ \n59  public class IMAPSaslAuthenticator implements SaslAuthenticator\
          \ {\n60  "
        lineNumber: 50
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPSaslAuthenticator.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPSaslAuthenticator.java
          kind: Class
          name: ''
          package: com.sun.mail.imap.protocol
      - codeSnip: "41  package com.sun.mail.imap.protocol;\n42  \n43  import java.io.*;\n\
          44  import java.util.*;\n45  import java.util.logging.Level;\n46  import\
          \ javax.security.sasl.*;\n47  import javax.security.auth.callback.*;\n48\
          \  \n49  import com.sun.mail.iap.*;\n50  import com.sun.mail.imap.*;\n51\
          \  import com.sun.mail.util.*;\n52  \n53  /**\n54   * This class contains\
          \ a single method that does authentication using\n55   * SASL.  This is\
          \ in a separate class so that it can be compiled with\n56   * J2SE 1.5.\
          \  Eventually it should be merged into IMAPProtocol.java.\n57   */\n58 \
          \ \n59  public class IMAPSaslAuthenticator implements SaslAuthenticator\
          \ {\n60  \n61      private IMAPProtocol pr;"
        lineNumber: 51
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPSaslAuthenticator.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/IMAPSaslAuthenticator.java
          kind: Class
          name: ''
          package: com.sun.mail.imap.protocol
      - codeSnip: "40  \n41  package com.sun.mail.imap.protocol;\n42  \n43  import\
          \ java.util.Date;\n44  import java.util.TimeZone;\n45  import java.util.Locale;\n\
          46  import java.text.ParseException;\n47  import java.text.SimpleDateFormat;\n\
          48  import java.text.FieldPosition;\n49  \n50  import javax.mail.internet.MailDateFormat;\n\
          51  \n52  import com.sun.mail.iap.*; \n53  \n54  \n55  /**\n56   * This\
          \ class \n57   *\n58   * @author  John Mani\n59   */\n60  "
        lineNumber: 50
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/INTERNALDATE.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/INTERNALDATE.java
          kind: Class
          name: INTERNALDATE
          package: com.sun.mail.imap.protocol
      - codeSnip: "42  \n43  import java.util.Date;\n44  import java.util.TimeZone;\n\
          45  import java.util.Locale;\n46  import java.text.ParseException;\n47 \
          \ import java.text.SimpleDateFormat;\n48  import java.text.FieldPosition;\n\
          49  \n50  import javax.mail.internet.MailDateFormat;\n51  \n52  import com.sun.mail.iap.*;\
          \ \n53  \n54  \n55  /**\n56   * This class \n57   *\n58   * @author  John\
          \ Mani\n59   */\n60  \n61  public class INTERNALDATE implements Item {\n\
          62  "
        lineNumber: 52
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/INTERNALDATE.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/INTERNALDATE.java
          kind: Class
          name: INTERNALDATE
          package: com.sun.mail.imap.protocol
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ com.sun.mail.imap.protocol;\n42  \n43  import java.util.Vector;\n44  \n\
          45  import com.sun.mail.iap.*;\n46  \n47  /**\n48   * A LIST response.\n\
          49   *\n50   * @author  John Mani\n51   * @author  Bill Shannon\n52   */\n\
          53  \n54  public class ListInfo { \n55      public String name = null;"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/ListInfo.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/ListInfo.java
          kind: Class
          name: ListInfo
          package: com.sun.mail.imap.protocol
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.imap.protocol;\n42  \n43  import javax.mail.Flags;\n\
          44  import com.sun.mail.iap.*;\n45  \n46  /**\n47   * This class \n48  \
          \ *\n49   * @author  John Mani\n50   */\n51  \n52  public class MailboxInfo\
          \ { \n53      public Flags availableFlags = null;"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/MailboxInfo.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/MailboxInfo.java
          kind: Class
          name: MailboxInfo
          package: com.sun.mail.imap.protocol
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.imap.protocol;\n42  \n43  import javax.mail.Flags;\n\
          44  import com.sun.mail.iap.*;\n45  \n46  /**\n47   * This class \n48  \
          \ *\n49   * @author  John Mani\n50   */\n51  \n52  public class MailboxInfo\
          \ { \n53      public Flags availableFlags = null;\n54      public Flags\
          \ permanentFlags = null;"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/MailboxInfo.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/MailboxInfo.java
          kind: Class
          name: MailboxInfo
          package: com.sun.mail.imap.protocol
      - codeSnip: 11   * https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/Namespaces.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/Namespaces.java
          kind: Class
          name: Namespace
          package: com.sun.mail.imap.protocol
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.imap.protocol;\n42  \n43  import java.io.ByteArrayInputStream;\n\
          44  import com.sun.mail.iap.*; \n45  import com.sun.mail.util.ASCIIUtility;\n\
          46  \n47  /**\n48   * This class \n49   *\n50   * @author  John Mani\n51\
          \   */\n52  \n53  public class RFC822DATA implements Item {\n54     "
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/RFC822DATA.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/RFC822DATA.java
          kind: Class
          name: RFC822DATA
          package: com.sun.mail.imap.protocol
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ com.sun.mail.imap.protocol;\n42  \n43  import java.io.ByteArrayInputStream;\n\
          44  import com.sun.mail.iap.*; \n45  import com.sun.mail.util.ASCIIUtility;\n\
          46  \n47  /**\n48   * This class \n49   *\n50   * @author  John Mani\n51\
          \   */\n52  \n53  public class RFC822DATA implements Item {\n54     \n55\
          \      static final char[] name = {'R','F','C','8','2','2'};"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/RFC822DATA.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/RFC822DATA.java
          kind: Class
          name: RFC822DATA
          package: com.sun.mail.imap.protocol
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.imap.protocol;\n42  \n43  import com.sun.mail.iap.*;\
          \ \n44  \n45  /**\n46   * This class \n47   *\n48   * @author  John Mani\n\
          49   */\n50  \n51  public class RFC822SIZE implements Item {\n52      \n\
          53      static final char[] name = {'R','F','C','8','2','2','.','S','I','Z','E'};"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/RFC822SIZE.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/RFC822SIZE.java
          kind: Class
          name: RFC822SIZE
          package: com.sun.mail.imap.protocol
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.imap.protocol;\n42  \n43  import com.sun.mail.iap.ProtocolException;\n\
          44  \n45  /**\n46   * Interface to make it easier to call IMAPSaslAuthenticator.\n\
          47   */\n48  \n49  public interface SaslAuthenticator {\n50      public\
          \ boolean authenticate(String[] mechs, String realm, String authzid,\n51\
          \  \t\t\t\tString u, String p) throws ProtocolException;\n52  \n53  }"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/SaslAuthenticator.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/SaslAuthenticator.java
          kind: Interface
          name: SaslAuthenticator
          package: com.sun.mail.imap.protocol
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap.protocol;\n\
          42  \n43  import java.util.*;\n44  import java.io.IOException;\n45  \n46\
          \  import javax.mail.*;\n47  import javax.mail.search.*;\n48  import com.sun.mail.iap.*;\n\
          49  \n50  /**\n51   * This class traverses a search-tree and generates the\
          \ \n52   * corresponding IMAP search sequence. \n53   *\n54   * Each IMAPProtocol\
          \ instance contains an instance of this class,\n55   * which might be subclassed\
          \ by subclasses of IMAPProtocol to add\n56   * support for additional product-specific\
          \ search terms."
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/SearchSequence.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/SearchSequence.java
          kind: Class
          name: SearchSequence
          package: com.sun.mail.imap.protocol
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap.protocol;\n\
          42  \n43  import java.util.*;\n44  import java.io.IOException;\n45  \n46\
          \  import javax.mail.*;\n47  import javax.mail.search.*;\n48  import com.sun.mail.iap.*;\n\
          49  \n50  /**\n51   * This class traverses a search-tree and generates the\
          \ \n52   * corresponding IMAP search sequence. \n53   *\n54   * Each IMAPProtocol\
          \ instance contains an instance of this class,\n55   * which might be subclassed\
          \ by subclasses of IMAPProtocol to add\n56   * support for additional product-specific\
          \ search terms.\n57   *"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/SearchSequence.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/SearchSequence.java
          kind: Class
          name: SearchSequence
          package: com.sun.mail.imap.protocol
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package com.sun.mail.imap.protocol;\n\
          42  \n43  import java.util.*;\n44  import java.io.IOException;\n45  \n46\
          \  import javax.mail.*;\n47  import javax.mail.search.*;\n48  import com.sun.mail.iap.*;\n\
          49  \n50  /**\n51   * This class traverses a search-tree and generates the\
          \ \n52   * corresponding IMAP search sequence. \n53   *\n54   * Each IMAPProtocol\
          \ instance contains an instance of this class,\n55   * which might be subclassed\
          \ by subclasses of IMAPProtocol to add\n56   * support for additional product-specific\
          \ search terms.\n57   *\n58   * @author\tJohn Mani"
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/SearchSequence.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/SearchSequence.java
          kind: Class
          name: SearchSequence
          package: com.sun.mail.imap.protocol
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.imap.protocol;\n42  \n43  import com.sun.mail.iap.*;\n\
          44  \n45  /**\n46   * STATUS response.\n47   *\n48   * @author  John Mani\n\
          49   */\n50  \n51  public class Status { \n52      public String mbox =\
          \ null;\n53      public int total = -1;"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/Status.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/Status.java
          kind: Class
          name: Status
          package: com.sun.mail.imap.protocol
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.imap.protocol;\n42  \n43  import com.sun.mail.iap.*;\
          \ \n44  \n45  /**\n46   * This class represents the UID data item\n47  \
          \ *\n48   * @author  John Mani\n49   */\n50  \n51  public class UID implements\
          \ Item {\n52      \n53      static final char[] name = {'U','I','D'};"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/UID.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/imap/protocol/UID.java
          kind: Class
          name: UID
          package: com.sun.mail.imap.protocol
      - lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/AppendStream.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/AppendStream.java
          kind: Class
          name: AppendStream
          package: ''
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.pop3;\n42  \n43  import javax.mail.*;\n44 \
          \ \n45  /**\n46   * The POP3 DefaultFolder.  Only contains the \"INBOX\"\
          \ folder.\n47   *\n48   * @author Christopher Cotton\n49   */\n50  public\
          \ class DefaultFolder extends Folder {\n51  \n52      DefaultFolder(POP3Store\
          \ store) {\n53  \tsuper(store);"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/DefaultFolder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/DefaultFolder.java
          kind: Class
          name: DefaultFolder
          package: com.sun.mail.pop3
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.pop3;\n42  \n43  import javax.mail.*;\n44 \
          \ import javax.mail.internet.*;\n45  import javax.mail.event.*;\n46  import\
          \ java.io.InputStream;\n47  import java.io.BufferedInputStream;\n48  import\
          \ java.io.ByteArrayInputStream;\n49  import java.io.IOException;\n50  import\
          \ java.io.EOFException;\n51  import java.util.Vector;\n52  import java.util.StringTokenizer;\n\
          53  import java.util.logging.Level;"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Folder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Folder.java
          kind: Class
          name: POP3Folder
          package: com.sun.mail.pop3
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.pop3;\n42  \n43  import javax.mail.*;\n44 \
          \ import javax.mail.internet.*;\n45  import javax.mail.event.*;\n46  import\
          \ java.io.InputStream;\n47  import java.io.BufferedInputStream;\n48  import\
          \ java.io.ByteArrayInputStream;\n49  import java.io.IOException;\n50  import\
          \ java.io.EOFException;\n51  import java.util.Vector;\n52  import java.util.StringTokenizer;\n\
          53  import java.util.logging.Level;\n54  import java.lang.reflect.Constructor;"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Folder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Folder.java
          kind: Class
          name: POP3Folder
          package: com.sun.mail.pop3
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ com.sun.mail.pop3;\n42  \n43  import javax.mail.*;\n44  import javax.mail.internet.*;\n\
          45  import javax.mail.event.*;\n46  import java.io.InputStream;\n47  import\
          \ java.io.BufferedInputStream;\n48  import java.io.ByteArrayInputStream;\n\
          49  import java.io.IOException;\n50  import java.io.EOFException;\n51  import\
          \ java.util.Vector;\n52  import java.util.StringTokenizer;\n53  import java.util.logging.Level;\n\
          54  import java.lang.reflect.Constructor;\n55  "
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Folder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Folder.java
          kind: Class
          name: POP3Folder
          package: com.sun.mail.pop3
      - codeSnip: "46  import java.io.InputStream;\n47  import java.io.BufferedInputStream;\n\
          48  import java.io.ByteArrayInputStream;\n49  import java.io.IOException;\n\
          50  import java.io.EOFException;\n51  import java.util.Vector;\n52  import\
          \ java.util.StringTokenizer;\n53  import java.util.logging.Level;\n54  import\
          \ java.lang.reflect.Constructor;\n55  \n56  import com.sun.mail.util.LineInputStream;\n\
          57  import com.sun.mail.util.MailLogger;\n58  \n59  /**\n60   * A POP3 Folder\
          \ (can only be \"INBOX\").\n61   *\n62   * See the <a href=\"package-summary.html\"\
          >com.sun.mail.pop3</a> package\n63   * documentation for further information\
          \ on the POP3 protocol provider. <p>\n64   *\n65   * @author      Bill Shannon\n\
          66   * @author\tJohn Mani (ported to the javax.mail APIs)"
        lineNumber: 56
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Folder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Folder.java
          kind: Class
          name: POP3Folder
          package: com.sun.mail.pop3
      - codeSnip: "47  import java.io.BufferedInputStream;\n48  import java.io.ByteArrayInputStream;\n\
          49  import java.io.IOException;\n50  import java.io.EOFException;\n51  import\
          \ java.util.Vector;\n52  import java.util.StringTokenizer;\n53  import java.util.logging.Level;\n\
          54  import java.lang.reflect.Constructor;\n55  \n56  import com.sun.mail.util.LineInputStream;\n\
          57  import com.sun.mail.util.MailLogger;\n58  \n59  /**\n60   * A POP3 Folder\
          \ (can only be \"INBOX\").\n61   *\n62   * See the <a href=\"package-summary.html\"\
          >com.sun.mail.pop3</a> package\n63   * documentation for further information\
          \ on the POP3 protocol provider. <p>\n64   *\n65   * @author      Bill Shannon\n\
          66   * @author\tJohn Mani (ported to the javax.mail APIs)\n67   */"
        lineNumber: 57
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Folder.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Folder.java
          kind: Class
          name: POP3Folder
          package: com.sun.mail.pop3
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.pop3;\n\
          42  \n43  import java.io.*;\n44  import java.util.Enumeration;\n45  import\
          \ java.util.logging.Level;\n46  import java.lang.ref.SoftReference;\n47\
          \  import javax.mail.*;\n48  import javax.mail.internet.*;\n49  import javax.mail.event.*;\n\
          50  import com.sun.mail.util.ReadableMime;\n51  \n52  /**\n53   * A POP3\
          \ Message.  Just like a MimeMessage except that\n54   * some things are\
          \ not supported.\n55   *\n56   * @author      Bill Shannon\n57   */"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Message.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Message.java
          kind: Class
          name: POP3Message
          package: com.sun.mail.pop3
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package com.sun.mail.pop3;\n\
          42  \n43  import java.io.*;\n44  import java.util.Enumeration;\n45  import\
          \ java.util.logging.Level;\n46  import java.lang.ref.SoftReference;\n47\
          \  import javax.mail.*;\n48  import javax.mail.internet.*;\n49  import javax.mail.event.*;\n\
          50  import com.sun.mail.util.ReadableMime;\n51  \n52  /**\n53   * A POP3\
          \ Message.  Just like a MimeMessage except that\n54   * some things are\
          \ not supported.\n55   *\n56   * @author      Bill Shannon\n57   */\n58\
          \  public class POP3Message extends MimeMessage implements ReadableMime\
          \ {"
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Message.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Message.java
          kind: Class
          name: POP3Message
          package: com.sun.mail.pop3
      - codeSnip: "39   */\n40  \n41  package com.sun.mail.pop3;\n42  \n43  import\
          \ java.io.*;\n44  import java.util.Enumeration;\n45  import java.util.logging.Level;\n\
          46  import java.lang.ref.SoftReference;\n47  import javax.mail.*;\n48  import\
          \ javax.mail.internet.*;\n49  import javax.mail.event.*;\n50  import com.sun.mail.util.ReadableMime;\n\
          51  \n52  /**\n53   * A POP3 Message.  Just like a MimeMessage except that\n\
          54   * some things are not supported.\n55   *\n56   * @author      Bill\
          \ Shannon\n57   */\n58  public class POP3Message extends MimeMessage implements\
          \ ReadableMime {\n59  "
        lineNumber: 49
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Message.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Message.java
          kind: Class
          name: POP3Message
          package: com.sun.mail.pop3
      - codeSnip: "40  \n41  package com.sun.mail.pop3;\n42  \n43  import java.io.*;\n\
          44  import java.util.Enumeration;\n45  import java.util.logging.Level;\n\
          46  import java.lang.ref.SoftReference;\n47  import javax.mail.*;\n48  import\
          \ javax.mail.internet.*;\n49  import javax.mail.event.*;\n50  import com.sun.mail.util.ReadableMime;\n\
          51  \n52  /**\n53   * A POP3 Message.  Just like a MimeMessage except that\n\
          54   * some things are not supported.\n55   *\n56   * @author      Bill\
          \ Shannon\n57   */\n58  public class POP3Message extends MimeMessage implements\
          \ ReadableMime {\n59  \n60      /*"
        lineNumber: 50
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Message.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Message.java
          kind: Class
          name: POP3Message
          package: com.sun.mail.pop3
      - codeSnip: "149  \t\t    // This should eventually be replaced by\n150  \t\t\
          \    // Thread.currentThread().getContextClassLoader().\n151  \t\t    messageClass\
          \ = Class.forName(s, false, cl);\n152  \t\t} catch (ClassNotFoundException\
          \ ex1) {\n153  \t\t    // That didn't work, now try the \"system\" class\
          \ loader.\n154  \t\t    // (Need both of these because JDK 1.1 class loaders\n\
          155  \t\t    // may not delegate to their parent class loader.)\n156  \t\
          \t    messageClass = Class.forName(s);\n157  \t\t}\n158  \n159  \t\tClass[]\
          \ c = {javax.mail.Folder.class, int.class};\n160  \t\tmessageConstructor\
          \ = messageClass.getConstructor(c);\n161  \t    } catch (Exception ex) {\n\
          162  \t\tlogger.log(Level.CONFIG, \"failed to load message class\", ex);\n\
          163  \t    }\n164  \t}\n165      }\n166  \n167      /**\n168       * Get\
          \ the value of a boolean property.\n169       * Print out the value if logging\
          \ is enabled."
        lineNumber: 159
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Store.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Store.java
          kind: Constructor
          name: POP3Store
          package: com.sun.mail.pop3
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.pop3;\n\
          42  \n43  import java.util.Properties;\n44  import java.util.logging.Level;\n\
          45  import java.lang.reflect.*;\n46  \n47  import javax.mail.*;\n48  import\
          \ javax.mail.internet.*;\n49  import java.io.File;\n50  import java.io.PrintStream;\n\
          51  import java.io.IOException;\n52  import java.io.EOFException;\n53  import\
          \ java.util.Collections;\n54  import java.util.Map;\n55  \n56  import com.sun.mail.util.PropUtil;\n\
          57  import com.sun.mail.util.MailLogger;"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Store.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Store.java
          kind: Class
          name: POP3Store
          package: com.sun.mail.pop3
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package com.sun.mail.pop3;\n\
          42  \n43  import java.util.Properties;\n44  import java.util.logging.Level;\n\
          45  import java.lang.reflect.*;\n46  \n47  import javax.mail.*;\n48  import\
          \ javax.mail.internet.*;\n49  import java.io.File;\n50  import java.io.PrintStream;\n\
          51  import java.io.IOException;\n52  import java.io.EOFException;\n53  import\
          \ java.util.Collections;\n54  import java.util.Map;\n55  \n56  import com.sun.mail.util.PropUtil;\n\
          57  import com.sun.mail.util.MailLogger;\n58  import com.sun.mail.util.SocketConnectException;"
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Store.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Store.java
          kind: Class
          name: POP3Store
          package: com.sun.mail.pop3
      - codeSnip: "46  \n47  import javax.mail.*;\n48  import javax.mail.internet.*;\n\
          49  import java.io.File;\n50  import java.io.PrintStream;\n51  import java.io.IOException;\n\
          52  import java.io.EOFException;\n53  import java.util.Collections;\n54\
          \  import java.util.Map;\n55  \n56  import com.sun.mail.util.PropUtil;\n\
          57  import com.sun.mail.util.MailLogger;\n58  import com.sun.mail.util.SocketConnectException;\n\
          59  import com.sun.mail.util.MailConnectException;\n60  \n61  /**\n62  \
          \ * A POP3 Message Store.  Contains only one folder, \"INBOX\".\n63   *\n\
          64   * See the <a href=\"package-summary.html\">com.sun.mail.pop3</a> package\n\
          65   * documentation for further information on the POP3 protocol provider.\
          \ <p>\n66   *"
        lineNumber: 56
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Store.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Store.java
          kind: Class
          name: POP3Store
          package: com.sun.mail.pop3
      - codeSnip: "47  import javax.mail.*;\n48  import javax.mail.internet.*;\n49\
          \  import java.io.File;\n50  import java.io.PrintStream;\n51  import java.io.IOException;\n\
          52  import java.io.EOFException;\n53  import java.util.Collections;\n54\
          \  import java.util.Map;\n55  \n56  import com.sun.mail.util.PropUtil;\n\
          57  import com.sun.mail.util.MailLogger;\n58  import com.sun.mail.util.SocketConnectException;\n\
          59  import com.sun.mail.util.MailConnectException;\n60  \n61  /**\n62  \
          \ * A POP3 Message Store.  Contains only one folder, \"INBOX\".\n63   *\n\
          64   * See the <a href=\"package-summary.html\">com.sun.mail.pop3</a> package\n\
          65   * documentation for further information on the POP3 protocol provider.\
          \ <p>\n66   *\n67   * @author      Bill Shannon"
        lineNumber: 57
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Store.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Store.java
          kind: Class
          name: POP3Store
          package: com.sun.mail.pop3
      - codeSnip: "48  import javax.mail.internet.*;\n49  import java.io.File;\n50\
          \  import java.io.PrintStream;\n51  import java.io.IOException;\n52  import\
          \ java.io.EOFException;\n53  import java.util.Collections;\n54  import java.util.Map;\n\
          55  \n56  import com.sun.mail.util.PropUtil;\n57  import com.sun.mail.util.MailLogger;\n\
          58  import com.sun.mail.util.SocketConnectException;\n59  import com.sun.mail.util.MailConnectException;\n\
          60  \n61  /**\n62   * A POP3 Message Store.  Contains only one folder, \"\
          INBOX\".\n63   *\n64   * See the <a href=\"package-summary.html\">com.sun.mail.pop3</a>\
          \ package\n65   * documentation for further information on the POP3 protocol\
          \ provider. <p>\n66   *\n67   * @author      Bill Shannon\n68   * @author\
          \      John Mani"
        lineNumber: 58
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Store.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Store.java
          kind: Class
          name: POP3Store
          package: com.sun.mail.pop3
      - codeSnip: "49  import java.io.File;\n50  import java.io.PrintStream;\n51 \
          \ import java.io.IOException;\n52  import java.io.EOFException;\n53  import\
          \ java.util.Collections;\n54  import java.util.Map;\n55  \n56  import com.sun.mail.util.PropUtil;\n\
          57  import com.sun.mail.util.MailLogger;\n58  import com.sun.mail.util.SocketConnectException;\n\
          59  import com.sun.mail.util.MailConnectException;\n60  \n61  /**\n62  \
          \ * A POP3 Message Store.  Contains only one folder, \"INBOX\".\n63   *\n\
          64   * See the <a href=\"package-summary.html\">com.sun.mail.pop3</a> package\n\
          65   * documentation for further information on the POP3 protocol provider.\
          \ <p>\n66   *\n67   * @author      Bill Shannon\n68   * @author      John\
          \ Mani\n69   */"
        lineNumber: 59
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Store.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/POP3Store.java
          kind: Class
          name: POP3Store
          package: com.sun.mail.pop3
      - codeSnip: "40  \n41  package com.sun.mail.pop3;\n42  \n43  import java.util.*;\n\
          44  import java.net.*;\n45  import java.io.*;\n46  import java.security.*;\n\
          47  import java.util.logging.Level;\n48  import javax.net.ssl.SSLSocket;\n\
          49  \n50  import com.sun.mail.util.*;\n51  \n52  class Response {\n53  \
          \    boolean ok = false;\t\t// true if \"+OK\"\n54      String data = null;\t\
          \t// rest of line after \"+OK\" or \"-ERR\"\n55      InputStream bytes =\
          \ null;\t// all the bytes from a multi-line response\n56  }\n57  \n58  /**\n\
          59   * This class provides a POP3 connection and implements \n60   * the\
          \ POP3 protocol requests."
        lineNumber: 50
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/Protocol.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/Protocol.java
          kind: Class
          name: Protocol
          package: com.sun.mail.pop3
      - lineNumber: 49
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/WritableSharedFile.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/pop3/WritableSharedFile.java
          kind: Class
          name: WritableSharedFile
          package: ''
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package com.sun.mail.smtp;\n\
          42  \n43  import java.io.*;\n44  import java.util.*;\n45  import java.util.logging.Level;\n\
          46  import java.security.*;\n47  \n48  import com.sun.mail.util.*;\n49 \
          \ \n50  /**\n51   * DIGEST-MD5 authentication support.\n52   *\n53   * @author\
          \ Dean Gibson\n54   * @author Bill Shannon\n55   */\n56  \n57  public class\
          \ DigestMD5 {\n58  "
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/DigestMD5.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/DigestMD5.java
          kind: Class
          name: DigestMD5
          package: com.sun.mail.smtp
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.smtp;\n42  \n43  import javax.mail.SendFailedException;\n\
          44  import javax.mail.internet.InternetAddress;\n45  \n46  /**\n47   * This\
          \ exception is thrown when the message cannot be sent. <p>\n48   * \n49\
          \   * The exception includes the address to which the message could not\
          \ be\n50   * sent.  This will usually appear in a chained list of exceptions,\n\
          51   * one per address, attached to a top level SendFailedException that\n\
          52   * aggregates all the addresses.\n53   *"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPAddressFailedException.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPAddressFailedException.java
          kind: Class
          name: SMTPAddressFailedException
          package: com.sun.mail.smtp
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.smtp;\n42  \n43  import javax.mail.SendFailedException;\n\
          44  import javax.mail.internet.InternetAddress;\n45  \n46  /**\n47   * This\
          \ exception is thrown when the message cannot be sent. <p>\n48   * \n49\
          \   * The exception includes the address to which the message could not\
          \ be\n50   * sent.  This will usually appear in a chained list of exceptions,\n\
          51   * one per address, attached to a top level SendFailedException that\n\
          52   * aggregates all the addresses.\n53   *\n54   * @since JavaMail 1.3.2"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPAddressFailedException.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPAddressFailedException.java
          kind: Class
          name: SMTPAddressFailedException
          package: com.sun.mail.smtp
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.smtp;\n42  \n43  import javax.mail.MessagingException;\n\
          44  import javax.mail.internet.InternetAddress;\n45  \n46  /**\n47   * This\
          \ exception is chained off a SendFailedException when the\n48   * <code>mail.smtp.reportsuccess</code>\
          \ property is true.  It\n49   * indicates an address to which the message\
          \ was sent.  The command\n50   * will be an SMTP RCPT command and the return\
          \ code will be the\n51   * return code from that command.\n52   *\n53  \
          \ * @since JavaMail 1.3.2"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPAddressSucceededException.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPAddressSucceededException.java
          kind: Class
          name: SMTPAddressSucceededException
          package: com.sun.mail.smtp
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.smtp;\n42  \n43  import javax.mail.MessagingException;\n\
          44  import javax.mail.internet.InternetAddress;\n45  \n46  /**\n47   * This\
          \ exception is chained off a SendFailedException when the\n48   * <code>mail.smtp.reportsuccess</code>\
          \ property is true.  It\n49   * indicates an address to which the message\
          \ was sent.  The command\n50   * will be an SMTP RCPT command and the return\
          \ code will be the\n51   * return code from that command.\n52   *\n53  \
          \ * @since JavaMail 1.3.2\n54   */"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPAddressSucceededException.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPAddressSucceededException.java
          kind: Class
          name: SMTPAddressSucceededException
          package: com.sun.mail.smtp
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.smtp;\n42  \n43  import java.io.*;\n44  import\
          \ javax.mail.*;\n45  import javax.mail.internet.*;\n46  \n47  /**\n48  \
          \ * This class is a specialization of the MimeMessage class that allows\n\
          49   * you to specify various SMTP options and parameters that will be\n\
          50   * used when this message is sent over SMTP.  Simply use this class\n\
          51   * instead of MimeMessage and set SMTP options using the methods on\n\
          52   * this class. <p>\n53   *\n54   * See the <a href=\"package-summary.html\"\
          >com.sun.mail.smtp</a> package"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPMessage.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPMessage.java
          kind: Class
          name: SMTPMessage
          package: com.sun.mail.smtp
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ com.sun.mail.smtp;\n42  \n43  import java.io.*;\n44  import javax.mail.*;\n\
          45  import javax.mail.internet.*;\n46  \n47  /**\n48   * This class is a\
          \ specialization of the MimeMessage class that allows\n49   * you to specify\
          \ various SMTP options and parameters that will be\n50   * used when this\
          \ message is sent over SMTP.  Simply use this class\n51   * instead of MimeMessage\
          \ and set SMTP options using the methods on\n52   * this class. <p>\n53\
          \   *\n54   * See the <a href=\"package-summary.html\">com.sun.mail.smtp</a>\
          \ package\n55   * documentation for further information on the SMTP protocol\
          \ provider. <p>"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPMessage.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPMessage.java
          kind: Class
          name: SMTPMessage
          package: com.sun.mail.smtp
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.smtp;\n42  \n43  import java.io.*;\n44  import\
          \ com.sun.mail.util.CRLFOutputStream;\n45  \n46  /**\n47   * In addition\
          \ to converting lines into the canonical format,\n48   * i.e., terminating\
          \ lines with the CRLF sequence, escapes the \".\"\n49   * by adding another\
          \ \".\" to any \".\" that appears in the beginning\n50   * of a line.  See\
          \ RFC821 section 4.5.2.\n51   * \n52   * @author Max Spivak\n53   * @see\
          \ CRLFOutputStream\n54   */"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPOutputStream.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPOutputStream.java
          kind: Class
          name: SMTPOutputStream
          package: com.sun.mail.smtp
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package com.sun.mail.smtp;\n\
          42  \n43  import java.io.*;\n44  import java.util.*;\n45  import java.util.logging.Level;\n\
          46  import javax.security.sasl.*;\n47  import javax.security.auth.callback.*;\n\
          48  import javax.mail.MessagingException;\n49  \n50  import com.sun.mail.util.*;\n\
          51  \n52  /**\n53   * This class contains a single method that does authentication\
          \ using\n54   * SASL.  This is in a separate class so that it can be compiled\
          \ with\n55   * J2SE 1.5.  Eventually it should be merged into SMTPTransport.java.\n\
          56   */\n57  \n58  public class SMTPSaslAuthenticator implements SaslAuthenticator\
          \ {"
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPSaslAuthenticator.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPSaslAuthenticator.java
          kind: Class
          name: ''
          package: com.sun.mail.smtp
      - codeSnip: "40  \n41  package com.sun.mail.smtp;\n42  \n43  import java.io.*;\n\
          44  import java.util.*;\n45  import java.util.logging.Level;\n46  import\
          \ javax.security.sasl.*;\n47  import javax.security.auth.callback.*;\n48\
          \  import javax.mail.MessagingException;\n49  \n50  import com.sun.mail.util.*;\n\
          51  \n52  /**\n53   * This class contains a single method that does authentication\
          \ using\n54   * SASL.  This is in a separate class so that it can be compiled\
          \ with\n55   * J2SE 1.5.  Eventually it should be merged into SMTPTransport.java.\n\
          56   */\n57  \n58  public class SMTPSaslAuthenticator implements SaslAuthenticator\
          \ {\n59  \n60      private SMTPTransport pr;"
        lineNumber: 50
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPSaslAuthenticator.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPSaslAuthenticator.java
          kind: Class
          name: ''
          package: com.sun.mail.smtp
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.smtp;\n42  \n43  import javax.mail.Address;\n\
          44  import javax.mail.SendFailedException;\n45  import javax.mail.internet.InternetAddress;\n\
          46  \n47  /**\n48   * This exception is thrown when the message cannot be\
          \ sent. <p>\n49   * \n50   * This exception will usually appear first in\
          \ a chained list of exceptions,\n51   * followed by SMTPAddressFailedExceptions\
          \ and/or\n52   * SMTPAddressSucceededExceptions, * one per address.\n53\
          \   * This exception corresponds to one of the SMTP commands used to"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPSendFailedException.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPSendFailedException.java
          kind: Class
          name: SMTPSendFailedException
          package: com.sun.mail.smtp
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.smtp;\n42  \n43  import javax.mail.Address;\n\
          44  import javax.mail.SendFailedException;\n45  import javax.mail.internet.InternetAddress;\n\
          46  \n47  /**\n48   * This exception is thrown when the message cannot be\
          \ sent. <p>\n49   * \n50   * This exception will usually appear first in\
          \ a chained list of exceptions,\n51   * followed by SMTPAddressFailedExceptions\
          \ and/or\n52   * SMTPAddressSucceededExceptions, * one per address.\n53\
          \   * This exception corresponds to one of the SMTP commands used to\n54\
          \   * send a message, such as the MAIL, DATA, and \"end of data\" commands,"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPSendFailedException.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPSendFailedException.java
          kind: Class
          name: SMTPSendFailedException
          package: com.sun.mail.smtp
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ com.sun.mail.smtp;\n42  \n43  import javax.mail.Address;\n44  import javax.mail.SendFailedException;\n\
          45  import javax.mail.internet.InternetAddress;\n46  \n47  /**\n48   * This\
          \ exception is thrown when the message cannot be sent. <p>\n49   * \n50\
          \   * This exception will usually appear first in a chained list of exceptions,\n\
          51   * followed by SMTPAddressFailedExceptions and/or\n52   * SMTPAddressSucceededExceptions,\
          \ * one per address.\n53   * This exception corresponds to one of the SMTP\
          \ commands used to\n54   * send a message, such as the MAIL, DATA, and \"\
          end of data\" commands,\n55   * but not including the RCPT command."
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPSendFailedException.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPSendFailedException.java
          kind: Class
          name: SMTPSendFailedException
          package: com.sun.mail.smtp
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.smtp;\n42  \n43  import javax.mail.SendFailedException;\n\
          44  import javax.mail.internet.InternetAddress;\n45  \n46  /**\n47   * This\
          \ exception is thrown when the message cannot be sent. <p>\n48   * \n49\
          \   * The exception includes the sender's address, which the mail server\n\
          50   * rejected.\n51   *\n52   * @since JavaMail 1.4.4\n53   */"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPSenderFailedException.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPSenderFailedException.java
          kind: Class
          name: SMTPSenderFailedException
          package: com.sun.mail.smtp
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.smtp;\n42  \n43  import javax.mail.SendFailedException;\n\
          44  import javax.mail.internet.InternetAddress;\n45  \n46  /**\n47   * This\
          \ exception is thrown when the message cannot be sent. <p>\n48   * \n49\
          \   * The exception includes the sender's address, which the mail server\n\
          50   * rejected.\n51   *\n52   * @since JavaMail 1.4.4\n53   */\n54  "
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPSenderFailedException.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPSenderFailedException.java
          kind: Class
          name: SMTPSenderFailedException
          package: com.sun.mail.smtp
      - codeSnip: 11   * https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
        lineNumber: 54
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPTransport.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPTransport.java
          kind: Class
          name: Authenticator
          package: com.sun.mail.smtp
      - codeSnip: "40  \n41  package com.sun.mail.smtp;\n42  \n43  import java.io.*;\n\
          44  import java.net.*;\n45  import java.util.*;\n46  import java.util.logging.Level;\n\
          47  import java.lang.reflect.*;\n48  import javax.net.ssl.SSLSocket;\n49\
          \  \n50  import javax.mail.*;\n51  import javax.mail.event.*;\n52  import\
          \ javax.mail.internet.*;\n53  \n54  import com.sun.mail.util.*;\n55  import\
          \ com.sun.mail.auth.*;\n56  \n57  /**\n58   * This class implements the\
          \ Transport abstract class using SMTP for\n59   * message submission and\
          \ transport. <p>\n60   *"
        lineNumber: 50
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPTransport.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPTransport.java
          kind: Class
          name: Authenticator
          package: com.sun.mail.smtp
      - codeSnip: "41  package com.sun.mail.smtp;\n42  \n43  import java.io.*;\n44\
          \  import java.net.*;\n45  import java.util.*;\n46  import java.util.logging.Level;\n\
          47  import java.lang.reflect.*;\n48  import javax.net.ssl.SSLSocket;\n49\
          \  \n50  import javax.mail.*;\n51  import javax.mail.event.*;\n52  import\
          \ javax.mail.internet.*;\n53  \n54  import com.sun.mail.util.*;\n55  import\
          \ com.sun.mail.auth.*;\n56  \n57  /**\n58   * This class implements the\
          \ Transport abstract class using SMTP for\n59   * message submission and\
          \ transport. <p>\n60   *\n61   * See the <a href=\"package-summary.html\"\
          >com.sun.mail.smtp</a> package"
        lineNumber: 51
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPTransport.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPTransport.java
          kind: Class
          name: Authenticator
          package: com.sun.mail.smtp
      - codeSnip: "42  \n43  import java.io.*;\n44  import java.net.*;\n45  import\
          \ java.util.*;\n46  import java.util.logging.Level;\n47  import java.lang.reflect.*;\n\
          48  import javax.net.ssl.SSLSocket;\n49  \n50  import javax.mail.*;\n51\
          \  import javax.mail.event.*;\n52  import javax.mail.internet.*;\n53  \n\
          54  import com.sun.mail.util.*;\n55  import com.sun.mail.auth.*;\n56  \n\
          57  /**\n58   * This class implements the Transport abstract class using\
          \ SMTP for\n59   * message submission and transport. <p>\n60   *\n61   *\
          \ See the <a href=\"package-summary.html\">com.sun.mail.smtp</a> package\n\
          62   * documentation for further information on the SMTP protocol provider.\
          \ <p>"
        lineNumber: 52
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPTransport.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPTransport.java
          kind: Class
          name: Authenticator
          package: com.sun.mail.smtp
      - codeSnip: "45  import java.util.*;\n46  import java.util.logging.Level;\n\
          47  import java.lang.reflect.*;\n48  import javax.net.ssl.SSLSocket;\n49\
          \  \n50  import javax.mail.*;\n51  import javax.mail.event.*;\n52  import\
          \ javax.mail.internet.*;\n53  \n54  import com.sun.mail.util.*;\n55  import\
          \ com.sun.mail.auth.*;\n56  \n57  /**\n58   * This class implements the\
          \ Transport abstract class using SMTP for\n59   * message submission and\
          \ transport. <p>\n60   *\n61   * See the <a href=\"package-summary.html\"\
          >com.sun.mail.smtp</a> package\n62   * documentation for further information\
          \ on the SMTP protocol provider. <p>\n63   *\n64   * This class includes\
          \ many protected methods that allow a subclass to\n65   * extend this class\
          \ and add support for non-standard SMTP commands."
        lineNumber: 55
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPTransport.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SMTPTransport.java
          kind: Class
          name: Authenticator
          package: com.sun.mail.smtp
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.smtp;\n42  \n43  import javax.mail.MessagingException;\n\
          44  \n45  /**\n46   * Interface to make it easier to call SMTPSaslAuthenticator.\n\
          47   */\n48  \n49  public interface SaslAuthenticator {\n50      public\
          \ boolean authenticate(String[] mechs, String realm, String authzid,\n51\
          \  \t\t\t\tString u, String p) throws MessagingException;\n52  \n53  }"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SaslAuthenticator.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/smtp/SaslAuthenticator.java
          kind: Interface
          name: SaslAuthenticator
          package: com.sun.mail.smtp
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.util;\n42  \n43  import javax.mail.MessagingException;\n\
          44  \n45  /**\n46   * A MessagingException that indicates a socket connection\
          \ attempt failed.\n47   * Unlike java.net.ConnectException, it includes\
          \ details of what we\n48   * were trying to connect to.  The underlying\
          \ exception is available\n49   * as the \"cause\" of this exception.\n50\
          \   *\n51   * @see\t\tjava.net.ConnectException\n52   * @author\tBill Shannon\n\
          53   * @since \tJavaMail 1.5.0"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/MailConnectException.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/MailConnectException.java
          kind: Class
          name: MailConnectException
          package: com.sun.mail.util
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package com.sun.mail.util;\n\
          42  \n43  import java.io.PrintStream;\n44  import java.text.MessageFormat;\n\
          45  import java.util.logging.Logger;\n46  import java.util.logging.Level;\n\
          47  \n48  import javax.mail.Session;\n49  \n50  /**\n51   * A simplified\
          \ logger used by JavaMail to handle logging to a\n52   * PrintStream and\
          \ logging through a java.util.logging.Logger.\n53   * If debug is set, messages\
          \ are written to the PrintStream and\n54   * prefixed by the specified prefix\
          \ (which is not included in\n55   * Logger messages).\n56   * Messages are\
          \ logged by the Logger based on the configuration\n57   * of the logging\
          \ system.\n58   */"
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/MailLogger.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/MailLogger.java
          kind: Class
          name: MailLogger
          package: com.sun.mail.util
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.util;\n\
          42  \n43  import java.lang.reflect.*;\n44  import java.security.*;\n45 \
          \ \n46  import javax.mail.internet.MimePart;\n47  \n48  /**\n49   * General\
          \ MIME-related utility methods.\n50   *\n51   * @author\tBill Shannon\n\
          52   * @since\tJavaMail 1.4.4\n53   */\n54  public class MimeUtil {\n55\
          \  \n56      private static final Method cleanContentType;"
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/MimeUtil.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/MimeUtil.java
          kind: Class
          name: MimeUtil
          package: com.sun.mail.util
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package com.sun.mail.util;\n42  \n43  import java.util.*;\n44  import\
          \ javax.mail.Session;\n45  \n46  /**\n47   * Utilities to make it easier\
          \ to get property values.\n48   * Properties can be strings or type-specific\
          \ value objects.\n49   *\n50   * @author Bill Shannon\n51   */\n52  public\
          \ class PropUtil {\n53  \n54      // No one should instantiate this class."
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/PropUtil.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/PropUtil.java
          kind: Class
          name: PropUtil
          package: com.sun.mail.util
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ com.sun.mail.util;\n42  \n43  import java.io.InputStream;\n44  \n45  import\
          \ javax.mail.MessagingException;\n46  \n47  /**\n48   * A Message or message\
          \ Part whose data can be read as a MIME format\n49   * stream.  Note that\
          \ the MIME stream will include both the headers\n50   * and the body of\
          \ the message or part.  This should be the same data\n51   * that is produced\
          \ by the writeTo method, but in a readable form.\n52   *\n53   * @author\t\
          Bill Shannon\n54   * @since\tJavaMail 1.4.5\n55   */"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/ReadableMime.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/ReadableMime.java
          kind: Interface
          name: ReadableMime
          package: com.sun.mail.util
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package com.sun.mail.util;\n\
          42  \n43  import java.io.InputStream;\n44  import java.io.ByteArrayOutputStream;\n\
          45  \n46  import javax.mail.util.SharedByteArrayInputStream;\n47  \n48 \
          \ /**\n49   * A ByteArrayOutputStream that allows us to share the byte array\n\
          50   * rather than copy it.  Eventually could replace this with something\n\
          51   * that doesn't require a single contiguous byte array.\n52   *\n53\
          \   * @author\tBill Shannon\n54   * @since\tJavaMail 1.4.5\n55   */\n56\
          \  public class SharedByteArrayOutputStream extends ByteArrayOutputStream\
          \ {"
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/SharedByteArrayOutputStream.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/SharedByteArrayOutputStream.java
          kind: Class
          name: SharedByteArrayOutputStream
          package: com.sun.mail.util
      - codeSnip: "41  package com.sun.mail.util.logging;\n42  \n43  import java.io.ObjectStreamException;\n\
          44  import java.lang.reflect.InvocationTargetException;\n45  import java.lang.reflect.Method;\n\
          46  import java.security.AccessController;\n47  import java.security.PrivilegedAction;\n\
          48  import java.util.*;\n49  import java.util.logging.Formatter;\n50  import\
          \ java.util.logging.*;\n51  import javax.mail.Authenticator;\n52  \n53 \
          \ /**\n54   * An adapter class to allow the Mail API to access the LogManager\
          \ properties.\n55   * The LogManager properties are treated as the root\
          \ of all properties.\n56   * First, the parent properties are searched.\
          \ If no value is found, then,\n57   * the LogManager is searched with prefix\
          \ value.  If not found, then, just the\n58   * key itself is searched in\
          \ the LogManager. If a value is found in the\n59   * LogManager it is then\
          \ copied to this properties object with no key prefix.\n60   * If no value\
          \ is found in the LogManager or the parent properties, then this\n61   *\
          \ properties object is searched only by passing the key value."
        lineNumber: 51
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/logging/LogManagerProperties.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/logging/LogManagerProperties.java
          kind: Class
          name: LogManagerProperties
          package: com.sun.mail.util.logging
      - codeSnip: 11   * obtain a copy of the License at
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/logging/MailHandler.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/logging/MailHandler.java
          kind: Class
          name: DefaultAuthenticator
          package: com.sun.mail.util.logging
      - codeSnip: "50  import java.nio.charset.Charset;\n51  import java.security.AccessController;\n\
          52  import java.security.PrivilegedAction;\n53  import java.util.*;\n54\
          \  import java.util.logging.*;\n55  import java.util.logging.Formatter;\n\
          56  import javax.activation.DataHandler;\n57  import javax.activation.DataSource;\n\
          58  import javax.activation.FileTypeMap;\n59  import javax.activation.MimetypesFileTypeMap;\n\
          60  import javax.mail.*;\n61  import javax.mail.internet.*;\n62  import\
          \ javax.mail.util.ByteArrayDataSource;\n63  \n64  /**\n65   * <tt>Handler</tt>\
          \ that formats log records as an email message.\n66   *\n67   * <p>\n68\
          \   * This <tt>Handler</tt> will store a fixed number of log records used\
          \ to\n69   * generate a single email message.  When the internal buffer\
          \ reaches capacity,\n70   * all log records are formatted and placed in\
          \ an email which is sent to an"
        lineNumber: 60
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/logging/MailHandler.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/logging/MailHandler.java
          kind: Class
          name: DefaultAuthenticator
          package: com.sun.mail.util.logging
      - codeSnip: "51  import java.security.AccessController;\n52  import java.security.PrivilegedAction;\n\
          53  import java.util.*;\n54  import java.util.logging.*;\n55  import java.util.logging.Formatter;\n\
          56  import javax.activation.DataHandler;\n57  import javax.activation.DataSource;\n\
          58  import javax.activation.FileTypeMap;\n59  import javax.activation.MimetypesFileTypeMap;\n\
          60  import javax.mail.*;\n61  import javax.mail.internet.*;\n62  import\
          \ javax.mail.util.ByteArrayDataSource;\n63  \n64  /**\n65   * <tt>Handler</tt>\
          \ that formats log records as an email message.\n66   *\n67   * <p>\n68\
          \   * This <tt>Handler</tt> will store a fixed number of log records used\
          \ to\n69   * generate a single email message.  When the internal buffer\
          \ reaches capacity,\n70   * all log records are formatted and placed in\
          \ an email which is sent to an\n71   * email server.  The code to manually\
          \ setup this handler can be as simple as"
        lineNumber: 61
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/logging/MailHandler.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/logging/MailHandler.java
          kind: Class
          name: DefaultAuthenticator
          package: com.sun.mail.util.logging
      - codeSnip: "52  import java.security.PrivilegedAction;\n53  import java.util.*;\n\
          54  import java.util.logging.*;\n55  import java.util.logging.Formatter;\n\
          56  import javax.activation.DataHandler;\n57  import javax.activation.DataSource;\n\
          58  import javax.activation.FileTypeMap;\n59  import javax.activation.MimetypesFileTypeMap;\n\
          60  import javax.mail.*;\n61  import javax.mail.internet.*;\n62  import\
          \ javax.mail.util.ByteArrayDataSource;\n63  \n64  /**\n65   * <tt>Handler</tt>\
          \ that formats log records as an email message.\n66   *\n67   * <p>\n68\
          \   * This <tt>Handler</tt> will store a fixed number of log records used\
          \ to\n69   * generate a single email message.  When the internal buffer\
          \ reaches capacity,\n70   * all log records are formatted and placed in\
          \ an email which is sent to an\n71   * email server.  The code to manually\
          \ setup this handler can be as simple as\n72   * the following:"
        lineNumber: 62
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/logging/MailHandler.java
        variables:
          file: file:///root/.m2/repository/com/sun/mail/javax.mail/1.5.0/com/sun/mail/util/logging/MailHandler.java
          kind: Class
          name: DefaultAuthenticator
          package: com.sun.mail.util.logging
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ javax.mail;\n42  \n43  import java.io.*;\n44  import java.util.Vector;\n\
          45  import javax.mail.event.MailEvent;\n46  \n47  /**\n48   * Package private\
          \ class used by Store & Folder to dispatch events.\n49   * This class implements\
          \ an event queue, and a dispatcher thread that\n50   * dequeues and dispatches\
          \ events from the queue.\n51   *\n52   * Pieces stolen from sun.misc.Queue.\n\
          53   *\n54   * @author\tBill Shannon\n55   */"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/EventQueue.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/EventQueue.java
          kind: Class
          name: QueueElement
          package: javax.mail
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package javax.mail;\n42\
          \  \n43  import java.io.*;\n44  import java.lang.*;\n45  import java.util.Vector;\n\
          46  import java.util.StringTokenizer;\n47  import javax.mail.search.SearchTerm;\n\
          48  import javax.mail.event.*;\n49  \n50  /**\n51   * Folder is an abstract\
          \ class that represents a folder for mail\n52   * messages. Subclasses implement\
          \ protocol specific Folders.<p>\n53   *\n54   * Folders can contain Messages,\
          \ other Folders or both, thus providing\n55   * a tree-like hierarchy rooted\
          \ at the Store's default folder. (Note \n56   * that some Folder implementations\
          \ may not allow both Messages and \n57   * other Folders in the same Folder).<p>"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Folder.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Folder.java
          kind: Class
          name: TerminatorEvent
          package: javax.mail
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package javax.mail;\n42  \n\
          43  import java.io.*;\n44  import java.lang.*;\n45  import java.util.Vector;\n\
          46  import java.util.StringTokenizer;\n47  import javax.mail.search.SearchTerm;\n\
          48  import javax.mail.event.*;\n49  \n50  /**\n51   * Folder is an abstract\
          \ class that represents a folder for mail\n52   * messages. Subclasses implement\
          \ protocol specific Folders.<p>\n53   *\n54   * Folders can contain Messages,\
          \ other Folders or both, thus providing\n55   * a tree-like hierarchy rooted\
          \ at the Store's default folder. (Note \n56   * that some Folder implementations\
          \ may not allow both Messages and \n57   * other Folders in the same Folder).<p>\n\
          58   *"
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Folder.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Folder.java
          kind: Class
          name: TerminatorEvent
          package: javax.mail
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package javax.mail;\n42\
          \  \n43  import java.util.Vector;\n44  import java.util.Date;\n45  import\
          \ java.util.Properties;\n46  import java.io.*;\n47  import javax.mail.search.SearchTerm;\n\
          48  \n49  /**\n50   * This class models an email message. This is an abstract\
          \ class.  \n51   * Subclasses provide actual implementations. <p>\n52  \
          \ *\n53   * Message implements the Part interface. Message contains a set\
          \ of\n54   * attributes and a \"content\". Messages within a folder also\
          \ have a \n55   * set of flags that describe its state within the folder.<p>\n\
          56   *\n57   * Message defines some new attributes in addition to those\
          \ defined"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Message.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Message.java
          kind: Class
          name: RecipientType
          package: javax.mail
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package javax.mail;\n\
          42  \n43  import java.io.*;\n44  import java.net.*;\n45  import java.util.*;\n\
          46  import javax.mail.event.*;\n47  \n48  /**\n49   * An abstract class\
          \ that contains the functionality\n50   * common to messaging services,\
          \ such as stores and transports. <p>\n51   * A messaging service is created\
          \ from a <code>Session</code> and is\n52   * named using a <code>URLName</code>.\
          \  A service must be connected\n53   * before it can be used.  Connection\
          \ events are sent to reflect\n54   * its connection status.\n55   *\n56\
          \   * @author Christopher Cotton"
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Service.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Service.java
          kind: Class
          name: TerminatorEvent
          package: javax.mail
      - codeSnip: 11   * https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
        lineNumber: 798
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Session.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Session.java
          kind: Method
          name: getService
          package: javax.mail
      - codeSnip: "46  import java.security.*;\n47  import java.util.Enumeration;\n\
          48  import java.util.Hashtable;\n49  import java.util.Properties;\n50  import\
          \ java.util.StringTokenizer;\n51  import java.util.Vector;\n52  import java.util.logging.Level;\n\
          53  \n54  import javax.activation.*;\n55  \n56  import com.sun.mail.util.LineInputStream;\n\
          57  import com.sun.mail.util.MailLogger;\n58  \n59  /**\n60   * The Session\
          \ class represents a mail session and is not subclassed.\n61   * It collects\
          \ together properties and defaults used by the mail API's.\n62   * A single\
          \ default session can be shared by multiple applications on the\n63   *\
          \ desktop.  Unshared sessions can also be created. <p>\n64   *\n65   * The\
          \ Session class provides access to the protocol providers that\n66   * implement\
          \ the <code>Store</code>, <code>Transport</code>, and related"
        lineNumber: 56
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Session.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Session.java
          kind: Class
          name: Session
          package: javax.mail
      - codeSnip: "47  import java.util.Enumeration;\n48  import java.util.Hashtable;\n\
          49  import java.util.Properties;\n50  import java.util.StringTokenizer;\n\
          51  import java.util.Vector;\n52  import java.util.logging.Level;\n53  \n\
          54  import javax.activation.*;\n55  \n56  import com.sun.mail.util.LineInputStream;\n\
          57  import com.sun.mail.util.MailLogger;\n58  \n59  /**\n60   * The Session\
          \ class represents a mail session and is not subclassed.\n61   * It collects\
          \ together properties and defaults used by the mail API's.\n62   * A single\
          \ default session can be shared by multiple applications on the\n63   *\
          \ desktop.  Unshared sessions can also be created. <p>\n64   *\n65   * The\
          \ Session class provides access to the protocol providers that\n66   * implement\
          \ the <code>Store</code>, <code>Transport</code>, and related\n67   * classes.\
          \  The protocol providers are configured using the following files:"
        lineNumber: 57
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Session.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Session.java
          kind: Class
          name: Session
          package: javax.mail
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package javax.mail;\n\
          42  \n43  import java.io.*;\n44  import java.net.*;\n45  import java.util.*;\n\
          46  import javax.mail.event.*;\n47  \n48  /**\n49   * An abstract class\
          \ that models a message store and its\n50   * access protocol, for storing\
          \ and retrieving messages. \n51   * Subclasses provide actual implementations.\
          \ <p>\n52   *\n53   * Note that <code>Store</code> extends the <code>Service</code>\n\
          54   * class, which provides many common methods for naming stores,\n55\
          \   * connecting to stores, and listening to connection events.\n56   *"
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Store.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Store.java
          kind: Class
          name: Store
          package: javax.mail
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package javax.mail;\n42  \n\
          43  import java.io.IOException;\n44  import java.net.*;\n45  import java.util.Vector;\n\
          46  import java.util.Hashtable;\n47  import java.util.Enumeration;\n48 \
          \ import javax.mail.event.*;\n49  \n50  /**\n51   * An abstract class that\
          \ models a message transport.\n52   * Subclasses provide actual implementations.\
          \ <p>\n53   *\n54   * Note that <code>Transport</code> extends the <code>Service</code>\n\
          55   * class, which provides many common methods for naming transports,\n\
          56   * connecting to transports, and listening to connection events.\n57\
          \   *\n58   * @author John Mani"
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Transport.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/Transport.java
          kind: Class
          name: Transport
          package: javax.mail
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.event;\n42  \n43  import java.util.*;\n44  import\
          \ javax.mail.*;\n45  \n46  /**\n47   * This class models Connection events.\n\
          48   *\n49   * @author John Mani\n50   */\n51  \n52  public class ConnectionEvent\
          \ extends MailEvent  {\n53  \n54      /** A connection was opened. */"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/event/ConnectionEvent.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/event/ConnectionEvent.java
          kind: Class
          name: ConnectionEvent
          package: javax.mail.event
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.event;\n42  \n43  import java.util.*;\n44  import\
          \ javax.mail.*;\n45  \n46  /**\n47   * This class models Folder <em>existence</em>\
          \ events. FolderEvents are\n48   * delivered to FolderListeners registered\
          \ on the affected Folder as\n49   * well as the containing Store. <p>\n\
          50   *\n51   * Service providers vary widely in their ability to notify\
          \ clients of\n52   * these events.  At a minimum, service providers must\
          \ notify listeners\n53   * registered on the same Store or Folder object\
          \ on which the operation\n54   * occurs.  Service providers may also notify\
          \ listeners when changes"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/event/FolderEvent.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/event/FolderEvent.java
          kind: Class
          name: FolderEvent
          package: javax.mail.event
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.event;\n42  \n43  import java.util.*;\n44  import\
          \ javax.mail.*;\n45  \n46  /**\n47   * This class models Message change\
          \ events.\n48   *\n49   * @author John Mani\n50   */\n51  \n52  public class\
          \ MessageChangedEvent extends MailEvent {\n53  \n54      /** The message's\
          \ flags changed. */"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/event/MessageChangedEvent.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/event/MessageChangedEvent.java
          kind: Class
          name: MessageChangedEvent
          package: javax.mail.event
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.event;\n42  \n43  import java.util.*;\n44  import\
          \ javax.mail.*;\n45  \n46  /**\n47   * This class notifies changes in the\
          \ number of messages in a folder. <p>\n48   *\n49   * Note that some folder\
          \ types may only deliver MessageCountEvents at\n50   * certain times or\
          \ after certain operations.  IMAP in particular will\n51   * only notify\
          \ the client of MessageCountEvents when a client issues a\n52   * new command.\n\
          53   * Refer to RFC 2060 <A HREF=\"http://www.ietf.org/rfc/rfc2060.txt\"\
          >\n54   * http://www.ietf.org/rfc/rfc2060.txt</A> for details."
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/event/MessageCountEvent.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/event/MessageCountEvent.java
          kind: Class
          name: MessageCountEvent
          package: javax.mail.event
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.event;\n42  \n43  import java.util.*;\n44  import\
          \ javax.mail.*;\n45  \n46  /**\n47   * This class models notifications from\
          \ the Store connection. These\n48   * notifications can be ALERTS or NOTICES.\
          \ ALERTS must be presented\n49   * to the user in a fashion that calls the\
          \ user's attention to the\n50   * message.\n51   *\n52   * @author John\
          \ Mani\n53   */\n54  "
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/event/StoreEvent.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/event/StoreEvent.java
          kind: Class
          name: StoreEvent
          package: javax.mail.event
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.event;\n42  \n43  import java.util.*;\n44  import\
          \ javax.mail.*;\n45  \n46  /**\n47   * This class models Transport events.\n\
          48   *\n49   * @author John Mani\n50   * @author Max Spivak\n51   * \n52\
          \   * @see javax.mail.Transport\n53   * @see javax.mail.event.TransportListener\n\
          54   */"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/event/TransportEvent.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/event/TransportEvent.java
          kind: Class
          name: TransportEvent
          package: javax.mail.event
      - lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/AsciiOutputStream.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/AsciiOutputStream.java
          kind: Class
          name: AsciiOutputStream
          package: ''
      - lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/AsciiOutputStream.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/AsciiOutputStream.java
          kind: Class
          name: AsciiOutputStream
          package: ''
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.internet;\n42  \n43  import javax.mail.*;\n44\
          \  import java.util.*;\n45  import java.io.*;\n46  \n47  /**\n48   * This\
          \ class represents a MIME ContentDisposition value. It provides\n49   *\
          \ methods to parse a ContentDisposition string into individual components\n\
          50   * and to generate a MIME style ContentDisposition string.\n51   *\n\
          52   * @author  John Mani\n53   */"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/ContentDisposition.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/ContentDisposition.java
          kind: Class
          name: ContentDisposition
          package: javax.mail.internet
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.internet;\n42  \n43  import javax.mail.*;\n44\
          \  import java.util.*;\n45  import java.io.*;\n46  \n47  /**\n48   * This\
          \ class represents a MIME Content-Type value. It provides\n49   * methods\
          \ to parse a Content-Type string into individual components\n50   * and\
          \ to generate a MIME style Content-Type string.\n51   *\n52   * @author\
          \  John Mani\n53   */"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/ContentType.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/ContentType.java
          kind: Class
          name: ContentType
          package: javax.mail.internet
      - codeSnip: "40  \n41  package javax.mail.internet;\n42  \n43  import java.io.UnsupportedEncodingException;\n\
          44  import java.net.InetAddress;\n45  import java.net.UnknownHostException;\n\
          46  import java.util.List;\n47  import java.util.ArrayList;\n48  import\
          \ java.util.StringTokenizer;\n49  import java.util.Locale;\n50  import javax.mail.*;\n\
          51  import com.sun.mail.util.PropUtil;\n52  \n53  /**\n54   * This class\
          \ represents an Internet email address using the syntax\n55   * of <a href=\"\
          http://www.ietf.org/rfc/rfc822.txt\">RFC822</a>.\n56   * Typical address\
          \ syntax is of the form \"user@host.domain\" or\n57   * \"Personal Name\
          \ &lt;user@host.domain&gt;\".\n58   *\n59   * @author Bill Shannon\n60 \
          \  * @author John Mani"
        lineNumber: 50
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/InternetAddress.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/InternetAddress.java
          kind: Class
          name: InternetAddress
          package: javax.mail.internet
      - codeSnip: "41  package javax.mail.internet;\n42  \n43  import java.io.UnsupportedEncodingException;\n\
          44  import java.net.InetAddress;\n45  import java.net.UnknownHostException;\n\
          46  import java.util.List;\n47  import java.util.ArrayList;\n48  import\
          \ java.util.StringTokenizer;\n49  import java.util.Locale;\n50  import javax.mail.*;\n\
          51  import com.sun.mail.util.PropUtil;\n52  \n53  /**\n54   * This class\
          \ represents an Internet email address using the syntax\n55   * of <a href=\"\
          http://www.ietf.org/rfc/rfc822.txt\">RFC822</a>.\n56   * Typical address\
          \ syntax is of the form \"user@host.domain\" or\n57   * \"Personal Name\
          \ &lt;user@host.domain&gt;\".\n58   *\n59   * @author Bill Shannon\n60 \
          \  * @author John Mani\n61   */"
        lineNumber: 51
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/InternetAddress.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/InternetAddress.java
          kind: Class
          name: InternetAddress
          package: javax.mail.internet
      - codeSnip: 11   * https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/InternetHeaders.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/InternetHeaders.java
          kind: Class
          name: InternetHeaders
          package: javax.mail.internet
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ javax.mail.internet;\n42  \n43  import java.io.*;\n44  import java.util.*;\n\
          45  import javax.mail.*;\n46  import com.sun.mail.util.LineInputStream;\n\
          47  import com.sun.mail.util.PropUtil;\n48  \n49  /**\n50   * InternetHeaders\
          \ is a utility class that manages RFC822 style\n51   * headers. Given an\
          \ RFC822 format message stream, it reads lines\n52   * until the blank line\
          \ that indicates end of header. The input stream\n53   * is positioned at\
          \ the start of the body. The lines are stored \n54   * within the object\
          \ and can be extracted as either Strings or\n55   * {@link javax.mail.Header}\
          \ objects. <p>"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/InternetHeaders.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/InternetHeaders.java
          kind: Class
          name: InternetHeader
          package: javax.mail.internet
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package javax.mail.internet;\n\
          42  \n43  import java.io.*;\n44  import java.util.*;\n45  import javax.mail.*;\n\
          46  import com.sun.mail.util.LineInputStream;\n47  import com.sun.mail.util.PropUtil;\n\
          48  \n49  /**\n50   * InternetHeaders is a utility class that manages RFC822\
          \ style\n51   * headers. Given an RFC822 format message stream, it reads\
          \ lines\n52   * until the blank line that indicates end of header. The input\
          \ stream\n53   * is positioned at the start of the body. The lines are stored\
          \ \n54   * within the object and can be extracted as either Strings or\n\
          55   * {@link javax.mail.Header} objects. <p>\n56   *\n57   * This class\
          \ is mostly intended for service providers. MimeMessage"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/InternetHeaders.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/InternetHeaders.java
          kind: Class
          name: InternetHeaders
          package: javax.mail.internet
      - codeSnip: "46  import java.util.Locale;\n47  import java.util.TimeZone;\n\
          48  import java.util.logging.Level;\n49  import java.text.DateFormat;\n\
          50  import java.text.SimpleDateFormat;\n51  import java.text.NumberFormat;\n\
          52  import java.text.FieldPosition;\n53  import java.text.ParsePosition;\n\
          54  import java.text.ParseException;\n55  \n56  import com.sun.mail.util.MailLogger;\n\
          57  \n58  /**\n59   * Formats and parses date specification based on the\n\
          60   * draft-ietf-drums-msg-fmt-08 dated January 26, 2000. This is a followup\n\
          61   * spec to RFC822.<p>\n62   *\n63   * This class does not take pattern\
          \ strings. It always formats the\n64   * date based on the specification\
          \ below.<p>\n65   *\n66   * 3.3 Date and Time Specification<p>"
        lineNumber: 56
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MailDateFormat.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MailDateFormat.java
          kind: Class
          name: MailDateFormat
          package: javax.mail.internet
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.internet;\n42  \n43  import javax.mail.*;\n44\
          \  import javax.activation.*;\n45  import java.io.*;\n46  import java.util.*;\n\
          47  import com.sun.mail.util.*;\n48  \n49  /**\n50   * This class represents\
          \ a MIME body part. It implements the \n51   * <code>BodyPart</code> abstract\
          \ class and the <code>MimePart</code>\n52   * interface. MimeBodyParts are\
          \ contained in <code>MimeMultipart</code>\n53   * objects. <p>"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeBodyPart.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeBodyPart.java
          kind: Class
          name: EncodedFileDataSource
          package: javax.mail.internet
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package javax.mail.internet;\n\
          42  \n43  import javax.mail.*;\n44  import javax.activation.*;\n45  import\
          \ java.io.*;\n46  import java.util.*;\n47  import com.sun.mail.util.*;\n\
          48  \n49  /**\n50   * This class represents a MIME body part. It implements\
          \ the \n51   * <code>BodyPart</code> abstract class and the <code>MimePart</code>\n\
          52   * interface. MimeBodyParts are contained in <code>MimeMultipart</code>\n\
          53   * objects. <p>\n54   *\n55   * MimeBodyPart uses the <code>InternetHeaders</code>\
          \ class to parse\n56   * and store the headers of that body part. <p>\n\
          57   *"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeBodyPart.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeBodyPart.java
          kind: Class
          name: MimeBodyPart
          package: javax.mail.internet
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.internet;\n42  \n43  import javax.mail.*;\n44\
          \  import javax.activation.*;\n45  import java.lang.*;\n46  import java.io.*;\n\
          47  import java.util.*;\n48  import java.text.ParseException;\n49  import\
          \ com.sun.mail.util.*;\n50  import javax.mail.util.SharedByteArrayInputStream;\n\
          51  \n52  /**\n53   * This class represents a MIME style email message.\
          \ It implements"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeMessage.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeMessage.java
          kind: Class
          name: RecipientType
          package: javax.mail.internet
      - codeSnip: "39   */\n40  \n41  package javax.mail.internet;\n42  \n43  import\
          \ javax.mail.*;\n44  import javax.activation.*;\n45  import java.lang.*;\n\
          46  import java.io.*;\n47  import java.util.*;\n48  import java.text.ParseException;\n\
          49  import com.sun.mail.util.*;\n50  import javax.mail.util.SharedByteArrayInputStream;\n\
          51  \n52  /**\n53   * This class represents a MIME style email message.\
          \ It implements\n54   * the <code>Message</code> abstract class and the\
          \ <code>MimePart</code>\n55   * interface. <p>\n56   *\n57   * Clients wanting\
          \ to create new MIME style messages will instantiate\n58   * an empty MimeMessage\
          \ object and then fill it with appropriate \n59   * attributes and content.\
          \ <p>"
        lineNumber: 49
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeMessage.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeMessage.java
          kind: Class
          name: MimeMessage
          package: javax.mail.internet
      - codeSnip: "40  \n41  package javax.mail.internet;\n42  \n43  import javax.mail.*;\n\
          44  import javax.activation.*;\n45  import java.lang.*;\n46  import java.io.*;\n\
          47  import java.util.*;\n48  import java.text.ParseException;\n49  import\
          \ com.sun.mail.util.*;\n50  import javax.mail.util.SharedByteArrayInputStream;\n\
          51  \n52  /**\n53   * This class represents a MIME style email message.\
          \ It implements\n54   * the <code>Message</code> abstract class and the\
          \ <code>MimePart</code>\n55   * interface. <p>\n56   *\n57   * Clients wanting\
          \ to create new MIME style messages will instantiate\n58   * an empty MimeMessage\
          \ object and then fill it with appropriate \n59   * attributes and content.\
          \ <p>\n60   * "
        lineNumber: 50
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeMessage.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeMessage.java
          kind: Class
          name: RecipientType
          package: javax.mail.internet
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.internet;\n42  \n43  import javax.mail.*;\n44\
          \  import javax.activation.*;\n45  import java.util.*;\n46  import java.io.*;\n\
          47  import com.sun.mail.util.LineOutputStream;\n48  import com.sun.mail.util.LineInputStream;\n\
          49  import com.sun.mail.util.ASCIIUtility;\n50  import com.sun.mail.util.PropUtil;\n\
          51  \n52  /**\n53   * The MimeMultipart class is an implementation of the\
          \ abstract Multipart"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeMultipart.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeMultipart.java
          kind: Class
          name: MimeMultipart
          package: javax.mail.internet
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package javax.mail.internet;\n\
          42  \n43  import javax.mail.*;\n44  import javax.activation.*;\n45  import\
          \ java.util.*;\n46  import java.io.*;\n47  import com.sun.mail.util.LineOutputStream;\n\
          48  import com.sun.mail.util.LineInputStream;\n49  import com.sun.mail.util.ASCIIUtility;\n\
          50  import com.sun.mail.util.PropUtil;\n51  \n52  /**\n53   * The MimeMultipart\
          \ class is an implementation of the abstract Multipart\n54   * class that\
          \ uses MIME conventions for the multipart data. <p>\n55   *\n56   * A MimeMultipart\
          \ is obtained from a MimePart whose primary type\n57   * is \"multipart\"\
          \ (by invoking the part's <code>getContent()</code> method)"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeMultipart.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeMultipart.java
          kind: Class
          name: MimeMultipart
          package: javax.mail.internet
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package javax.mail.internet;\n\
          42  \n43  import javax.mail.*;\n44  import javax.activation.*;\n45  import\
          \ java.util.*;\n46  import java.io.*;\n47  import com.sun.mail.util.LineOutputStream;\n\
          48  import com.sun.mail.util.LineInputStream;\n49  import com.sun.mail.util.ASCIIUtility;\n\
          50  import com.sun.mail.util.PropUtil;\n51  \n52  /**\n53   * The MimeMultipart\
          \ class is an implementation of the abstract Multipart\n54   * class that\
          \ uses MIME conventions for the multipart data. <p>\n55   *\n56   * A MimeMultipart\
          \ is obtained from a MimePart whose primary type\n57   * is \"multipart\"\
          \ (by invoking the part's <code>getContent()</code> method)\n58   * or it\
          \ can be created by a client as part of creating a new MimeMessage. <p>"
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeMultipart.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeMultipart.java
          kind: Class
          name: MimeMultipart
          package: javax.mail.internet
      - codeSnip: "39   */\n40  \n41  package javax.mail.internet;\n42  \n43  import\
          \ javax.mail.*;\n44  import javax.activation.*;\n45  import java.util.*;\n\
          46  import java.io.*;\n47  import com.sun.mail.util.LineOutputStream;\n\
          48  import com.sun.mail.util.LineInputStream;\n49  import com.sun.mail.util.ASCIIUtility;\n\
          50  import com.sun.mail.util.PropUtil;\n51  \n52  /**\n53   * The MimeMultipart\
          \ class is an implementation of the abstract Multipart\n54   * class that\
          \ uses MIME conventions for the multipart data. <p>\n55   *\n56   * A MimeMultipart\
          \ is obtained from a MimePart whose primary type\n57   * is \"multipart\"\
          \ (by invoking the part's <code>getContent()</code> method)\n58   * or it\
          \ can be created by a client as part of creating a new MimeMessage. <p>\n\
          59   *"
        lineNumber: 49
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeMultipart.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeMultipart.java
          kind: Class
          name: MimeMultipart
          package: javax.mail.internet
      - codeSnip: "40  \n41  package javax.mail.internet;\n42  \n43  import javax.mail.*;\n\
          44  import javax.activation.*;\n45  import java.util.*;\n46  import java.io.*;\n\
          47  import com.sun.mail.util.LineOutputStream;\n48  import com.sun.mail.util.LineInputStream;\n\
          49  import com.sun.mail.util.ASCIIUtility;\n50  import com.sun.mail.util.PropUtil;\n\
          51  \n52  /**\n53   * The MimeMultipart class is an implementation of the\
          \ abstract Multipart\n54   * class that uses MIME conventions for the multipart\
          \ data. <p>\n55   *\n56   * A MimeMultipart is obtained from a MimePart\
          \ whose primary type\n57   * is \"multipart\" (by invoking the part's <code>getContent()</code>\
          \ method)\n58   * or it can be created by a client as part of creating a\
          \ new MimeMessage. <p>\n59   *\n60   * The default multipart subtype is\
          \ \"mixed\".  The other multipart"
        lineNumber: 50
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeMultipart.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeMultipart.java
          kind: Class
          name: MimeMultipart
          package: javax.mail.internet
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.internet;\n42  \n43  import javax.mail.*;\n44\
          \  import java.io.*;\n45  import java.util.Enumeration;\n46  \n47  /**\n\
          48   * The MimePart interface models an <strong>Entity</strong> as defined\n\
          49   * by MIME (RFC2045, Section 2.4). <p>\n50   *\n51   * MimePart extends\
          \ the Part interface to add additional RFC822 and MIME\n52   * specific\
          \ semantics and attributes. It provides the base interface for\n53   * the\
          \ MimeMessage and  MimeBodyPart classes "
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimePart.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimePart.java
          kind: Interface
          name: MimePart
          package: javax.mail.internet
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.internet;\n42  \n43  import javax.mail.*;\n44\
          \  import javax.activation.*;\n45  import java.io.*;\n46  import java.net.UnknownServiceException;\n\
          47  import com.sun.mail.util.PropUtil;\n48  import com.sun.mail.util.FolderClosedIOException;\n\
          49  \n50  /**\n51   * A utility class that implements a DataSource out of\n\
          52   * a MimePart. This class is primarily meant for service providers.\n\
          53   *"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimePartDataSource.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimePartDataSource.java
          kind: Class
          name: MimePartDataSource
          package: javax.mail.internet
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package javax.mail.internet;\n\
          42  \n43  import javax.mail.*;\n44  import javax.activation.*;\n45  import\
          \ java.io.*;\n46  import java.net.UnknownServiceException;\n47  import com.sun.mail.util.PropUtil;\n\
          48  import com.sun.mail.util.FolderClosedIOException;\n49  \n50  /**\n51\
          \   * A utility class that implements a DataSource out of\n52   * a MimePart.\
          \ This class is primarily meant for service providers.\n53   *\n54   * @see\t\
          \tjavax.mail.internet.MimePart\n55   * @see\t\tjavax.activation.DataSource\n\
          56   * @author \tJohn Mani\n57   */"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimePartDataSource.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimePartDataSource.java
          kind: Class
          name: MimePartDataSource
          package: javax.mail.internet
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package javax.mail.internet;\n\
          42  \n43  import javax.mail.*;\n44  import javax.activation.*;\n45  import\
          \ java.io.*;\n46  import java.net.UnknownServiceException;\n47  import com.sun.mail.util.PropUtil;\n\
          48  import com.sun.mail.util.FolderClosedIOException;\n49  \n50  /**\n51\
          \   * A utility class that implements a DataSource out of\n52   * a MimePart.\
          \ This class is primarily meant for service providers.\n53   *\n54   * @see\t\
          \tjavax.mail.internet.MimePart\n55   * @see\t\tjavax.activation.DataSource\n\
          56   * @author \tJohn Mani\n57   */\n58  "
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimePartDataSource.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimePartDataSource.java
          kind: Class
          name: MimePartDataSource
          package: javax.mail.internet
      - codeSnip: "1282      private static Hashtable java2mime;\n1283  \n1284   \
          \   static {\n1285  \tjava2mime = new Hashtable(40);\n1286  \tmime2java\
          \ = new Hashtable(10);\n1287  \n1288  \ttry {\n1289  \t    // Use this class's\
          \ classloader to load the mapping file\n1290  \t    // XXX - we should use\
          \ SecuritySupport, but it's in another package\n1291  \t    InputStream\
          \ is = \n1292  \t\t    javax.mail.internet.MimeUtility.class.getResourceAsStream(\n\
          1293  \t\t    \"/META-INF/javamail.charset.map\");\n1294  \n1295  \t   \
          \ if (is != null) {\n1296  \t\ttry {\n1297  \t\t    is = new LineInputStream(is);\n\
          1298  \n1299  \t\t    // Load the JDK-to-MIME charset mapping table\n1300\
          \  \t\t    loadMappings((LineInputStream)is, java2mime);\n1301  \n1302 \
          \ \t\t    // Load the MIME-to-JDK charset mapping table"
        lineNumber: 1292
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeUtility.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeUtility.java
          kind: Class
          name: MimeUtility
          package: javax.mail.internet
      - codeSnip: "38   * holder.\n39   */\n40  \n41  package javax.mail.internet;\n\
          42  \n43  import javax.mail.MessagingException;\n44  import javax.mail.EncodingAware;\n\
          45  import javax.activation.*;\n46  import java.util.*;\n47  import java.io.*;\n\
          48  import com.sun.mail.util.*;\n49  \n50  /**\n51   * This is a utility\
          \ class that provides various MIME related\n52   * functionality. <p>\n\
          53   *\n54   * There are a set of methods to encode and decode MIME headers\
          \ as \n55   * per RFC 2047.  Note that, in general, these methods are\n\
          56   * <strong>not</strong> needed when using methods such as\n57   * <code>setSubject</code>\
          \ and <code>setRecipients</code>; JavaMail\n58   * will automatically encode\
          \ and decode data when using these \"higher"
        lineNumber: 48
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeUtility.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/MimeUtility.java
          kind: Class
          name: MimeUtility
          package: javax.mail.internet
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package javax.mail.internet;\n\
          42  \n43  import java.util.Vector;\n44  import java.util.StringTokenizer;\n\
          45  import java.util.Locale;\n46  import javax.mail.*;\n47  \n48  /**\n\
          49   * This class models an RFC1036 newsgroup address.\n50   *\n51   * @author\
          \ Bill Shannon\n52   * @author John Mani\n53   */\n54  \n55  public class\
          \ NewsAddress extends Address {\n56  "
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/NewsAddress.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/NewsAddress.java
          kind: Class
          name: NewsAddress
          package: javax.mail.internet
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ javax.mail.internet;\n42  \n43  import java.util.*;\n44  import java.io.*;\n\
          45  import com.sun.mail.util.PropUtil;\n46  import com.sun.mail.util.ASCIIUtility;\n\
          47  \n48  /**\n49   * This class holds MIME parameters (attribute-value\
          \ pairs).\n50   * The <code>mail.mime.encodeparameters</code> and\n51  \
          \ * <code>mail.mime.decodeparameters</code> System properties\n52   * control\
          \ whether encoded parameters, as specified by \n53   * <a href=\"http://www.ietf.org/rfc/rfc2231.txt\"\
          >RFC 2231</a>,\n54   * are supported.  By default, such encoded parameters\
          \ <b>are</b>\n55   * supported. <p>"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/ParameterList.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/ParameterList.java
          kind: Class
          name: ParameterList
          package: javax.mail.internet
      - codeSnip: "36   * and therefore, elected the GPL Version 2 license, then the\
          \ option applies\n37   * only if the new code is made subject to such option\
          \ by the copyright\n38   * holder.\n39   */\n40  \n41  package javax.mail.internet;\n\
          42  \n43  import java.util.*;\n44  import java.io.*;\n45  import com.sun.mail.util.PropUtil;\n\
          46  import com.sun.mail.util.ASCIIUtility;\n47  \n48  /**\n49   * This class\
          \ holds MIME parameters (attribute-value pairs).\n50   * The <code>mail.mime.encodeparameters</code>\
          \ and\n51   * <code>mail.mime.decodeparameters</code> System properties\n\
          52   * control whether encoded parameters, as specified by \n53   * <a href=\"\
          http://www.ietf.org/rfc/rfc2231.txt\">RFC 2231</a>,\n54   * are supported.\
          \  By default, such encoded parameters <b>are</b>\n55   * supported. <p>\n\
          56   *"
        lineNumber: 46
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/ParameterList.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/ParameterList.java
          kind: Class
          name: ParameterList
          package: javax.mail.internet
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.internet;\n42  \n43  import javax.mail.MessagingException;\n\
          44  \n45  /**\n46   * The exception thrown due to an error in parsing RFC822\
          \ \n47   * or MIME headers\n48   *\n49   * @author John Mani\n50   */\n\
          51  \n52  public class ParseException extends MessagingException {\n53  "
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/ParseException.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/ParseException.java
          kind: Class
          name: ParseException
          package: javax.mail.internet
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ javax.mail.internet;\n42  \n43  import java.io.*;\n44  import java.util.Enumeration;\n\
          45  import javax.mail.*;\n46  \n47  import com.sun.mail.util.LineOutputStream;\n\
          48  \n49  /**\n50   * A MimeBodyPart that handles data that has already\
          \ been encoded.\n51   * This class is useful when constructing a message\
          \ and attaching\n52   * data that has already been encoded (for example,\
          \ using base64\n53   * encoding).  The data may have been encoded by the\
          \ application,\n54   * or may have been stored in a file or database in\
          \ encoded form.\n55   * The encoding is supplied when this object is created.\
          \  The data"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/PreencodedMimeBodyPart.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/PreencodedMimeBodyPart.java
          kind: Class
          name: PreencodedMimeBodyPart
          package: javax.mail.internet
      - codeSnip: "37   * only if the new code is made subject to such option by the\
          \ copyright\n38   * holder.\n39   */\n40  \n41  package javax.mail.internet;\n\
          42  \n43  import java.io.*;\n44  import java.util.Enumeration;\n45  import\
          \ javax.mail.*;\n46  \n47  import com.sun.mail.util.LineOutputStream;\n\
          48  \n49  /**\n50   * A MimeBodyPart that handles data that has already\
          \ been encoded.\n51   * This class is useful when constructing a message\
          \ and attaching\n52   * data that has already been encoded (for example,\
          \ using base64\n53   * encoding).  The data may have been encoded by the\
          \ application,\n54   * or may have been stored in a file or database in\
          \ encoded form.\n55   * The encoding is supplied when this object is created.\
          \  The data\n56   * is attached to this object in the usual fashion, by\
          \ using the\n57   * <code>setText</code>, <code>setContent</code>, or"
        lineNumber: 47
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/PreencodedMimeBodyPart.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/PreencodedMimeBodyPart.java
          kind: Class
          name: PreencodedMimeBodyPart
          package: javax.mail.internet
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.internet;\n42  \n43  import java.net.*;\n44 \
          \ import javax.mail.Session;\n45  \n46  /**\n47   * This is a utility class\
          \ that generates unique values. The generated\n48   * String contains only\
          \ US-ASCII characters and hence is safe for use\n49   * in RFC822 headers.\
          \ <p>\n50   *\n51   * This is a package private class.\n52   *\n53   * @author\
          \ John Mani\n54   * @author Max Spivak"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/UniqueValue.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/internet/UniqueValue.java
          kind: Class
          name: UniqueValue
          package: javax.mail.internet
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  import javax.mail.Address;\n45  import javax.mail.internet.InternetAddress;\n\
          46  \n47  /**\n48   * This abstract class implements string comparisons\
          \ for Message \n49   * addresses. <p>\n50   *\n51   * Note that this class\
          \ differs from the <code>AddressTerm</code> class\n52   * in that this class\
          \ does comparisons on address strings rather than\n53   * Address objects."
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/AddressStringTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/AddressStringTerm.java
          kind: Class
          name: AddressStringTerm
          package: javax.mail.search
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  import javax.mail.Address;\n45  import javax.mail.internet.InternetAddress;\n\
          46  \n47  /**\n48   * This abstract class implements string comparisons\
          \ for Message \n49   * addresses. <p>\n50   *\n51   * Note that this class\
          \ differs from the <code>AddressTerm</code> class\n52   * in that this class\
          \ does comparisons on address strings rather than\n53   * Address objects.\n\
          54   *"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/AddressStringTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/AddressStringTerm.java
          kind: Class
          name: AddressStringTerm
          package: javax.mail.search
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ javax.mail.search;\n42  \n43  import javax.mail.Message;\n44  import javax.mail.Address;\n\
          45  import javax.mail.internet.InternetAddress;\n46  \n47  /**\n48   * This\
          \ abstract class implements string comparisons for Message \n49   * addresses.\
          \ <p>\n50   *\n51   * Note that this class differs from the <code>AddressTerm</code>\
          \ class\n52   * in that this class does comparisons on address strings rather\
          \ than\n53   * Address objects.\n54   *\n55   * @since       JavaMail 1.1"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/AddressStringTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/AddressStringTerm.java
          kind: Class
          name: AddressStringTerm
          package: javax.mail.search
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Address;\n\
          44  \n45  /**\n46   * This class implements Message Address comparisons.\n\
          47   *\n48   * @author Bill Shannon\n49   * @author John Mani\n50   */\n\
          51  \n52  public abstract class AddressTerm extends SearchTerm {\n53   \
          \   /**"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/AddressTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/AddressTerm.java
          kind: Class
          name: AddressTerm
          package: javax.mail.search
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  \n45  /**\n46   * This class implements the logical AND operator on\
          \ individual\n47   * SearchTerms.\n48   *\n49   * @author Bill Shannon\n\
          50   * @author John Mani\n51   */\n52  public final class AndTerm extends\
          \ SearchTerm {\n53  "
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/AndTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/AndTerm.java
          kind: Class
          name: AndTerm
          package: javax.mail.search
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.*;\n44 \
          \ \n45  /**\n46   * This class implements searches on a message body.\n\
          47   * All parts of the message that are of MIME type \"text/*\" are searched.\n\
          48   * The pattern is a simple string that must appear as a substring in\n\
          49   * the message body.\n50   * \n51   * @author Bill Shannon\n52   * @author\
          \ John Mani\n53   */"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/BodyTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/BodyTerm.java
          kind: Class
          name: BodyTerm
          package: javax.mail.search
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.*;\n44 \
          \ \n45  /**\n46   * This class implements comparisons for Message Flags.\n\
          47   *\n48   * @author Bill Shannon\n49   * @author John Mani\n50   */\n\
          51  public final class FlagTerm extends SearchTerm {\n52  \n53      /**"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/FlagTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/FlagTerm.java
          kind: Class
          name: FlagTerm
          package: javax.mail.search
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  import javax.mail.Address;\n45  \n46  /**\n47   * This class implements\
          \ string comparisons for the From Address\n48   * header. <p>\n49   *\n\
          50   * Note that this class differs from the <code>FromTerm</code> class\n\
          51   * in that this class does comparisons on address strings rather than\
          \ Address\n52   * objects. The string comparisons are case-insensitive.\n\
          53   *"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/FromStringTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/FromStringTerm.java
          kind: Class
          name: FromStringTerm
          package: javax.mail.search
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  import javax.mail.Address;\n45  \n46  /**\n47   * This class implements\
          \ string comparisons for the From Address\n48   * header. <p>\n49   *\n\
          50   * Note that this class differs from the <code>FromTerm</code> class\n\
          51   * in that this class does comparisons on address strings rather than\
          \ Address\n52   * objects. The string comparisons are case-insensitive.\n\
          53   *\n54   * @since       JavaMail 1.1"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/FromStringTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/FromStringTerm.java
          kind: Class
          name: FromStringTerm
          package: javax.mail.search
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  import javax.mail.Address;\n45  \n46  /**\n47   * This class implements\
          \ comparisons for the From Address header.\n48   *\n49   * @author Bill\
          \ Shannon\n50   * @author John Mani\n51   */\n52  public final class FromTerm\
          \ extends AddressTerm {\n53  "
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/FromTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/FromTerm.java
          kind: Class
          name: FromTerm
          package: javax.mail.search
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  import javax.mail.Address;\n45  \n46  /**\n47   * This class implements\
          \ comparisons for the From Address header.\n48   *\n49   * @author Bill\
          \ Shannon\n50   * @author John Mani\n51   */\n52  public final class FromTerm\
          \ extends AddressTerm {\n53  \n54      private static final long serialVersionUID\
          \ = 5214730291502658665L;"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/FromTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/FromTerm.java
          kind: Class
          name: FromTerm
          package: javax.mail.search
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import java.util.Locale;\n\
          44  import javax.mail.Message;\n45  \n46  /**\n47   * This class implements\
          \ comparisons for Message headers.\n48   * The comparison is case-insensitive.\n\
          49   *\n50   * @author Bill Shannon\n51   * @author John Mani\n52   */\n\
          53  public final class HeaderTerm extends StringTerm {\n54      /**"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/HeaderTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/HeaderTerm.java
          kind: Class
          name: HeaderTerm
          package: javax.mail.search
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  \n45  /**\n46   * This term models the RFC822 \"MessageId\" - a message-id\
          \ for \n47   * Internet messages that is supposed to be unique per message.\n\
          48   * Clients can use this term to search a folder for a message given\n\
          49   * its MessageId. <p>\n50   *\n51   * The MessageId is represented as\
          \ a String.\n52   *\n53   * @author Bill Shannon"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/MessageIDTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/MessageIDTerm.java
          kind: Class
          name: MessageIDTerm
          package: javax.mail.search
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  \n45  /**\n46   * This class implements comparisons for Message numbers.\n\
          47   *\n48   * @author Bill Shannon\n49   * @author John Mani\n50   */\n\
          51  public final class MessageNumberTerm extends IntegerComparisonTerm {\n\
          52  \n53      private static final long serialVersionUID = -5379625829658623812L;"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/MessageNumberTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/MessageNumberTerm.java
          kind: Class
          name: MessageNumberTerm
          package: javax.mail.search
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  \n45  /**\n46   * This class implements the logical NEGATION operator.\n\
          47   *\n48   * @author Bill Shannon\n49   * @author John Mani\n50   */\n\
          51  public final class NotTerm extends SearchTerm {\n52      /**\n53   \
          \    * The search term to negate."
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/NotTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/NotTerm.java
          kind: Class
          name: NotTerm
          package: javax.mail.search
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  \n45  /**\n46   * This class implements the logical OR operator on individual\
          \ SearchTerms.\n47   *\n48   * @author Bill Shannon\n49   * @author John\
          \ Mani\n50   */\n51  public final class OrTerm extends SearchTerm {\n52\
          \  \n53      /**"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/OrTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/OrTerm.java
          kind: Class
          name: OrTerm
          package: javax.mail.search
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import java.util.Date;\n44\
          \  import javax.mail.Message;\n45  \n46  /**\n47   * This class implements\
          \ comparisons for the Message Received date\n48   *\n49   * @author Bill\
          \ Shannon\n50   * @author John Mani\n51   */\n52  public final class ReceivedDateTerm\
          \ extends DateTerm {\n53  \n54      private static final long serialVersionUID\
          \ = -2756695246195503170L;"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/ReceivedDateTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/ReceivedDateTerm.java
          kind: Class
          name: ReceivedDateTerm
          package: javax.mail.search
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  import javax.mail.Address;\n45  \n46  /**\n47   * This class implements\
          \ string comparisons for the Recipient Address\n48   * headers. <p>\n49\
          \   *\n50   * Note that this class differs from the <code>RecipientTerm</code>\
          \ class\n51   * in that this class does comparisons on address strings rather\
          \ than Address\n52   * objects. The string comparisons are case-insensitive.\n\
          53   *"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/RecipientStringTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/RecipientStringTerm.java
          kind: Class
          name: RecipientStringTerm
          package: javax.mail.search
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  import javax.mail.Address;\n45  \n46  /**\n47   * This class implements\
          \ string comparisons for the Recipient Address\n48   * headers. <p>\n49\
          \   *\n50   * Note that this class differs from the <code>RecipientTerm</code>\
          \ class\n51   * in that this class does comparisons on address strings rather\
          \ than Address\n52   * objects. The string comparisons are case-insensitive.\n\
          53   *\n54   * @since       JavaMail 1.1"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/RecipientStringTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/RecipientStringTerm.java
          kind: Class
          name: RecipientStringTerm
          package: javax.mail.search
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  import javax.mail.Address;\n45  \n46  /**\n47   * This class implements\
          \ comparisons for the Recipient Address headers.\n48   *\n49   * @author\
          \ Bill Shannon\n50   * @author John Mani\n51   */\n52  public final class\
          \ RecipientTerm extends AddressTerm {\n53  "
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/RecipientTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/RecipientTerm.java
          kind: Class
          name: RecipientTerm
          package: javax.mail.search
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  import javax.mail.Address;\n45  \n46  /**\n47   * This class implements\
          \ comparisons for the Recipient Address headers.\n48   *\n49   * @author\
          \ Bill Shannon\n50   * @author John Mani\n51   */\n52  public final class\
          \ RecipientTerm extends AddressTerm {\n53  \n54      /**"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/RecipientTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/RecipientTerm.java
          kind: Class
          name: RecipientTerm
          package: javax.mail.search
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.MessagingException;\n\
          44  \n45  \n46  /**\n47   * The exception thrown when a Search expression\
          \ could not be handled.\n48   *\n49   * @author John Mani\n50   */\n51 \
          \ \n52  public class SearchException extends MessagingException {\n53  "
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/SearchException.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/SearchException.java
          kind: Class
          name: SearchException
          package: javax.mail.search
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ javax.mail.search;\n42  \n43  import java.io.Serializable;\n44  \n45 \
          \ import javax.mail.Message;\n46  \n47  /**\n48   * Search criteria are\
          \ expressed as a tree of search-terms, forming\n49   * a parse-tree for\
          \ the search expression. <p>\n50   *\n51   * Search-terms are represented\
          \ by this class. This is an abstract\n52   * class; subclasses implement\
          \ specific match methods. <p>\n53   *\n54   * Search terms are serializable,\
          \ which allows storing a search term\n55   * between sessions."
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/SearchTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/SearchTerm.java
          kind: Class
          name: SearchTerm
          package: javax.mail.search
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import java.util.Date;\n44\
          \  import javax.mail.Message;\n45  \n46  /**\n47   * This class implements\
          \ comparisons for the Message SentDate.\n48   *\n49   * @author Bill Shannon\n\
          50   * @author John Mani\n51   */\n52  public final class SentDateTerm extends\
          \ DateTerm {\n53  \n54      private static final long serialVersionUID =\
          \ 5647755030530907263L;"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/SentDateTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/SentDateTerm.java
          kind: Class
          name: SentDateTerm
          package: javax.mail.search
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  \n45  /**\n46   * This class implements comparisons for Message sizes.\n\
          47   *\n48   * @author Bill Shannon\n49   * @author John Mani\n50   */\n\
          51  public final class SizeTerm extends IntegerComparisonTerm {\n52  \n\
          53      private static final long serialVersionUID = -2556219451005103709L;"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/SizeTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/SizeTerm.java
          kind: Class
          name: SizeTerm
          package: javax.mail.search
      - codeSnip: "33   * recipient has the option to distribute your version of this\
          \ file under\n34   * either the CDDL, the GPL Version 2 or to extend the\
          \ choice of license to\n35   * its licensees as provided above.  However,\
          \ if you add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.search;\n42  \n43  import javax.mail.Message;\n\
          44  \n45  /**\n46   * This class implements comparisons for the message\
          \ Subject header.\n47   * The comparison is case-insensitive.  The pattern\
          \ is a simple string\n48   * that must appear as a substring in the Subject.\n\
          49   *\n50   * @author Bill Shannon\n51   * @author John Mani\n52   */\n\
          53  public final class SubjectTerm extends StringTerm {"
        lineNumber: 43
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/SubjectTerm.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/search/SubjectTerm.java
          kind: Class
          name: SubjectTerm
          package: javax.mail.search
      - codeSnip: "35   * its licensees as provided above.  However, if you add GPL\
          \ Version 2 code\n36   * and therefore, elected the GPL Version 2 license,\
          \ then the option applies\n37   * only if the new code is made subject to\
          \ such option by the copyright\n38   * holder.\n39   */\n40  \n41  package\
          \ javax.mail.util;\n42  \n43  import java.io.*;\n44  import javax.activation.*;\n\
          45  import javax.mail.internet.*;\n46  \n47  /**\n48   * A DataSource backed\
          \ by a byte array.  The byte array may be\n49   * passed in directly, or\
          \ may be initialized from an InputStream\n50   * or a String.\n51   *\n\
          52   * @since JavaMail 1.4\n53   * @author John Mani\n54   * @author Bill\
          \ Shannon\n55   * @author Max Spivak"
        lineNumber: 45
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/util/ByteArrayDataSource.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/util/ByteArrayDataSource.java
          kind: Class
          name: DSByteArrayOutputStream
          package: javax.mail.util
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.util;\n42  \n43  import java.io.*;\n44  import\
          \ javax.mail.internet.SharedInputStream;\n45  \n46  /**\n47   * A ByteArrayInputStream\
          \ that implements the SharedInputStream interface,\n48   * allowing the\
          \ underlying byte array to be shared between multiple readers.\n49   *\n\
          50   * @author  Bill Shannon\n51   * @since JavaMail 1.4\n52   */\n53  \n\
          54  public class SharedByteArrayInputStream extends ByteArrayInputStream"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/util/SharedByteArrayInputStream.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/util/SharedByteArrayInputStream.java
          kind: Class
          name: SharedByteArrayInputStream
          package: javax.mail.util
      - codeSnip: "34   * either the CDDL, the GPL Version 2 or to extend the choice\
          \ of license to\n35   * its licensees as provided above.  However, if you\
          \ add GPL Version 2 code\n36   * and therefore, elected the GPL Version\
          \ 2 license, then the option applies\n37   * only if the new code is made\
          \ subject to such option by the copyright\n38   * holder.\n39   */\n40 \
          \ \n41  package javax.mail.util;\n42  \n43  import java.io.*;\n44  import\
          \ javax.mail.internet.SharedInputStream;\n45  \n46  /**\n47   * A <code>SharedFileInputStream</code>\
          \ is a\n48   * <code>BufferedInputStream</code> that buffers\n49   * data\
          \ from the file and supports the <code>mark</code>\n50   * and <code>reset</code>\
          \ methods.  It also supports the\n51   * <code>newStream</code> method that\
          \ allows you to create\n52   * other streams that represent subsets of the\
          \ file.\n53   * A <code>RandomAccessFile</code> object is used to\n54  \
          \ * access the file data. <p>"
        lineNumber: 44
        message: "The configuration parameters of SMTP services for outbound mail\
          \ may contain environment-specific values such as static IP addresses, host\
          \ names, properties, credentials, or certificates.\n\n Recommendations\n\
          \n * In a cloud environment, mail systems should be considered backing services\
          \ and treated like attached resources.\n * Ensure that the configuration\
          \ of the underlying outbound mail connection is not environment-specific.\n\
          \ * In OpenShift Container Platform, store configuration parameters as environment\
          \ variables or in a ConfigMap."
        uri: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/util/SharedFileInputStream.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-api/7.0/javax/mail/util/SharedFileInputStream.java
          kind: Class
          name: SharedFile
          package: javax.mail.util
      labels:
      - konveyor.io/source=java
      - konveyor.io/source=java-ee
      - konveyor.io/target=cloud-readiness
      - mail
      links:
      - title: 'OpenShift Container Platform: Input secrets and ConfigMaps'
        url: https://docs.openshift.com/container-platform/4.5/builds/creating-build-inputs.html#builds-input-secrets-configmaps_creating-build-inputs
      - title: Twelve-factor app - Backing services
        url: https://12factor.net/backing-services
      - title: Twelve-factor app - Config
        url: https://12factor.net/config
    session-00000:
      category: mandatory
      description: HTTP session replication (distributable web.xml)
      effort: 3
      incidents:
      - codeSnip: "  1  <!--suppress ServletWithoutMappingInspection -->\n  2  <web-app\
          \ xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n  3           xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\
          \n  4           version=\"3.0\">\n  5      <distributable />\n  6  </web-app>\n"
        lineNumber: 5
        message: "Session replication ensures that client sessions are not disrupted\
          \ by node failure. Each node in the cluster shares information about ongoing\
          \ sessions and can take over sessions if another node disappears. In a cloud\
          \ environment, however, data in the memory of a running container can be\
          \ wiped out by a restart.\n\n Recommendations\n\n * Review the session replication\
          \ usage and ensure that it is configured properly.\n * Disable HTTP session\
          \ clustering and accept its implications.\n * Re-architect the application\
          \ so that sessions are stored in a cache backing service or a remote data\
          \ grid.\n\n A remote data grid has the following benefits:\n\n * The application\
          \ is more scaleable and elastic.\n * The application can survive EAP node\
          \ failures because a JVM failure does not cause session data loss.\n * Session\
          \ data can be shared by multiple applications."
        uri: file:///opt/input/source/src/main/webapp/WEB-INF/web.xml
        variables:
          data: distributable
          innerText: ''
          matchingXML: ''
      labels:
      - clustering
      - konveyor.io/source=java
      - konveyor.io/source=java-ee
      - konveyor.io/target=cloud-readiness
      links:
      - title: 'Getting Started with JBoss EAP for OpenShift Container Platform: Clustering'
        url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/getting_started_with_jboss_eap_for_openshift_container_platform/index#reference_clustering
      - title: 'JBoss EAP:  Externalize HTTP Sessions to Red Hat Data Grid'
        url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/configuration_guide/index#jdg_externalize_http_sessions
      - title: 'JBoss EAP: Clustering in Web Applications'
        url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html/development_guide/clustering_in_web_applications
      - title: Running Data Grid on OpenShift
        url: https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.0/html-single/running_data_grid_on_openshift/index
      - title: 'Twelve-Factor App: Backing services'
        url: https://12factor.net/backing-services
      - title: 'Twelve-Factor App: Processes'
        url: https://12factor.net/processes
- name: discovery-rules
  tags:
  - EJB XML
  - JPA XML
  - Java Source
  - License=Apache License 2.0
  - License=GNU GPL
  - Maven XML
  - Spring XML
  - Web XML
- description: This ruleset provides help for migrating to a unified KIE (Knowledge
    Is Everything) API in the upgrade from version 5 to 6.
  name: droolsjbpm
- description: This ruleset provides generic migration knowledge from the Seam 2 UI
    controls to pure JSF 2 UI Controls
  name: eap6/java-ee/seam
- name: eap7/weblogic/tests/data
  violations:
    maven-javax-to-jakarta-00002:
      category: potential
      description: Move to Jakarta EE Maven Artifacts - replace groupId javax.activation
      effort: 1
      incidents:
      - codeSnip: '16      </properties>

          17      <dependencies>

          18          <dependency>

          19              <groupId>javax</groupId>

          20              <artifactId>javaee-web-api</artifactId>

          21              <version>7.0</version>

          22              <scope>provided</scope>

          23          </dependency>

          24          <dependency>

          25              <groupId>javax</groupId>

          26              <artifactId>javaee-api</artifactId>

          27              <version>7.0</version>

          28              <scope>provided</scope>

          29          </dependency>

          30          <dependency>

          31              <groupId>org.jboss.spec.javax.jms</groupId>

          32              <artifactId>jboss-jms-api_2.0_spec</artifactId>

          33              <version>2.0.0.Final</version>

          34          </dependency>

          35          <dependency>

          36              <groupId>org.flywaydb</groupId>'
        lineNumber: 25
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with groupId `com.sun.activation`
        uri: file:///opt/input/source/pom.xml
        variables:
          name: javax.activation.activation
          version: '1.1'
      labels:
      - JakartaEE
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap7
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee8
      links:
      - title: 'Red Hat JBoss EAP 7.3 Migration Guide: Maven Artifact Changes for
          Jakarta EE'
        url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/migration_guide/index#maven-artifact-changes-for-jakarta-ee_default
- description: This ruleset provides analysis of Java EE applications that need to
    change certain CDI-related method calls.
  name: eap8/eap7
  violations:
    javaee-to-jakarta-namespaces-00001:
      category: mandatory
      description: Replace the Java EE namespace, schemaLocation and version with
        the Jakarta equivalent
      effort: 1
      incidents:
      - codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!--\n  3\
          \      JBoss, Home of Professional Open Source\n  4      Copyright 2015,\
          \ Red Hat, Inc. and/or its affiliates, and individual\n  5      contributors\
          \ by the @authors tag. See the copyright.txt in the\n  6      distribution\
          \ for a full listing of individual contributors.\n  7      Licensed under\
          \ the Apache License, Version 2.0 (the \"License\");\n  8      you may not\
          \ use this file except in compliance with the License.\n  9      You may\
          \ obtain a copy of the License at\n 10      http://www.apache.org/licenses/LICENSE-2.0\n\
          \ 11      Unless required by applicable law or agreed to in writing, software\n\
          \ 12      distributed under the License is distributed on an \"AS IS\" BASIS,\n\
          \ 13      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\
          \ implied.\n 14      See the License for the specific language governing\
          \ permissions and\n 15      limitations under the License.\n 16  -->\n 17\
          \  <!-- Marker file indicating CDI should be enabled -->\n 18  <beans xmlns=\"\
          http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n 19  \t   xsi:schemaLocation=\"\n 20        http://xmlns.jcp.org/xml/ns/javaee\n\
          \ 21        http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\"\n 22  \t\
          \   bean-discovery-mode=\"all\">\n 23  </beans>\n"
        lineNumber: 18
        message: Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number
        uri: file:///opt/input/source/src/main/webapp/WEB-INF/beans.xml
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!--\n  3\
          \      JBoss, Home of Professional Open Source\n  4      Copyright 2015,\
          \ Red Hat, Inc. and/or its affiliates, and individual\n  5      contributors\
          \ by the @authors tag. See the copyright.txt in the\n  6      distribution\
          \ for a full listing of individual contributors.\n  7      Licensed under\
          \ the Apache License, Version 2.0 (the \"License\");\n  8      you may not\
          \ use this file except in compliance with the License.\n  9      You may\
          \ obtain a copy of the License at\n 10      http://www.apache.org/licenses/LICENSE-2.0\n\
          \ 11      Unless required by applicable law or agreed to in writing, software\n\
          \ 12      distributed under the License is distributed on an \"AS IS\" BASIS,\n\
          \ 13      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\
          \ implied.\n 14      See the License for the specific language governing\
          \ permissions and\n 15      limitations under the License.\n 16  -->\n 17\
          \  <!-- Marker file indicating CDI should be enabled -->\n 18  <beans xmlns=\"\
          http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n 19  \t   xsi:schemaLocation=\"\n 20        http://xmlns.jcp.org/xml/ns/javaee\n\
          \ 21        http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\"\n 22  \t\
          \   bean-discovery-mode=\"all\">\n 23  </beans>\n"
        lineNumber: 20
        message: Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number
        uri: file:///opt/input/source/src/main/webapp/WEB-INF/beans.xml
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!--\n  3\
          \      JBoss, Home of Professional Open Source\n  4      Copyright 2015,\
          \ Red Hat, Inc. and/or its affiliates, and individual\n  5      contributors\
          \ by the @authors tag. See the copyright.txt in the\n  6      distribution\
          \ for a full listing of individual contributors.\n  7      Licensed under\
          \ the Apache License, Version 2.0 (the \"License\");\n  8      you may not\
          \ use this file except in compliance with the License.\n  9      You may\
          \ obtain a copy of the License at\n 10      http://www.apache.org/licenses/LICENSE-2.0\n\
          \ 11      Unless required by applicable law or agreed to in writing, software\n\
          \ 12      distributed under the License is distributed on an \"AS IS\" BASIS,\n\
          \ 13      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\
          \ implied.\n 14      See the License for the specific language governing\
          \ permissions and\n 15      limitations under the License.\n 16  -->\n 17\
          \  <!-- Marker file indicating CDI should be enabled -->\n 18  <beans xmlns=\"\
          http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n 19  \t   xsi:schemaLocation=\"\n 20        http://xmlns.jcp.org/xml/ns/javaee\n\
          \ 21        http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\"\n 22  \t\
          \   bean-discovery-mode=\"all\">\n 23  </beans>\n"
        lineNumber: 21
        message: Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number
        uri: file:///opt/input/source/src/main/webapp/WEB-INF/beans.xml
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      labels:
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      links:
      - title: Jakarta EE XML Schemas
        url: https://jakarta.ee/xml/ns/jakartaee/#10
    javaee-to-jakarta-namespaces-00002:
      category: mandatory
      description: Replace the Java EE persistence namespace, schemaLocation and version
        with the Jakarta equivalent
      effort: 1
      incidents:
      - codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <persistence\
          \ version=\"2.1\"\n  3               xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\"\
          \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  4         \
          \      xsi:schemaLocation=\"\n  5          http://xmlns.jcp.org/xml/ns/persistence\n\
          \  6          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n  7      <persistence-unit name=\"primary\">\n  8          <jta-data-source>java:jboss/datasources/CoolstoreDS</jta-data-source>\n\
          \  9          <properties>\n 10              <property name=\"javax.persistence.schema-generation.database.action\"\
          \ value=\"none\"/>\n 11              <property name=\"hibernate.show_sql\"\
          \ value=\"false\" />\n 12              <property name=\"hibernate.format_sql\"\
          \ value=\"true\" />\n 13              <property name=\"hibernate.use_sql_comments\"\
          \ value=\"true\" />\n 14              <property name=\"hibernate.jdbc.use_get_generated_keys\"\
          \ value=\"false\" />\n 15          </properties>\n 16      </persistence-unit>\n\
          \ 17  </persistence>\n"
        lineNumber: 3
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number
        uri: file:///opt/input/source/src/main/resources/META-INF/persistence.xml
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <persistence\
          \ version=\"2.1\"\n  3               xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\"\
          \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  4         \
          \      xsi:schemaLocation=\"\n  5          http://xmlns.jcp.org/xml/ns/persistence\n\
          \  6          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n  7      <persistence-unit name=\"primary\">\n  8          <jta-data-source>java:jboss/datasources/CoolstoreDS</jta-data-source>\n\
          \  9          <properties>\n 10              <property name=\"javax.persistence.schema-generation.database.action\"\
          \ value=\"none\"/>\n 11              <property name=\"hibernate.show_sql\"\
          \ value=\"false\" />\n 12              <property name=\"hibernate.format_sql\"\
          \ value=\"true\" />\n 13              <property name=\"hibernate.use_sql_comments\"\
          \ value=\"true\" />\n 14              <property name=\"hibernate.jdbc.use_get_generated_keys\"\
          \ value=\"false\" />\n 15          </properties>\n 16      </persistence-unit>\n\
          \ 17  </persistence>\n"
        lineNumber: 5
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number
        uri: file:///opt/input/source/src/main/resources/META-INF/persistence.xml
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <persistence\
          \ version=\"2.1\"\n  3               xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\"\
          \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  4         \
          \      xsi:schemaLocation=\"\n  5          http://xmlns.jcp.org/xml/ns/persistence\n\
          \  6          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n  7      <persistence-unit name=\"primary\">\n  8          <jta-data-source>java:jboss/datasources/CoolstoreDS</jta-data-source>\n\
          \  9          <properties>\n 10              <property name=\"javax.persistence.schema-generation.database.action\"\
          \ value=\"none\"/>\n 11              <property name=\"hibernate.show_sql\"\
          \ value=\"false\" />\n 12              <property name=\"hibernate.format_sql\"\
          \ value=\"true\" />\n 13              <property name=\"hibernate.use_sql_comments\"\
          \ value=\"true\" />\n 14              <property name=\"hibernate.jdbc.use_get_generated_keys\"\
          \ value=\"false\" />\n 15          </properties>\n 16      </persistence-unit>\n\
          \ 17  </persistence>\n"
        lineNumber: 6
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number
        uri: file:///opt/input/source/src/main/resources/META-INF/persistence.xml
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      labels:
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      links:
      - title: Jakarta Persistence XML Schemas
        url: https://jakarta.ee/xml/ns/persistence/#3
    javaee-to-jakarta-namespaces-00006:
      category: mandatory
      description: Replace the Java EE XSD with the Jakarta equivalent
      effort: 1
      incidents:
      - codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!--\n  3\
          \      JBoss, Home of Professional Open Source\n  4      Copyright 2015,\
          \ Red Hat, Inc. and/or its affiliates, and individual\n  5      contributors\
          \ by the @authors tag. See the copyright.txt in the\n  6      distribution\
          \ for a full listing of individual contributors.\n  7      Licensed under\
          \ the Apache License, Version 2.0 (the \"License\");\n  8      you may not\
          \ use this file except in compliance with the License.\n  9      You may\
          \ obtain a copy of the License at\n 10      http://www.apache.org/licenses/LICENSE-2.0\n\
          \ 11      Unless required by applicable law or agreed to in writing, software\n\
          \ 12      distributed under the License is distributed on an \"AS IS\" BASIS,\n\
          \ 13      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\
          \ implied.\n 14      See the License for the specific language governing\
          \ permissions and\n 15      limitations under the License.\n 16  -->\n 17\
          \  <!-- Marker file indicating CDI should be enabled -->\n 18  <beans xmlns=\"\
          http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n 19  \t   xsi:schemaLocation=\"\n 20        http://xmlns.jcp.org/xml/ns/javaee\n\
          \ 21        http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\"\n 22  \t\
          \   bean-discovery-mode=\"all\">\n 23  </beans>\n"
        lineNumber: 21
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        uri: file:///opt/input/source/src/main/webapp/WEB-INF/beans.xml
        variables:
          matchingText: beans_1_1.xsd
      labels:
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      links:
      - title: Jakarta XML Schemas
        url: https://jakarta.ee/xml/ns/jakartaee/#9
    javaee-to-jakarta-namespaces-00030:
      category: mandatory
      description: Replace the Java EE XSD with the Jakarta equivalent
      effort: 1
      incidents:
      - codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <persistence\
          \ version=\"2.1\"\n  3               xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\"\
          \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  4         \
          \      xsi:schemaLocation=\"\n  5          http://xmlns.jcp.org/xml/ns/persistence\n\
          \  6          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n  7      <persistence-unit name=\"primary\">\n  8          <jta-data-source>java:jboss/datasources/CoolstoreDS</jta-data-source>\n\
          \  9          <properties>\n 10              <property name=\"javax.persistence.schema-generation.database.action\"\
          \ value=\"none\"/>\n 11              <property name=\"hibernate.show_sql\"\
          \ value=\"false\" />\n 12              <property name=\"hibernate.format_sql\"\
          \ value=\"true\" />\n 13              <property name=\"hibernate.use_sql_comments\"\
          \ value=\"true\" />\n 14              <property name=\"hibernate.jdbc.use_get_generated_keys\"\
          \ value=\"false\" />\n 15          </properties>\n 16      </persistence-unit>\n\
          \ 17  </persistence>\n"
        lineNumber: 6
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        uri: file:///opt/input/source/src/main/resources/META-INF/persistence.xml
        variables:
          matchingText: persistence_2_1.xsd
      labels:
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      links:
      - title: Jakarta XML Schemas
        url: https://jakarta.ee/xml/ns/jakartaee/#9
    javaee-to-jakarta-namespaces-00033:
      category: mandatory
      description: Replace the Java EE version with the Jakarta equivalent
      effort: 1
      incidents:
      - codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <persistence\
          \ version=\"2.1\"\n  3               xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\"\
          \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  4         \
          \      xsi:schemaLocation=\"\n  5          http://xmlns.jcp.org/xml/ns/persistence\n\
          \  6          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n  7      <persistence-unit name=\"primary\">\n  8          <jta-data-source>java:jboss/datasources/CoolstoreDS</jta-data-source>\n\
          \  9          <properties>\n 10              <property name=\"javax.persistence.schema-generation.database.action\"\
          \ value=\"none\"/>\n 11              <property name=\"hibernate.show_sql\"\
          \ value=\"false\" />\n 12              <property name=\"hibernate.format_sql\"\
          \ value=\"true\" />\n 13              <property name=\"hibernate.use_sql_comments\"\
          \ value=\"true\" />\n 14              <property name=\"hibernate.jdbc.use_get_generated_keys\"\
          \ value=\"false\" />\n 15          </properties>\n 16      </persistence-unit>\n\
          \ 17  </persistence>\n"
        lineNumber: 2
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        uri: file:///opt/input/source/src/main/resources/META-INF/persistence.xml
        variables:
          matchingText: version="2.1"
      - codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <persistence\
          \ version=\"2.1\"\n  3               xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\"\
          \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  4         \
          \      xsi:schemaLocation=\"\n  5          http://xmlns.jcp.org/xml/ns/persistence\n\
          \  6          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n  7      <persistence-unit name=\"primary\">\n  8          <jta-data-source>java:jboss/datasources/CoolstoreDS</jta-data-source>\n\
          \  9          <properties>\n 10              <property name=\"javax.persistence.schema-generation.database.action\"\
          \ value=\"none\"/>\n 11              <property name=\"hibernate.show_sql\"\
          \ value=\"false\" />\n 12              <property name=\"hibernate.format_sql\"\
          \ value=\"true\" />\n 13              <property name=\"hibernate.use_sql_comments\"\
          \ value=\"true\" />\n 14              <property name=\"hibernate.jdbc.use_get_generated_keys\"\
          \ value=\"false\" />\n 15          </properties>\n 16      </persistence-unit>\n\
          \ 17  </persistence>\n"
        lineNumber: 8
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        uri: file:///opt/input/source/src/main/resources/META-INF/persistence.xml
        variables:
          data: persistence
          innerText: "\n    \n        java:jboss/datasources/CoolstoreDS\n       \
            \ \n            \n            \n            \n            \n         \
            \   \n        \n    \n"
          matchingXML: <persistence-unit name="primary"><jta-data-source>java:jboss/datasources/CoolstoreDS</jta-data-source><properties><property
            name="javax.persistence.schema-generation.database.action" value="none"></property><property
            name="hibernate.show_sql" value="false"></property><property name="hibernate.format_sql"
            value="true"></property><property name="hibernate.use_sql_comments" value="true"></property><property
            name="hibernate.jdbc.use_get_generated_keys" value="false"></property></properties></persistence-unit>
      labels:
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
    javax-to-jakarta-dependencies-00006:
      category: mandatory
      description: javax groupId has been replaced by jakarta.platform
      effort: 1
      incidents:
      - codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project\
          \ \n  3      xmlns=\"http://maven.apache.org/POM/4.0.0\" \n  4      xmlns:xsi=\"\
          http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\
          \ http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  5      <modelVersion>4.0.0</modelVersion>\n\
          \  6      <groupId>com.redhat.coolstore</groupId>\n  7      <artifactId>monolith</artifactId>\n\
          \  8      <version>1.0.0-SNAPSHOT</version>\n  9      <packaging>war</packaging>\n\
          \ 10      <name>coolstore-monolith</name>\n 11      <properties>\n 12  \
          \        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\
          \ 13          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n\
          \ 14          <project.encoding>UTF-8</project.encoding>\n 15          <maven.test.skip>true</maven.test.skip>\n\
          \ 16      </properties>\n 17      <dependencies>\n 18          <dependency>\n\
          \ 19              <groupId>javax</groupId>\n 20              <artifactId>javaee-web-api</artifactId>\n\
          \ 21              <version>7.0</version>\n 22              <scope>provided</scope>\n\
          \ 23          </dependency>\n 24          <dependency>\n 25            \
          \  <groupId>javax</groupId>\n 26              <artifactId>javaee-api</artifactId>\n\
          \ 27              <version>7.0</version>\n 28              <scope>provided</scope>\n\
          \ 29          </dependency>\n 30          <dependency>\n 31            \
          \  <groupId>org.jboss.spec.javax.jms</groupId>\n 32              <artifactId>jboss-jms-api_2.0_spec</artifactId>\n\
          \ 33              <version>2.0.0.Final</version>\n 34          </dependency>\n\
          \ 35          <dependency>\n 36              <groupId>org.flywaydb</groupId>\n\
          \ 37              <artifactId>flyway-core</artifactId>\n 38            \
          \  <version>4.1.2</version>\n 39          </dependency>\n 40          <dependency>\n\
          \ 41              <groupId>org.jboss.spec.javax.rmi</groupId>\n 42     \
          \         <artifactId>jboss-rmi-api_1.0_spec</artifactId>\n 43         \
          \     <version>1.0.2.Final</version>\n 44          </dependency>\n 45  \
          \    </dependencies>\n 46      <build>\n 47          <finalName>ROOT</finalName>\n\
          \ 48          <plugins>\n 49              <plugin>\n 50                \
          \  <artifactId>maven-compiler-plugin</artifactId>\n 51                 \
          \ <version>3.0</version>\n 52                  <configuration>\n 53    \
          \                  <encoding>${project.encoding}</encoding>\n 54       \
          \               <source>1.8</source>\n 55                      <target>1.8</target>\n\
          \ 56                  </configuration>\n 57              </plugin>\n 58\
          \              <plugin>\n 59                  <groupId>org.apache.maven.plugins</groupId>\n\
          \ 60                  <artifactId>maven-war-plugin</artifactId>\n 61   \
          \               <version>3.2.0</version>\n 62              </plugin>\n 63\
          \          </plugins>\n 64      </build>\n 65      <profiles>\n 66  <!--\
          \ TODO: Add OpenShift profile here -->\n 67      </profiles>\n 68  </project>\n"
        lineNumber: 19
        message: Update group dependency by replacing the `javax` groupId with `jakarta.platform`
        uri: file:///opt/input/source/pom.xml
        variables:
          matchingText: groupId>javax<
      - codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project\
          \ \n  3      xmlns=\"http://maven.apache.org/POM/4.0.0\" \n  4      xmlns:xsi=\"\
          http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\
          \ http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  5      <modelVersion>4.0.0</modelVersion>\n\
          \  6      <groupId>com.redhat.coolstore</groupId>\n  7      <artifactId>monolith</artifactId>\n\
          \  8      <version>1.0.0-SNAPSHOT</version>\n  9      <packaging>war</packaging>\n\
          \ 10      <name>coolstore-monolith</name>\n 11      <properties>\n 12  \
          \        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\
          \ 13          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n\
          \ 14          <project.encoding>UTF-8</project.encoding>\n 15          <maven.test.skip>true</maven.test.skip>\n\
          \ 16      </properties>\n 17      <dependencies>\n 18          <dependency>\n\
          \ 19              <groupId>javax</groupId>\n 20              <artifactId>javaee-web-api</artifactId>\n\
          \ 21              <version>7.0</version>\n 22              <scope>provided</scope>\n\
          \ 23          </dependency>\n 24          <dependency>\n 25            \
          \  <groupId>javax</groupId>\n 26              <artifactId>javaee-api</artifactId>\n\
          \ 27              <version>7.0</version>\n 28              <scope>provided</scope>\n\
          \ 29          </dependency>\n 30          <dependency>\n 31            \
          \  <groupId>org.jboss.spec.javax.jms</groupId>\n 32              <artifactId>jboss-jms-api_2.0_spec</artifactId>\n\
          \ 33              <version>2.0.0.Final</version>\n 34          </dependency>\n\
          \ 35          <dependency>\n 36              <groupId>org.flywaydb</groupId>\n\
          \ 37              <artifactId>flyway-core</artifactId>\n 38            \
          \  <version>4.1.2</version>\n 39          </dependency>\n 40          <dependency>\n\
          \ 41              <groupId>org.jboss.spec.javax.rmi</groupId>\n 42     \
          \         <artifactId>jboss-rmi-api_1.0_spec</artifactId>\n 43         \
          \     <version>1.0.2.Final</version>\n 44          </dependency>\n 45  \
          \    </dependencies>\n 46      <build>\n 47          <finalName>ROOT</finalName>\n\
          \ 48          <plugins>\n 49              <plugin>\n 50                \
          \  <artifactId>maven-compiler-plugin</artifactId>\n 51                 \
          \ <version>3.0</version>\n 52                  <configuration>\n 53    \
          \                  <encoding>${project.encoding}</encoding>\n 54       \
          \               <source>1.8</source>\n 55                      <target>1.8</target>\n\
          \ 56                  </configuration>\n 57              </plugin>\n 58\
          \              <plugin>\n 59                  <groupId>org.apache.maven.plugins</groupId>\n\
          \ 60                  <artifactId>maven-war-plugin</artifactId>\n 61   \
          \               <version>3.2.0</version>\n 62              </plugin>\n 63\
          \          </plugins>\n 64      </build>\n 65      <profiles>\n 66  <!--\
          \ TODO: Add OpenShift profile here -->\n 67      </profiles>\n 68  </project>\n"
        lineNumber: 25
        message: Update group dependency by replacing the `javax` groupId with `jakarta.platform`
        uri: file:///opt/input/source/pom.xml
        variables:
          matchingText: groupId>javax<
      labels:
      - konveyor.io/source
      - konveyor.io/source=spring5
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      - konveyor.io/target=spring6+
      links:
      - title: Jakarta EE
        url: https://jakarta.ee/
    javax-to-jakarta-dependencies-00007:
      category: mandatory
      description: javax javaee-api artifactId has been replaced by jakarta.platform
        jakarta.jakartaee-api
      effort: 1
      incidents:
      - codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project\
          \ \n  3      xmlns=\"http://maven.apache.org/POM/4.0.0\" \n  4      xmlns:xsi=\"\
          http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\
          \ http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  5      <modelVersion>4.0.0</modelVersion>\n\
          \  6      <groupId>com.redhat.coolstore</groupId>\n  7      <artifactId>monolith</artifactId>\n\
          \  8      <version>1.0.0-SNAPSHOT</version>\n  9      <packaging>war</packaging>\n\
          \ 10      <name>coolstore-monolith</name>\n 11      <properties>\n 12  \
          \        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\
          \ 13          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n\
          \ 14          <project.encoding>UTF-8</project.encoding>\n 15          <maven.test.skip>true</maven.test.skip>\n\
          \ 16      </properties>\n 17      <dependencies>\n 18          <dependency>\n\
          \ 19              <groupId>javax</groupId>\n 20              <artifactId>javaee-web-api</artifactId>\n\
          \ 21              <version>7.0</version>\n 22              <scope>provided</scope>\n\
          \ 23          </dependency>\n 24          <dependency>\n 25            \
          \  <groupId>javax</groupId>\n 26              <artifactId>javaee-api</artifactId>\n\
          \ 27              <version>7.0</version>\n 28              <scope>provided</scope>\n\
          \ 29          </dependency>\n 30          <dependency>\n 31            \
          \  <groupId>org.jboss.spec.javax.jms</groupId>\n 32              <artifactId>jboss-jms-api_2.0_spec</artifactId>\n\
          \ 33              <version>2.0.0.Final</version>\n 34          </dependency>\n\
          \ 35          <dependency>\n 36              <groupId>org.flywaydb</groupId>\n\
          \ 37              <artifactId>flyway-core</artifactId>\n 38            \
          \  <version>4.1.2</version>\n 39          </dependency>\n 40          <dependency>\n\
          \ 41              <groupId>org.jboss.spec.javax.rmi</groupId>\n 42     \
          \         <artifactId>jboss-rmi-api_1.0_spec</artifactId>\n 43         \
          \     <version>1.0.2.Final</version>\n 44          </dependency>\n 45  \
          \    </dependencies>\n 46      <build>\n 47          <finalName>ROOT</finalName>\n\
          \ 48          <plugins>\n 49              <plugin>\n 50                \
          \  <artifactId>maven-compiler-plugin</artifactId>\n 51                 \
          \ <version>3.0</version>\n 52                  <configuration>\n 53    \
          \                  <encoding>${project.encoding}</encoding>\n 54       \
          \               <source>1.8</source>\n 55                      <target>1.8</target>\n\
          \ 56                  </configuration>\n 57              </plugin>\n 58\
          \              <plugin>\n 59                  <groupId>org.apache.maven.plugins</groupId>\n\
          \ 60                  <artifactId>maven-war-plugin</artifactId>\n 61   \
          \               <version>3.2.0</version>\n 62              </plugin>\n 63\
          \          </plugins>\n 64      </build>\n 65      <profiles>\n 66  <!--\
          \ TODO: Add OpenShift profile here -->\n 67      </profiles>\n 68  </project>\n"
        lineNumber: 26
        message: Update artifact dependency by replacing the `javaee-api` artifactId
          with `jakarta.jakartaee-api`
        uri: file:///opt/input/source/pom.xml
        variables:
          matchingText: artifactId>javaee-api<
      labels:
      - konveyor.io/source
      - konveyor.io/source=spring5
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      - konveyor.io/target=spring6+
      links:
      - title: Jakarta EE
        url: https://jakarta.ee/
    javax-to-jakarta-dependencies-00008:
      category: mandatory
      description: javax javaee-web-api artifactId has been replaced by jakarta.platform
        jakarta.jakartaee-web-api
      effort: 1
      incidents:
      - codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project\
          \ \n  3      xmlns=\"http://maven.apache.org/POM/4.0.0\" \n  4      xmlns:xsi=\"\
          http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\
          \ http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  5      <modelVersion>4.0.0</modelVersion>\n\
          \  6      <groupId>com.redhat.coolstore</groupId>\n  7      <artifactId>monolith</artifactId>\n\
          \  8      <version>1.0.0-SNAPSHOT</version>\n  9      <packaging>war</packaging>\n\
          \ 10      <name>coolstore-monolith</name>\n 11      <properties>\n 12  \
          \        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\
          \ 13          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n\
          \ 14          <project.encoding>UTF-8</project.encoding>\n 15          <maven.test.skip>true</maven.test.skip>\n\
          \ 16      </properties>\n 17      <dependencies>\n 18          <dependency>\n\
          \ 19              <groupId>javax</groupId>\n 20              <artifactId>javaee-web-api</artifactId>\n\
          \ 21              <version>7.0</version>\n 22              <scope>provided</scope>\n\
          \ 23          </dependency>\n 24          <dependency>\n 25            \
          \  <groupId>javax</groupId>\n 26              <artifactId>javaee-api</artifactId>\n\
          \ 27              <version>7.0</version>\n 28              <scope>provided</scope>\n\
          \ 29          </dependency>\n 30          <dependency>\n 31            \
          \  <groupId>org.jboss.spec.javax.jms</groupId>\n 32              <artifactId>jboss-jms-api_2.0_spec</artifactId>\n\
          \ 33              <version>2.0.0.Final</version>\n 34          </dependency>\n\
          \ 35          <dependency>\n 36              <groupId>org.flywaydb</groupId>\n\
          \ 37              <artifactId>flyway-core</artifactId>\n 38            \
          \  <version>4.1.2</version>\n 39          </dependency>\n 40          <dependency>\n\
          \ 41              <groupId>org.jboss.spec.javax.rmi</groupId>\n 42     \
          \         <artifactId>jboss-rmi-api_1.0_spec</artifactId>\n 43         \
          \     <version>1.0.2.Final</version>\n 44          </dependency>\n 45  \
          \    </dependencies>\n 46      <build>\n 47          <finalName>ROOT</finalName>\n\
          \ 48          <plugins>\n 49              <plugin>\n 50                \
          \  <artifactId>maven-compiler-plugin</artifactId>\n 51                 \
          \ <version>3.0</version>\n 52                  <configuration>\n 53    \
          \                  <encoding>${project.encoding}</encoding>\n 54       \
          \               <source>1.8</source>\n 55                      <target>1.8</target>\n\
          \ 56                  </configuration>\n 57              </plugin>\n 58\
          \              <plugin>\n 59                  <groupId>org.apache.maven.plugins</groupId>\n\
          \ 60                  <artifactId>maven-war-plugin</artifactId>\n 61   \
          \               <version>3.2.0</version>\n 62              </plugin>\n 63\
          \          </plugins>\n 64      </build>\n 65      <profiles>\n 66  <!--\
          \ TODO: Add OpenShift profile here -->\n 67      </profiles>\n 68  </project>\n"
        lineNumber: 20
        message: Update artifact dependency by replacing the `javaee-web-api` artifactId
          with `jakarta.jakartaee-web-api`
        uri: file:///opt/input/source/pom.xml
        variables:
          matchingText: artifactId>javaee-web-api<
      labels:
      - konveyor.io/source
      - konveyor.io/source=spring5
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      - konveyor.io/target=spring6+
      links:
      - title: Jakarta EE
        url: https://jakarta.ee/
    javax-to-jakarta-import-00001:
      category: mandatory
      description: The package 'javax' has been replaced by 'jakarta'.
      effort: 1
      incidents:
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  \n 5  import javax.persistence.Column;\n 6  import javax.persistence.Entity;\n\
          \ 7  import javax.persistence.Id;\n 8  import javax.persistence.Table;\n\
          \ 9  import javax.persistence.UniqueConstraint;\n10  import javax.xml.bind.annotation.XmlRootElement;\n\
          11  \n12  @Entity\n13  @XmlRootElement\n14  @Table(name = \"INVENTORY\"\
          , uniqueConstraints = @UniqueConstraint(columnNames = \"itemId\"))\n15 \
          \ public class InventoryEntity implements Serializable {"
        lineNumber: 5
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.persistence.Column
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  \n 5  import javax.persistence.Column;\n 6  import javax.persistence.Entity;\n\
          \ 7  import javax.persistence.Id;\n 8  import javax.persistence.Table;\n\
          \ 9  import javax.persistence.UniqueConstraint;\n10  import javax.xml.bind.annotation.XmlRootElement;\n\
          11  \n12  @Entity\n13  @XmlRootElement\n14  @Table(name = \"INVENTORY\"\
          , uniqueConstraints = @UniqueConstraint(columnNames = \"itemId\"))\n15 \
          \ public class InventoryEntity implements Serializable {\n16  "
        lineNumber: 6
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.persistence.Entity
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  \n 5  import javax.persistence.Column;\n 6  import javax.persistence.Entity;\n\
          \ 7  import javax.persistence.Id;\n 8  import javax.persistence.Table;\n\
          \ 9  import javax.persistence.UniqueConstraint;\n10  import javax.xml.bind.annotation.XmlRootElement;\n\
          11  \n12  @Entity\n13  @XmlRootElement\n14  @Table(name = \"INVENTORY\"\
          , uniqueConstraints = @UniqueConstraint(columnNames = \"itemId\"))\n15 \
          \ public class InventoryEntity implements Serializable {\n16  \n17  \tprivate\
          \ static final long serialVersionUID = 7526472295622776147L; "
        lineNumber: 7
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.persistence.Id
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  \n 5  import javax.persistence.Column;\n 6  import javax.persistence.Entity;\n\
          \ 7  import javax.persistence.Id;\n 8  import javax.persistence.Table;\n\
          \ 9  import javax.persistence.UniqueConstraint;\n10  import javax.xml.bind.annotation.XmlRootElement;\n\
          11  \n12  @Entity\n13  @XmlRootElement\n14  @Table(name = \"INVENTORY\"\
          , uniqueConstraints = @UniqueConstraint(columnNames = \"itemId\"))\n15 \
          \ public class InventoryEntity implements Serializable {\n16  \n17  \tprivate\
          \ static final long serialVersionUID = 7526472295622776147L; \n18  "
        lineNumber: 8
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.persistence.Table
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  \n 5  import javax.persistence.Column;\n 6  import javax.persistence.Entity;\n\
          \ 7  import javax.persistence.Id;\n 8  import javax.persistence.Table;\n\
          \ 9  import javax.persistence.UniqueConstraint;\n10  import javax.xml.bind.annotation.XmlRootElement;\n\
          11  \n12  @Entity\n13  @XmlRootElement\n14  @Table(name = \"INVENTORY\"\
          , uniqueConstraints = @UniqueConstraint(columnNames = \"itemId\"))\n15 \
          \ public class InventoryEntity implements Serializable {\n16  \n17  \tprivate\
          \ static final long serialVersionUID = 7526472295622776147L; \n18  \n19\
          \      @Id"
        lineNumber: 9
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  \n 5  import javax.persistence.Column;\n 6  import javax.persistence.Entity;\n\
          \ 7  import javax.persistence.Id;\n 8  import javax.persistence.Table;\n\
          \ 9  import javax.persistence.UniqueConstraint;\n10  import javax.xml.bind.annotation.XmlRootElement;\n\
          11  \n12  @Entity\n13  @XmlRootElement\n14  @Table(name = \"INVENTORY\"\
          , uniqueConstraints = @UniqueConstraint(columnNames = \"itemId\"))\n15 \
          \ public class InventoryEntity implements Serializable {\n16  \n17  \tprivate\
          \ static final long serialVersionUID = 7526472295622776147L; \n18  \n19\
          \      @Id\n20      private String itemId;"
        lineNumber: 10
        message: Replace the `javax.xml` import statement with `jakarta.xml`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: com.redhat.coolstore.model
          renamed: xml
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.ArrayList;\n 5  import java.util.List;\n 6  \n 7 \
          \ import javax.persistence.CascadeType;\n 8  import javax.persistence.Column;\n\
          \ 9  import javax.persistence.Entity;\n10  import javax.persistence.FetchType;\n\
          11  import javax.persistence.GeneratedValue;\n12  import javax.persistence.Id;\n\
          13  import javax.persistence.JoinColumn;\n14  import javax.persistence.OneToMany;\n\
          15  import javax.persistence.Table;\n16  \n17  @Entity"
        lineNumber: 7
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.CascadeType
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.ArrayList;\n 5  import java.util.List;\n 6  \n 7 \
          \ import javax.persistence.CascadeType;\n 8  import javax.persistence.Column;\n\
          \ 9  import javax.persistence.Entity;\n10  import javax.persistence.FetchType;\n\
          11  import javax.persistence.GeneratedValue;\n12  import javax.persistence.Id;\n\
          13  import javax.persistence.JoinColumn;\n14  import javax.persistence.OneToMany;\n\
          15  import javax.persistence.Table;\n16  \n17  @Entity\n18  @Table(name\
          \ = \"ORDERS\")"
        lineNumber: 8
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.Column
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.ArrayList;\n 5  import java.util.List;\n 6  \n 7 \
          \ import javax.persistence.CascadeType;\n 8  import javax.persistence.Column;\n\
          \ 9  import javax.persistence.Entity;\n10  import javax.persistence.FetchType;\n\
          11  import javax.persistence.GeneratedValue;\n12  import javax.persistence.Id;\n\
          13  import javax.persistence.JoinColumn;\n14  import javax.persistence.OneToMany;\n\
          15  import javax.persistence.Table;\n16  \n17  @Entity\n18  @Table(name\
          \ = \"ORDERS\")\n19  public class Order implements Serializable {"
        lineNumber: 9
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.Entity
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.ArrayList;\n 5  import java.util.List;\n 6  \n 7 \
          \ import javax.persistence.CascadeType;\n 8  import javax.persistence.Column;\n\
          \ 9  import javax.persistence.Entity;\n10  import javax.persistence.FetchType;\n\
          11  import javax.persistence.GeneratedValue;\n12  import javax.persistence.Id;\n\
          13  import javax.persistence.JoinColumn;\n14  import javax.persistence.OneToMany;\n\
          15  import javax.persistence.Table;\n16  \n17  @Entity\n18  @Table(name\
          \ = \"ORDERS\")\n19  public class Order implements Serializable {\n20  "
        lineNumber: 10
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.FetchType
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.ArrayList;\n 5  import java.util.List;\n 6  \n 7 \
          \ import javax.persistence.CascadeType;\n 8  import javax.persistence.Column;\n\
          \ 9  import javax.persistence.Entity;\n10  import javax.persistence.FetchType;\n\
          11  import javax.persistence.GeneratedValue;\n12  import javax.persistence.Id;\n\
          13  import javax.persistence.JoinColumn;\n14  import javax.persistence.OneToMany;\n\
          15  import javax.persistence.Table;\n16  \n17  @Entity\n18  @Table(name\
          \ = \"ORDERS\")\n19  public class Order implements Serializable {\n20  \n\
          21  \tprivate static final long serialVersionUID = -1L;"
        lineNumber: 11
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 2  \n 3  import java.io.Serializable;\n 4  import java.util.ArrayList;\n\
          \ 5  import java.util.List;\n 6  \n 7  import javax.persistence.CascadeType;\n\
          \ 8  import javax.persistence.Column;\n 9  import javax.persistence.Entity;\n\
          10  import javax.persistence.FetchType;\n11  import javax.persistence.GeneratedValue;\n\
          12  import javax.persistence.Id;\n13  import javax.persistence.JoinColumn;\n\
          14  import javax.persistence.OneToMany;\n15  import javax.persistence.Table;\n\
          16  \n17  @Entity\n18  @Table(name = \"ORDERS\")\n19  public class Order\
          \ implements Serializable {\n20  \n21  \tprivate static final long serialVersionUID\
          \ = -1L;\n22  "
        lineNumber: 12
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.Id
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 3  import java.io.Serializable;\n 4  import java.util.ArrayList;\n\
          \ 5  import java.util.List;\n 6  \n 7  import javax.persistence.CascadeType;\n\
          \ 8  import javax.persistence.Column;\n 9  import javax.persistence.Entity;\n\
          10  import javax.persistence.FetchType;\n11  import javax.persistence.GeneratedValue;\n\
          12  import javax.persistence.Id;\n13  import javax.persistence.JoinColumn;\n\
          14  import javax.persistence.OneToMany;\n15  import javax.persistence.Table;\n\
          16  \n17  @Entity\n18  @Table(name = \"ORDERS\")\n19  public class Order\
          \ implements Serializable {\n20  \n21  \tprivate static final long serialVersionUID\
          \ = -1L;\n22  \n23  \t@Id"
        lineNumber: 13
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.JoinColumn
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 4  import java.util.ArrayList;\n 5  import java.util.List;\n 6\
          \  \n 7  import javax.persistence.CascadeType;\n 8  import javax.persistence.Column;\n\
          \ 9  import javax.persistence.Entity;\n10  import javax.persistence.FetchType;\n\
          11  import javax.persistence.GeneratedValue;\n12  import javax.persistence.Id;\n\
          13  import javax.persistence.JoinColumn;\n14  import javax.persistence.OneToMany;\n\
          15  import javax.persistence.Table;\n16  \n17  @Entity\n18  @Table(name\
          \ = \"ORDERS\")\n19  public class Order implements Serializable {\n20  \n\
          21  \tprivate static final long serialVersionUID = -1L;\n22  \n23  \t@Id\n\
          24  \t@GeneratedValue"
        lineNumber: 14
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.OneToMany
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 5  import java.util.List;\n 6  \n 7  import javax.persistence.CascadeType;\n\
          \ 8  import javax.persistence.Column;\n 9  import javax.persistence.Entity;\n\
          10  import javax.persistence.FetchType;\n11  import javax.persistence.GeneratedValue;\n\
          12  import javax.persistence.Id;\n13  import javax.persistence.JoinColumn;\n\
          14  import javax.persistence.OneToMany;\n15  import javax.persistence.Table;\n\
          16  \n17  @Entity\n18  @Table(name = \"ORDERS\")\n19  public class Order\
          \ implements Serializable {\n20  \n21  \tprivate static final long serialVersionUID\
          \ = -1L;\n22  \n23  \t@Id\n24  \t@GeneratedValue\n25  \tprivate long orderId;"
        lineNumber: 15
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.Table
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  \n 5  import javax.persistence.Column;\n 6  import javax.persistence.Entity;\n\
          \ 7  import javax.persistence.GeneratedValue;\n 8  import javax.persistence.Id;\n\
          \ 9  import javax.persistence.Table;\n10  \n11  @Entity\n12  @Table(name\
          \ = \"ORDER_ITEMS\")\n13  public class OrderItem implements Serializable\
          \ {\n14  \tprivate static final long serialVersionUID = 64565445665456666L;\n\
          15  "
        lineNumber: 5
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/OrderItem.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/OrderItem.java
          kind: Module
          name: javax.persistence.Column
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  \n 5  import javax.persistence.Column;\n 6  import javax.persistence.Entity;\n\
          \ 7  import javax.persistence.GeneratedValue;\n 8  import javax.persistence.Id;\n\
          \ 9  import javax.persistence.Table;\n10  \n11  @Entity\n12  @Table(name\
          \ = \"ORDER_ITEMS\")\n13  public class OrderItem implements Serializable\
          \ {\n14  \tprivate static final long serialVersionUID = 64565445665456666L;\n\
          15  \n16  \t@Id"
        lineNumber: 6
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/OrderItem.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/OrderItem.java
          kind: Module
          name: javax.persistence.Entity
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  \n 5  import javax.persistence.Column;\n 6  import javax.persistence.Entity;\n\
          \ 7  import javax.persistence.GeneratedValue;\n 8  import javax.persistence.Id;\n\
          \ 9  import javax.persistence.Table;\n10  \n11  @Entity\n12  @Table(name\
          \ = \"ORDER_ITEMS\")\n13  public class OrderItem implements Serializable\
          \ {\n14  \tprivate static final long serialVersionUID = 64565445665456666L;\n\
          15  \n16  \t@Id\n17  \t@Column(name=\"ID\")"
        lineNumber: 7
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/OrderItem.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/OrderItem.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  \n 5  import javax.persistence.Column;\n 6  import javax.persistence.Entity;\n\
          \ 7  import javax.persistence.GeneratedValue;\n 8  import javax.persistence.Id;\n\
          \ 9  import javax.persistence.Table;\n10  \n11  @Entity\n12  @Table(name\
          \ = \"ORDER_ITEMS\")\n13  public class OrderItem implements Serializable\
          \ {\n14  \tprivate static final long serialVersionUID = 64565445665456666L;\n\
          15  \n16  \t@Id\n17  \t@Column(name=\"ID\")\n18  \t@GeneratedValue"
        lineNumber: 8
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/OrderItem.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/OrderItem.java
          kind: Module
          name: javax.persistence.Id
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  \n 5  import javax.persistence.Column;\n 6  import javax.persistence.Entity;\n\
          \ 7  import javax.persistence.GeneratedValue;\n 8  import javax.persistence.Id;\n\
          \ 9  import javax.persistence.Table;\n10  \n11  @Entity\n12  @Table(name\
          \ = \"ORDER_ITEMS\")\n13  public class OrderItem implements Serializable\
          \ {\n14  \tprivate static final long serialVersionUID = 64565445665456666L;\n\
          15  \n16  \t@Id\n17  \t@Column(name=\"ID\")\n18  \t@GeneratedValue\n19 \
          \ \tprivate long id;"
        lineNumber: 9
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/OrderItem.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/OrderItem.java
          kind: Module
          name: javax.persistence.Table
          package: com.redhat.coolstore.model
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.model;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.ArrayList;\n 5  import java.util.List;\n 6  \n 7 \
          \ import javax.enterprise.context.Dependent;\n 8  \n 9  @Dependent\n10 \
          \ public class ShoppingCart implements Serializable {\n11  \n12  \tprivate\
          \ static final long serialVersionUID = -1108043957592113528L;\n13  \n14\
          \  \tprivate double cartItemTotal;\n15  \n16  \tprivate double cartItemPromoSavings;\n\
          17  \t"
        lineNumber: 7
        message: Replace the `javax.enterprise` import statement with `jakarta.enterprise`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/ShoppingCart.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/model/ShoppingCart.java
          kind: Module
          name: javax.enterprise.context.Dependent
          package: com.redhat.coolstore.model
          renamed: enterprise
      - codeSnip: " 1  package com.redhat.coolstore.persistence;\n 2  \n 3  import\
          \ javax.enterprise.context.Dependent;\n 4  import javax.enterprise.inject.Produces;\n\
          \ 5  import javax.persistence.EntityManager;\n 6  import javax.persistence.PersistenceContext;\n\
          \ 7  \n 8  @Dependent\n 9  public class Resources {\n10  \n11      @PersistenceContext\n\
          12      private EntityManager em;\n13  "
        lineNumber: 3
        message: Replace the `javax.enterprise` import statement with `jakarta.enterprise`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/persistence/Resources.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/persistence/Resources.java
          kind: Module
          name: javax.enterprise.context.Dependent
          package: com.redhat.coolstore.persistence
          renamed: enterprise
      - codeSnip: " 1  package com.redhat.coolstore.persistence;\n 2  \n 3  import\
          \ javax.enterprise.context.Dependent;\n 4  import javax.enterprise.inject.Produces;\n\
          \ 5  import javax.persistence.EntityManager;\n 6  import javax.persistence.PersistenceContext;\n\
          \ 7  \n 8  @Dependent\n 9  public class Resources {\n10  \n11      @PersistenceContext\n\
          12      private EntityManager em;\n13  \n14      @Produces"
        lineNumber: 4
        message: Replace the `javax.enterprise` import statement with `jakarta.enterprise`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/persistence/Resources.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/persistence/Resources.java
          kind: Module
          name: javax.enterprise.inject.Produces
          package: com.redhat.coolstore.persistence
          renamed: enterprise
      - codeSnip: " 1  package com.redhat.coolstore.persistence;\n 2  \n 3  import\
          \ javax.enterprise.context.Dependent;\n 4  import javax.enterprise.inject.Produces;\n\
          \ 5  import javax.persistence.EntityManager;\n 6  import javax.persistence.PersistenceContext;\n\
          \ 7  \n 8  @Dependent\n 9  public class Resources {\n10  \n11      @PersistenceContext\n\
          12      private EntityManager em;\n13  \n14      @Produces\n15      public\
          \ EntityManager getEntityManager() {"
        lineNumber: 5
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/persistence/Resources.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/persistence/Resources.java
          kind: Module
          name: javax.persistence.EntityManager
          package: com.redhat.coolstore.persistence
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.persistence;\n 2  \n 3  import\
          \ javax.enterprise.context.Dependent;\n 4  import javax.enterprise.inject.Produces;\n\
          \ 5  import javax.persistence.EntityManager;\n 6  import javax.persistence.PersistenceContext;\n\
          \ 7  \n 8  @Dependent\n 9  public class Resources {\n10  \n11      @PersistenceContext\n\
          12      private EntityManager em;\n13  \n14      @Produces\n15      public\
          \ EntityManager getEntityManager() {\n16          return em;"
        lineNumber: 6
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/persistence/Resources.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/persistence/Resources.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: com.redhat.coolstore.persistence
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.rest;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.ArrayList;\n 5  import java.util.HashMap;\n 6  import\
          \ java.util.List;\n 7  import java.util.Map;\n 8  \n 9  import javax.enterprise.context.SessionScoped;\n\
          10  import javax.inject.Inject;\n11  import javax.ws.rs.DELETE;\n12  import\
          \ javax.ws.rs.GET;\n13  import javax.ws.rs.POST;\n14  import javax.ws.rs.Path;\n\
          15  import javax.ws.rs.PathParam;\n16  import javax.ws.rs.Produces;\n17\
          \  import javax.ws.rs.core.MediaType;\n18  \n19  import com.redhat.coolstore.model.Product;"
        lineNumber: 9
        message: Replace the `javax.enterprise` import statement with `jakarta.enterprise`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.enterprise.context.SessionScoped
          package: com.redhat.coolstore.rest
          renamed: enterprise
      - codeSnip: " 1  package com.redhat.coolstore.rest;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.ArrayList;\n 5  import java.util.HashMap;\n 6  import\
          \ java.util.List;\n 7  import java.util.Map;\n 8  \n 9  import javax.enterprise.context.SessionScoped;\n\
          10  import javax.inject.Inject;\n11  import javax.ws.rs.DELETE;\n12  import\
          \ javax.ws.rs.GET;\n13  import javax.ws.rs.POST;\n14  import javax.ws.rs.Path;\n\
          15  import javax.ws.rs.PathParam;\n16  import javax.ws.rs.Produces;\n17\
          \  import javax.ws.rs.core.MediaType;\n18  \n19  import com.redhat.coolstore.model.Product;\n\
          20  import com.redhat.coolstore.model.ShoppingCart;"
        lineNumber: 10
        message: Replace the `javax.inject` import statement with `jakarta.inject`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.rest
          renamed: inject
      - codeSnip: " 1  package com.redhat.coolstore.rest;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.ArrayList;\n 5  import java.util.HashMap;\n 6  import\
          \ java.util.List;\n 7  import java.util.Map;\n 8  \n 9  import javax.enterprise.context.SessionScoped;\n\
          10  import javax.inject.Inject;\n11  import javax.ws.rs.DELETE;\n12  import\
          \ javax.ws.rs.GET;\n13  import javax.ws.rs.POST;\n14  import javax.ws.rs.Path;\n\
          15  import javax.ws.rs.PathParam;\n16  import javax.ws.rs.Produces;\n17\
          \  import javax.ws.rs.core.MediaType;\n18  \n19  import com.redhat.coolstore.model.Product;\n\
          20  import com.redhat.coolstore.model.ShoppingCart;\n21  import com.redhat.coolstore.model.ShoppingCartItem;"
        lineNumber: 11
        message: Replace the `javax.ws` import statement with `jakarta.ws`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: com.redhat.coolstore.rest
          renamed: ws
      - codeSnip: " 2  \n 3  import java.io.Serializable;\n 4  import java.util.ArrayList;\n\
          \ 5  import java.util.HashMap;\n 6  import java.util.List;\n 7  import java.util.Map;\n\
          \ 8  \n 9  import javax.enterprise.context.SessionScoped;\n10  import javax.inject.Inject;\n\
          11  import javax.ws.rs.DELETE;\n12  import javax.ws.rs.GET;\n13  import\
          \ javax.ws.rs.POST;\n14  import javax.ws.rs.Path;\n15  import javax.ws.rs.PathParam;\n\
          16  import javax.ws.rs.Produces;\n17  import javax.ws.rs.core.MediaType;\n\
          18  \n19  import com.redhat.coolstore.model.Product;\n20  import com.redhat.coolstore.model.ShoppingCart;\n\
          21  import com.redhat.coolstore.model.ShoppingCartItem;\n22  import com.redhat.coolstore.service.ShoppingCartService;"
        lineNumber: 12
        message: Replace the `javax.ws` import statement with `jakarta.ws`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: com.redhat.coolstore.rest
          renamed: ws
      - codeSnip: " 3  import java.io.Serializable;\n 4  import java.util.ArrayList;\n\
          \ 5  import java.util.HashMap;\n 6  import java.util.List;\n 7  import java.util.Map;\n\
          \ 8  \n 9  import javax.enterprise.context.SessionScoped;\n10  import javax.inject.Inject;\n\
          11  import javax.ws.rs.DELETE;\n12  import javax.ws.rs.GET;\n13  import\
          \ javax.ws.rs.POST;\n14  import javax.ws.rs.Path;\n15  import javax.ws.rs.PathParam;\n\
          16  import javax.ws.rs.Produces;\n17  import javax.ws.rs.core.MediaType;\n\
          18  \n19  import com.redhat.coolstore.model.Product;\n20  import com.redhat.coolstore.model.ShoppingCart;\n\
          21  import com.redhat.coolstore.model.ShoppingCartItem;\n22  import com.redhat.coolstore.service.ShoppingCartService;\n\
          23  "
        lineNumber: 13
        message: Replace the `javax.ws` import statement with `jakarta.ws`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: com.redhat.coolstore.rest
          renamed: ws
      - codeSnip: " 4  import java.util.ArrayList;\n 5  import java.util.HashMap;\n\
          \ 6  import java.util.List;\n 7  import java.util.Map;\n 8  \n 9  import\
          \ javax.enterprise.context.SessionScoped;\n10  import javax.inject.Inject;\n\
          11  import javax.ws.rs.DELETE;\n12  import javax.ws.rs.GET;\n13  import\
          \ javax.ws.rs.POST;\n14  import javax.ws.rs.Path;\n15  import javax.ws.rs.PathParam;\n\
          16  import javax.ws.rs.Produces;\n17  import javax.ws.rs.core.MediaType;\n\
          18  \n19  import com.redhat.coolstore.model.Product;\n20  import com.redhat.coolstore.model.ShoppingCart;\n\
          21  import com.redhat.coolstore.model.ShoppingCartItem;\n22  import com.redhat.coolstore.service.ShoppingCartService;\n\
          23  \n24  @SessionScoped"
        lineNumber: 14
        message: Replace the `javax.ws` import statement with `jakarta.ws`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: com.redhat.coolstore.rest
          renamed: ws
      - codeSnip: " 5  import java.util.HashMap;\n 6  import java.util.List;\n 7 \
          \ import java.util.Map;\n 8  \n 9  import javax.enterprise.context.SessionScoped;\n\
          10  import javax.inject.Inject;\n11  import javax.ws.rs.DELETE;\n12  import\
          \ javax.ws.rs.GET;\n13  import javax.ws.rs.POST;\n14  import javax.ws.rs.Path;\n\
          15  import javax.ws.rs.PathParam;\n16  import javax.ws.rs.Produces;\n17\
          \  import javax.ws.rs.core.MediaType;\n18  \n19  import com.redhat.coolstore.model.Product;\n\
          20  import com.redhat.coolstore.model.ShoppingCart;\n21  import com.redhat.coolstore.model.ShoppingCartItem;\n\
          22  import com.redhat.coolstore.service.ShoppingCartService;\n23  \n24 \
          \ @SessionScoped\n25  @Path(\"/cart\")"
        lineNumber: 15
        message: Replace the `javax.ws` import statement with `jakarta.ws`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: com.redhat.coolstore.rest
          renamed: ws
      - codeSnip: " 6  import java.util.List;\n 7  import java.util.Map;\n 8  \n 9\
          \  import javax.enterprise.context.SessionScoped;\n10  import javax.inject.Inject;\n\
          11  import javax.ws.rs.DELETE;\n12  import javax.ws.rs.GET;\n13  import\
          \ javax.ws.rs.POST;\n14  import javax.ws.rs.Path;\n15  import javax.ws.rs.PathParam;\n\
          16  import javax.ws.rs.Produces;\n17  import javax.ws.rs.core.MediaType;\n\
          18  \n19  import com.redhat.coolstore.model.Product;\n20  import com.redhat.coolstore.model.ShoppingCart;\n\
          21  import com.redhat.coolstore.model.ShoppingCartItem;\n22  import com.redhat.coolstore.service.ShoppingCartService;\n\
          23  \n24  @SessionScoped\n25  @Path(\"/cart\")\n26  public class CartEndpoint\
          \ implements Serializable {"
        lineNumber: 16
        message: Replace the `javax.ws` import statement with `jakarta.ws`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: com.redhat.coolstore.rest
          renamed: ws
      - codeSnip: " 7  import java.util.Map;\n 8  \n 9  import javax.enterprise.context.SessionScoped;\n\
          10  import javax.inject.Inject;\n11  import javax.ws.rs.DELETE;\n12  import\
          \ javax.ws.rs.GET;\n13  import javax.ws.rs.POST;\n14  import javax.ws.rs.Path;\n\
          15  import javax.ws.rs.PathParam;\n16  import javax.ws.rs.Produces;\n17\
          \  import javax.ws.rs.core.MediaType;\n18  \n19  import com.redhat.coolstore.model.Product;\n\
          20  import com.redhat.coolstore.model.ShoppingCart;\n21  import com.redhat.coolstore.model.ShoppingCartItem;\n\
          22  import com.redhat.coolstore.service.ShoppingCartService;\n23  \n24 \
          \ @SessionScoped\n25  @Path(\"/cart\")\n26  public class CartEndpoint implements\
          \ Serializable {\n27  "
        lineNumber: 17
        message: Replace the `javax.ws` import statement with `jakarta.ws`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: com.redhat.coolstore.rest
          renamed: ws
      - codeSnip: " 1  package com.redhat.coolstore.rest;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.List;\n 5  \n 6  import javax.enterprise.context.RequestScoped;\n\
          \ 7  import javax.inject.Inject;\n 8  import javax.ws.rs.Consumes;\n 9 \
          \ import javax.ws.rs.GET;\n10  import javax.ws.rs.Path;\n11  import javax.ws.rs.PathParam;\n\
          12  import javax.ws.rs.Produces;\n13  import javax.ws.rs.core.MediaType;\n\
          14  \n15  import com.redhat.coolstore.model.Order;\n16  import com.redhat.coolstore.service.OrderService;"
        lineNumber: 6
        message: Replace the `javax.enterprise` import statement with `jakarta.enterprise`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.enterprise.context.RequestScoped
          package: com.redhat.coolstore.rest
          renamed: enterprise
      - codeSnip: " 1  package com.redhat.coolstore.rest;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.List;\n 5  \n 6  import javax.enterprise.context.RequestScoped;\n\
          \ 7  import javax.inject.Inject;\n 8  import javax.ws.rs.Consumes;\n 9 \
          \ import javax.ws.rs.GET;\n10  import javax.ws.rs.Path;\n11  import javax.ws.rs.PathParam;\n\
          12  import javax.ws.rs.Produces;\n13  import javax.ws.rs.core.MediaType;\n\
          14  \n15  import com.redhat.coolstore.model.Order;\n16  import com.redhat.coolstore.service.OrderService;\n\
          17  "
        lineNumber: 7
        message: Replace the `javax.inject` import statement with `jakarta.inject`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.rest
          renamed: inject
      - codeSnip: " 1  package com.redhat.coolstore.rest;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.List;\n 5  \n 6  import javax.enterprise.context.RequestScoped;\n\
          \ 7  import javax.inject.Inject;\n 8  import javax.ws.rs.Consumes;\n 9 \
          \ import javax.ws.rs.GET;\n10  import javax.ws.rs.Path;\n11  import javax.ws.rs.PathParam;\n\
          12  import javax.ws.rs.Produces;\n13  import javax.ws.rs.core.MediaType;\n\
          14  \n15  import com.redhat.coolstore.model.Order;\n16  import com.redhat.coolstore.service.OrderService;\n\
          17  \n18  @RequestScoped"
        lineNumber: 8
        message: Replace the `javax.ws` import statement with `jakarta.ws`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: com.redhat.coolstore.rest
          renamed: ws
      - codeSnip: " 1  package com.redhat.coolstore.rest;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.List;\n 5  \n 6  import javax.enterprise.context.RequestScoped;\n\
          \ 7  import javax.inject.Inject;\n 8  import javax.ws.rs.Consumes;\n 9 \
          \ import javax.ws.rs.GET;\n10  import javax.ws.rs.Path;\n11  import javax.ws.rs.PathParam;\n\
          12  import javax.ws.rs.Produces;\n13  import javax.ws.rs.core.MediaType;\n\
          14  \n15  import com.redhat.coolstore.model.Order;\n16  import com.redhat.coolstore.service.OrderService;\n\
          17  \n18  @RequestScoped\n19  @Path(\"/orders\")"
        lineNumber: 9
        message: Replace the `javax.ws` import statement with `jakarta.ws`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: com.redhat.coolstore.rest
          renamed: ws
      - codeSnip: " 1  package com.redhat.coolstore.rest;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.List;\n 5  \n 6  import javax.enterprise.context.RequestScoped;\n\
          \ 7  import javax.inject.Inject;\n 8  import javax.ws.rs.Consumes;\n 9 \
          \ import javax.ws.rs.GET;\n10  import javax.ws.rs.Path;\n11  import javax.ws.rs.PathParam;\n\
          12  import javax.ws.rs.Produces;\n13  import javax.ws.rs.core.MediaType;\n\
          14  \n15  import com.redhat.coolstore.model.Order;\n16  import com.redhat.coolstore.service.OrderService;\n\
          17  \n18  @RequestScoped\n19  @Path(\"/orders\")\n20  @Consumes(MediaType.APPLICATION_JSON)"
        lineNumber: 10
        message: Replace the `javax.ws` import statement with `jakarta.ws`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: com.redhat.coolstore.rest
          renamed: ws
      - codeSnip: " 1  package com.redhat.coolstore.rest;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.List;\n 5  \n 6  import javax.enterprise.context.RequestScoped;\n\
          \ 7  import javax.inject.Inject;\n 8  import javax.ws.rs.Consumes;\n 9 \
          \ import javax.ws.rs.GET;\n10  import javax.ws.rs.Path;\n11  import javax.ws.rs.PathParam;\n\
          12  import javax.ws.rs.Produces;\n13  import javax.ws.rs.core.MediaType;\n\
          14  \n15  import com.redhat.coolstore.model.Order;\n16  import com.redhat.coolstore.service.OrderService;\n\
          17  \n18  @RequestScoped\n19  @Path(\"/orders\")\n20  @Consumes(MediaType.APPLICATION_JSON)\n\
          21  @Produces(MediaType.APPLICATION_JSON)"
        lineNumber: 11
        message: Replace the `javax.ws` import statement with `jakarta.ws`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: com.redhat.coolstore.rest
          renamed: ws
      - codeSnip: " 2  \n 3  import java.io.Serializable;\n 4  import java.util.List;\n\
          \ 5  \n 6  import javax.enterprise.context.RequestScoped;\n 7  import javax.inject.Inject;\n\
          \ 8  import javax.ws.rs.Consumes;\n 9  import javax.ws.rs.GET;\n10  import\
          \ javax.ws.rs.Path;\n11  import javax.ws.rs.PathParam;\n12  import javax.ws.rs.Produces;\n\
          13  import javax.ws.rs.core.MediaType;\n14  \n15  import com.redhat.coolstore.model.Order;\n\
          16  import com.redhat.coolstore.service.OrderService;\n17  \n18  @RequestScoped\n\
          19  @Path(\"/orders\")\n20  @Consumes(MediaType.APPLICATION_JSON)\n21  @Produces(MediaType.APPLICATION_JSON)\n\
          22  public class OrderEndpoint implements Serializable {"
        lineNumber: 12
        message: Replace the `javax.ws` import statement with `jakarta.ws`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: com.redhat.coolstore.rest
          renamed: ws
      - codeSnip: " 3  import java.io.Serializable;\n 4  import java.util.List;\n\
          \ 5  \n 6  import javax.enterprise.context.RequestScoped;\n 7  import javax.inject.Inject;\n\
          \ 8  import javax.ws.rs.Consumes;\n 9  import javax.ws.rs.GET;\n10  import\
          \ javax.ws.rs.Path;\n11  import javax.ws.rs.PathParam;\n12  import javax.ws.rs.Produces;\n\
          13  import javax.ws.rs.core.MediaType;\n14  \n15  import com.redhat.coolstore.model.Order;\n\
          16  import com.redhat.coolstore.service.OrderService;\n17  \n18  @RequestScoped\n\
          19  @Path(\"/orders\")\n20  @Consumes(MediaType.APPLICATION_JSON)\n21  @Produces(MediaType.APPLICATION_JSON)\n\
          22  public class OrderEndpoint implements Serializable {\n23  "
        lineNumber: 13
        message: Replace the `javax.ws` import statement with `jakarta.ws`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: com.redhat.coolstore.rest
          renamed: ws
      - codeSnip: " 1  package com.redhat.coolstore.rest;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.List;\n 5  \n 6  import javax.enterprise.context.RequestScoped;\n\
          \ 7  import javax.inject.Inject;\n 8  import javax.ws.rs.*;\n 9  import\
          \ javax.ws.rs.core.MediaType;\n10  \n11  import com.redhat.coolstore.model.Product;\n\
          12  import com.redhat.coolstore.service.ProductService;\n13  \n14  @RequestScoped\n\
          15  @Path(\"/products\")\n16  @Consumes(MediaType.APPLICATION_JSON)"
        lineNumber: 6
        message: Replace the `javax.enterprise` import statement with `jakarta.enterprise`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/ProductEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/ProductEndpoint.java
          kind: Module
          name: javax.enterprise.context.RequestScoped
          package: com.redhat.coolstore.rest
          renamed: enterprise
      - codeSnip: " 1  package com.redhat.coolstore.rest;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.List;\n 5  \n 6  import javax.enterprise.context.RequestScoped;\n\
          \ 7  import javax.inject.Inject;\n 8  import javax.ws.rs.*;\n 9  import\
          \ javax.ws.rs.core.MediaType;\n10  \n11  import com.redhat.coolstore.model.Product;\n\
          12  import com.redhat.coolstore.service.ProductService;\n13  \n14  @RequestScoped\n\
          15  @Path(\"/products\")\n16  @Consumes(MediaType.APPLICATION_JSON)\n17\
          \  @Produces(MediaType.APPLICATION_JSON)"
        lineNumber: 7
        message: Replace the `javax.inject` import statement with `jakarta.inject`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/ProductEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/ProductEndpoint.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.rest
          renamed: inject
      - codeSnip: " 1  package com.redhat.coolstore.rest;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.List;\n 5  \n 6  import javax.enterprise.context.RequestScoped;\n\
          \ 7  import javax.inject.Inject;\n 8  import javax.ws.rs.*;\n 9  import\
          \ javax.ws.rs.core.MediaType;\n10  \n11  import com.redhat.coolstore.model.Product;\n\
          12  import com.redhat.coolstore.service.ProductService;\n13  \n14  @RequestScoped\n\
          15  @Path(\"/products\")\n16  @Consumes(MediaType.APPLICATION_JSON)\n17\
          \  @Produces(MediaType.APPLICATION_JSON)\n18  public class ProductEndpoint\
          \ implements Serializable {\n19  "
        lineNumber: 9
        message: Replace the `javax.ws` import statement with `jakarta.ws`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/ProductEndpoint.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/ProductEndpoint.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: com.redhat.coolstore.rest
          renamed: ws
      - codeSnip: " 1  package com.redhat.coolstore.rest;\n 2  \n 3  import javax.ws.rs.ApplicationPath;\n\
          \ 4  import javax.ws.rs.core.Application;\n 5  \n 6  \n 7  @ApplicationPath(\"\
          /services\")\n 8  public class RestApplication extends Application {\n 9\
          \  \n10  }\n"
        lineNumber: 3
        message: Replace the `javax.ws` import statement with `jakarta.ws`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/RestApplication.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/RestApplication.java
          kind: Module
          name: javax.ws.rs.ApplicationPath
          package: com.redhat.coolstore.rest
          renamed: ws
      - codeSnip: " 1  package com.redhat.coolstore.rest;\n 2  \n 3  import javax.ws.rs.ApplicationPath;\n\
          \ 4  import javax.ws.rs.core.Application;\n 5  \n 6  \n 7  @ApplicationPath(\"\
          /services\")\n 8  public class RestApplication extends Application {\n 9\
          \  \n10  }\n"
        lineNumber: 4
        message: Replace the `javax.ws` import statement with `jakarta.ws`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/RestApplication.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/rest/RestApplication.java
          kind: Module
          name: javax.ws.rs.core.Application
          package: com.redhat.coolstore.rest
          renamed: ws
      - codeSnip: " 2  \n 3  import java.util.List;\n 4  import java.util.logging.Logger;\n\
          \ 5  \n 6  import javax.inject.Inject;\n 7  \n 8  import javax.persistence.criteria.CriteriaBuilder;\n\
          \ 9  import javax.persistence.criteria.CriteriaQuery;\n10  import javax.persistence.criteria.Root;\n\
          11  \n12  import javax.ejb.Stateless;\n13  import javax.persistence.EntityManager;\n\
          14  \n15  import com.redhat.coolstore.model.*;\n16  \n17  @Stateless\n18\
          \  public class CatalogService {\n19  \n20      @Inject\n21      Logger\
          \ log;\n22  "
        lineNumber: 12
        message: Replace the `javax.ejb` import statement with `jakarta.ejb`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/CatalogService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.ejb.Stateless
          package: com.redhat.coolstore.service
          renamed: ejb
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import java.util.List;\n\
          \ 4  import java.util.logging.Logger;\n 5  \n 6  import javax.inject.Inject;\n\
          \ 7  \n 8  import javax.persistence.criteria.CriteriaBuilder;\n 9  import\
          \ javax.persistence.criteria.CriteriaQuery;\n10  import javax.persistence.criteria.Root;\n\
          11  \n12  import javax.ejb.Stateless;\n13  import javax.persistence.EntityManager;\n\
          14  \n15  import com.redhat.coolstore.model.*;\n16  "
        lineNumber: 6
        message: Replace the `javax.inject` import statement with `jakarta.inject`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/CatalogService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import java.util.List;\n\
          \ 4  import java.util.logging.Logger;\n 5  \n 6  import javax.inject.Inject;\n\
          \ 7  \n 8  import javax.persistence.criteria.CriteriaBuilder;\n 9  import\
          \ javax.persistence.criteria.CriteriaQuery;\n10  import javax.persistence.criteria.Root;\n\
          11  \n12  import javax.ejb.Stateless;\n13  import javax.persistence.EntityManager;\n\
          14  \n15  import com.redhat.coolstore.model.*;\n16  \n17  @Stateless\n18\
          \  public class CatalogService {"
        lineNumber: 8
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/CatalogService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: com.redhat.coolstore.service
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import java.util.List;\n\
          \ 4  import java.util.logging.Logger;\n 5  \n 6  import javax.inject.Inject;\n\
          \ 7  \n 8  import javax.persistence.criteria.CriteriaBuilder;\n 9  import\
          \ javax.persistence.criteria.CriteriaQuery;\n10  import javax.persistence.criteria.Root;\n\
          11  \n12  import javax.ejb.Stateless;\n13  import javax.persistence.EntityManager;\n\
          14  \n15  import com.redhat.coolstore.model.*;\n16  \n17  @Stateless\n18\
          \  public class CatalogService {\n19  "
        lineNumber: 9
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/CatalogService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: com.redhat.coolstore.service
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import java.util.List;\n\
          \ 4  import java.util.logging.Logger;\n 5  \n 6  import javax.inject.Inject;\n\
          \ 7  \n 8  import javax.persistence.criteria.CriteriaBuilder;\n 9  import\
          \ javax.persistence.criteria.CriteriaQuery;\n10  import javax.persistence.criteria.Root;\n\
          11  \n12  import javax.ejb.Stateless;\n13  import javax.persistence.EntityManager;\n\
          14  \n15  import com.redhat.coolstore.model.*;\n16  \n17  @Stateless\n18\
          \  public class CatalogService {\n19  \n20      @Inject"
        lineNumber: 10
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/CatalogService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: com.redhat.coolstore.service
          renamed: persistence
      - codeSnip: " 3  import java.util.List;\n 4  import java.util.logging.Logger;\n\
          \ 5  \n 6  import javax.inject.Inject;\n 7  \n 8  import javax.persistence.criteria.CriteriaBuilder;\n\
          \ 9  import javax.persistence.criteria.CriteriaQuery;\n10  import javax.persistence.criteria.Root;\n\
          11  \n12  import javax.ejb.Stateless;\n13  import javax.persistence.EntityManager;\n\
          14  \n15  import com.redhat.coolstore.model.*;\n16  \n17  @Stateless\n18\
          \  public class CatalogService {\n19  \n20      @Inject\n21      Logger\
          \ log;\n22  \n23      @Inject"
        lineNumber: 13
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/CatalogService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: com.redhat.coolstore.service
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import com.redhat.coolstore.model.Order;\n\
          \ 4  import com.redhat.coolstore.utils.Transformers;\n 5  \n 6  import javax.inject.Inject;\n\
          \ 7  import javax.jms.*;\n 8  import javax.naming.Context;\n 9  import javax.naming.InitialContext;\n\
          10  import javax.naming.NamingException;\n11  import javax.rmi.PortableRemoteObject;\n\
          12  import java.util.Hashtable;\n13  \n14  public class InventoryNotificationMDB\
          \ implements MessageListener {\n15  \n16      private static final int LOW_THRESHOLD\
          \ = 50;"
        lineNumber: 6
        message: Replace the `javax.inject` import statement with `jakarta.inject`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/InventoryNotificationMDB.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/InventoryNotificationMDB.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import com.redhat.coolstore.model.Order;\n\
          \ 4  import java.util.List;\n 5  import javax.ejb.Stateless;\n 6  import\
          \ javax.inject.Inject;\n 7  import javax.persistence.EntityManager;\n 8\
          \  import javax.persistence.criteria.CriteriaBuilder;\n 9  import javax.persistence.criteria.CriteriaQuery;\n\
          10  import javax.persistence.criteria.Root;\n11  \n12  @Stateless\n13  public\
          \ class OrderService {\n14  \n15    @Inject"
        lineNumber: 5
        message: Replace the `javax.ejb` import statement with `jakarta.ejb`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.ejb.Stateless
          package: com.redhat.coolstore.service
          renamed: ejb
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import com.redhat.coolstore.model.Order;\n\
          \ 4  import java.util.List;\n 5  import javax.ejb.Stateless;\n 6  import\
          \ javax.inject.Inject;\n 7  import javax.persistence.EntityManager;\n 8\
          \  import javax.persistence.criteria.CriteriaBuilder;\n 9  import javax.persistence.criteria.CriteriaQuery;\n\
          10  import javax.persistence.criteria.Root;\n11  \n12  @Stateless\n13  public\
          \ class OrderService {\n14  \n15    @Inject\n16    private EntityManager\
          \ em;"
        lineNumber: 6
        message: Replace the `javax.inject` import statement with `jakarta.inject`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import com.redhat.coolstore.model.Order;\n\
          \ 4  import java.util.List;\n 5  import javax.ejb.Stateless;\n 6  import\
          \ javax.inject.Inject;\n 7  import javax.persistence.EntityManager;\n 8\
          \  import javax.persistence.criteria.CriteriaBuilder;\n 9  import javax.persistence.criteria.CriteriaQuery;\n\
          10  import javax.persistence.criteria.Root;\n11  \n12  @Stateless\n13  public\
          \ class OrderService {\n14  \n15    @Inject\n16    private EntityManager\
          \ em;\n17  "
        lineNumber: 7
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: com.redhat.coolstore.service
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import com.redhat.coolstore.model.Order;\n\
          \ 4  import java.util.List;\n 5  import javax.ejb.Stateless;\n 6  import\
          \ javax.inject.Inject;\n 7  import javax.persistence.EntityManager;\n 8\
          \  import javax.persistence.criteria.CriteriaBuilder;\n 9  import javax.persistence.criteria.CriteriaQuery;\n\
          10  import javax.persistence.criteria.Root;\n11  \n12  @Stateless\n13  public\
          \ class OrderService {\n14  \n15    @Inject\n16    private EntityManager\
          \ em;\n17  \n18    public void save(Order order) {"
        lineNumber: 8
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: com.redhat.coolstore.service
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import com.redhat.coolstore.model.Order;\n\
          \ 4  import java.util.List;\n 5  import javax.ejb.Stateless;\n 6  import\
          \ javax.inject.Inject;\n 7  import javax.persistence.EntityManager;\n 8\
          \  import javax.persistence.criteria.CriteriaBuilder;\n 9  import javax.persistence.criteria.CriteriaQuery;\n\
          10  import javax.persistence.criteria.Root;\n11  \n12  @Stateless\n13  public\
          \ class OrderService {\n14  \n15    @Inject\n16    private EntityManager\
          \ em;\n17  \n18    public void save(Order order) {\n19      em.persist(order);"
        lineNumber: 9
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: com.redhat.coolstore.service
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import com.redhat.coolstore.model.Order;\n\
          \ 4  import java.util.List;\n 5  import javax.ejb.Stateless;\n 6  import\
          \ javax.inject.Inject;\n 7  import javax.persistence.EntityManager;\n 8\
          \  import javax.persistence.criteria.CriteriaBuilder;\n 9  import javax.persistence.criteria.CriteriaQuery;\n\
          10  import javax.persistence.criteria.Root;\n11  \n12  @Stateless\n13  public\
          \ class OrderService {\n14  \n15    @Inject\n16    private EntityManager\
          \ em;\n17  \n18    public void save(Order order) {\n19      em.persist(order);\n\
          20    }"
        lineNumber: 10
        message: Replace the `javax.persistence` import statement with `jakarta.persistence`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: com.redhat.coolstore.service
          renamed: persistence
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import javax.ejb.ActivationConfigProperty;\n\
          \ 4  import javax.ejb.MessageDriven;\n 5  import javax.inject.Inject;\n\
          \ 6  import javax.jms.JMSException;\n 7  import javax.jms.Message;\n 8 \
          \ import javax.jms.MessageListener;\n 9  import javax.jms.TextMessage;\n\
          10  \n11  import com.redhat.coolstore.model.Order;\n12  import com.redhat.coolstore.utils.Transformers;\n\
          13  "
        lineNumber: 3
        message: Replace the `javax.ejb` import statement with `jakarta.ejb`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.ejb.ActivationConfigProperty
          package: com.redhat.coolstore.service
          renamed: ejb
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import javax.ejb.ActivationConfigProperty;\n\
          \ 4  import javax.ejb.MessageDriven;\n 5  import javax.inject.Inject;\n\
          \ 6  import javax.jms.JMSException;\n 7  import javax.jms.Message;\n 8 \
          \ import javax.jms.MessageListener;\n 9  import javax.jms.TextMessage;\n\
          10  \n11  import com.redhat.coolstore.model.Order;\n12  import com.redhat.coolstore.utils.Transformers;\n\
          13  \n14  @MessageDriven(name = \"OrderServiceMDB\", activationConfig =\
          \ {"
        lineNumber: 4
        message: Replace the `javax.ejb` import statement with `jakarta.ejb`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.ejb.MessageDriven
          package: com.redhat.coolstore.service
          renamed: ejb
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import javax.ejb.ActivationConfigProperty;\n\
          \ 4  import javax.ejb.MessageDriven;\n 5  import javax.inject.Inject;\n\
          \ 6  import javax.jms.JMSException;\n 7  import javax.jms.Message;\n 8 \
          \ import javax.jms.MessageListener;\n 9  import javax.jms.TextMessage;\n\
          10  \n11  import com.redhat.coolstore.model.Order;\n12  import com.redhat.coolstore.utils.Transformers;\n\
          13  \n14  @MessageDriven(name = \"OrderServiceMDB\", activationConfig =\
          \ {\n15  \t@ActivationConfigProperty(propertyName = \"destinationLookup\"\
          , propertyValue = \"topic/orders\"),"
        lineNumber: 5
        message: Replace the `javax.inject` import statement with `jakarta.inject`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import javax.ejb.ActivationConfigProperty;\n\
          \ 4  import javax.ejb.MessageDriven;\n 5  import javax.inject.Inject;\n\
          \ 6  import javax.jms.JMSException;\n 7  import javax.jms.Message;\n 8 \
          \ import javax.jms.MessageListener;\n 9  import javax.jms.TextMessage;\n\
          10  \n11  import com.redhat.coolstore.model.Order;\n12  import com.redhat.coolstore.utils.Transformers;\n\
          13  \n14  @MessageDriven(name = \"OrderServiceMDB\", activationConfig =\
          \ {\n15  \t@ActivationConfigProperty(propertyName = \"destinationLookup\"\
          , propertyValue = \"topic/orders\"),\n16  \t@ActivationConfigProperty(propertyName\
          \ = \"destinationType\", propertyValue = \"javax.jms.Topic\"),"
        lineNumber: 6
        message: Replace the `javax.jms` import statement with `jakarta.jms`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: com.redhat.coolstore.service
          renamed: jms
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import javax.ejb.ActivationConfigProperty;\n\
          \ 4  import javax.ejb.MessageDriven;\n 5  import javax.inject.Inject;\n\
          \ 6  import javax.jms.JMSException;\n 7  import javax.jms.Message;\n 8 \
          \ import javax.jms.MessageListener;\n 9  import javax.jms.TextMessage;\n\
          10  \n11  import com.redhat.coolstore.model.Order;\n12  import com.redhat.coolstore.utils.Transformers;\n\
          13  \n14  @MessageDriven(name = \"OrderServiceMDB\", activationConfig =\
          \ {\n15  \t@ActivationConfigProperty(propertyName = \"destinationLookup\"\
          , propertyValue = \"topic/orders\"),\n16  \t@ActivationConfigProperty(propertyName\
          \ = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n17  \t@ActivationConfigProperty(propertyName\
          \ = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})"
        lineNumber: 7
        message: Replace the `javax.jms` import statement with `jakarta.jms`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.Message
          package: com.redhat.coolstore.service
          renamed: jms
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import javax.ejb.ActivationConfigProperty;\n\
          \ 4  import javax.ejb.MessageDriven;\n 5  import javax.inject.Inject;\n\
          \ 6  import javax.jms.JMSException;\n 7  import javax.jms.Message;\n 8 \
          \ import javax.jms.MessageListener;\n 9  import javax.jms.TextMessage;\n\
          10  \n11  import com.redhat.coolstore.model.Order;\n12  import com.redhat.coolstore.utils.Transformers;\n\
          13  \n14  @MessageDriven(name = \"OrderServiceMDB\", activationConfig =\
          \ {\n15  \t@ActivationConfigProperty(propertyName = \"destinationLookup\"\
          , propertyValue = \"topic/orders\"),\n16  \t@ActivationConfigProperty(propertyName\
          \ = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n17  \t@ActivationConfigProperty(propertyName\
          \ = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n18  public\
          \ class OrderServiceMDB implements MessageListener { "
        lineNumber: 8
        message: Replace the `javax.jms` import statement with `jakarta.jms`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: com.redhat.coolstore.service
          renamed: jms
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import javax.ejb.ActivationConfigProperty;\n\
          \ 4  import javax.ejb.MessageDriven;\n 5  import javax.inject.Inject;\n\
          \ 6  import javax.jms.JMSException;\n 7  import javax.jms.Message;\n 8 \
          \ import javax.jms.MessageListener;\n 9  import javax.jms.TextMessage;\n\
          10  \n11  import com.redhat.coolstore.model.Order;\n12  import com.redhat.coolstore.utils.Transformers;\n\
          13  \n14  @MessageDriven(name = \"OrderServiceMDB\", activationConfig =\
          \ {\n15  \t@ActivationConfigProperty(propertyName = \"destinationLookup\"\
          , propertyValue = \"topic/orders\"),\n16  \t@ActivationConfigProperty(propertyName\
          \ = \"destinationType\", propertyValue = \"javax.jms.Topic\"),\n17  \t@ActivationConfigProperty(propertyName\
          \ = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\")})\n18  public\
          \ class OrderServiceMDB implements MessageListener { \n19  "
        lineNumber: 9
        message: Replace the `javax.jms` import statement with `jakarta.jms`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: com.redhat.coolstore.service
          renamed: jms
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import com.redhat.coolstore.model.CatalogItemEntity;\n\
          \ 4  import com.redhat.coolstore.model.Product;\n 5  import com.redhat.coolstore.utils.Transformers;\n\
          \ 6  \n 7  import javax.ejb.Stateless;\n 8  import javax.inject.Inject;\n\
          \ 9  import java.util.List;\n10  import java.util.stream.Collectors;\n11\
          \  \n12  import static com.redhat.coolstore.utils.Transformers.toProduct;\n\
          13  \n14  @Stateless\n15  public class ProductService {\n16  \n17      @Inject"
        lineNumber: 7
        message: Replace the `javax.ejb` import statement with `jakarta.ejb`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ProductService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ProductService.java
          kind: Module
          name: javax.ejb.Stateless
          package: com.redhat.coolstore.service
          renamed: ejb
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import com.redhat.coolstore.model.CatalogItemEntity;\n\
          \ 4  import com.redhat.coolstore.model.Product;\n 5  import com.redhat.coolstore.utils.Transformers;\n\
          \ 6  \n 7  import javax.ejb.Stateless;\n 8  import javax.inject.Inject;\n\
          \ 9  import java.util.List;\n10  import java.util.stream.Collectors;\n11\
          \  \n12  import static com.redhat.coolstore.utils.Transformers.toProduct;\n\
          13  \n14  @Stateless\n15  public class ProductService {\n16  \n17      @Inject\n\
          18      CatalogService cm;"
        lineNumber: 8
        message: Replace the `javax.inject` import statement with `jakarta.inject`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ProductService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ProductService.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import java.io.Serializable;\n\
          \ 4  import java.util.HashMap;\n 5  import java.util.HashSet;\n 6  import\
          \ java.util.Map;\n 7  import java.util.Set;\n 8  \n 9  import javax.enterprise.context.ApplicationScoped;\n\
          10  \n11  import com.redhat.coolstore.model.Promotion;\n12  import com.redhat.coolstore.model.ShoppingCart;\n\
          13  import com.redhat.coolstore.model.ShoppingCartItem;\n14  \n15  @ApplicationScoped\n\
          16  public class PromoService implements Serializable {\n17  \n18      private\
          \ static final long serialVersionUID = 2088590587856645568L;\n19  "
        lineNumber: 9
        message: Replace the `javax.enterprise` import statement with `jakarta.enterprise`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/PromoService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/PromoService.java
          kind: Module
          name: javax.enterprise.context.ApplicationScoped
          package: com.redhat.coolstore.service
          renamed: enterprise
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import java.math.BigDecimal;\n\
          \ 4  import java.math.RoundingMode;\n 5  \n 6  import javax.ejb.Remote;\n\
          \ 7  import javax.ejb.Stateless;\n 8  \n 9  import com.redhat.coolstore.model.ShoppingCart;\n\
          10  \n11  @Stateless\n12  @Remote\n13  public class ShippingService implements\
          \ ShippingServiceRemote {\n14  \n15      @Override\n16      public double\
          \ calculateShipping(ShoppingCart sc) {"
        lineNumber: 6
        message: Replace the `javax.ejb` import statement with `jakarta.ejb`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShippingService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShippingService.java
          kind: Module
          name: javax.ejb.Remote
          package: com.redhat.coolstore.service
          renamed: ejb
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import java.math.BigDecimal;\n\
          \ 4  import java.math.RoundingMode;\n 5  \n 6  import javax.ejb.Remote;\n\
          \ 7  import javax.ejb.Stateless;\n 8  \n 9  import com.redhat.coolstore.model.ShoppingCart;\n\
          10  \n11  @Stateless\n12  @Remote\n13  public class ShippingService implements\
          \ ShippingServiceRemote {\n14  \n15      @Override\n16      public double\
          \ calculateShipping(ShoppingCart sc) {\n17  "
        lineNumber: 7
        message: Replace the `javax.ejb` import statement with `jakarta.ejb`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShippingService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShippingService.java
          kind: Module
          name: javax.ejb.Stateless
          package: com.redhat.coolstore.service
          renamed: ejb
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import java.util.logging.Logger;\n\
          \ 4  import javax.ejb.Stateless;\n 5  import javax.annotation.Resource;\n\
          \ 6  import javax.inject.Inject;\n 7  import javax.jms.JMSContext;\n 8 \
          \ import javax.jms.Topic;\n 9  \n10  import com.redhat.coolstore.model.ShoppingCart;\n\
          11  import com.redhat.coolstore.utils.Transformers;\n12  \n13  @Stateless\n\
          14  public class ShoppingCartOrderProcessor  {\n15  "
        lineNumber: 5
        message: Replace the `javax.annotation` import statement with `jakarta.annotation`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.annotation.Resource
          package: com.redhat.coolstore.service
          renamed: annotation
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import java.util.logging.Logger;\n\
          \ 4  import javax.ejb.Stateless;\n 5  import javax.annotation.Resource;\n\
          \ 6  import javax.inject.Inject;\n 7  import javax.jms.JMSContext;\n 8 \
          \ import javax.jms.Topic;\n 9  \n10  import com.redhat.coolstore.model.ShoppingCart;\n\
          11  import com.redhat.coolstore.utils.Transformers;\n12  \n13  @Stateless\n\
          14  public class ShoppingCartOrderProcessor  {"
        lineNumber: 4
        message: Replace the `javax.ejb` import statement with `jakarta.ejb`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.ejb.Stateless
          package: com.redhat.coolstore.service
          renamed: ejb
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import java.util.logging.Logger;\n\
          \ 4  import javax.ejb.Stateless;\n 5  import javax.annotation.Resource;\n\
          \ 6  import javax.inject.Inject;\n 7  import javax.jms.JMSContext;\n 8 \
          \ import javax.jms.Topic;\n 9  \n10  import com.redhat.coolstore.model.ShoppingCart;\n\
          11  import com.redhat.coolstore.utils.Transformers;\n12  \n13  @Stateless\n\
          14  public class ShoppingCartOrderProcessor  {\n15  \n16      @Inject"
        lineNumber: 6
        message: Replace the `javax.inject` import statement with `jakarta.inject`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import java.util.logging.Logger;\n\
          \ 4  import javax.ejb.Stateless;\n 5  import javax.annotation.Resource;\n\
          \ 6  import javax.inject.Inject;\n 7  import javax.jms.JMSContext;\n 8 \
          \ import javax.jms.Topic;\n 9  \n10  import com.redhat.coolstore.model.ShoppingCart;\n\
          11  import com.redhat.coolstore.utils.Transformers;\n12  \n13  @Stateless\n\
          14  public class ShoppingCartOrderProcessor  {\n15  \n16      @Inject\n\
          17      Logger log;"
        lineNumber: 7
        message: Replace the `javax.jms` import statement with `jakarta.jms`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.jms.JMSContext
          package: com.redhat.coolstore.service
          renamed: jms
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import java.util.logging.Logger;\n\
          \ 4  import javax.ejb.Stateless;\n 5  import javax.annotation.Resource;\n\
          \ 6  import javax.inject.Inject;\n 7  import javax.jms.JMSContext;\n 8 \
          \ import javax.jms.Topic;\n 9  \n10  import com.redhat.coolstore.model.ShoppingCart;\n\
          11  import com.redhat.coolstore.utils.Transformers;\n12  \n13  @Stateless\n\
          14  public class ShoppingCartOrderProcessor  {\n15  \n16      @Inject\n\
          17      Logger log;\n18  "
        lineNumber: 8
        message: Replace the `javax.jms` import statement with `jakarta.jms`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.jms.Topic
          package: com.redhat.coolstore.service
          renamed: jms
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import java.util.Hashtable;\n\
          \ 4  import java.util.logging.Logger;\n 5  \n 6  import javax.ejb.Stateful;\n\
          \ 7  import javax.inject.Inject;\n 8  import javax.naming.Context;\n 9 \
          \ import javax.naming.InitialContext;\n10  import javax.naming.NamingException;\n\
          11  \n12  import com.redhat.coolstore.model.Product;\n13  import com.redhat.coolstore.model.ShoppingCart;\n\
          14  import com.redhat.coolstore.model.ShoppingCartItem;\n15  \n16  @Stateful"
        lineNumber: 6
        message: Replace the `javax.ejb` import statement with `jakarta.ejb`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShoppingCartService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShoppingCartService.java
          kind: Module
          name: javax.ejb.Stateful
          package: com.redhat.coolstore.service
          renamed: ejb
      - codeSnip: " 1  package com.redhat.coolstore.service;\n 2  \n 3  import java.util.Hashtable;\n\
          \ 4  import java.util.logging.Logger;\n 5  \n 6  import javax.ejb.Stateful;\n\
          \ 7  import javax.inject.Inject;\n 8  import javax.naming.Context;\n 9 \
          \ import javax.naming.InitialContext;\n10  import javax.naming.NamingException;\n\
          11  \n12  import com.redhat.coolstore.model.Product;\n13  import com.redhat.coolstore.model.ShoppingCart;\n\
          14  import com.redhat.coolstore.model.ShoppingCartItem;\n15  \n16  @Stateful\n\
          17  public class ShoppingCartService  {"
        lineNumber: 7
        message: Replace the `javax.inject` import statement with `jakarta.inject`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShoppingCartService.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/service/ShoppingCartService.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      - codeSnip: " 1  package com.redhat.coolstore.utils;\n 2  \n 3  import org.flywaydb.core.Flyway;\n\
          \ 4  import org.flywaydb.core.api.FlywayException;\n 5  \n 6  import javax.annotation.PostConstruct;\n\
          \ 7  import javax.annotation.Resource;\n 8  import javax.ejb.Singleton;\n\
          \ 9  import javax.ejb.Startup;\n10  import javax.ejb.TransactionManagement;\n\
          11  import javax.ejb.TransactionManagementType;\n12  import javax.inject.Inject;\n\
          13  import javax.sql.DataSource;\n14  import java.util.logging.Level;\n\
          15  import java.util.logging.Logger;\n16  "
        lineNumber: 6
        message: Replace the `javax.annotation` import statement with `jakarta.annotation`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.annotation.PostConstruct
          package: com.redhat.coolstore.utils
          renamed: annotation
      - codeSnip: " 1  package com.redhat.coolstore.utils;\n 2  \n 3  import org.flywaydb.core.Flyway;\n\
          \ 4  import org.flywaydb.core.api.FlywayException;\n 5  \n 6  import javax.annotation.PostConstruct;\n\
          \ 7  import javax.annotation.Resource;\n 8  import javax.ejb.Singleton;\n\
          \ 9  import javax.ejb.Startup;\n10  import javax.ejb.TransactionManagement;\n\
          11  import javax.ejb.TransactionManagementType;\n12  import javax.inject.Inject;\n\
          13  import javax.sql.DataSource;\n14  import java.util.logging.Level;\n\
          15  import java.util.logging.Logger;\n16  \n17  /**"
        lineNumber: 7
        message: Replace the `javax.annotation` import statement with `jakarta.annotation`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.annotation.Resource
          package: com.redhat.coolstore.utils
          renamed: annotation
      - codeSnip: " 1  package com.redhat.coolstore.utils;\n 2  \n 3  import org.flywaydb.core.Flyway;\n\
          \ 4  import org.flywaydb.core.api.FlywayException;\n 5  \n 6  import javax.annotation.PostConstruct;\n\
          \ 7  import javax.annotation.Resource;\n 8  import javax.ejb.Singleton;\n\
          \ 9  import javax.ejb.Startup;\n10  import javax.ejb.TransactionManagement;\n\
          11  import javax.ejb.TransactionManagementType;\n12  import javax.inject.Inject;\n\
          13  import javax.sql.DataSource;\n14  import java.util.logging.Level;\n\
          15  import java.util.logging.Logger;\n16  \n17  /**\n18   * Created by tqvarnst\
          \ on 2017-04-04."
        lineNumber: 8
        message: Replace the `javax.ejb` import statement with `jakarta.ejb`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.ejb.Singleton
          package: com.redhat.coolstore.utils
          renamed: ejb
      - codeSnip: " 1  package com.redhat.coolstore.utils;\n 2  \n 3  import org.flywaydb.core.Flyway;\n\
          \ 4  import org.flywaydb.core.api.FlywayException;\n 5  \n 6  import javax.annotation.PostConstruct;\n\
          \ 7  import javax.annotation.Resource;\n 8  import javax.ejb.Singleton;\n\
          \ 9  import javax.ejb.Startup;\n10  import javax.ejb.TransactionManagement;\n\
          11  import javax.ejb.TransactionManagementType;\n12  import javax.inject.Inject;\n\
          13  import javax.sql.DataSource;\n14  import java.util.logging.Level;\n\
          15  import java.util.logging.Logger;\n16  \n17  /**\n18   * Created by tqvarnst\
          \ on 2017-04-04.\n19   */"
        lineNumber: 9
        message: Replace the `javax.ejb` import statement with `jakarta.ejb`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.ejb.Startup
          package: com.redhat.coolstore.utils
          renamed: ejb
      - codeSnip: " 1  package com.redhat.coolstore.utils;\n 2  \n 3  import org.flywaydb.core.Flyway;\n\
          \ 4  import org.flywaydb.core.api.FlywayException;\n 5  \n 6  import javax.annotation.PostConstruct;\n\
          \ 7  import javax.annotation.Resource;\n 8  import javax.ejb.Singleton;\n\
          \ 9  import javax.ejb.Startup;\n10  import javax.ejb.TransactionManagement;\n\
          11  import javax.ejb.TransactionManagementType;\n12  import javax.inject.Inject;\n\
          13  import javax.sql.DataSource;\n14  import java.util.logging.Level;\n\
          15  import java.util.logging.Logger;\n16  \n17  /**\n18   * Created by tqvarnst\
          \ on 2017-04-04.\n19   */\n20  @Singleton"
        lineNumber: 10
        message: Replace the `javax.ejb` import statement with `jakarta.ejb`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.ejb.TransactionManagement
          package: com.redhat.coolstore.utils
          renamed: ejb
      - codeSnip: " 1  package com.redhat.coolstore.utils;\n 2  \n 3  import org.flywaydb.core.Flyway;\n\
          \ 4  import org.flywaydb.core.api.FlywayException;\n 5  \n 6  import javax.annotation.PostConstruct;\n\
          \ 7  import javax.annotation.Resource;\n 8  import javax.ejb.Singleton;\n\
          \ 9  import javax.ejb.Startup;\n10  import javax.ejb.TransactionManagement;\n\
          11  import javax.ejb.TransactionManagementType;\n12  import javax.inject.Inject;\n\
          13  import javax.sql.DataSource;\n14  import java.util.logging.Level;\n\
          15  import java.util.logging.Logger;\n16  \n17  /**\n18   * Created by tqvarnst\
          \ on 2017-04-04.\n19   */\n20  @Singleton\n21  @Startup"
        lineNumber: 11
        message: Replace the `javax.ejb` import statement with `jakarta.ejb`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.ejb.TransactionManagementType
          package: com.redhat.coolstore.utils
          renamed: ejb
      - codeSnip: " 2  \n 3  import org.flywaydb.core.Flyway;\n 4  import org.flywaydb.core.api.FlywayException;\n\
          \ 5  \n 6  import javax.annotation.PostConstruct;\n 7  import javax.annotation.Resource;\n\
          \ 8  import javax.ejb.Singleton;\n 9  import javax.ejb.Startup;\n10  import\
          \ javax.ejb.TransactionManagement;\n11  import javax.ejb.TransactionManagementType;\n\
          12  import javax.inject.Inject;\n13  import javax.sql.DataSource;\n14  import\
          \ java.util.logging.Level;\n15  import java.util.logging.Logger;\n16  \n\
          17  /**\n18   * Created by tqvarnst on 2017-04-04.\n19   */\n20  @Singleton\n\
          21  @Startup\n22  @TransactionManagement(TransactionManagementType.BEAN)"
        lineNumber: 12
        message: Replace the `javax.inject` import statement with `jakarta.inject`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.utils
          renamed: inject
      - codeSnip: " 1  package com.redhat.coolstore.utils;\n 2  \n 3  import javax.enterprise.inject.Produces;\n\
          \ 4  import javax.enterprise.inject.spi.InjectionPoint;\n 5  import java.util.logging.Logger;\n\
          \ 6  \n 7  \n 8  public class Producers {\n 9  \n10      Logger log = Logger.getLogger(Producers.class.getName());\n\
          11  \n12      @Produces\n13      public Logger produceLog(InjectionPoint\
          \ injectionPoint) {"
        lineNumber: 3
        message: Replace the `javax.enterprise` import statement with `jakarta.enterprise`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/Producers.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/Producers.java
          kind: Module
          name: javax.enterprise.inject.Produces
          package: com.redhat.coolstore.utils
          renamed: enterprise
      - codeSnip: " 1  package com.redhat.coolstore.utils;\n 2  \n 3  import javax.enterprise.inject.Produces;\n\
          \ 4  import javax.enterprise.inject.spi.InjectionPoint;\n 5  import java.util.logging.Logger;\n\
          \ 6  \n 7  \n 8  public class Producers {\n 9  \n10      Logger log = Logger.getLogger(Producers.class.getName());\n\
          11  \n12      @Produces\n13      public Logger produceLog(InjectionPoint\
          \ injectionPoint) {\n14          return Logger.getLogger(injectionPoint.getMember().getDeclaringClass().getName());"
        lineNumber: 4
        message: Replace the `javax.enterprise` import statement with `jakarta.enterprise`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/Producers.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/Producers.java
          kind: Module
          name: javax.enterprise.inject.spi.InjectionPoint
          package: com.redhat.coolstore.utils
          renamed: enterprise
      - codeSnip: " 1  package com.redhat.coolstore.utils;\n 2  \n 3  import weblogic.application.ApplicationLifecycleEvent;\n\
          \ 4  import weblogic.application.ApplicationLifecycleListener;\n 5  \n 6\
          \  import javax.inject.Inject;\n 7  import java.util.logging.Logger;\n 8\
          \  \n 9  public class StartupListener extends ApplicationLifecycleListener\
          \ {\n10  \n11      @Inject\n12      Logger log;\n13  \n14      @Override\n\
          15      public void postStart(ApplicationLifecycleEvent evt) {\n16     \
          \     log.info(\"AppListener(postStart)\");"
        lineNumber: 6
        message: Replace the `javax.inject` import statement with `jakarta.inject`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/StartupListener.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/StartupListener.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.utils
          renamed: inject
      - codeSnip: " 2  \n 3  import com.redhat.coolstore.model.CatalogItemEntity;\n\
          \ 4  import com.redhat.coolstore.model.Order;\n 5  import com.redhat.coolstore.model.OrderItem;\n\
          \ 6  import com.redhat.coolstore.model.Product;\n 7  import com.redhat.coolstore.model.ShoppingCart;\n\
          \ 8  import java.io.StringReader;\n 9  import java.io.StringWriter;\n10\
          \  import java.util.ArrayList;\n11  import java.util.List;\n12  import javax.json.Json;\n\
          13  import javax.json.JsonArray;\n14  import javax.json.JsonArrayBuilder;\n\
          15  import javax.json.JsonObject;\n16  import javax.json.JsonReader;\n17\
          \  import javax.json.JsonWriter;\n18  \n19  import java.util.concurrent.ThreadLocalRandom;\n\
          20  import java.util.logging.Logger;\n21  \n22  /**"
        lineNumber: 12
        message: Replace the `javax.json` import statement with `jakarta.json`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/Transformers.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.Json
          package: com.redhat.coolstore.utils
          renamed: json
      - codeSnip: " 3  import com.redhat.coolstore.model.CatalogItemEntity;\n 4  import\
          \ com.redhat.coolstore.model.Order;\n 5  import com.redhat.coolstore.model.OrderItem;\n\
          \ 6  import com.redhat.coolstore.model.Product;\n 7  import com.redhat.coolstore.model.ShoppingCart;\n\
          \ 8  import java.io.StringReader;\n 9  import java.io.StringWriter;\n10\
          \  import java.util.ArrayList;\n11  import java.util.List;\n12  import javax.json.Json;\n\
          13  import javax.json.JsonArray;\n14  import javax.json.JsonArrayBuilder;\n\
          15  import javax.json.JsonObject;\n16  import javax.json.JsonReader;\n17\
          \  import javax.json.JsonWriter;\n18  \n19  import java.util.concurrent.ThreadLocalRandom;\n\
          20  import java.util.logging.Logger;\n21  \n22  /**\n23   * Created by tqvarnst\
          \ on 2017-03-30."
        lineNumber: 13
        message: Replace the `javax.json` import statement with `jakarta.json`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/Transformers.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.JsonArray
          package: com.redhat.coolstore.utils
          renamed: json
      - codeSnip: " 4  import com.redhat.coolstore.model.Order;\n 5  import com.redhat.coolstore.model.OrderItem;\n\
          \ 6  import com.redhat.coolstore.model.Product;\n 7  import com.redhat.coolstore.model.ShoppingCart;\n\
          \ 8  import java.io.StringReader;\n 9  import java.io.StringWriter;\n10\
          \  import java.util.ArrayList;\n11  import java.util.List;\n12  import javax.json.Json;\n\
          13  import javax.json.JsonArray;\n14  import javax.json.JsonArrayBuilder;\n\
          15  import javax.json.JsonObject;\n16  import javax.json.JsonReader;\n17\
          \  import javax.json.JsonWriter;\n18  \n19  import java.util.concurrent.ThreadLocalRandom;\n\
          20  import java.util.logging.Logger;\n21  \n22  /**\n23   * Created by tqvarnst\
          \ on 2017-03-30.\n24   */"
        lineNumber: 14
        message: Replace the `javax.json` import statement with `jakarta.json`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/Transformers.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.JsonArrayBuilder
          package: com.redhat.coolstore.utils
          renamed: json
      - codeSnip: " 5  import com.redhat.coolstore.model.OrderItem;\n 6  import com.redhat.coolstore.model.Product;\n\
          \ 7  import com.redhat.coolstore.model.ShoppingCart;\n 8  import java.io.StringReader;\n\
          \ 9  import java.io.StringWriter;\n10  import java.util.ArrayList;\n11 \
          \ import java.util.List;\n12  import javax.json.Json;\n13  import javax.json.JsonArray;\n\
          14  import javax.json.JsonArrayBuilder;\n15  import javax.json.JsonObject;\n\
          16  import javax.json.JsonReader;\n17  import javax.json.JsonWriter;\n18\
          \  \n19  import java.util.concurrent.ThreadLocalRandom;\n20  import java.util.logging.Logger;\n\
          21  \n22  /**\n23   * Created by tqvarnst on 2017-03-30.\n24   */\n25  public\
          \ class Transformers {"
        lineNumber: 15
        message: Replace the `javax.json` import statement with `jakarta.json`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/Transformers.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.JsonObject
          package: com.redhat.coolstore.utils
          renamed: json
      - codeSnip: " 6  import com.redhat.coolstore.model.Product;\n 7  import com.redhat.coolstore.model.ShoppingCart;\n\
          \ 8  import java.io.StringReader;\n 9  import java.io.StringWriter;\n10\
          \  import java.util.ArrayList;\n11  import java.util.List;\n12  import javax.json.Json;\n\
          13  import javax.json.JsonArray;\n14  import javax.json.JsonArrayBuilder;\n\
          15  import javax.json.JsonObject;\n16  import javax.json.JsonReader;\n17\
          \  import javax.json.JsonWriter;\n18  \n19  import java.util.concurrent.ThreadLocalRandom;\n\
          20  import java.util.logging.Logger;\n21  \n22  /**\n23   * Created by tqvarnst\
          \ on 2017-03-30.\n24   */\n25  public class Transformers {\n26  "
        lineNumber: 16
        message: Replace the `javax.json` import statement with `jakarta.json`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/Transformers.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.JsonReader
          package: com.redhat.coolstore.utils
          renamed: json
      - codeSnip: " 7  import com.redhat.coolstore.model.ShoppingCart;\n 8  import\
          \ java.io.StringReader;\n 9  import java.io.StringWriter;\n10  import java.util.ArrayList;\n\
          11  import java.util.List;\n12  import javax.json.Json;\n13  import javax.json.JsonArray;\n\
          14  import javax.json.JsonArrayBuilder;\n15  import javax.json.JsonObject;\n\
          16  import javax.json.JsonReader;\n17  import javax.json.JsonWriter;\n18\
          \  \n19  import java.util.concurrent.ThreadLocalRandom;\n20  import java.util.logging.Logger;\n\
          21  \n22  /**\n23   * Created by tqvarnst on 2017-03-30.\n24   */\n25  public\
          \ class Transformers {\n26  \n27      private static final String[] RANDOM_NAMES\
          \ = {\"Sven Karlsson\",\"Johan Andersson\",\"Karl Svensson\",\"Anders Johansson\"\
          ,\"Stefan Olson\",\"Martin Ericsson\"};"
        lineNumber: 17
        message: Replace the `javax.json` import statement with `jakarta.json`
        uri: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/Transformers.java
        variables:
          file: file:///opt/input/source/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.JsonWriter
          package: com.redhat.coolstore.utils
          renamed: json
      labels:
      - konveyor.io/source
      - konveyor.io/source=spring5
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      - konveyor.io/target=spring6+
    javax-to-jakarta-properties-00001:
      category: mandatory
      description: 'Rename properties prefixed by javax with jakarta '
      effort: 1
      incidents:
      - codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <persistence\
          \ version=\"2.1\"\n  3               xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\"\
          \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  4         \
          \      xsi:schemaLocation=\"\n  5          http://xmlns.jcp.org/xml/ns/persistence\n\
          \  6          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n  7      <persistence-unit name=\"primary\">\n  8          <jta-data-source>java:jboss/datasources/CoolstoreDS</jta-data-source>\n\
          \  9          <properties>\n 10              <property name=\"javax.persistence.schema-generation.database.action\"\
          \ value=\"none\"/>\n 11              <property name=\"hibernate.show_sql\"\
          \ value=\"false\" />\n 12              <property name=\"hibernate.format_sql\"\
          \ value=\"true\" />\n 13              <property name=\"hibernate.use_sql_comments\"\
          \ value=\"true\" />\n 14              <property name=\"hibernate.jdbc.use_get_generated_keys\"\
          \ value=\"false\" />\n 15          </properties>\n 16      </persistence-unit>\n\
          \ 17  </persistence>\n"
        lineNumber: 10
        message: Rename properties prefixed by `javax` with `jakarta`
        uri: file:///opt/input/source/src/main/resources/META-INF/persistence.xml
        variables:
          matchingText: <property name="javax.
      labels:
      - konveyor.io/source
      - konveyor.io/source=spring5
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      - konveyor.io/target=spring6+
      links:
      - title: Jakarta EE
        url: https://jakarta.ee/
    javax-to-jakarta-servlet-00030:
      category: mandatory
      description: The javax.servlet.http.HttpUtils utility class has been removed
      effort: 3
      incidents:
      - codeSnip: "64  import java.util.StringTokenizer;\n65  import java.io.IOException;\n\
          66  \n67  /**\n68   * @deprecated\t\tAs of Java(tm) Servlet API 2.3. \n\
          69   *\t\t\tThese methods were only useful\n70   *\t\t\twith the default\
          \ encoding and have been moved\n71   *\t\t\tto the request interfaces.\n\
          72   *\n73   */\n74  public class HttpUtils {\n75  \n76      private static\
          \ final String LSTRING_FILE =\n77  \t\"javax.servlet.http.LocalStrings\"\
          ;\n78      private static ResourceBundle lStrings =\n79  \tResourceBundle.getBundle(LSTRING_FILE);\n\
          80          \n81      \n82      /**\n83       * Constructs an empty <code>HttpUtils</code>\
          \ object.\n84       */"
        lineNumber: 74
        message: "The `javax.servlet.http.HttpUtils` utility class has been removed.\
          \ Applications should use the ServletRequest\n and HttpServletRequest interfaces\
          \ instead of these methods it provided:\n - `parseQueryString(String s)`\
          \ and `parsePostData(int len, ServletInputStream in)` -- Use `ServletRequest.getParameterMap()`.\
          \ If an application needs to differentiate between query string parameters\
          \ and request body parameters it will need to implement code to do that\
          \ itself, perhaps by parsing the query string itself.\n - `getRequestURL(HttpServletRequest\
          \ req)` -- Use `HttpServletRequest.getRequestURL()`."
        uri: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/servlet/http/HttpUtils.java
        variables:
          file: file:///root/.m2/repository/javax/javaee-web-api/7.0/javax/servlet/http/HttpUtils.java
          kind: Class
          name: HttpUtils
          package: javax.servlet.http
      labels:
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      links:
      - title: Red Hat JBoss EAP Application Migration from Jakarta EE 8 to EE 10
          - Jakarta Servlet
        url: https://access.redhat.com/articles/6980265#servlet
- description: This ruleset provides analysis of Maven built applications that use
    Thorntail Maven Plugin, which should be replaced by JBoss EAP XP Bootable JAR
    Maven Plugin, when migrating to JBoss EAP XP.
  name: eapxp/thorntail
- description: This ruleset provides analysis of Maven built applications when migrating
    from EAP XP 5 to 6.
  name: eapxp6/eapxp5
- description: This rule set configures the organization matching functionality, using
    known root-package prefixes to identify libraries and other code.
  name: filemappings
- description: This ruleset provides analysis of JBoss SOA Platform 5 applications
    and provides information on how to migrate these to Red Hat JBoss Fuse Service
    Works
  name: fuse-service-works/soa-p-5
- description: This ruleset contains rules that assist in migrating from Sonic ESB
    to Apache Camel.
  name: fuse/sonicesb
- description: This ruleset provides analysis of deprecated Hibernate java constructs
    and their migration to newer one.
  name: hibernate
- name: jakarta-ee9
- description: This ruleset provides analysis of applications that need to change
    their pom dependencies to upgrade dependencies that belong to the groupId `org.apache.tomcat`
  name: jws5
- description: This ruleset provides analysis with respect to API removals between
    OpenJDK 8 and 11.
  name: openjdk11/openjdk8
- description: This ruleset provides analysis regarding deprecated APIs in OpenJDK
    21.
  name: openjdk17
- description: This ruleset provides analysis Security Manager classes and methods
    deprecated between OpenJDK 11 to 17.
  name: openjdk17/openjdk11
- description: This ruleset provides analysis with respect to the migration from OracleJDK
    to OpenJDK.
  name: openjdk7/oraclejdk7
- description: This ruleset identifies usage of Java APIs and technologies which are
    not provided by Open Liberty.
  name: openliberty/websphere
- description: This is a ruleset for Windows operating system specific rules while
    migrating to Linux operating system.
  name: os/windows
- description: This ruleset gives hints to migrate from SpringBoot devtools to Quarkus
  name: quarkus/springboot
- description: Verify the version of the Spring Boot framework is compatible with
    those supported by Red Hat Runtimes
  name: rhr/springboot
- description: Ruleset for migration of Spring Framework versions
  name: spring-framework
- description: This ruleset provides analysis of logging libraries.
  name: technology-usage
  tags:
  - Bean=EJB XML
  - CDI
  - Clustering Web Session
  - Clustering=Web Session
  - Connect=EJB XML
  - Connect=Mail
  - Connect=RMI
  - Database=JDBC XA datasources
  - Database=JDBC datasources
  - EJB Timer
  - Embedded technology - WebSocket
  - Execute=CDI
  - Execute=EJB Timer
  - Execute=Java EE JSON-P
  - Inversion of Control=CDI
  - Java EE JSON-P
  - Java EE=CDI
  - Java EE=EJB Timer
  - Java EE=EJB XML
  - Java EE=JDBC XA datasources
  - Java EE=JDBC datasources
  - Java EE=JPA XML
  - Java EE=JPA entities
  - Java EE=JPA named queries
  - Java EE=Java EE JSON-P
  - Java EE=Mail
  - Java EE=Persistence units
  - Java EE=RMI
  - Java EE=Web Session
  - Java Threads
  - Mail usage
  - Other=Mail
  - Other=RMI
  - Persistence=JPA XML
  - Persistence=JPA entities
  - Persistence=JPA named queries
  - Persistence=Persistence units
  - Processing=EJB Timer
  - Processing=Java EE JSON-P
  - Store=JDBC XA datasources
  - Store=JDBC datasources
  - Store=JPA XML
  - Store=JPA entities
  - Store=JPA named queries
  - Store=Persistence units
  - Sustain=Web Session
  - Threads
  - WebSocket
