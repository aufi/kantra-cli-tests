name: CLI container-less on Windows

inputs:
  tag:
    description: |
      Tag release
    required: false
    type: string
    default: latest
  tier:
    description: |
      Test TIER name
    required: false
    type: string
    default: TIER0

runs:
  using: "composite"
  steps:
  - uses: actions/checkout@v4
  - uses: actions/setup-java@v4
    with:
      distribution: 'microsoft'
      java-version: '21'
  - name: Set up Python
    uses: actions/setup-python@v4
    with:
      python-version: '3.12'

  - name: Extract kantra
    shell: cmd
    run: |
      set KANTRA_DIR=C:\Users\runneradmin\.kantra
      REM This uses real windows-based kantra image
      docker run --rm mplatform/mquery quay.io/konveyor/kantra:latest
      md %KANTRA_DIR%
      docker create --name kantra-download --platform linux quay.io/konveyor/kantra:${{ inputs.tag }}
      docker cp kantra-download:/app/kantra.exe %KANTRA_DIR%\windows-kantra.exe
      REM docker cp kantra-download:/jdtls %KANTRA_DIR%
      REM docker cp kantra-download:/bin/fernflower.jar %KANTRA_DIR%
      docker cp kantra-download:/app/static-report %KANTRA_DIR%
      docker cp kantra-download:/app/opt/rulesets %KANTRA_DIR%
      REM docker cp kantra-download:/usr/local/etc/maven.default.index %KANTRA_DIR%
      dir %KANTRA_DIR%
      %KANTRA_DIR%\windows-kantra.exe --help

  - name: Install test dependencies
    shell: cmd
    run: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
      mkdir ${{ github.workspace }}\report

  - name: Run TIER0 analysis test
    shell: cmd
    run: |
      set KANTRA_CLI_PATH=C:\Users\runneradmin\.kantra\windows-kantra.exe
      set REPORT_OUTPUT_PATH=${{ github.workspace }}\report
      set PROJECT_PATH=${{ github.workspace }}

      pytest -s tests/analysis/java/test_tier0.py

  - name: Save analysis output
    uses: actions/upload-artifact@v4
    if: always()
    with:
      name: kantra-outputs-windows-containerless
      path: ${{ github.workspace }}\report
